{"version":3,"file":"index.esm.js","sources":["../src/apis/PermissionApi.ts","../src/apis/IdentityPermissionApi.ts","../src/hooks/usePermission.ts","../src/components/PermissionedRoute.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EvaluatePermissionRequest,\n  EvaluatePermissionResponse,\n} from '@backstage/plugin-permission-common';\nimport { ApiRef, createApiRef } from '@backstage/core-plugin-api';\n\n/**\n * This API is used by various frontend utilities that allow developers to implement authorization within their frontend\n * plugins. A plugin developer will likely not have to interact with this API or its implementations directly, but\n * rather with the aforementioned utility components/hooks.\n * @public\n */\nexport type PermissionApi = {\n  authorize(\n    request: EvaluatePermissionRequest,\n  ): Promise<EvaluatePermissionResponse>;\n};\n\n/**\n * A Backstage ApiRef for the Permission API. See https://backstage.io/docs/api/utility-apis for more information on\n * Backstage ApiRefs.\n * @public\n */\nexport const permissionApiRef: ApiRef<PermissionApi> = createApiRef({\n  id: 'plugin.permission.api',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport { PermissionApi } from './PermissionApi';\nimport {\n  AuthorizePermissionRequest,\n  AuthorizePermissionResponse,\n  PermissionClient,\n} from '@backstage/plugin-permission-common';\nimport { Config } from '@backstage/config';\n\n/**\n * The default implementation of the PermissionApi, which simply calls the authorize method of the given\n * {@link @backstage/plugin-permission-common#PermissionClient}.\n * @public\n */\nexport class IdentityPermissionApi implements PermissionApi {\n  private constructor(\n    private readonly permissionClient: PermissionClient,\n    private readonly identityApi: IdentityApi,\n  ) {}\n\n  static create(options: {\n    config: Config;\n    discovery: DiscoveryApi;\n    identity: IdentityApi;\n  }) {\n    const { config, discovery, identity } = options;\n    const permissionClient = new PermissionClient({ discovery, config });\n    return new IdentityPermissionApi(permissionClient, identity);\n  }\n\n  async authorize(\n    request: AuthorizePermissionRequest,\n  ): Promise<AuthorizePermissionResponse> {\n    const response = await this.permissionClient.authorize(\n      [request],\n      await this.identityApi.getCredentials(),\n    );\n    return response[0];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core-plugin-api';\nimport { permissionApiRef } from '../apis';\nimport {\n  AuthorizeResult,\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\nimport useSWR from 'swr';\n\n/** @public */\nexport type AsyncPermissionResult = {\n  loading: boolean;\n  allowed: boolean;\n  error?: Error;\n};\n\n/**\n * React hook utility for authorization. Given either a non-resource\n * {@link @backstage/plugin-permission-common#Permission} or a\n * {@link @backstage/plugin-permission-common#ResourcePermission} and an\n * optional resourceRef, it will return whether or not access is allowed (for\n * the given resource, if resourceRef is provided). See\n * {@link @backstage/plugin-permission-common/PermissionClient#authorize} for\n * more details.\n *\n * The resourceRef field is optional to allow calling this hook with an\n * entity that might be loading asynchronously, but when resourceRef is not\n * supplied, the value of `allowed` will always be false.\n *\n * Note: This hook uses stale-while-revalidate to help avoid flicker in UI\n * elements that would be conditionally rendered based on the `allowed` result\n * of this hook.\n * @public\n */\nexport function usePermission(\n  input:\n    | {\n        permission: Exclude<Permission, ResourcePermission>;\n        resourceRef?: never;\n      }\n    | {\n        permission: ResourcePermission;\n        resourceRef: string | undefined;\n      },\n): AsyncPermissionResult {\n  const permissionApi = useApi(permissionApiRef);\n  const { data, error } = useSWR(input, async (args: typeof input) => {\n    // We could make the resourceRef parameter required to avoid this check, but\n    // it would make using this hook difficult in situations where the entity\n    // must be asynchronously loaded, so instead we short-circuit to a deny when\n    // no resourceRef is supplied, on the assumption that the resourceRef is\n    // still loading outside the hook.\n    if (isResourcePermission(args.permission) && !args.resourceRef) {\n      return AuthorizeResult.DENY;\n    }\n\n    const { result } = await permissionApi.authorize(args);\n    return result;\n  });\n\n  if (error) {\n    return { error, loading: false, allowed: false };\n  }\n  if (data === undefined) {\n    return { loading: true, allowed: false };\n  }\n  return { loading: false, allowed: data === AuthorizeResult.ALLOW };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentProps, ReactElement } from 'react';\nimport { Route } from 'react-router';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport {\n  isResourcePermission,\n  Permission,\n  ResourcePermission,\n} from '@backstage/plugin-permission-common';\n\n/**\n * Returns a React Router Route which only renders the element when authorized. If unauthorized, the Route will render a\n * NotFoundErrorPage (see {@link @backstage/core-app-api#AppComponents}).\n *\n * @public\n */\nexport const PermissionedRoute = (\n  props: ComponentProps<typeof Route> & {\n    errorComponent?: ReactElement | null;\n  } & (\n      | {\n          permission: Exclude<Permission, ResourcePermission>;\n          resourceRef?: never;\n        }\n      | {\n          permission: ResourcePermission;\n          resourceRef: string | undefined;\n        }\n    ),\n) => {\n  const { permission, resourceRef, errorComponent, ...otherProps } = props;\n\n  const permissionResult = usePermission(\n    isResourcePermission(permission)\n      ? { permission, resourceRef }\n      : { permission },\n  );\n  const app = useApp();\n  const { NotFoundErrorPage } = app.getComponents();\n\n  let shownElement: ReactElement | null | undefined =\n    errorComponent === undefined ? <NotFoundErrorPage /> : errorComponent;\n\n  if (permissionResult.loading) {\n    shownElement = null;\n  } else if (permissionResult.allowed) {\n    shownElement = props.element;\n  }\n\n  return <Route {...otherProps} element={shownElement} />;\n};\n"],"names":[],"mappings":"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"}