{"version":3,"file":"index.cjs.js","sources":["../src/service/router.ts","../src/config/ExtractAirbrakeConfig.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorHandler } from '@backstage/backend-common';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\nimport { createProxyMiddleware } from 'http-proxy-middleware';\nimport { AirbrakeConfig } from '../config';\nimport { Options } from 'http-proxy-middleware/dist/types';\n\n/**\n * The router options that are needed when creating a router.\n *\n * @public\n */\nexport interface RouterOptions {\n  /**\n   * A logger object\n   */\n  logger: Logger;\n\n  /**\n   * The Airbrake config obtained from {@link extractAirbrakeConfig}\n   */\n  airbrakeConfig: AirbrakeConfig;\n}\n\n/**\n * Mainly used internally to generate the path.\n *\n * @internal\n *\n * @param options - Router options\n */\nexport const generateAirbrakePathRewrite = (\n  options: RouterOptions,\n): Options['pathRewrite'] => {\n  const apiKey = options.airbrakeConfig.apiKey;\n\n  return path => {\n    let newPath = path.replace(/.+?(\\/api)/g, '');\n    if (newPath.includes('?')) {\n      newPath += `&key=${apiKey}`;\n    } else {\n      newPath += `?key=${apiKey}`;\n    }\n    return newPath;\n  };\n};\n\n/**\n * Create the Airbrake Router, used for making API calls to the Airbrake API.\n *\n * @public\n *\n * @param options - Router options\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger } = options;\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/health', (_, response) => {\n    logger.info('PONG!');\n    response.send({ status: 'ok' });\n  });\n\n  router.use(\n    '/api',\n    createProxyMiddleware({\n      target: 'https://api.airbrake.io/api',\n      changeOrigin: true,\n      pathRewrite: generateAirbrakePathRewrite(options),\n    }),\n  );\n\n  router.use(errorHandler());\n  return router;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\n\n/**\n * The configuration needed for the airbrake-backend plugin\n *\n * @public\n */\nexport interface AirbrakeConfig {\n  /**\n   * The API Key to authenticate requests. More details on how to get this here: https://airbrake.io/docs/api/#authentication\n   */\n  apiKey: string;\n}\n\n/**\n * Extract the Airbrake config from a config object\n *\n * @public\n *\n * @param config - The config object to extract from\n */\nexport function extractAirbrakeConfig(config: Config): AirbrakeConfig {\n  return {\n    apiKey: config.getString('airbrake.apiKey'),\n  };\n}\n"],"names":["Router","express","createProxyMiddleware","errorHandler"],"mappings":";;;;;;;;;;;;;;AAIY,MAAC,2BAA2B,GAAG,CAAC,OAAO,KAAK;AACxD,EAAE,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC;AAC/C,EAAE,OAAO,CAAC,IAAI,KAAK;AACnB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;AAClD,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC/B,MAAM,OAAO,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAClC,KAAK,MAAM;AACX,MAAM,OAAO,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,OAAO,CAAC;AACnB,GAAG,CAAC;AACJ,EAAE;AACK,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC7B,EAAE,MAAM,MAAM,GAAGA,0BAAM,EAAE,CAAC;AAC1B,EAAE,MAAM,CAAC,GAAG,CAACC,2BAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,QAAQ,KAAK;AACzC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACpC,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,EAAEC,yCAAqB,CAAC;AAC3C,IAAI,MAAM,EAAE,6BAA6B;AACzC,IAAI,YAAY,EAAE,IAAI;AACtB,IAAI,WAAW,EAAE,2BAA2B,CAAC,OAAO,CAAC;AACrD,GAAG,CAAC,CAAC,CAAC;AACN,EAAE,MAAM,CAAC,GAAG,CAACC,0BAAY,EAAE,CAAC,CAAC;AAC7B,EAAE,OAAO,MAAM,CAAC;AAChB;;AC/BO,SAAS,qBAAqB,CAAC,MAAM,EAAE;AAC9C,EAAE,OAAO;AACT,IAAI,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC;AAC/C,GAAG,CAAC;AACJ;;;;;;"}