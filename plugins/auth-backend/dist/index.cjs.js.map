{"version":3,"file":"index.cjs.js","sources":["../src/providers/atlassian/strategy.ts","../src/lib/oauth/helpers.ts","../src/lib/oauth/OAuthEnvironmentHandler.ts","../src/lib/flow/authFlowHelpers.ts","../src/providers/prepareBackstageIdentityResponse.ts","../src/lib/oauth/OAuthAdapter.ts","../src/lib/passport/PassportStrategyHelper.ts","../src/providers/createAuthProviderIntegration.ts","../src/providers/atlassian/provider.ts","../src/providers/auth0/strategy.ts","../src/providers/auth0/provider.ts","../src/providers/aws-alb/provider.ts","../src/providers/bitbucket/provider.ts","../src/providers/github/provider.ts","../src/providers/gitlab/provider.ts","../src/providers/resolvers.ts","../src/providers/google/provider.ts","../src/providers/microsoft/provider.ts","../src/providers/oauth2/provider.ts","../src/providers/oauth2-proxy/provider.ts","../src/providers/oidc/provider.ts","../src/providers/okta/provider.ts","../src/providers/onelogin/provider.ts","../src/providers/saml/provider.ts","../src/providers/gcp-iap/types.ts","../src/providers/gcp-iap/helpers.ts","../src/providers/gcp-iap/provider.ts","../src/providers/providers.ts","../src/providers/factories.ts","../src/identity/router.ts","../src/identity/TokenFactory.ts","../src/identity/DatabaseKeyStore.ts","../src/identity/MemoryKeyStore.ts","../src/identity/FirestoreKeyStore.ts","../src/identity/KeyStores.ts","../src/lib/catalog/CatalogIdentityClient.ts","../src/lib/catalog/helpers.ts","../src/lib/resolvers/CatalogAuthResolverContext.ts","../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport OAuth2Strategy, { InternalOAuthError } from 'passport-oauth2';\nimport { Profile } from 'passport';\n\ninterface ProfileResponse {\n  account_id: string;\n  email: string;\n  name: string;\n  picture: string;\n  nickname: string;\n}\n\ninterface AtlassianStrategyOptions {\n  clientID: string;\n  clientSecret: string;\n  callbackURL: string;\n  scope: string;\n}\n\nconst defaultScopes = ['offline_access', 'read:me'];\n\nexport default class AtlassianStrategy extends OAuth2Strategy {\n  private readonly profileURL: string;\n\n  constructor(\n    options: AtlassianStrategyOptions,\n    verify: OAuth2Strategy.VerifyFunction,\n  ) {\n    if (!options.scope) {\n      throw new TypeError('Atlassian requires a scope option');\n    }\n\n    const scopes = options.scope.split(' ');\n\n    const optionsWithURLs = {\n      ...options,\n      authorizationURL: `https://auth.atlassian.com/authorize`,\n      tokenURL: `https://auth.atlassian.com/oauth/token`,\n      scope: Array.from(new Set([...defaultScopes, ...scopes])),\n    };\n\n    super(optionsWithURLs, verify);\n    this.profileURL = 'https://api.atlassian.com/me';\n    this.name = 'atlassian';\n\n    this._oauth2.useAuthorizationHeaderforGET(true);\n  }\n\n  authorizationParams() {\n    return {\n      audience: 'api.atlassian.com',\n      prompt: 'consent',\n    };\n  }\n\n  userProfile(\n    accessToken: string,\n    done: (err?: Error | null, profile?: any) => void,\n  ): void {\n    this._oauth2.get(this.profileURL, accessToken, (err, body) => {\n      if (err) {\n        return done(\n          new InternalOAuthError(\n            'Failed to fetch user profile',\n            err.statusCode,\n          ),\n        );\n      }\n\n      if (!body) {\n        return done(\n          new Error('Failed to fetch user profile, body cannot be empty'),\n        );\n      }\n\n      try {\n        const json = typeof body !== 'string' ? body.toString() : body;\n        const profile = AtlassianStrategy.parse(json);\n        return done(null, profile);\n      } catch (e) {\n        return done(new Error('Failed to parse user profile'));\n      }\n    });\n  }\n\n  static parse(json: string): Profile {\n    const resp = JSON.parse(json) as ProfileResponse;\n\n    return {\n      id: resp.account_id,\n      provider: 'atlassian',\n      username: resp.nickname,\n      displayName: resp.name,\n      emails: [{ value: resp.email }],\n      photos: [{ value: resp.picture }],\n    };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { OAuthState } from './types';\nimport pickBy from 'lodash/pickBy';\nimport { CookieConfigurer } from '../../providers/types';\n\nexport const readState = (stateString: string): OAuthState => {\n  const state = Object.fromEntries(\n    new URLSearchParams(Buffer.from(stateString, 'hex').toString('utf-8')),\n  );\n  if (\n    !state.nonce ||\n    !state.env ||\n    state.nonce?.length === 0 ||\n    state.env?.length === 0\n  ) {\n    throw Error(`Invalid state passed via request`);\n  }\n\n  return state as OAuthState;\n};\n\nexport const encodeState = (state: OAuthState): string => {\n  const stateString = new URLSearchParams(\n    pickBy<string>(state, value => value !== undefined),\n  ).toString();\n\n  return Buffer.from(stateString, 'utf-8').toString('hex');\n};\n\nexport const verifyNonce = (req: express.Request, providerId: string) => {\n  const cookieNonce = req.cookies[`${providerId}-nonce`];\n  const state: OAuthState = readState(req.query.state?.toString() ?? '');\n  const stateNonce = state.nonce;\n\n  if (!cookieNonce) {\n    throw new Error('Auth response is missing cookie nonce');\n  }\n  if (stateNonce.length === 0) {\n    throw new Error('Auth response is missing state nonce');\n  }\n  if (cookieNonce !== stateNonce) {\n    throw new Error('Invalid nonce');\n  }\n};\n\nexport const defaultCookieConfigurer: CookieConfigurer = ({\n  callbackUrl,\n  providerId,\n}) => {\n  const { hostname: domain, pathname, protocol } = new URL(callbackUrl);\n  const secure = protocol === 'https:';\n\n  // If the provider supports callbackUrls, the pathname will\n  // contain the complete path to the frame handler so we need\n  // to slice off the trailing part of the path.\n  const path = pathname.endsWith(`${providerId}/handler/frame`)\n    ? pathname.slice(0, -'/handler/frame'.length)\n    : `${pathname}/${providerId}`;\n\n  return { domain, path, secure };\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { Config } from '@backstage/config';\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { readState } from './helpers';\nimport { AuthProviderRouteHandlers } from '../../providers/types';\n\nexport class OAuthEnvironmentHandler implements AuthProviderRouteHandlers {\n  static mapConfig(\n    config: Config,\n    factoryFunc: (envConfig: Config) => AuthProviderRouteHandlers,\n  ) {\n    const envs = config.keys();\n    const handlers = new Map<string, AuthProviderRouteHandlers>();\n\n    for (const env of envs) {\n      const envConfig = config.getConfig(env);\n      const handler = factoryFunc(envConfig);\n      handlers.set(env, handler);\n    }\n\n    return new OAuthEnvironmentHandler(handlers);\n  }\n\n  constructor(\n    private readonly handlers: Map<string, AuthProviderRouteHandlers>,\n  ) {}\n\n  async start(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.start(req, res);\n  }\n\n  async frameHandler(\n    req: express.Request,\n    res: express.Response,\n  ): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.frameHandler(req, res);\n  }\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.refresh?.(req, res);\n  }\n\n  async logout(req: express.Request, res: express.Response): Promise<void> {\n    const provider = this.getProviderForEnv(req);\n    await provider.logout?.(req, res);\n  }\n\n  private getRequestFromEnv(req: express.Request): string | undefined {\n    const reqEnv = req.query.env?.toString();\n    if (reqEnv) {\n      return reqEnv;\n    }\n    const stateParams = req.query.state?.toString();\n    if (!stateParams) {\n      return undefined;\n    }\n    const env = readState(stateParams).env;\n    return env;\n  }\n\n  private getProviderForEnv(req: express.Request): AuthProviderRouteHandlers {\n    const env: string | undefined = this.getRequestFromEnv(req);\n\n    if (!env) {\n      throw new InputError(`Must specify 'env' query to select environment`);\n    }\n\n    const handler = this.handlers.get(env);\n    if (!handler) {\n      throw new NotFoundError(\n        `No configuration available for the '${env}' environment of this provider.`,\n      );\n    }\n\n    return handler;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport crypto from 'crypto';\nimport { WebMessageResponse } from './types';\n\nexport const safelyEncodeURIComponent = (value: string) => {\n  // Note the g at the end of the regex; all occurrences of single quotes must\n  // be replaced, which encodeURIComponent does not do itself by default\n  return encodeURIComponent(value).replace(/'/g, '%27');\n};\n\nexport const postMessageResponse = (\n  res: express.Response,\n  appOrigin: string,\n  response: WebMessageResponse,\n) => {\n  const jsonData = JSON.stringify(response);\n  const base64Data = safelyEncodeURIComponent(jsonData);\n  const base64Origin = safelyEncodeURIComponent(appOrigin);\n\n  // NOTE: It is absolutely imperative that we use the safe encoder above, to\n  // be sure that the js code below does not allow the injection of malicious\n  // data.\n\n  // TODO: Make target app origin configurable globally\n\n  //\n  // postMessage fails silently if the targetOrigin is disallowed.\n  // So 2 postMessages are sent from the popup to the parent window.\n  // First, the origin being used to post the actual authorization response is\n  // shared with the parent window with a postMessage with targetOrigin '*'.\n  // Second, the actual authorization response is sent with the app origin\n  // as the targetOrigin.\n  // If the first message was received but the actual auth response was\n  // never received, the event listener can conclude that targetOrigin\n  // was disallowed, indicating potential misconfiguration.\n  //\n  const script = `\n    var authResponse = decodeURIComponent('${base64Data}');\n    var origin = decodeURIComponent('${base64Origin}');\n    var originInfo = {'type': 'config_info', 'targetOrigin': origin};\n    (window.opener || window.parent).postMessage(originInfo, '*');\n    (window.opener || window.parent).postMessage(JSON.parse(authResponse), origin);\n    setTimeout(() => {\n      window.close();\n    }, 100); // same as the interval of the core-app-api lib/loginPopup.ts (to address race conditions)\n  `;\n  const hash = crypto.createHash('sha256').update(script).digest('base64');\n\n  res.setHeader('Content-Type', 'text/html');\n  res.setHeader('X-Frame-Options', 'sameorigin');\n  res.setHeader('Content-Security-Policy', `script-src 'sha256-${hash}'`);\n  res.end(`<html><body><script>${script}</script></body></html>`);\n};\n\nexport const ensuresXRequestedWith = (req: express.Request) => {\n  const requiredHeader = req.header('X-Requested-With');\n  if (!requiredHeader || requiredHeader !== 'XMLHttpRequest') {\n    return false;\n  }\n  return true;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackstageIdentityResponse,\n  BackstageSignInResult,\n} from '@backstage/plugin-auth-node';\n\nfunction parseJwtPayload(token: string) {\n  const [_header, payload, _signature] = token.split('.');\n  return JSON.parse(Buffer.from(payload, 'base64').toString());\n}\n\n/**\n * Parses a Backstage-issued token and decorates the\n * {@link @backstage/plugin-auth-node#BackstageIdentityResponse} with identity information sourced from the\n * token.\n *\n * @public\n */\nexport function prepareBackstageIdentityResponse(\n  result: BackstageSignInResult,\n): BackstageIdentityResponse {\n  const { sub, ent } = parseJwtPayload(result.token);\n\n  return {\n    ...result,\n    identity: {\n      type: 'user',\n      userEntityRef: sub,\n      ownershipEntityRefs: ent ?? [],\n    },\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express, { CookieOptions } from 'express';\nimport crypto from 'crypto';\nimport { URL } from 'url';\nimport {\n  BackstageIdentityResponse,\n  BackstageSignInResult,\n} from '@backstage/plugin-auth-node';\nimport {\n  AuthProviderRouteHandlers,\n  AuthProviderConfig,\n} from '../../providers/types';\nimport {\n  AuthenticationError,\n  InputError,\n  isError,\n  NotAllowedError,\n} from '@backstage/errors';\nimport { TokenIssuer } from '../../identity/types';\nimport { defaultCookieConfigurer, readState, verifyNonce } from './helpers';\nimport { postMessageResponse, ensuresXRequestedWith } from '../flow';\nimport {\n  OAuthHandlers,\n  OAuthStartRequest,\n  OAuthRefreshRequest,\n  OAuthState,\n} from './types';\nimport { prepareBackstageIdentityResponse } from '../../providers/prepareBackstageIdentityResponse';\n\nexport const THOUSAND_DAYS_MS = 1000 * 24 * 60 * 60 * 1000;\nexport const TEN_MINUTES_MS = 600 * 1000;\n\nexport type Options = {\n  providerId: string;\n  secure: boolean;\n  persistScopes?: boolean;\n  cookieDomain: string;\n  cookiePath: string;\n  appOrigin: string;\n  /** @deprecated This option is no longer needed */\n  tokenIssuer?: TokenIssuer;\n  isOriginAllowed: (origin: string) => boolean;\n  callbackUrl: string;\n};\nexport class OAuthAdapter implements AuthProviderRouteHandlers {\n  static fromConfig(\n    config: AuthProviderConfig,\n    handlers: OAuthHandlers,\n    options: Pick<\n      Options,\n      'providerId' | 'persistScopes' | 'tokenIssuer' | 'callbackUrl'\n    >,\n  ): OAuthAdapter {\n    const { origin: appOrigin } = new URL(config.appUrl);\n\n    const cookieConfigurer = config.cookieConfigurer ?? defaultCookieConfigurer;\n    const cookieConfig = cookieConfigurer({\n      providerId: options.providerId,\n      baseUrl: config.baseUrl,\n      callbackUrl: options.callbackUrl,\n    });\n\n    return new OAuthAdapter(handlers, {\n      ...options,\n      appOrigin,\n      cookieDomain: cookieConfig.domain,\n      cookiePath: cookieConfig.path,\n      secure: cookieConfig.secure,\n      isOriginAllowed: config.isOriginAllowed,\n    });\n  }\n\n  private readonly baseCookieOptions: CookieOptions;\n\n  constructor(\n    private readonly handlers: OAuthHandlers,\n    private readonly options: Options,\n  ) {\n    this.baseCookieOptions = {\n      httpOnly: true,\n      sameSite: 'lax',\n      secure: this.options.secure,\n      path: this.options.cookiePath,\n      domain: this.options.cookieDomain,\n    };\n  }\n\n  async start(req: express.Request, res: express.Response): Promise<void> {\n    // retrieve scopes from request\n    const scope = req.query.scope?.toString() ?? '';\n    const env = req.query.env?.toString();\n    const origin = req.query.origin?.toString();\n\n    if (!env) {\n      throw new InputError('No env provided in request query parameters');\n    }\n\n    const nonce = crypto.randomBytes(16).toString('base64');\n    // set a nonce cookie before redirecting to oauth provider\n    this.setNonceCookie(res, nonce);\n\n    const state: OAuthState = { nonce, env, origin };\n\n    // If scopes are persisted then we pass them through the state so that we\n    // can set the cookie on successful auth\n    if (this.options.persistScopes) {\n      state.scope = scope;\n    }\n    const forwardReq = Object.assign(req, { scope, state });\n\n    const { url, status } = await this.handlers.start(\n      forwardReq as OAuthStartRequest,\n    );\n\n    res.statusCode = status || 302;\n    res.setHeader('Location', url);\n    res.setHeader('Content-Length', '0');\n    res.end();\n  }\n\n  async frameHandler(\n    req: express.Request,\n    res: express.Response,\n  ): Promise<void> {\n    let appOrigin = this.options.appOrigin;\n\n    try {\n      const state: OAuthState = readState(req.query.state?.toString() ?? '');\n\n      if (state.origin) {\n        try {\n          appOrigin = new URL(state.origin).origin;\n        } catch {\n          throw new NotAllowedError('App origin is invalid, failed to parse');\n        }\n        if (!this.options.isOriginAllowed(appOrigin)) {\n          throw new NotAllowedError(`Origin '${appOrigin}' is not allowed`);\n        }\n      }\n\n      // verify nonce cookie and state cookie on callback\n      verifyNonce(req, this.options.providerId);\n\n      const { response, refreshToken } = await this.handlers.handler(req);\n\n      // Store the scope that we have been granted for this session. This is useful if\n      // the provider does not return granted scopes on refresh or if they are normalized.\n      if (this.options.persistScopes && state.scope) {\n        this.setGrantedScopeCookie(res, state.scope);\n        response.providerInfo.scope = state.scope;\n      }\n\n      if (refreshToken) {\n        // set new refresh token\n        this.setRefreshTokenCookie(res, refreshToken);\n      }\n\n      const identity = await this.populateIdentity(response.backstageIdentity);\n\n      // post message back to popup if successful\n      return postMessageResponse(res, appOrigin, {\n        type: 'authorization_response',\n        response: { ...response, backstageIdentity: identity },\n      });\n    } catch (error) {\n      const { name, message } = isError(error)\n        ? error\n        : new Error('Encountered invalid error'); // Being a bit safe and not forwarding the bad value\n      // post error message back to popup if failure\n      return postMessageResponse(res, appOrigin, {\n        type: 'authorization_response',\n        error: { name, message },\n      });\n    }\n  }\n\n  async logout(req: express.Request, res: express.Response): Promise<void> {\n    if (!ensuresXRequestedWith(req)) {\n      throw new AuthenticationError('Invalid X-Requested-With header');\n    }\n\n    // remove refresh token cookie if it is set\n    this.removeRefreshTokenCookie(res);\n\n    res.status(200).end();\n  }\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    if (!ensuresXRequestedWith(req)) {\n      throw new AuthenticationError('Invalid X-Requested-With header');\n    }\n\n    if (!this.handlers.refresh) {\n      throw new InputError(\n        `Refresh token is not supported for provider ${this.options.providerId}`,\n      );\n    }\n\n    try {\n      const refreshToken =\n        req.cookies[`${this.options.providerId}-refresh-token`];\n\n      // throw error if refresh token is missing in the request\n      if (!refreshToken) {\n        throw new InputError('Missing session cookie');\n      }\n\n      let scope = req.query.scope?.toString() ?? '';\n      if (this.options.persistScopes) {\n        scope = this.getGrantedScopeFromCookie(req);\n      }\n      const forwardReq = Object.assign(req, { scope, refreshToken });\n\n      // get new access_token\n      const { response, refreshToken: newRefreshToken } =\n        await this.handlers.refresh(forwardReq as OAuthRefreshRequest);\n\n      const backstageIdentity = await this.populateIdentity(\n        response.backstageIdentity,\n      );\n\n      if (newRefreshToken && newRefreshToken !== refreshToken) {\n        this.setRefreshTokenCookie(res, newRefreshToken);\n      }\n\n      res.status(200).json({ ...response, backstageIdentity });\n    } catch (error) {\n      throw new AuthenticationError('Refresh failed', error);\n    }\n  }\n\n  /**\n   * If the response from the OAuth provider includes a Backstage identity, we\n   * make sure it's populated with all the information we can derive from the user ID.\n   */\n  private async populateIdentity(\n    identity?: BackstageSignInResult,\n  ): Promise<BackstageIdentityResponse | undefined> {\n    if (!identity) {\n      return undefined;\n    }\n    if (!identity.token) {\n      throw new InputError(`Identity response must return a token`);\n    }\n\n    return prepareBackstageIdentityResponse(identity);\n  }\n\n  private setNonceCookie = (res: express.Response, nonce: string) => {\n    res.cookie(`${this.options.providerId}-nonce`, nonce, {\n      maxAge: TEN_MINUTES_MS,\n      ...this.baseCookieOptions,\n      path: `${this.options.cookiePath}/handler`,\n    });\n  };\n\n  private setGrantedScopeCookie = (res: express.Response, scope: string) => {\n    res.cookie(`${this.options.providerId}-granted-scope`, scope, {\n      maxAge: THOUSAND_DAYS_MS,\n      ...this.baseCookieOptions,\n    });\n  };\n\n  private getGrantedScopeFromCookie = (req: express.Request) => {\n    return req.cookies[`${this.options.providerId}-granted-scope`];\n  };\n\n  private setRefreshTokenCookie = (\n    res: express.Response,\n    refreshToken: string,\n  ) => {\n    res.cookie(`${this.options.providerId}-refresh-token`, refreshToken, {\n      maxAge: THOUSAND_DAYS_MS,\n      ...this.baseCookieOptions,\n    });\n  };\n\n  private removeRefreshTokenCookie = (res: express.Response) => {\n    res.cookie(`${this.options.providerId}-refresh-token`, '', {\n      maxAge: 0,\n      ...this.baseCookieOptions,\n    });\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport from 'passport';\nimport jwtDecoder from 'jwt-decode';\nimport { InternalOAuthError } from 'passport-oauth2';\n\nimport { PassportProfile } from './types';\nimport { ProfileInfo, RedirectInfo } from '../../providers/types';\n\nexport type PassportDoneCallback<Res, Private = never> = (\n  err?: Error,\n  response?: Res,\n  privateInfo?: Private,\n) => void;\n\nexport const makeProfileInfo = (\n  profile: PassportProfile,\n  idToken?: string,\n): ProfileInfo => {\n  let email: string | undefined = undefined;\n  if (profile.emails && profile.emails.length > 0) {\n    const [firstEmail] = profile.emails;\n    email = firstEmail.value;\n  }\n\n  let picture: string | undefined = undefined;\n  if (profile.avatarUrl) {\n    picture = profile.avatarUrl;\n  } else if (profile.photos && profile.photos.length > 0) {\n    const [firstPhoto] = profile.photos;\n    picture = firstPhoto.value;\n  }\n\n  let displayName: string | undefined =\n    profile.displayName ?? profile.username ?? profile.id;\n\n  if ((!email || !picture || !displayName) && idToken) {\n    try {\n      const decoded: Record<string, string> = jwtDecoder(idToken);\n      if (!email && decoded.email) {\n        email = decoded.email;\n      }\n      if (!picture && decoded.picture) {\n        picture = decoded.picture;\n      }\n      if (!displayName && decoded.name) {\n        displayName = decoded.name;\n      }\n    } catch (e) {\n      throw new Error(`Failed to parse id token and get profile info, ${e}`);\n    }\n  }\n\n  return {\n    email,\n    picture,\n    displayName,\n  };\n};\n\nexport const executeRedirectStrategy = async (\n  req: express.Request,\n  providerStrategy: passport.Strategy,\n  options: Record<string, string>,\n): Promise<RedirectInfo> => {\n  return new Promise(resolve => {\n    const strategy = Object.create(providerStrategy);\n    strategy.redirect = (url: string, status?: number) => {\n      resolve({ url, status: status ?? undefined });\n    };\n\n    strategy.authenticate(req, { ...options });\n  });\n};\n\nexport const executeFrameHandlerStrategy = async <Result, PrivateInfo = never>(\n  req: express.Request,\n  providerStrategy: passport.Strategy,\n) => {\n  return new Promise<{ result: Result; privateInfo: PrivateInfo }>(\n    (resolve, reject) => {\n      const strategy = Object.create(providerStrategy);\n      strategy.success = (result: any, privateInfo: any) => {\n        resolve({ result, privateInfo });\n      };\n      strategy.fail = (\n        info: { type: 'success' | 'error'; message?: string },\n        // _status: number,\n      ) => {\n        reject(new Error(`Authentication rejected, ${info.message ?? ''}`));\n      };\n      strategy.error = (error: InternalOAuthError) => {\n        let message = `Authentication failed, ${error.message}`;\n\n        if (error.oauthError?.data) {\n          try {\n            const errorData = JSON.parse(error.oauthError.data);\n\n            if (errorData.message) {\n              message += ` - ${errorData.message}`;\n            }\n          } catch (parseError) {\n            message += ` - ${error.oauthError}`;\n          }\n        }\n\n        reject(new Error(message));\n      };\n      strategy.redirect = () => {\n        reject(new Error('Unexpected redirect'));\n      };\n      strategy.authenticate(req, {});\n    },\n  );\n};\n\ntype RefreshTokenResponse = {\n  /**\n   * An access token issued for the signed in user.\n   */\n  accessToken: string;\n  /**\n   * Optionally, the server can issue a new Refresh Token for the user\n   */\n  refreshToken?: string;\n  params: any;\n};\n\nexport const executeRefreshTokenStrategy = async (\n  providerStrategy: passport.Strategy,\n  refreshToken: string,\n  scope: string,\n): Promise<RefreshTokenResponse> => {\n  return new Promise((resolve, reject) => {\n    const anyStrategy = providerStrategy as any;\n    const OAuth2 = anyStrategy._oauth2.constructor;\n    const oauth2 = new OAuth2(\n      anyStrategy._oauth2._clientId,\n      anyStrategy._oauth2._clientSecret,\n      anyStrategy._oauth2._baseSite,\n      anyStrategy._oauth2._authorizeUrl,\n      anyStrategy._refreshURL || anyStrategy._oauth2._accessTokenUrl,\n      anyStrategy._oauth2._customHeaders,\n    );\n\n    oauth2.getOAuthAccessToken(\n      refreshToken,\n      {\n        scope,\n        grant_type: 'refresh_token',\n      },\n      (\n        err: Error | null,\n        accessToken: string,\n        newRefreshToken: string,\n        params: any,\n      ) => {\n        if (err) {\n          reject(new Error(`Failed to refresh access token ${err.toString()}`));\n        }\n        if (!accessToken) {\n          reject(\n            new Error(\n              `Failed to refresh access token, no access token received`,\n            ),\n          );\n        }\n\n        resolve({\n          accessToken,\n          refreshToken: newRefreshToken,\n          params,\n        });\n      },\n    );\n  });\n};\n\ntype ProviderStrategy = {\n  userProfile(accessToken: string, callback: Function): void;\n};\n\nexport const executeFetchUserProfileStrategy = async (\n  providerStrategy: passport.Strategy,\n  accessToken: string,\n): Promise<PassportProfile> => {\n  return new Promise((resolve, reject) => {\n    const anyStrategy = providerStrategy as unknown as ProviderStrategy;\n    anyStrategy.userProfile(\n      accessToken,\n      (error: Error, rawProfile: PassportProfile) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(rawProfile);\n        }\n      },\n    );\n  });\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProviderFactory, SignInResolver } from './types';\n\n/**\n * Creates a standardized representation of an integration with a third-party\n * auth provider.\n *\n * The returned object facilitates the creation of provider instances, and\n * supplies built-in sign-in resolvers for the specific provider.\n */\nexport function createAuthProviderIntegration<\n  TCreateOptions extends unknown[],\n  TResolvers extends\n    | {\n        [name in string]: (...args: any[]) => SignInResolver<any>;\n      },\n>(config: {\n  create: (...args: TCreateOptions) => AuthProviderFactory;\n  resolvers?: TResolvers;\n}): Readonly<{\n  create: (...args: TCreateOptions) => AuthProviderFactory;\n  // If no resolvers are defined, this receives the type `never`\n  resolvers: Readonly<string extends keyof TResolvers ? never : TResolvers>;\n}> {\n  return Object.freeze({\n    ...config,\n    resolvers: Object.freeze(config.resolvers ?? ({} as any)),\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AtlassianStrategy from './strategy';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthResult,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport passport from 'passport';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  AuthResolverContext,\n  RedirectInfo,\n  SignInResolver,\n} from '../types';\nimport express from 'express';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\nexport type AtlassianAuthProviderOptions = OAuthProviderOptions & {\n  scopes: string;\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport const atlassianDefaultAuthHandler: AuthHandler<OAuthResult> = async ({\n  fullProfile,\n  params,\n}) => ({\n  profile: makeProfileInfo(fullProfile, params.id_token),\n});\n\nexport class AtlassianAuthProvider implements OAuthHandlers {\n  private readonly _strategy: AtlassianStrategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: AtlassianAuthProviderOptions) {\n    this.resolverContext = options.resolverContext;\n    this.authHandler = options.authHandler;\n    this.signInResolver = options.signInResolver;\n\n    this._strategy = new AtlassianStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        scope: options.scopes,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult>,\n      ) => {\n        done(undefined, {\n          fullProfile,\n          accessToken,\n          refreshToken,\n          params,\n        });\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result } = await executeFrameHandlerStrategy<OAuthResult>(\n      req,\n      this._strategy,\n    );\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: result.refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult): Promise<OAuthResponse> {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, params, refreshToken } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type AtlassianProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for atlassian auth\n *\n * @public\n */\nexport const atlassian = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const scopes = envConfig.getString('scopes');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<OAuthResult> =\n          options?.authHandler ?? atlassianDefaultAuthHandler;\n\n        const provider = new AtlassianAuthProvider({\n          clientId,\n          clientSecret,\n          scopes,\n          callbackUrl,\n          authHandler,\n          signInResolver: options?.signIn?.resolver,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.atlassian.create` instead\n */\nexport const createAtlassianProvider = atlassian.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport OAuth2Strategy from 'passport-oauth2';\n\nexport interface Auth0StrategyOptionsWithRequest {\n  clientID: string;\n  clientSecret: string;\n  callbackURL: string;\n  domain: string;\n  passReqToCallback: true;\n}\n\nexport default class Auth0Strategy extends OAuth2Strategy {\n  constructor(\n    options: Auth0StrategyOptionsWithRequest,\n    verify: OAuth2Strategy.VerifyFunctionWithRequest,\n  ) {\n    const optionsWithURLs = {\n      ...options,\n      authorizationURL: `https://${options.domain}/authorize`,\n      tokenURL: `https://${options.domain}/oauth/token`,\n      userInfoURL: `https://${options.domain}/userinfo`,\n      apiUrl: `https://${options.domain}/api`,\n    };\n    super(optionsWithURLs, verify);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport from 'passport';\nimport Auth0Strategy from './strategy';\nimport {\n  OAuthAdapter,\n  OAuthProviderOptions,\n  OAuthHandlers,\n  OAuthResponse,\n  OAuthEnvironmentHandler,\n  OAuthStartRequest,\n  encodeState,\n  OAuthRefreshRequest,\n  OAuthResult,\n} from '../../lib/oauth';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  RedirectInfo,\n  AuthHandler,\n  SignInResolver,\n  AuthResolverContext,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\nexport type Auth0AuthProviderOptions = OAuthProviderOptions & {\n  domain: string;\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport class Auth0AuthProvider implements OAuthHandlers {\n  private readonly _strategy: Auth0Strategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Auth0AuthProviderOptions) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n    this._strategy = new Auth0Strategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        domain: options.domain,\n        // We need passReqToCallback set to false to get params, but there's\n        // no matching type signature for that, so instead behold this beauty\n        passReqToCallback: false as true,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            fullProfile,\n            accessToken,\n            refreshToken,\n            params,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type Auth0ProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for auth0 auth\n *\n * @public\n */\nexport const auth0 = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const domain = envConfig.getString('domain');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const signInResolver = options?.signIn?.resolver;\n\n        const provider = new Auth0AuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          domain,\n          authHandler,\n          signInResolver,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.auth0.create` instead.\n */\nexport const createAuth0Provider = auth0.create;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthHandler,\n  AuthProviderRouteHandlers,\n  AuthResolverContext,\n  AuthResponse,\n  SignInResolver,\n} from '../types';\nimport express from 'express';\nimport fetch from 'node-fetch';\nimport * as crypto from 'crypto';\nimport { KeyObject } from 'crypto';\nimport NodeCache from 'node-cache';\nimport { JWTHeaderParameters, jwtVerify } from 'jose';\nimport { Profile as PassportProfile } from 'passport';\nimport { makeProfileInfo } from '../../lib/passport';\nimport { AuthenticationError } from '@backstage/errors';\nimport { prepareBackstageIdentityResponse } from '../prepareBackstageIdentityResponse';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\nexport const ALB_JWT_HEADER = 'x-amzn-oidc-data';\nexport const ALB_ACCESS_TOKEN_HEADER = 'x-amzn-oidc-accesstoken';\n\ntype Options = {\n  region: string;\n  issuer?: string;\n  authHandler: AuthHandler<AwsAlbResult>;\n  signInResolver: SignInResolver<AwsAlbResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport type AwsAlbHeaders = {\n  alg: string;\n  kid: string;\n  signer: string;\n  iss: string;\n  client: string;\n  exp: number;\n};\n\nexport type AwsAlbClaims = {\n  sub: string;\n  name: string;\n  family_name: string;\n  given_name: string;\n  picture: string;\n  email: string;\n  exp: number;\n  iss: string;\n};\n\n/** @public */\nexport type AwsAlbResult = {\n  fullProfile: PassportProfile;\n  expiresInSeconds?: number;\n  accessToken: string;\n};\n\nexport type AwsAlbProviderInfo = {\n  /**\n   * An access token issued for the signed in user.\n   */\n  accessToken: string;\n  /**\n   * Expiry of the access token in seconds.\n   */\n  expiresInSeconds?: number;\n};\n\nexport type AwsAlbResponse = AuthResponse<AwsAlbProviderInfo>;\n\nexport class AwsAlbAuthProvider implements AuthProviderRouteHandlers {\n  private readonly region: string;\n  private readonly issuer?: string;\n  private readonly resolverContext: AuthResolverContext;\n  private readonly keyCache: NodeCache;\n  private readonly authHandler: AuthHandler<AwsAlbResult>;\n  private readonly signInResolver: SignInResolver<AwsAlbResult>;\n\n  constructor(options: Options) {\n    this.region = options.region;\n    this.issuer = options.issuer;\n    this.authHandler = options.authHandler;\n    this.signInResolver = options.signInResolver;\n    this.resolverContext = options.resolverContext;\n    this.keyCache = new NodeCache({ stdTTL: 3600 });\n  }\n\n  frameHandler(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    try {\n      const result = await this.getResult(req);\n      const response = await this.handleResult(result);\n      res.json(response);\n    } catch (e) {\n      throw new AuthenticationError(\n        'Exception occurred during AWS ALB token refresh',\n        e,\n      );\n    }\n  }\n\n  start(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  private async getResult(req: express.Request): Promise<AwsAlbResult> {\n    const jwt = req.header(ALB_JWT_HEADER);\n    const accessToken = req.header(ALB_ACCESS_TOKEN_HEADER);\n\n    if (jwt === undefined) {\n      throw new AuthenticationError(\n        `Missing ALB OIDC header: ${ALB_JWT_HEADER}`,\n      );\n    }\n\n    if (accessToken === undefined) {\n      throw new AuthenticationError(\n        `Missing ALB OIDC header: ${ALB_ACCESS_TOKEN_HEADER}`,\n      );\n    }\n\n    try {\n      const verifyResult = await jwtVerify(jwt, this.getKey);\n      const claims = verifyResult.payload as AwsAlbClaims;\n\n      if (this.issuer && claims.iss !== this.issuer) {\n        throw new AuthenticationError('Issuer mismatch on JWT token');\n      }\n\n      const fullProfile: PassportProfile = {\n        provider: 'unknown',\n        id: claims.sub,\n        displayName: claims.name,\n        username: claims.email.split('@')[0].toLowerCase(),\n        name: {\n          familyName: claims.family_name,\n          givenName: claims.given_name,\n        },\n        emails: [{ value: claims.email.toLowerCase() }],\n        photos: [{ value: claims.picture }],\n      };\n\n      return {\n        fullProfile,\n        expiresInSeconds: claims.exp,\n        accessToken,\n      };\n    } catch (e) {\n      throw new Error(`Exception occurred during JWT processing: ${e}`);\n    }\n  }\n\n  private async handleResult(result: AwsAlbResult): Promise<AwsAlbResponse> {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n    const backstageIdentity = await this.signInResolver(\n      {\n        result,\n        profile,\n      },\n      this.resolverContext,\n    );\n\n    return {\n      providerInfo: {\n        accessToken: result.accessToken,\n        expiresInSeconds: result.expiresInSeconds,\n      },\n      backstageIdentity: prepareBackstageIdentityResponse(backstageIdentity),\n      profile,\n    };\n  }\n\n  getKey = async (header: JWTHeaderParameters): Promise<KeyObject> => {\n    if (!header.kid) {\n      throw new AuthenticationError('No key id was specified in header');\n    }\n    const optionalCacheKey = this.keyCache.get<KeyObject>(header.kid);\n    if (optionalCacheKey) {\n      return crypto.createPublicKey(optionalCacheKey);\n    }\n    const keyText: string = await fetch(\n      `https://public-keys.auth.elb.${encodeURIComponent(\n        this.region,\n      )}.amazonaws.com/${encodeURIComponent(header.kid)}`,\n    ).then(response => response.text());\n    const keyValue = crypto.createPublicKey(keyText);\n    this.keyCache.set(\n      header.kid,\n      keyValue.export({ format: 'pem', type: 'spki' }),\n    );\n    return keyValue;\n  };\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type AwsAlbProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<AwsAlbResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<AwsAlbResult>;\n  };\n};\n\n/**\n * Auth provider integration for AWS ALB auth\n *\n * @public\n */\nexport const awsAlb = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<AwsAlbResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<AwsAlbResult>;\n    };\n  }) {\n    return ({ config, resolverContext }) => {\n      const region = config.getString('region');\n      const issuer = config.getOptionalString('iss');\n\n      if (options?.signIn.resolver === undefined) {\n        throw new Error(\n          'SignInResolver is required to use this authentication provider',\n        );\n      }\n\n      const authHandler: AuthHandler<AwsAlbResult> = options?.authHandler\n        ? options.authHandler\n        : async ({ fullProfile }) => ({\n            profile: makeProfileInfo(fullProfile),\n          });\n\n      return new AwsAlbAuthProvider({\n        region,\n        issuer,\n        signInResolver: options?.signIn.resolver,\n        authHandler,\n        resolverContext,\n      });\n    };\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.awsAlb.create` instead\n */\nexport const createAwsAlbProvider = awsAlb.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport, { Profile as PassportProfile } from 'passport';\nimport { Strategy as BitbucketStrategy } from 'passport-bitbucket-oauth2';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthResult,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport {\n  AuthHandler,\n  RedirectInfo,\n  SignInResolver,\n  AuthResolverContext,\n} from '../types';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\ntype Options = OAuthProviderOptions & {\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<BitbucketOAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport type BitbucketOAuthResult = {\n  fullProfile: BitbucketPassportProfile;\n  params: {\n    id_token?: string;\n    scope: string;\n    expires_in: number;\n  };\n  accessToken: string;\n  refreshToken?: string;\n};\n\nexport type BitbucketPassportProfile = PassportProfile & {\n  id?: string;\n  displayName?: string;\n  username?: string;\n  avatarUrl?: string;\n  _json?: {\n    links?: {\n      avatar?: {\n        href?: string;\n      };\n    };\n  };\n};\n\nexport class BitbucketAuthProvider implements OAuthHandlers {\n  private readonly _strategy: BitbucketStrategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Options) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n    this._strategy = new BitbucketStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        passReqToCallback: false,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            fullProfile,\n            params,\n            accessToken,\n            refreshToken,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: BitbucketOAuthResult) {\n    result.fullProfile.avatarUrl =\n      result.fullProfile._json!.links!.avatar!.href;\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type BitbucketProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for BitBucket auth\n *\n * @public\n */\nexport const bitbucket = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<BitbucketOAuthResult> =\n          options?.authHandler\n            ? options.authHandler\n            : async ({ fullProfile, params }) => ({\n                profile: makeProfileInfo(fullProfile, params.id_token),\n              });\n\n        const provider = new BitbucketAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          signInResolver: options?.signIn?.resolver,\n          authHandler,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their username to the `bitbucket.org/username` annotation.\n     */\n    usernameMatchingUserEntityAnnotation(): SignInResolver<OAuthResult> {\n      return async (info, ctx) => {\n        const { result } = info;\n\n        if (!result.fullProfile.username) {\n          throw new Error('Bitbucket profile contained no Username');\n        }\n\n        return ctx.signInWithCatalogUser({\n          annotations: {\n            'bitbucket.org/username': result.fullProfile.username,\n          },\n        });\n      };\n    },\n    /**\n     * Looks up the user by matching their user ID to the `bitbucket.org/user-id` annotation.\n     */\n    userIdMatchingUserEntityAnnotation(): SignInResolver<OAuthResult> {\n      return async (info, ctx) => {\n        const { result } = info;\n\n        if (!result.fullProfile.id) {\n          throw new Error('Bitbucket profile contained no User ID');\n        }\n\n        return ctx.signInWithCatalogUser({\n          annotations: {\n            'bitbucket.org/user-id': result.fullProfile.id,\n          },\n        });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.bitbucket.create` instead\n */\nexport const createBitbucketProvider = bitbucket.create;\n\n/**\n * @public\n * @deprecated Use `providers.bitbucket.resolvers.usernameMatchingUserEntityAnnotation()` instead.\n */\nexport const bitbucketUsernameSignInResolver =\n  bitbucket.resolvers.usernameMatchingUserEntityAnnotation();\n\n/**\n * @public\n * @deprecated Use `providers.bitbucket.resolvers.userIdMatchingUserEntityAnnotation()` instead.\n */\nexport const bitbucketUserIdSignInResolver =\n  bitbucket.resolvers.userIdMatchingUserEntityAnnotation();\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { Profile as PassportProfile } from 'passport';\nimport { Strategy as GithubStrategy } from 'passport-github2';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  RedirectInfo,\n  AuthHandler,\n  SignInResolver,\n  StateEncoder,\n  AuthResolverContext,\n} from '../types';\nimport {\n  OAuthAdapter,\n  OAuthProviderOptions,\n  OAuthHandlers,\n  OAuthEnvironmentHandler,\n  OAuthStartRequest,\n  encodeState,\n  OAuthRefreshRequest,\n} from '../../lib/oauth';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\nconst ACCESS_TOKEN_PREFIX = 'access-token.';\n\n// TODO(Rugvip): Auth providers need a way to access this in a less hardcoded way\nconst BACKSTAGE_SESSION_EXPIRATION = 3600;\n\ntype PrivateInfo = {\n  refreshToken?: string;\n};\n\nexport type GithubOAuthResult = {\n  fullProfile: PassportProfile;\n  params: {\n    scope: string;\n    expires_in?: string;\n    refresh_token_expires_in?: string;\n  };\n  accessToken: string;\n  refreshToken?: string;\n};\n\nexport type GithubAuthProviderOptions = OAuthProviderOptions & {\n  tokenUrl?: string;\n  userProfileUrl?: string;\n  authorizationUrl?: string;\n  signInResolver?: SignInResolver<GithubOAuthResult>;\n  authHandler: AuthHandler<GithubOAuthResult>;\n  stateEncoder: StateEncoder;\n  resolverContext: AuthResolverContext;\n};\n\nexport class GithubAuthProvider implements OAuthHandlers {\n  private readonly _strategy: GithubStrategy;\n  private readonly signInResolver?: SignInResolver<GithubOAuthResult>;\n  private readonly authHandler: AuthHandler<GithubOAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n  private readonly stateEncoder: StateEncoder;\n\n  constructor(options: GithubAuthProviderOptions) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.stateEncoder = options.stateEncoder;\n    this.resolverContext = options.resolverContext;\n    this._strategy = new GithubStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        tokenURL: options.tokenUrl,\n        userProfileURL: options.userProfileUrl,\n        authorizationURL: options.authorizationUrl,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: any,\n        done: PassportDoneCallback<GithubOAuthResult, PrivateInfo>,\n      ) => {\n        done(undefined, { fullProfile, params, accessToken }, { refreshToken });\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      scope: req.scope,\n      state: (await this.stateEncoder(req)).encodedState,\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      GithubOAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    let refreshToken = privateInfo.refreshToken;\n\n    // If we do not have a real refresh token and we have a non-expiring\n    // access token, then we use that as our refresh token.\n    if (!refreshToken && !result.params.expires_in) {\n      refreshToken = ACCESS_TOKEN_PREFIX + result.accessToken;\n    }\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    // We've enable persisting scope in the OAuth provider, so scope here will\n    // be whatever was stored in the cookie\n    const { scope, refreshToken } = req;\n\n    // This is the OAuth App flow. A non-expiring access token is stored in the\n    // refresh token cookie. We use that token to fetch the user profile and\n    // refresh the Backstage session when needed.\n    if (refreshToken?.startsWith(ACCESS_TOKEN_PREFIX)) {\n      const accessToken = refreshToken.slice(ACCESS_TOKEN_PREFIX.length);\n\n      const fullProfile = await executeFetchUserProfileStrategy(\n        this._strategy,\n        accessToken,\n      ).catch(error => {\n        if (error.oauthError?.statusCode === 401) {\n          throw new Error('Invalid access token');\n        }\n        throw error;\n      });\n\n      return {\n        response: await this.handleResult({\n          fullProfile,\n          params: { scope },\n          accessToken,\n        }),\n        refreshToken,\n      };\n    }\n\n    // This is the App flow, which is close to a standard OAuth refresh flow. It has a\n    // pretty long session expiration, and it also ignores the requested scope, instead\n    // just allowing access to whatever is configured as part of the app installation.\n    const result = await executeRefreshTokenStrategy(\n      this._strategy,\n      refreshToken,\n      scope,\n    );\n    return {\n      response: await this.handleResult({\n        fullProfile: await executeFetchUserProfileStrategy(\n          this._strategy,\n          result.accessToken,\n        ),\n        params: { ...result.params, scope },\n        accessToken: result.accessToken,\n      }),\n      refreshToken: result.refreshToken,\n    };\n  }\n\n  private async handleResult(result: GithubOAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const expiresInStr = result.params.expires_in;\n    let expiresInSeconds =\n      expiresInStr === undefined ? undefined : Number(expiresInStr);\n\n    let backstageIdentity = undefined;\n\n    if (this.signInResolver) {\n      backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n\n      // GitHub sessions last longer than Backstage sessions, so if we're using\n      // GitHub for sign-in, then we need to expire the sessions earlier\n      if (expiresInSeconds) {\n        expiresInSeconds = Math.min(\n          expiresInSeconds,\n          BACKSTAGE_SESSION_EXPIRATION,\n        );\n      } else {\n        expiresInSeconds = BACKSTAGE_SESSION_EXPIRATION;\n      }\n    }\n\n    return {\n      backstageIdentity,\n      providerInfo: {\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds,\n      },\n      profile,\n    };\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type GithubProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<GithubOAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<GithubOAuthResult>;\n  };\n\n  /**\n   * The state encoder used to encode the 'state' parameter on the OAuth request.\n   *\n   * It should return a string that takes the state params (from the request), url encodes the params\n   * and finally base64 encodes them.\n   *\n   * Providing your own stateEncoder will allow you to add addition parameters to the state field.\n   *\n   * It is typed as follows:\n   *   `export type StateEncoder = (input: OAuthState) => Promise<{encodedState: string}>;`\n   *\n   * Note: the stateEncoder must encode a 'nonce' value and an 'env' value. Without this, the OAuth flow will fail\n   * (These two values will be set by the req.state by default)\n   *\n   * For more information, please see the helper module in ../../oauth/helpers #readState\n   */\n  stateEncoder?: StateEncoder;\n};\n\n/**\n * Auth provider integration for GitHub auth\n *\n * @public\n */\nexport const github = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<GithubOAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<GithubOAuthResult>;\n    };\n\n    /**\n     * The state encoder used to encode the 'state' parameter on the OAuth request.\n     *\n     * It should return a string that takes the state params (from the request), url encodes the params\n     * and finally base64 encodes them.\n     *\n     * Providing your own stateEncoder will allow you to add addition parameters to the state field.\n     *\n     * It is typed as follows:\n     *   `export type StateEncoder = (input: OAuthState) => Promise<{encodedState: string}>;`\n     *\n     * Note: the stateEncoder must encode a 'nonce' value and an 'env' value. Without this, the OAuth flow will fail\n     * (These two values will be set by the req.state by default)\n     *\n     * For more information, please see the helper module in ../../oauth/helpers #readState\n     */\n    stateEncoder?: StateEncoder;\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const enterpriseInstanceUrl = envConfig\n          .getOptionalString('enterpriseInstanceUrl')\n          ?.replace(/\\/$/, '');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const authorizationUrl = enterpriseInstanceUrl\n          ? `${enterpriseInstanceUrl}/login/oauth/authorize`\n          : undefined;\n        const tokenUrl = enterpriseInstanceUrl\n          ? `${enterpriseInstanceUrl}/login/oauth/access_token`\n          : undefined;\n        const userProfileUrl = enterpriseInstanceUrl\n          ? `${enterpriseInstanceUrl}/api/v3/user`\n          : undefined;\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<GithubOAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile }) => ({\n              profile: makeProfileInfo(fullProfile),\n            });\n\n        const stateEncoder: StateEncoder =\n          options?.stateEncoder ??\n          (async (\n            req: OAuthStartRequest,\n          ): Promise<{ encodedState: string }> => {\n            return { encodedState: encodeState(req.state) };\n          });\n\n        const provider = new GithubAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          tokenUrl,\n          userProfileUrl,\n          authorizationUrl,\n          signInResolver: options?.signIn?.resolver,\n          authHandler,\n          stateEncoder,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          persistScopes: true,\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their GitHub username to the entity name.\n     */\n    usernameMatchingUserEntityName: (): SignInResolver<GithubOAuthResult> => {\n      return async (info, ctx) => {\n        const { fullProfile } = info.result;\n\n        const userId = fullProfile.username;\n        if (!userId) {\n          throw new Error(`GitHub user profile does not contain a username`);\n        }\n\n        return ctx.signInWithCatalogUser({ entityRef: { name: userId } });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.github.create` instead\n */\nexport const createGithubProvider = github.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { Strategy as GitlabStrategy } from 'passport-gitlab2';\nimport {\n  executeRedirectStrategy,\n  executeFrameHandlerStrategy,\n  executeRefreshTokenStrategy,\n  executeFetchUserProfileStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  RedirectInfo,\n  SignInResolver,\n  AuthHandler,\n  AuthResolverContext,\n} from '../types';\nimport {\n  OAuthAdapter,\n  OAuthProviderOptions,\n  OAuthHandlers,\n  OAuthResponse,\n  OAuthEnvironmentHandler,\n  OAuthStartRequest,\n  OAuthRefreshRequest,\n  encodeState,\n  OAuthResult,\n} from '../../lib/oauth';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\nexport type GitlabAuthProviderOptions = OAuthProviderOptions & {\n  baseUrl: string;\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport const gitlabUsernameEntityNameSignInResolver: SignInResolver<\n  OAuthResult\n> = async (info, ctx) => {\n  const { result } = info;\n\n  const id = result.fullProfile.username;\n  if (!id) {\n    throw new Error(`GitLab user profile does not contain a username`);\n  }\n\n  return ctx.signInWithCatalogUser({ entityRef: { name: id } });\n};\n\nexport const gitlabDefaultAuthHandler: AuthHandler<OAuthResult> = async ({\n  fullProfile,\n  params,\n}) => ({\n  profile: makeProfileInfo(fullProfile, params.id_token),\n});\n\nexport class GitlabAuthProvider implements OAuthHandlers {\n  private readonly _strategy: GitlabStrategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: GitlabAuthProviderOptions) {\n    this.resolverContext = options.resolverContext;\n    this.authHandler = options.authHandler;\n    this.signInResolver = options.signInResolver;\n\n    this._strategy = new GitlabStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        baseURL: options.baseUrl,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: any,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          { fullProfile, params, accessToken },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult): Promise<OAuthResponse> {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type GitlabProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  /**\n   * Maps an auth result to a Backstage identity for the user.\n   *\n   * Set to `'email'` to use the default email-based sign in resolver, which will search\n   * the catalog for a single user entity that has a matching `microsoft.com/email` annotation.\n   */\n  signIn?: {\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for GitLab auth\n *\n * @public\n */\nexport const gitlab = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const audience = envConfig.getOptionalString('audience');\n        const baseUrl = audience || 'https://gitlab.com';\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<OAuthResult> =\n          options?.authHandler ?? gitlabDefaultAuthHandler;\n\n        const provider = new GitlabAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          baseUrl,\n          authHandler,\n          signInResolver: options?.signIn?.resolver,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.gitlab.create` instead\n */\nexport const createGitlabProvider = gitlab.create;\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SignInResolver } from './types';\n\n/**\n * A common sign-in resolver that looks up the user using the local part of\n * their email address as the entity name.\n */\nexport const commonByEmailLocalPartResolver: SignInResolver<unknown> = async (\n  info,\n  ctx,\n) => {\n  const { profile } = info;\n\n  if (!profile.email) {\n    throw new Error('Login failed, user profile does not contain an email');\n  }\n  const [localPart] = profile.email.split('@');\n\n  return ctx.signInWithCatalogUser({\n    entityRef: { name: localPart },\n  });\n};\n\n/**\n * A common sign-in resolver that looks up the user using their email address\n * as email of the entity.\n */\nexport const commonByEmailResolver: SignInResolver<unknown> = async (\n  info,\n  ctx,\n) => {\n  const { profile } = info;\n\n  if (!profile.email) {\n    throw new Error('Login failed, user profile does not contain an email');\n  }\n\n  return ctx.signInWithCatalogUser({\n    filter: {\n      'spec.profile.email': profile.email,\n    },\n  });\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport from 'passport';\nimport { Strategy as GoogleStrategy } from 'passport-google-oauth20';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthResult,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  AuthResolverContext,\n  RedirectInfo,\n  SignInResolver,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport {\n  commonByEmailLocalPartResolver,\n  commonByEmailResolver,\n} from '../resolvers';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\ntype Options = OAuthProviderOptions & {\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport class GoogleAuthProvider implements OAuthHandlers {\n  private readonly strategy: GoogleStrategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Options) {\n    this.authHandler = options.authHandler;\n    this.signInResolver = options.signInResolver;\n    this.resolverContext = options.resolverContext;\n    this.strategy = new GoogleStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        passReqToCallback: false,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            fullProfile,\n            params,\n            accessToken,\n            refreshToken,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this.strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this.strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this.strategy,\n        req.refreshToken,\n        req.scope,\n      );\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this.strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type GoogleProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for Google auth\n *\n * @public\n */\nexport const google = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const provider = new GoogleAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          signInResolver: options?.signIn?.resolver,\n          authHandler,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their email local part to the entity name.\n     */\n    emailLocalPartMatchingUserEntityName: () => commonByEmailLocalPartResolver,\n    /**\n     * Looks up the user by matching their email to the entity email.\n     */\n    emailMatchingUserEntityProfileEmail: () => commonByEmailResolver,\n    /**\n     * Looks up the user by matching their email to the `google.com/email` annotation.\n     */\n    emailMatchingUserEntityAnnotation(): SignInResolver<OAuthResult> {\n      return async (info, ctx) => {\n        const { profile } = info;\n\n        if (!profile.email) {\n          throw new Error('Google profile contained no email');\n        }\n\n        return ctx.signInWithCatalogUser({\n          annotations: {\n            'google.com/email': profile.email,\n          },\n        });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.google.create` instead.\n */\nexport const createGoogleProvider = google.create;\n\n/**\n * @public\n * @deprecated Use `providers.google.resolvers.emailMatchingUserEntityAnnotation()` instead.\n */\nexport const googleEmailSignInResolver =\n  google.resolvers.emailMatchingUserEntityAnnotation();\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport from 'passport';\nimport { Strategy as MicrosoftStrategy } from 'passport-microsoft';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthResult,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  RedirectInfo,\n  SignInResolver,\n  AuthResolverContext,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport {\n  commonByEmailLocalPartResolver,\n  commonByEmailResolver,\n} from '../resolvers';\nimport { Logger } from 'winston';\nimport fetch from 'node-fetch';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\ntype Options = OAuthProviderOptions & {\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  logger: Logger;\n  resolverContext: AuthResolverContext;\n  authorizationUrl?: string;\n  tokenUrl?: string;\n};\n\nexport class MicrosoftAuthProvider implements OAuthHandlers {\n  private readonly _strategy: MicrosoftStrategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly logger: Logger;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Options) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.logger = options.logger;\n    this.resolverContext = options.resolverContext;\n\n    this._strategy = new MicrosoftStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        authorizationURL: options.authorizationUrl,\n        tokenURL: options.tokenUrl,\n        passReqToCallback: false,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(undefined, { fullProfile, accessToken, params }, { refreshToken });\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const photo = await this.getUserPhoto(result.accessToken);\n    result.fullProfile.photos = photo ? [{ value: photo }] : undefined;\n\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n\n  private async getUserPhoto(accessToken: string): Promise<string | undefined> {\n    try {\n      const res = await fetch(\n        'https://graph.microsoft.com/v1.0/me/photos/48x48/$value',\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        },\n      );\n      const data = await res.buffer();\n\n      return `data:image/jpeg;base64,${data.toString('base64')}`;\n    } catch (error) {\n      this.logger.warn(\n        `Could not retrieve user profile photo from Microsoft Graph API: ${error}`,\n      );\n      return undefined;\n    }\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type MicrosoftProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for Microsoft auth\n *\n * @public\n */\nexport const microsoft = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, logger, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const tenantId = envConfig.getString('tenantId');\n\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n        const authorizationUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/authorize`;\n        const tokenUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/token`;\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const provider = new MicrosoftAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          authorizationUrl,\n          tokenUrl,\n          authHandler,\n          signInResolver: options?.signIn?.resolver,\n          logger,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their email local part to the entity name.\n     */\n    emailLocalPartMatchingUserEntityName: () => commonByEmailLocalPartResolver,\n    /**\n     * Looks up the user by matching their email to the entity email.\n     */\n    emailMatchingUserEntityProfileEmail: () => commonByEmailResolver,\n    /**\n     * Looks up the user by matching their email to the `microsoft.com/email` annotation.\n     */\n    emailMatchingUserEntityAnnotation(): SignInResolver<OAuthResult> {\n      return async (info, ctx) => {\n        const { profile } = info;\n\n        if (!profile.email) {\n          throw new Error('Microsoft profile contained no email');\n        }\n\n        return ctx.signInWithCatalogUser({\n          annotations: {\n            'microsoft.com/email': profile.email,\n          },\n        });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.microsoft.create` instead\n */\nexport const createMicrosoftProvider = microsoft.create;\n\n/**\n * @public\n * @deprecated Use `providers.microsoft.resolvers.emailMatchingUserEntityAnnotation()` instead.\n */\nexport const microsoftEmailSignInResolver =\n  microsoft.resolvers.emailMatchingUserEntityAnnotation();\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport passport from 'passport';\nimport { Strategy as OAuth2Strategy } from 'passport-oauth2';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthResult,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport {\n  executeFetchUserProfileStrategy,\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  AuthResolverContext,\n  RedirectInfo,\n  SignInResolver,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport { InputError } from '@backstage/errors';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\nexport type OAuth2AuthProviderOptions = OAuthProviderOptions & {\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  authorizationUrl: string;\n  tokenUrl: string;\n  scope?: string;\n  resolverContext: AuthResolverContext;\n  includeBasicAuth?: boolean;\n  disableRefresh?: boolean;\n};\n\nexport class OAuth2AuthProvider implements OAuthHandlers {\n  private readonly _strategy: OAuth2Strategy;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n  private readonly disableRefresh: boolean;\n\n  constructor(options: OAuth2AuthProviderOptions) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n    this.disableRefresh = options.disableRefresh ?? false;\n\n    this._strategy = new OAuth2Strategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        authorizationURL: options.authorizationUrl,\n        tokenURL: options.tokenUrl,\n        passReqToCallback: false,\n        scope: options.scope,\n        customHeaders: options.includeBasicAuth\n          ? {\n              Authorization: `Basic ${this.encodeClientCredentials(\n                options.clientId,\n                options.clientSecret,\n              )}`,\n            }\n          : undefined,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            fullProfile,\n            accessToken,\n            refreshToken,\n            params,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    if (this.disableRefresh) {\n      throw new InputError('Session refreshes have been disabled');\n    }\n    const refreshTokenResponse = await executeRefreshTokenStrategy(\n      this._strategy,\n      req.refreshToken,\n      req.scope,\n    );\n    const { accessToken, params, refreshToken } = refreshTokenResponse;\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n\n  encodeClientCredentials(clientID: string, clientSecret: string): string {\n    return Buffer.from(`${clientID}:${clientSecret}`).toString('base64');\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type OAuth2ProviderOptions = {\n  authHandler?: AuthHandler<OAuthResult>;\n\n  signIn?: {\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for generic OAuth2 auth\n *\n * @public\n */\nexport const oauth2 = createAuthProviderIntegration({\n  create(options?: {\n    authHandler?: AuthHandler<OAuthResult>;\n\n    signIn?: {\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n        const authorizationUrl = envConfig.getString('authorizationUrl');\n        const tokenUrl = envConfig.getString('tokenUrl');\n        const scope = envConfig.getOptionalString('scope');\n        const includeBasicAuth =\n          envConfig.getOptionalBoolean('includeBasicAuth');\n        const disableRefresh =\n          envConfig.getOptionalBoolean('disableRefresh') ?? false;\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const provider = new OAuth2AuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          signInResolver: options?.signIn?.resolver,\n          authHandler,\n          authorizationUrl,\n          tokenUrl,\n          scope,\n          includeBasicAuth,\n          resolverContext,\n          disableRefresh,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.oauth2.create` instead\n */\nexport const createOAuth2Provider = oauth2.create;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { AuthenticationError } from '@backstage/errors';\nimport { getBearerTokenFromAuthorizationHeader } from '@backstage/plugin-auth-node';\nimport {\n  AuthHandler,\n  SignInResolver,\n  AuthProviderRouteHandlers,\n  AuthResponse,\n  AuthResolverContext,\n  AuthHandlerResult,\n} from '../types';\nimport { decodeJwt } from 'jose';\nimport { prepareBackstageIdentityResponse } from '../prepareBackstageIdentityResponse';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport { IncomingHttpHeaders } from 'http';\n\n// NOTE: This may come in handy if you're doing work on this provider:\n//\n//   plugins/auth-backend/examples/docker-compose.oauth2-proxy.yaml\n//\n\nexport const OAUTH2_PROXY_JWT_HEADER = 'X-OAUTH2-PROXY-ID-TOKEN';\n\n/**\n * JWT header extraction result, containing the raw value and the parsed JWT\n * payload.\n *\n * @public\n */\nexport type OAuth2ProxyResult<JWTPayload = {}> = {\n  /**\n   * The parsed payload of the `accessToken`. The token is only parsed, not verified.\n   *\n   * @deprecated Access through the `headers` instead. This will be removed in a future release.\n   */\n  fullProfile: JWTPayload;\n\n  /**\n   * The token received via the X-OAUTH2-PROXY-ID-TOKEN header. Will be an empty string\n   * if the header is not set. Note the this is typically an OpenID Connect token.\n   *\n   * @deprecated Access through the `headers` instead. This will be removed in a future release.\n   */\n  accessToken: string;\n\n  /**\n   * The headers of the incoming request from the OAuth2 proxy. This will include\n   * both the headers set by the client as well as the ones added by the OAuth2 proxy.\n   * You should only trust the headers that are injected by the OAuth2 proxy.\n   *\n   * Useful headers to use to complete the sign-in are for example `x-forwarded-user`\n   * and `x-forwarded-email`. See the OAuth2 proxy documentation for more information\n   * about the available headers and how to enable them. In particular it is possible\n   * to forward access and identity tokens, which can be user for additional verification\n   * and lookups.\n   */\n  headers: IncomingHttpHeaders;\n\n  /**\n   * Provides convenient access to the request headers.\n   *\n   * This call is simply forwarded to `req.get(name)`.\n   */\n  getHeader(name: string): string | undefined;\n};\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type Oauth2ProxyProviderOptions<JWTPayload> = {\n  /**\n   * Configure an auth handler to generate a profile for the user.\n   */\n  authHandler: AuthHandler<OAuth2ProxyResult<JWTPayload>>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuth2ProxyResult<JWTPayload>>;\n  };\n};\n\ninterface Options<JWTPayload> {\n  resolverContext: AuthResolverContext;\n  signInResolver: SignInResolver<OAuth2ProxyResult<JWTPayload>>;\n  authHandler: AuthHandler<OAuth2ProxyResult<JWTPayload>>;\n}\n\nexport class Oauth2ProxyAuthProvider<JWTPayload>\n  implements AuthProviderRouteHandlers\n{\n  private readonly resolverContext: AuthResolverContext;\n  private readonly signInResolver: SignInResolver<\n    OAuth2ProxyResult<JWTPayload>\n  >;\n  private readonly authHandler: AuthHandler<OAuth2ProxyResult<JWTPayload>>;\n\n  constructor(options: Options<JWTPayload>) {\n    this.resolverContext = options.resolverContext;\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n  }\n\n  frameHandler(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    try {\n      // TODO(Rugvip): This parsing was deprecated in 1.2 and should be removed in a future release.\n      const authHeader = req.header(OAUTH2_PROXY_JWT_HEADER);\n      const jwt = getBearerTokenFromAuthorizationHeader(authHeader);\n      const decodedJWT = jwt && (decodeJwt(jwt) as unknown as JWTPayload);\n\n      const result = {\n        fullProfile: decodedJWT || ({} as JWTPayload),\n        accessToken: jwt || '',\n        headers: req.headers,\n        getHeader(name: string) {\n          if (name.toLocaleLowerCase('en-US') === 'set-cookie') {\n            throw new Error('Access Set-Cookie via the headers object instead');\n          }\n          return req.get(name);\n        },\n      };\n\n      const response = await this.handleResult(result);\n      res.json(response);\n    } catch (e) {\n      throw new AuthenticationError('Refresh failed', e);\n    }\n  }\n\n  start(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n\n  private async handleResult(\n    result: OAuth2ProxyResult<JWTPayload>,\n  ): Promise<AuthResponse<{ accessToken: string }>> {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const backstageSignInResult = await this.signInResolver(\n      {\n        result,\n        profile,\n      },\n      this.resolverContext,\n    );\n\n    return {\n      providerInfo: {\n        accessToken: result.accessToken,\n      },\n      backstageIdentity: prepareBackstageIdentityResponse(\n        backstageSignInResult,\n      ),\n      profile,\n    };\n  }\n}\n\nasync function defaultAuthHandler(\n  result: OAuth2ProxyResult<unknown>,\n): Promise<AuthHandlerResult> {\n  return {\n    profile: {\n      email: result.getHeader('x-forwarded-email'),\n      displayName:\n        result.getHeader('x-forwarded-preferred-username') ||\n        result.getHeader('x-forwarded-user'),\n    },\n  };\n}\n\n/**\n * Auth provider integration for oauth2-proxy auth\n *\n * @public\n */\nexport const oauth2Proxy = createAuthProviderIntegration({\n  create<JWTPayload>(options: {\n    /**\n     * Configure an auth handler to generate a profile for the user.\n     *\n     * The default implementation uses the value of the `X-Forwarded-Preferred-Username`\n     * header as the display name, falling back to `X-Forwarded-User`, and the value of\n     * the `X-Forwarded-Email` header as the email address.\n     */\n    authHandler?: AuthHandler<OAuth2ProxyResult<JWTPayload>>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuth2ProxyResult<JWTPayload>>;\n    };\n  }) {\n    return ({ resolverContext }) => {\n      const signInResolver = options.signIn.resolver;\n      const authHandler = options.authHandler;\n      return new Oauth2ProxyAuthProvider<JWTPayload>({\n        resolverContext,\n        signInResolver,\n        authHandler: authHandler ?? defaultAuthHandler,\n      });\n    };\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.oauth2Proxy.create` instead\n */\nexport const createOauth2ProxyProvider = oauth2Proxy.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport {\n  Client,\n  Issuer,\n  Strategy as OidcStrategy,\n  TokenSet,\n  UserinfoResponse,\n} from 'openid-client';\nimport {\n  encodeState,\n  OAuthAdapter,\n  OAuthEnvironmentHandler,\n  OAuthHandlers,\n  OAuthProviderOptions,\n  OAuthRefreshRequest,\n  OAuthResponse,\n  OAuthStartRequest,\n} from '../../lib/oauth';\nimport {\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  AuthResolverContext,\n  RedirectInfo,\n  SignInResolver,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\ntype PrivateInfo = {\n  refreshToken?: string;\n};\n\ntype OidcImpl = {\n  strategy: OidcStrategy<UserinfoResponse, Client>;\n  client: Client;\n};\n\n/**\n * authentication result for the OIDC which includes the token set and user information (a profile response sent by OIDC server)\n * @public\n */\nexport type OidcAuthResult = {\n  tokenset: TokenSet;\n  userinfo: UserinfoResponse;\n};\n\nexport type Options = OAuthProviderOptions & {\n  metadataUrl: string;\n  scope?: string;\n  prompt?: string;\n  tokenSignedResponseAlg?: string;\n  signInResolver?: SignInResolver<OidcAuthResult>;\n  authHandler: AuthHandler<OidcAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport class OidcAuthProvider implements OAuthHandlers {\n  private readonly implementation: Promise<OidcImpl>;\n  private readonly scope?: string;\n  private readonly prompt?: string;\n\n  private readonly signInResolver?: SignInResolver<OidcAuthResult>;\n  private readonly authHandler: AuthHandler<OidcAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Options) {\n    this.implementation = this.setupStrategy(options);\n    this.scope = options.scope;\n    this.prompt = options.prompt;\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    const { strategy } = await this.implementation;\n    const options: Record<string, string> = {\n      scope: req.scope || this.scope || 'openid profile email',\n      state: encodeState(req.state),\n    };\n    const prompt = this.prompt || 'none';\n    if (prompt !== 'auto') {\n      options.prompt = prompt;\n    }\n    return await executeRedirectStrategy(req, strategy, options);\n  }\n\n  async handler(req: express.Request) {\n    const { strategy } = await this.implementation;\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OidcAuthResult,\n      PrivateInfo\n    >(req, strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { client } = await this.implementation;\n    const tokenset = await client.refresh(req.refreshToken);\n    if (!tokenset.access_token) {\n      throw new Error('Refresh failed');\n    }\n    const userinfo = await client.userinfo(tokenset.access_token);\n\n    return {\n      response: await this.handleResult({ tokenset, userinfo }),\n      refreshToken: tokenset.refresh_token,\n    };\n  }\n\n  private async setupStrategy(options: Options): Promise<OidcImpl> {\n    const issuer = await Issuer.discover(options.metadataUrl);\n    const client = new issuer.Client({\n      access_type: 'offline', // this option must be passed to provider to receive a refresh token\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      redirect_uris: [options.callbackUrl],\n      response_types: ['code'],\n      id_token_signed_response_alg: options.tokenSignedResponseAlg || 'RS256',\n      scope: options.scope || '',\n    });\n\n    const strategy = new OidcStrategy(\n      {\n        client,\n        passReqToCallback: false,\n      },\n      (\n        tokenset: TokenSet,\n        userinfo: UserinfoResponse,\n        done: PassportDoneCallback<OidcAuthResult, PrivateInfo>,\n      ) => {\n        if (typeof done !== 'function') {\n          throw new Error(\n            'OIDC IdP must provide a userinfo_endpoint in the metadata response',\n          );\n        }\n        done(\n          undefined,\n          { tokenset, userinfo },\n          {\n            refreshToken: tokenset.refresh_token,\n          },\n        );\n      },\n    );\n    strategy.error = console.error;\n    return { strategy, client };\n  }\n\n  // Use this function to grab the user profile info from the token\n  // Then populate the profile with it\n  private async handleResult(result: OidcAuthResult): Promise<OAuthResponse> {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.tokenset.id_token,\n        accessToken: result.tokenset.access_token!,\n        scope: result.tokenset.scope!,\n        expiresInSeconds: result.tokenset.expires_in,\n      },\n      profile,\n    };\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type OidcProviderOptions = {\n  authHandler?: AuthHandler<OidcAuthResult>;\n\n  signIn?: {\n    resolver: SignInResolver<OidcAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for generic OpenID Connect auth\n *\n * @public\n */\nexport const oidc = createAuthProviderIntegration({\n  create(options?: {\n    authHandler?: AuthHandler<OidcAuthResult>;\n\n    signIn?: {\n      resolver: SignInResolver<OidcAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n        const metadataUrl = envConfig.getString('metadataUrl');\n        const tokenSignedResponseAlg = envConfig.getOptionalString(\n          'tokenSignedResponseAlg',\n        );\n        const scope = envConfig.getOptionalString('scope');\n        const prompt = envConfig.getOptionalString('prompt');\n\n        const authHandler: AuthHandler<OidcAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ userinfo }) => ({\n              profile: {\n                displayName: userinfo.name,\n                email: userinfo.email,\n                picture: userinfo.picture,\n              },\n            });\n\n        const provider = new OidcAuthProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          tokenSignedResponseAlg,\n          metadataUrl,\n          scope,\n          prompt,\n          signInResolver: options?.signIn?.resolver,\n          authHandler,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.oidc.create` instead\n */\nexport const createOidcProvider = oidc.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport {\n  OAuthAdapter,\n  OAuthProviderOptions,\n  OAuthHandlers,\n  OAuthResponse,\n  OAuthEnvironmentHandler,\n  OAuthStartRequest,\n  encodeState,\n  OAuthRefreshRequest,\n  OAuthResult,\n} from '../../lib/oauth';\nimport { Strategy as OktaStrategy } from 'passport-okta-oauth';\nimport passport from 'passport';\nimport {\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  executeFetchUserProfileStrategy,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthHandler,\n  RedirectInfo,\n  SignInResolver,\n  AuthResolverContext,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport {\n  commonByEmailLocalPartResolver,\n  commonByEmailResolver,\n} from '../resolvers';\nimport { StateStore } from 'passport-oauth2';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\nexport type OktaAuthProviderOptions = OAuthProviderOptions & {\n  audience: string;\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport class OktaAuthProvider implements OAuthHandlers {\n  private readonly strategy: any;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  /**\n   * Due to passport-okta-oauth forcing options.state = true,\n   * passport-oauth2 requires express-session to be installed\n   * so that the 'state' parameter of the oauth2 flow can be stored.\n   * This implementation of StateStore matches the NullStore found within\n   * passport-oauth2, which is the StateStore implementation used when options.state = false,\n   * allowing us to avoid using express-session in order to integrate with Okta.\n   */\n  private store: StateStore = {\n    store(_req: express.Request, cb: any) {\n      cb(null, null);\n    },\n    verify(_req: express.Request, _state: string, cb: any) {\n      cb(null, true);\n    },\n  };\n\n  constructor(options: OktaAuthProviderOptions) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n\n    this.strategy = new OktaStrategy(\n      {\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        audience: options.audience,\n        passReqToCallback: false,\n        store: this.store,\n        response_type: 'code',\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            accessToken,\n            refreshToken,\n            params,\n            fullProfile,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this.strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: req.scope,\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this.strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this.strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this.strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type OktaProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for Okta auth\n *\n * @public\n */\nexport const okta = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const audience = envConfig.getString('audience');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        // This is a safe assumption as `passport-okta-oauth` uses the audience\n        // as the base for building the authorization, token, and user info URLs.\n        // https://github.com/fischerdan/passport-okta-oauth/blob/ea9ac42d/lib/passport-okta-oauth/oauth2.js#L12-L14\n        if (!audience.startsWith('https://')) {\n          throw new Error(\"URL for 'audience' must start with 'https://'.\");\n        }\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const provider = new OktaAuthProvider({\n          audience,\n          clientId,\n          clientSecret,\n          callbackUrl,\n          authHandler,\n          signInResolver: options?.signIn?.resolver,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their email local part to the entity name.\n     */\n    emailLocalPartMatchingUserEntityName: () => commonByEmailLocalPartResolver,\n    /**\n     * Looks up the user by matching their email to the entity email.\n     */\n    emailMatchingUserEntityProfileEmail: () => commonByEmailResolver,\n    /**\n     * Looks up the user by matching their email to the `okta.com/email` annotation.\n     */\n    emailMatchingUserEntityAnnotation(): SignInResolver<OAuthResult> {\n      return async (info, ctx) => {\n        const { profile } = info;\n\n        if (!profile.email) {\n          throw new Error('Okta profile contained no email');\n        }\n\n        return ctx.signInWithCatalogUser({\n          annotations: {\n            'okta.com/email': profile.email,\n          },\n        });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.okta.create` instead\n */\nexport const createOktaProvider = okta.create;\n\n/**\n * @public\n * @deprecated Use `providers.okta.resolvers.emailMatchingUserEntityAnnotation()` instead.\n */\nexport const oktaEmailSignInResolver =\n  okta.resolvers.emailMatchingUserEntityAnnotation();\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Strategy as OneLoginStrategy } from 'passport-onelogin-oauth';\nimport express from 'express';\nimport {\n  OAuthAdapter,\n  OAuthProviderOptions,\n  OAuthHandlers,\n  OAuthResponse,\n  OAuthEnvironmentHandler,\n  OAuthStartRequest,\n  encodeState,\n  OAuthRefreshRequest,\n  OAuthResult,\n} from '../../lib/oauth';\nimport passport from 'passport';\nimport {\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  executeRefreshTokenStrategy,\n  makeProfileInfo,\n  executeFetchUserProfileStrategy,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  RedirectInfo,\n  AuthHandler,\n  SignInResolver,\n  AuthResolverContext,\n} from '../types';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\n\ntype PrivateInfo = {\n  refreshToken: string;\n};\n\nexport type Options = OAuthProviderOptions & {\n  issuer: string;\n  signInResolver?: SignInResolver<OAuthResult>;\n  authHandler: AuthHandler<OAuthResult>;\n  resolverContext: AuthResolverContext;\n};\n\nexport class OneLoginProvider implements OAuthHandlers {\n  private readonly _strategy: any;\n  private readonly signInResolver?: SignInResolver<OAuthResult>;\n  private readonly authHandler: AuthHandler<OAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: Options) {\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n    this._strategy = new OneLoginStrategy(\n      {\n        issuer: options.issuer,\n        clientID: options.clientId,\n        clientSecret: options.clientSecret,\n        callbackURL: options.callbackUrl,\n        passReqToCallback: false,\n      },\n      (\n        accessToken: any,\n        refreshToken: any,\n        params: any,\n        fullProfile: passport.Profile,\n        done: PassportDoneCallback<OAuthResult, PrivateInfo>,\n      ) => {\n        done(\n          undefined,\n          {\n            accessToken,\n            refreshToken,\n            params,\n            fullProfile,\n          },\n          {\n            refreshToken,\n          },\n        );\n      },\n    );\n  }\n  async start(req: OAuthStartRequest): Promise<RedirectInfo> {\n    return await executeRedirectStrategy(req, this._strategy, {\n      accessType: 'offline',\n      prompt: 'consent',\n      scope: 'openid',\n      state: encodeState(req.state),\n    });\n  }\n\n  async handler(req: express.Request) {\n    const { result, privateInfo } = await executeFrameHandlerStrategy<\n      OAuthResult,\n      PrivateInfo\n    >(req, this._strategy);\n\n    return {\n      response: await this.handleResult(result),\n      refreshToken: privateInfo.refreshToken,\n    };\n  }\n\n  async refresh(req: OAuthRefreshRequest) {\n    const { accessToken, refreshToken, params } =\n      await executeRefreshTokenStrategy(\n        this._strategy,\n        req.refreshToken,\n        req.scope,\n      );\n\n    const fullProfile = await executeFetchUserProfileStrategy(\n      this._strategy,\n      accessToken,\n    );\n\n    return {\n      response: await this.handleResult({\n        fullProfile,\n        params,\n        accessToken,\n      }),\n      refreshToken,\n    };\n  }\n\n  private async handleResult(result: OAuthResult) {\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const response: OAuthResponse = {\n      providerInfo: {\n        idToken: result.params.id_token,\n        accessToken: result.accessToken,\n        scope: result.params.scope,\n        expiresInSeconds: result.params.expires_in,\n      },\n      profile,\n    };\n\n    if (this.signInResolver) {\n      response.backstageIdentity = await this.signInResolver(\n        {\n          result,\n          profile,\n        },\n        this.resolverContext,\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type OneLoginProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<OAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<OAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for OneLogin auth\n *\n * @public\n */\nexport const onelogin = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<OAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<OAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) =>\n      OAuthEnvironmentHandler.mapConfig(config, envConfig => {\n        const clientId = envConfig.getString('clientId');\n        const clientSecret = envConfig.getString('clientSecret');\n        const issuer = envConfig.getString('issuer');\n        const customCallbackUrl = envConfig.getOptionalString('callbackUrl');\n        const callbackUrl =\n          customCallbackUrl ||\n          `${globalConfig.baseUrl}/${providerId}/handler/frame`;\n\n        const authHandler: AuthHandler<OAuthResult> = options?.authHandler\n          ? options.authHandler\n          : async ({ fullProfile, params }) => ({\n              profile: makeProfileInfo(fullProfile, params.id_token),\n            });\n\n        const provider = new OneLoginProvider({\n          clientId,\n          clientSecret,\n          callbackUrl,\n          issuer,\n          authHandler,\n          signInResolver: options?.signIn?.resolver,\n          resolverContext,\n        });\n\n        return OAuthAdapter.fromConfig(globalConfig, provider, {\n          providerId,\n          callbackUrl,\n        });\n      });\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.onelogin.create` instead\n */\nexport const createOneLoginProvider = onelogin.create;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { SamlConfig } from 'passport-saml/lib/passport-saml/types';\nimport {\n  Strategy as SamlStrategy,\n  Profile as SamlProfile,\n  VerifyWithoutRequest,\n} from 'passport-saml';\nimport {\n  executeFrameHandlerStrategy,\n  executeRedirectStrategy,\n  PassportDoneCallback,\n} from '../../lib/passport';\nimport {\n  AuthProviderRouteHandlers,\n  AuthHandler,\n  SignInResolver,\n  AuthResponse,\n  AuthResolverContext,\n} from '../types';\nimport { postMessageResponse } from '../../lib/flow';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport { AuthenticationError, isError } from '@backstage/errors';\nimport { prepareBackstageIdentityResponse } from '../prepareBackstageIdentityResponse';\n\n/** @public */\nexport type SamlAuthResult = {\n  fullProfile: any;\n};\n\ntype Options = SamlConfig & {\n  signInResolver?: SignInResolver<SamlAuthResult>;\n  authHandler: AuthHandler<SamlAuthResult>;\n  resolverContext: AuthResolverContext;\n  appUrl: string;\n};\n\nexport class SamlAuthProvider implements AuthProviderRouteHandlers {\n  private readonly strategy: SamlStrategy;\n  private readonly signInResolver?: SignInResolver<SamlAuthResult>;\n  private readonly authHandler: AuthHandler<SamlAuthResult>;\n  private readonly resolverContext: AuthResolverContext;\n  private readonly appUrl: string;\n\n  constructor(options: Options) {\n    this.appUrl = options.appUrl;\n    this.signInResolver = options.signInResolver;\n    this.authHandler = options.authHandler;\n    this.resolverContext = options.resolverContext;\n    this.strategy = new SamlStrategy({ ...options }, ((\n      fullProfile: SamlProfile,\n      done: PassportDoneCallback<SamlAuthResult>,\n    ) => {\n      // TODO: There's plenty more validation and profile handling to do here,\n      //       this provider is currently only intended to validate the provider pattern\n      //       for non-oauth auth flows.\n      // TODO: This flow doesn't issue an identity token that can be used to validate\n      //       the identity of the user in other backends, which we need in some form.\n      done(undefined, { fullProfile });\n    }) as VerifyWithoutRequest);\n  }\n\n  async start(req: express.Request, res: express.Response): Promise<void> {\n    const { url } = await executeRedirectStrategy(req, this.strategy, {});\n    res.redirect(url);\n  }\n\n  async frameHandler(\n    req: express.Request,\n    res: express.Response,\n  ): Promise<void> {\n    try {\n      const { result } = await executeFrameHandlerStrategy<SamlAuthResult>(\n        req,\n        this.strategy,\n      );\n\n      const { profile } = await this.authHandler(result, this.resolverContext);\n\n      const response: AuthResponse<{}> = {\n        profile,\n        providerInfo: {},\n      };\n\n      if (this.signInResolver) {\n        const signInResponse = await this.signInResolver(\n          {\n            result,\n            profile,\n          },\n          this.resolverContext,\n        );\n\n        response.backstageIdentity =\n          prepareBackstageIdentityResponse(signInResponse);\n      }\n\n      return postMessageResponse(res, this.appUrl, {\n        type: 'authorization_response',\n        response,\n      });\n    } catch (error) {\n      const { name, message } = isError(error)\n        ? error\n        : new Error('Encountered invalid error'); // Being a bit safe and not forwarding the bad value\n      return postMessageResponse(res, this.appUrl, {\n        type: 'authorization_response',\n        error: { name, message },\n      });\n    }\n  }\n\n  async logout(_req: express.Request, res: express.Response): Promise<void> {\n    res.end();\n  }\n}\n\ntype SignatureAlgorithm = 'sha1' | 'sha256' | 'sha512';\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type SamlProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth response\n   * into the profile that will be presented to the user.\n   */\n  authHandler?: AuthHandler<SamlAuthResult>;\n\n  /**\n   * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n   */\n  signIn?: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<SamlAuthResult>;\n  };\n};\n\n/**\n * Auth provider integration for SAML auth\n *\n * @public\n */\nexport const saml = createAuthProviderIntegration({\n  create(options?: {\n    /**\n     * The profile transformation function used to verify and convert the auth response\n     * into the profile that will be presented to the user.\n     */\n    authHandler?: AuthHandler<SamlAuthResult>;\n\n    /**\n     * Configure sign-in for this provider, without it the provider can not be used to sign users in.\n     */\n    signIn?: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<SamlAuthResult>;\n    };\n  }) {\n    return ({ providerId, globalConfig, config, resolverContext }) => {\n      const authHandler: AuthHandler<SamlAuthResult> = options?.authHandler\n        ? options.authHandler\n        : async ({ fullProfile }) => ({\n            profile: {\n              email: fullProfile.email,\n              displayName: fullProfile.displayName,\n            },\n          });\n\n      return new SamlAuthProvider({\n        callbackUrl: `${globalConfig.baseUrl}/${providerId}/handler/frame`,\n        entryPoint: config.getString('entryPoint'),\n        logoutUrl: config.getOptionalString('logoutUrl'),\n        audience: config.getOptionalString('audience'),\n        issuer: config.getString('issuer'),\n        cert: config.getString('cert'),\n        privateKey: config.getOptionalString('privateKey'),\n        authnContext: config.getOptionalStringArray('authnContext'),\n        identifierFormat: config.getOptionalString('identifierFormat'),\n        decryptionPvk: config.getOptionalString('decryptionPvk'),\n        signatureAlgorithm: config.getOptionalString('signatureAlgorithm') as\n          | SignatureAlgorithm\n          | undefined,\n        digestAlgorithm: config.getOptionalString('digestAlgorithm'),\n        acceptedClockSkewMs: config.getOptionalNumber('acceptedClockSkewMs'),\n\n        appUrl: globalConfig.appUrl,\n        authHandler,\n        signInResolver: options?.signIn?.resolver,\n        resolverContext,\n      });\n    };\n  },\n  resolvers: {\n    /**\n     * Looks up the user by matching their nameID to the entity name.\n     */\n    nameIdMatchingUserEntityName(): SignInResolver<SamlAuthResult> {\n      return async (info, ctx) => {\n        const id = info.result.fullProfile.nameID;\n\n        if (!id) {\n          throw new AuthenticationError('No nameID found in SAML response');\n        }\n\n        return ctx.signInWithCatalogUser({\n          entityRef: { name: id },\n        });\n      };\n    },\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.saml.create` instead\n */\nexport const createSamlProvider = saml.create;\n\n/**\n * @public\n * @deprecated Use `providers.saml.resolvers.nameIdMatchingUserEntityName()` instead.\n */\nexport const samlNameIdEntityNameSignInResolver =\n  saml.resolvers.nameIdMatchingUserEntityName();\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue } from '@backstage/types';\nimport { AuthHandler, AuthResponse, SignInResolver } from '../types';\n\n/**\n * The header name used by the IAP.\n */\nexport const IAP_JWT_HEADER = 'x-goog-iap-jwt-assertion';\n\n/**\n * The data extracted from an IAP token.\n *\n * @public\n */\nexport type GcpIapTokenInfo = {\n  /**\n   * The unique, stable identifier for the user.\n   */\n  sub: string;\n  /**\n   * User email address.\n   */\n  email: string;\n  /**\n   * Other fields.\n   */\n  [key: string]: JsonValue;\n};\n\n/**\n * The result of the initial auth challenge. This is the input to the auth\n * callbacks.\n *\n * @public\n */\nexport type GcpIapResult = {\n  /**\n   * The data extracted from the IAP token header.\n   */\n  iapToken: GcpIapTokenInfo;\n};\n\n/**\n * The provider info to return to the frontend.\n */\nexport type GcpIapProviderInfo = {\n  /**\n   * The data extracted from the IAP token header.\n   */\n  iapToken: GcpIapTokenInfo;\n};\n\n/**\n * The shape of the response to return to callers.\n */\nexport type GcpIapResponse = AuthResponse<GcpIapProviderInfo>;\n\n/**\n * @public\n * @deprecated This type has been inlined into the create method and will be removed.\n */\nexport type GcpIapProviderOptions = {\n  /**\n   * The profile transformation function used to verify and convert the auth\n   * response into the profile that will be presented to the user. The default\n   * implementation just provides the authenticated email that the IAP\n   * presented.\n   */\n  authHandler?: AuthHandler<GcpIapResult>;\n\n  /**\n   * Configures sign-in for this provider.\n   */\n  signIn: {\n    /**\n     * Maps an auth result to a Backstage identity for the user.\n     */\n    resolver: SignInResolver<GcpIapResult>;\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationError } from '@backstage/errors';\nimport { OAuth2Client, TokenPayload } from 'google-auth-library';\nimport { AuthHandler } from '../types';\nimport { GcpIapResult, IAP_JWT_HEADER } from './types';\n\nexport function createTokenValidator(\n  audience: string,\n  mockClient?: OAuth2Client,\n): (token: string) => Promise<TokenPayload> {\n  const client = mockClient ?? new OAuth2Client();\n\n  return async function tokenValidator(token) {\n    // TODO(freben): Rate limit the public key reads. It may be sensible to\n    // cache these for some reasonable time rather than asking for the public\n    // keys on every single sign-in. But since the rate of events here is so\n    // slow, I decided to keep it simple for now.\n    const response = await client.getIapPublicKeys();\n    const ticket = await client.verifySignedJwtWithCertsAsync(\n      token,\n      response.pubkeys,\n      audience,\n      ['https://cloud.google.com/iap'],\n    );\n\n    const payload = ticket.getPayload();\n    if (!payload) {\n      throw new TypeError('Token had no payload');\n    }\n\n    return payload;\n  };\n}\n\nexport async function parseRequestToken(\n  jwtToken: unknown,\n  tokenValidator: (token: string) => Promise<TokenPayload>,\n): Promise<GcpIapResult> {\n  if (typeof jwtToken !== 'string' || !jwtToken) {\n    throw new AuthenticationError(\n      `Missing Google IAP header: ${IAP_JWT_HEADER}`,\n    );\n  }\n\n  let payload: TokenPayload;\n  try {\n    payload = await tokenValidator(jwtToken);\n  } catch (e) {\n    throw new AuthenticationError(`Google IAP token verification failed, ${e}`);\n  }\n\n  if (!payload.sub || !payload.email) {\n    throw new AuthenticationError(\n      'Google IAP token payload is missing sub and/or email claim',\n    );\n  }\n\n  return {\n    iapToken: {\n      ...payload,\n      sub: payload.sub,\n      email: payload.email,\n    },\n  };\n}\n\nexport const defaultAuthHandler: AuthHandler<GcpIapResult> = async ({\n  iapToken,\n}) => ({ profile: { email: iapToken.email } });\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport { TokenPayload } from 'google-auth-library';\nimport { createAuthProviderIntegration } from '../createAuthProviderIntegration';\nimport { prepareBackstageIdentityResponse } from '../prepareBackstageIdentityResponse';\nimport {\n  AuthHandler,\n  AuthProviderRouteHandlers,\n  AuthResolverContext,\n  SignInResolver,\n} from '../types';\nimport {\n  createTokenValidator,\n  defaultAuthHandler,\n  parseRequestToken,\n} from './helpers';\nimport { GcpIapResponse, GcpIapResult, IAP_JWT_HEADER } from './types';\n\nexport class GcpIapProvider implements AuthProviderRouteHandlers {\n  private readonly authHandler: AuthHandler<GcpIapResult>;\n  private readonly signInResolver: SignInResolver<GcpIapResult>;\n  private readonly tokenValidator: (token: string) => Promise<TokenPayload>;\n  private readonly resolverContext: AuthResolverContext;\n\n  constructor(options: {\n    authHandler: AuthHandler<GcpIapResult>;\n    signInResolver: SignInResolver<GcpIapResult>;\n    tokenValidator: (token: string) => Promise<TokenPayload>;\n    resolverContext: AuthResolverContext;\n  }) {\n    this.authHandler = options.authHandler;\n    this.signInResolver = options.signInResolver;\n    this.tokenValidator = options.tokenValidator;\n    this.resolverContext = options.resolverContext;\n  }\n\n  async start() {}\n\n  async frameHandler() {}\n\n  async refresh(req: express.Request, res: express.Response): Promise<void> {\n    const result = await parseRequestToken(\n      req.header(IAP_JWT_HEADER),\n      this.tokenValidator,\n    );\n\n    const { profile } = await this.authHandler(result, this.resolverContext);\n\n    const backstageIdentity = await this.signInResolver(\n      { profile, result },\n      this.resolverContext,\n    );\n\n    const response: GcpIapResponse = {\n      providerInfo: { iapToken: result.iapToken },\n      profile,\n      backstageIdentity: prepareBackstageIdentityResponse(backstageIdentity),\n    };\n\n    res.json(response);\n  }\n}\n\n/**\n * Auth provider integration for Google Identity-Aware Proxy auth\n *\n * @public\n */\nexport const gcpIap = createAuthProviderIntegration({\n  create(options: {\n    /**\n     * The profile transformation function used to verify and convert the auth\n     * response into the profile that will be presented to the user. The default\n     * implementation just provides the authenticated email that the IAP\n     * presented.\n     */\n    authHandler?: AuthHandler<GcpIapResult>;\n\n    /**\n     * Configures sign-in for this provider.\n     */\n    signIn: {\n      /**\n       * Maps an auth result to a Backstage identity for the user.\n       */\n      resolver: SignInResolver<GcpIapResult>;\n    };\n  }) {\n    return ({ config, resolverContext }) => {\n      const audience = config.getString('audience');\n\n      const authHandler = options.authHandler ?? defaultAuthHandler;\n      const signInResolver = options.signIn.resolver;\n      const tokenValidator = createTokenValidator(audience);\n\n      return new GcpIapProvider({\n        authHandler,\n        signInResolver,\n        tokenValidator,\n        resolverContext,\n      });\n    };\n  },\n});\n\n/**\n * @public\n * @deprecated Use `providers.gcpIap.create` instead\n */\nexport const createGcpIapProvider = gcpIap.create;\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { atlassian } from './atlassian/provider';\nimport { auth0 } from './auth0/provider';\nimport { awsAlb } from './aws-alb/provider';\nimport { bitbucket } from './bitbucket/provider';\nimport { gcpIap } from './gcp-iap/provider';\nimport { github } from './github/provider';\nimport { gitlab } from './gitlab/provider';\nimport { google } from './google/provider';\nimport { microsoft } from './microsoft/provider';\nimport { oauth2 } from './oauth2/provider';\nimport { oauth2Proxy } from './oauth2-proxy/provider';\nimport { oidc } from './oidc/provider';\nimport { okta } from './okta/provider';\nimport { onelogin } from './onelogin/provider';\nimport { saml } from './saml/provider';\n\n/**\n * All built-in auth provider integrations.\n *\n * @public\n */\nexport const providers = Object.freeze({\n  atlassian,\n  auth0,\n  awsAlb,\n  bitbucket,\n  gcpIap,\n  github,\n  gitlab,\n  google,\n  microsoft,\n  oauth2,\n  oauth2Proxy,\n  oidc,\n  okta,\n  onelogin,\n  saml,\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createGithubProvider } from './github';\nimport { createGitlabProvider } from './gitlab';\nimport { createGoogleProvider } from './google';\nimport { createOAuth2Provider } from './oauth2';\nimport { createOidcProvider } from './oidc';\nimport { createOktaProvider } from './okta';\nimport { createSamlProvider } from './saml';\nimport { createAuth0Provider } from './auth0';\nimport { createMicrosoftProvider } from './microsoft';\nimport { createOneLoginProvider } from './onelogin';\nimport { AuthProviderFactory } from './types';\nimport { createAwsAlbProvider } from './aws-alb';\nimport { createBitbucketProvider } from './bitbucket';\nimport { createAtlassianProvider } from './atlassian';\n\nexport const factories: { [providerId: string]: AuthProviderFactory } = {\n  google: createGoogleProvider(),\n  github: createGithubProvider(),\n  gitlab: createGitlabProvider(),\n  saml: createSamlProvider(),\n  okta: createOktaProvider(),\n  auth0: createAuth0Provider(),\n  microsoft: createMicrosoftProvider(),\n  oauth2: createOAuth2Provider(),\n  oidc: createOidcProvider(),\n  onelogin: createOneLoginProvider(),\n  awsalb: createAwsAlbProvider(),\n  bitbucket: createBitbucketProvider(),\n  atlassian: createAtlassianProvider(),\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Router from 'express-promise-router';\nimport { TokenIssuer } from './types';\n\nexport type Options = {\n  baseUrl: string;\n  tokenIssuer: TokenIssuer;\n};\n\nexport function createOidcRouter(options: Options) {\n  const { baseUrl, tokenIssuer } = options;\n\n  const router = Router();\n\n  const config = {\n    issuer: baseUrl,\n    token_endpoint: `${baseUrl}/v1/token`,\n    userinfo_endpoint: `${baseUrl}/v1/userinfo`,\n    jwks_uri: `${baseUrl}/.well-known/jwks.json`,\n    response_types_supported: ['id_token'],\n    subject_types_supported: ['public'],\n    id_token_signing_alg_values_supported: ['RS256'],\n    scopes_supported: ['openid'],\n    token_endpoint_auth_methods_supported: [],\n    claims_supported: ['sub'],\n    grant_types_supported: [],\n  };\n\n  router.get('/.well-known/openid-configuration', (_req, res) => {\n    res.json(config);\n  });\n\n  router.get('/.well-known/jwks.json', async (_req, res) => {\n    const { keys } = await tokenIssuer.listPublicKeys();\n    res.json({ keys });\n  });\n\n  router.get('/v1/token', (_req, res) => {\n    res.status(501).send('Not Implemented');\n  });\n\n  router.get('/v1/userinfo', (_req, res) => {\n    res.status(501).send('Not Implemented');\n  });\n\n  return router;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { AuthenticationError } from '@backstage/errors';\nimport { exportJWK, generateKeyPair, importJWK, JWK, SignJWT } from 'jose';\nimport { DateTime } from 'luxon';\nimport { v4 as uuid } from 'uuid';\nimport { Logger } from 'winston';\n\nimport { AnyJWK, KeyStore, TokenIssuer, TokenParams } from './types';\n\nconst MS_IN_S = 1000;\n\ntype Options = {\n  logger: Logger;\n  /** Value of the issuer claim in issued tokens */\n  issuer: string;\n  /** Key store used for storing signing keys */\n  keyStore: KeyStore;\n  /** Expiration time of signing keys in seconds */\n  keyDurationSeconds: number;\n  /** JWS \"alg\" (Algorithm) Header Parameter value. Defaults to ES256.\n   * Must match one of the algorithms defined for IdentityClient.\n   * When setting a different algorithm, check if the `key` field\n   * of the `signing_keys` table can fit the length of the generated keys.\n   * If not, add a knex migration file in the migrations folder.\n   * More info on supported algorithms: https://github.com/panva/jose */\n  algorithm?: string;\n};\n\n/**\n * A token issuer that is able to issue tokens in a distributed system\n * backed by a single database. Tokens are issued using lazily generated\n * signing keys, where each running instance of the auth service uses its own\n * signing key.\n *\n * The public parts of the keys are all stored in the shared key storage,\n * and any of the instances of the auth service will return the full list\n * of public keys that are currently in storage.\n *\n * Signing keys are automatically rotated at the same interval as the token\n * duration. Expired keys are kept in storage until there are no valid tokens\n * in circulation that could have been signed by that key.\n */\nexport class TokenFactory implements TokenIssuer {\n  private readonly issuer: string;\n  private readonly logger: Logger;\n  private readonly keyStore: KeyStore;\n  private readonly keyDurationSeconds: number;\n  private readonly algorithm: string;\n\n  private keyExpiry?: Date;\n  private privateKeyPromise?: Promise<JWK>;\n\n  constructor(options: Options) {\n    this.issuer = options.issuer;\n    this.logger = options.logger;\n    this.keyStore = options.keyStore;\n    this.keyDurationSeconds = options.keyDurationSeconds;\n    this.algorithm = options.algorithm ?? 'ES256';\n  }\n\n  async issueToken(params: TokenParams): Promise<string> {\n    const key = await this.getKey();\n\n    const iss = this.issuer;\n    const sub = params.claims.sub;\n    const ent = params.claims.ent;\n    const aud = 'backstage';\n    const iat = Math.floor(Date.now() / MS_IN_S);\n    const exp = iat + this.keyDurationSeconds;\n\n    // Validate that the subject claim is a valid EntityRef\n    try {\n      parseEntityRef(sub);\n    } catch (error) {\n      throw new Error(\n        '\"sub\" claim provided by the auth resolver is not a valid EntityRef.',\n      );\n    }\n\n    this.logger.info(`Issuing token for ${sub}, with entities ${ent ?? []}`);\n\n    if (!key.alg) {\n      throw new AuthenticationError('No algorithm was provided in the key');\n    }\n\n    return new SignJWT({ iss, sub, ent, aud, iat, exp })\n      .setProtectedHeader({ alg: key.alg, kid: key.kid })\n      .setIssuer(iss)\n      .setAudience(aud)\n      .setSubject(sub)\n      .setIssuedAt(iat)\n      .setExpirationTime(exp)\n      .sign(await importJWK(key));\n  }\n\n  // This will be called by other services that want to verify ID tokens.\n  // It is important that it returns a list of all public keys that could\n  // have been used to sign tokens that have not yet expired.\n  async listPublicKeys(): Promise<{ keys: AnyJWK[] }> {\n    const { items: keys } = await this.keyStore.listKeys();\n\n    const validKeys = [];\n    const expiredKeys = [];\n\n    for (const key of keys) {\n      // Allow for a grace period of another full key duration before we remove the keys from the database\n      const expireAt = DateTime.fromJSDate(key.createdAt).plus({\n        seconds: 3 * this.keyDurationSeconds,\n      });\n      if (expireAt < DateTime.local()) {\n        expiredKeys.push(key);\n      } else {\n        validKeys.push(key);\n      }\n    }\n\n    // Lazily prune expired keys. This may cause duplicate removals if we have concurrent callers, but w/e\n    if (expiredKeys.length > 0) {\n      const kids = expiredKeys.map(({ key }) => key.kid);\n\n      this.logger.info(`Removing expired signing keys, '${kids.join(\"', '\")}'`);\n\n      // We don't await this, just let it run in the background\n      this.keyStore.removeKeys(kids).catch(error => {\n        this.logger.error(`Failed to remove expired keys, ${error}`);\n      });\n    }\n\n    // NOTE: we're currently only storing public keys, but if we start storing private keys we'd have to convert here\n    return { keys: validKeys.map(({ key }) => key) };\n  }\n\n  private async getKey(): Promise<JWK> {\n    // Make sure that we only generate one key at a time\n    if (this.privateKeyPromise) {\n      if (\n        this.keyExpiry &&\n        DateTime.fromJSDate(this.keyExpiry) > DateTime.local()\n      ) {\n        return this.privateKeyPromise;\n      }\n      this.logger.info(`Signing key has expired, generating new key`);\n      delete this.privateKeyPromise;\n    }\n\n    this.keyExpiry = DateTime.utc()\n      .plus({\n        seconds: this.keyDurationSeconds,\n      })\n      .toJSDate();\n    const promise = (async () => {\n      // This generates a new signing key to be used to sign tokens until the next key rotation\n      const key = await generateKeyPair(this.algorithm);\n      const publicKey = await exportJWK(key.publicKey);\n      const privateKey = await exportJWK(key.privateKey);\n      publicKey.kid = privateKey.kid = uuid();\n      publicKey.alg = privateKey.alg = this.algorithm;\n\n      // We're not allowed to use the key until it has been successfully stored\n      // TODO: some token verification implementations aggressively cache the list of keys, and\n      //       don't attempt to fetch new ones even if they encounter an unknown kid. Therefore we\n      //       may want to keep using the existing key for some period of time until we switch to\n      //       the new one. This also needs to be implemented cross-service though, meaning new services\n      //       that boot up need to be able to grab an existing key to use for signing.\n      this.logger.info(`Created new signing key ${publicKey.kid}`);\n      await this.keyStore.addKey(publicKey as AnyJWK);\n\n      // At this point we are allowed to start using the new key\n      return privateKey;\n    })();\n\n    this.privateKeyPromise = promise;\n\n    try {\n      // If we fail to generate a new key, we need to clear the state so that\n      // the next caller will try to generate another key.\n      await promise;\n    } catch (error) {\n      this.logger.error(`Failed to generate new signing key, ${error}`);\n      delete this.keyExpiry;\n      delete this.privateKeyPromise;\n    }\n\n    return promise;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport { Knex } from 'knex';\nimport { DateTime } from 'luxon';\nimport { AnyJWK, KeyStore, StoredKey } from './types';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-auth-backend',\n  'migrations',\n);\n\nconst TABLE = 'signing_keys';\n\ntype Row = {\n  created_at: Date; // row.created_at is a string after being returned from the database\n  kid: string;\n  key: string;\n};\n\ntype Options = {\n  database: Knex;\n};\n\nconst parseDate = (date: string | Date) => {\n  const parsedDate =\n    typeof date === 'string'\n      ? DateTime.fromSQL(date, { zone: 'UTC' })\n      : DateTime.fromJSDate(date);\n\n  if (!parsedDate.isValid) {\n    throw new Error(\n      `Failed to parse date, reason: ${parsedDate.invalidReason}, explanation: ${parsedDate.invalidExplanation}`,\n    );\n  }\n\n  return parsedDate.toJSDate();\n};\n\nexport class DatabaseKeyStore implements KeyStore {\n  static async create(options: Options): Promise<DatabaseKeyStore> {\n    const { database } = options;\n\n    await database.migrate.latest({\n      directory: migrationsDir,\n    });\n\n    return new DatabaseKeyStore(options);\n  }\n\n  private readonly database: Knex;\n\n  private constructor(options: Options) {\n    this.database = options.database;\n  }\n\n  async addKey(key: AnyJWK): Promise<void> {\n    await this.database<Row>(TABLE).insert({\n      kid: key.kid,\n      key: JSON.stringify(key),\n    });\n  }\n\n  async listKeys(): Promise<{ items: StoredKey[] }> {\n    const rows = await this.database<Row>(TABLE).select();\n\n    return {\n      items: rows.map(row => ({\n        key: JSON.parse(row.key),\n        createdAt: parseDate(row.created_at),\n      })),\n    };\n  }\n\n  async removeKeys(kids: string[]): Promise<void> {\n    await this.database(TABLE).delete().whereIn('kid', kids);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { KeyStore, AnyJWK, StoredKey } from './types';\nimport { DateTime } from 'luxon';\n\nexport class MemoryKeyStore implements KeyStore {\n  private readonly keys = new Map<string, { createdAt: Date; key: string }>();\n\n  async addKey(key: AnyJWK): Promise<void> {\n    this.keys.set(key.kid, {\n      createdAt: DateTime.utc().toJSDate(),\n      key: JSON.stringify(key),\n    });\n  }\n\n  async removeKeys(kids: string[]): Promise<void> {\n    for (const kid of kids) {\n      this.keys.delete(kid);\n    }\n  }\n\n  async listKeys(): Promise<{ items: StoredKey[] }> {\n    return {\n      items: Array.from(this.keys).map(([, { createdAt, key: keyStr }]) => ({\n        createdAt,\n        key: JSON.parse(keyStr),\n      })),\n    };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport {\n  DocumentData,\n  Firestore,\n  QuerySnapshot,\n  Settings,\n  WriteResult,\n} from '@google-cloud/firestore';\n\nimport { AnyJWK, KeyStore, StoredKey } from './types';\n\nexport type FirestoreKeyStoreSettings = Settings & Options;\n\ntype Options = {\n  path?: string;\n  timeout?: number;\n};\n\nexport const DEFAULT_TIMEOUT_MS = 10000;\nexport const DEFAULT_DOCUMENT_PATH = 'sessions';\n\nexport class FirestoreKeyStore implements KeyStore {\n  static async create(\n    settings?: FirestoreKeyStoreSettings,\n  ): Promise<FirestoreKeyStore> {\n    const { path, timeout, ...firestoreSettings } = settings ?? {};\n    const database = new Firestore(firestoreSettings);\n\n    return new FirestoreKeyStore(\n      database,\n      path ?? DEFAULT_DOCUMENT_PATH,\n      timeout ?? DEFAULT_TIMEOUT_MS,\n    );\n  }\n\n  private constructor(\n    private readonly database: Firestore,\n    private readonly path: string,\n    private readonly timeout: number,\n  ) {}\n\n  static async verifyConnection(\n    keyStore: FirestoreKeyStore,\n    logger?: Logger,\n  ): Promise<void> {\n    try {\n      await keyStore.verify();\n    } catch (error) {\n      if (process.env.NODE_ENV !== 'development') {\n        throw new Error(\n          `Failed to connect to database: ${(error as Error).message}`,\n        );\n      }\n      logger?.warn(\n        `Failed to connect to database: ${(error as Error).message}`,\n      );\n    }\n  }\n\n  async addKey(key: AnyJWK): Promise<void> {\n    await this.withTimeout<WriteResult>(\n      this.database\n        .collection(this.path)\n        .doc(key.kid)\n        .set({\n          kid: key.kid,\n          key: JSON.stringify(key),\n        }),\n    );\n  }\n\n  async listKeys(): Promise<{ items: StoredKey[] }> {\n    const keys = await this.withTimeout<QuerySnapshot<DocumentData>>(\n      this.database.collection(this.path).get(),\n    );\n\n    return {\n      items: keys.docs.map(key => ({\n        key: key.data() as AnyJWK,\n        createdAt: key.createTime.toDate(),\n      })),\n    };\n  }\n\n  async removeKeys(kids: string[]): Promise<void> {\n    // This is probably really slow, but it's done async in the background\n    for (const kid of kids) {\n      await this.withTimeout<WriteResult>(\n        this.database.collection(this.path).doc(kid).delete(),\n      );\n    }\n\n    /**\n     * This could be achieved with batching but there's a couple of limitations with that:\n     *\n     * - A batched write can contain a maximum of 500 operations\n     *  https://firebase.google.com/docs/firestore/manage-data/transactions#batched-writes\n     *\n     * - The \"in\" operator can combine a maximum of 10 equality clauses\n     *  https://firebase.google.com/docs/firestore/query-data/queries#in_not-in_and_array-contains-any\n     *\n     * Example:\n     *\n     *  const batch = this.database.batch();\n     *  const docs = await this.database\n     *    .collection(this.path)\n     *    .where('kid', 'in', kids)\n     *    .get();\n     *  docs.forEach(doc => {\n     *    batch.delete(doc.ref);\n     *  });\n     *  await batch.commit();\n     *\n     */\n  }\n\n  /**\n   * Helper function to allow us to modify the timeout used when\n   * performing Firestore database operations.\n   *\n   * The reason for this is that it seems that there's no other\n   * practical solution to change the default timeout of 10mins\n   * that Firestore has.\n   *\n   */\n  private async withTimeout<T>(operation: Promise<T>): Promise<T> {\n    const timer = new Promise<never>((_, reject) =>\n      setTimeout(() => {\n        reject(new Error(`Operation timed out after ${this.timeout}ms`));\n      }, this.timeout),\n    );\n    return Promise.race<T>([operation, timer]);\n  }\n\n  /**\n   * Used to verify that the database is reachable.\n   */\n  private async verify(): Promise<void> {\n    await this.withTimeout(this.database.collection(this.path).limit(1).get());\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport { pickBy } from 'lodash';\n\nimport { PluginDatabaseManager } from '@backstage/backend-common';\nimport { Config } from '@backstage/config';\n\nimport { DatabaseKeyStore } from './DatabaseKeyStore';\nimport { MemoryKeyStore } from './MemoryKeyStore';\nimport { FirestoreKeyStore } from './FirestoreKeyStore';\nimport { KeyStore } from './types';\n\ntype Options = {\n  logger?: Logger;\n  database?: PluginDatabaseManager;\n};\n\nexport class KeyStores {\n  /**\n   * Looks at the `auth.keyStore` section in the application configuration\n   * and returns a KeyStore store. Defaults to `database`\n   *\n   * @returns a KeyStore store\n   */\n  static async fromConfig(\n    config: Config,\n    options?: Options,\n  ): Promise<KeyStore> {\n    const { logger, database } = options ?? {};\n\n    const ks = config.getOptionalConfig('auth.keyStore');\n    const provider = ks?.getOptionalString('provider') ?? 'database';\n\n    logger?.info(`Configuring \"${provider}\" as KeyStore provider`);\n\n    if (provider === 'database') {\n      if (!database) {\n        throw new Error('This KeyStore provider requires a database');\n      }\n\n      return await DatabaseKeyStore.create({\n        database: await database.getClient(),\n      });\n    }\n\n    if (provider === 'memory') {\n      return new MemoryKeyStore();\n    }\n\n    if (provider === 'firestore') {\n      const settings = ks?.getConfig(provider);\n\n      const keyStore = await FirestoreKeyStore.create(\n        pickBy(\n          {\n            projectId: settings?.getOptionalString('projectId'),\n            keyFilename: settings?.getOptionalString('keyFilename'),\n            host: settings?.getOptionalString('host'),\n            port: settings?.getOptionalNumber('port'),\n            ssl: settings?.getOptionalBoolean('ssl'),\n            path: settings?.getOptionalString('path'),\n            timeout: settings?.getOptionalNumber('timeout'),\n          },\n          value => value !== undefined,\n        ),\n      );\n      await FirestoreKeyStore.verifyConnection(keyStore, logger);\n\n      return keyStore;\n    }\n\n    throw new Error(`Unknown KeyStore provider: ${provider}`);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  CompoundEntityRef,\n  parseEntityRef,\n  RELATION_MEMBER_OF,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { TokenManager } from '@backstage/backend-common';\n\ntype UserQuery = {\n  annotations: Record<string, string>;\n};\n\ntype MemberClaimQuery = {\n  entityRefs: string[];\n  logger?: Logger;\n};\n\n/**\n * A catalog client tailored for reading out identity data from the catalog.\n */\nexport class CatalogIdentityClient {\n  private readonly catalogApi: CatalogApi;\n  private readonly tokenManager: TokenManager;\n\n  constructor(options: { catalogApi: CatalogApi; tokenManager: TokenManager }) {\n    this.catalogApi = options.catalogApi;\n    this.tokenManager = options.tokenManager;\n  }\n\n  /**\n   * Looks up a single user using a query.\n   *\n   * Throws a NotFoundError or ConflictError if 0 or multiple users are found.\n   */\n  async findUser(query: UserQuery): Promise<UserEntity> {\n    const filter: Record<string, string> = {\n      kind: 'user',\n    };\n    for (const [key, value] of Object.entries(query.annotations)) {\n      filter[`metadata.annotations.${key}`] = value;\n    }\n\n    const { token } = await this.tokenManager.getToken();\n    const { items } = await this.catalogApi.getEntities({ filter }, { token });\n\n    if (items.length !== 1) {\n      if (items.length > 1) {\n        throw new ConflictError('User lookup resulted in multiple matches');\n      } else {\n        throw new NotFoundError('User not found');\n      }\n    }\n\n    return items[0] as UserEntity;\n  }\n\n  /**\n   * Resolve additional entity claims from the catalog, using the passed-in entity names. Designed\n   * to be used within a `signInResolver` where additional entity claims might be provided, but\n   * group membership and transient group membership lean on imported catalog relations.\n   *\n   * Returns a superset of the entity names that can be passed directly to `issueToken` as `ent`.\n   */\n  async resolveCatalogMembership(query: MemberClaimQuery): Promise<string[]> {\n    const { entityRefs, logger } = query;\n    const resolvedEntityRefs = entityRefs\n      .map((ref: string) => {\n        try {\n          const parsedRef = parseEntityRef(ref.toLocaleLowerCase('en-US'), {\n            defaultKind: 'user',\n            defaultNamespace: 'default',\n          });\n          return parsedRef;\n        } catch {\n          logger?.warn(`Failed to parse entityRef from ${ref}, ignoring`);\n          return null;\n        }\n      })\n      .filter((ref): ref is CompoundEntityRef => ref !== null);\n\n    const filter = resolvedEntityRefs.map(ref => ({\n      kind: ref.kind,\n      'metadata.namespace': ref.namespace,\n      'metadata.name': ref.name,\n    }));\n    const { token } = await this.tokenManager.getToken();\n    const entities = await this.catalogApi\n      .getEntities({ filter }, { token })\n      .then(r => r.items);\n\n    if (entityRefs.length !== entities.length) {\n      const foundEntityNames = entities.map(stringifyEntityRef);\n      const missingEntityNames = resolvedEntityRefs\n        .map(stringifyEntityRef)\n        .filter(s => !foundEntityNames.includes(s));\n      logger?.debug(`Entities not found for refs ${missingEntityNames.join()}`);\n    }\n\n    const memberOf = entities.flatMap(\n      e =>\n        e!.relations\n          ?.filter(r => r.type === RELATION_MEMBER_OF)\n          .map(r => r.targetRef) ?? [],\n    );\n\n    const newEntityRefs = [\n      ...new Set(resolvedEntityRefs.map(stringifyEntityRef).concat(memberOf)),\n    ];\n\n    logger?.debug(`Found catalog membership: ${newEntityRefs.join()}`);\n    return newEntityRefs;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RELATION_MEMBER_OF,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { TokenParams } from '../../identity';\n\n/**\n * @deprecated use {@link getDefaultOwnershipEntityRefs} instead\n */\nexport function getEntityClaims(entity: UserEntity): TokenParams['claims'] {\n  const userRef = stringifyEntityRef(entity);\n\n  const membershipRefs =\n    entity.relations\n      ?.filter(\n        r => r.type === RELATION_MEMBER_OF && r.targetRef.startsWith('group:'),\n      )\n      .map(r => r.targetRef) ?? [];\n\n  return {\n    sub: userRef,\n    ent: [userRef, ...membershipRefs],\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TokenManager } from '@backstage/backend-common';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  DEFAULT_NAMESPACE,\n  Entity,\n  parseEntityRef,\n  RELATION_MEMBER_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { ConflictError, InputError, NotFoundError } from '@backstage/errors';\nimport { Logger } from 'winston';\nimport { TokenIssuer } from '../..';\nimport { TokenParams } from '../../identity';\nimport { AuthResolverContext } from '../../providers';\nimport { AuthResolverCatalogUserQuery } from '../../providers/types';\nimport { CatalogIdentityClient } from '../catalog';\n\n/**\n * Uses the default ownership resolution logic to return an array\n * of entity refs that the provided entity claims ownership through.\n *\n * A reference to the entity itself will also be included in the returned array.\n *\n * @public\n */\nexport function getDefaultOwnershipEntityRefs(entity: Entity) {\n  const membershipRefs =\n    entity.relations\n      ?.filter(\n        r => r.type === RELATION_MEMBER_OF && r.targetRef.startsWith('group:'),\n      )\n      .map(r => r.targetRef) ?? [];\n\n  return Array.from(new Set([stringifyEntityRef(entity), ...membershipRefs]));\n}\n\n/**\n * @internal\n */\nexport class CatalogAuthResolverContext implements AuthResolverContext {\n  static create(options: {\n    logger: Logger;\n    catalogApi: CatalogApi;\n    tokenIssuer: TokenIssuer;\n    tokenManager: TokenManager;\n  }): CatalogAuthResolverContext {\n    const catalogIdentityClient = new CatalogIdentityClient({\n      catalogApi: options.catalogApi,\n      tokenManager: options.tokenManager,\n    });\n    return new CatalogAuthResolverContext(\n      options.logger,\n      options.tokenIssuer,\n      catalogIdentityClient,\n      options.catalogApi,\n      options.tokenManager,\n    );\n  }\n\n  private constructor(\n    public readonly logger: Logger,\n    public readonly tokenIssuer: TokenIssuer,\n    public readonly catalogIdentityClient: CatalogIdentityClient,\n    private readonly catalogApi: CatalogApi,\n    private readonly tokenManager: TokenManager,\n  ) {}\n\n  async issueToken(params: TokenParams) {\n    const token = await this.tokenIssuer.issueToken(params);\n    return { token };\n  }\n\n  async findCatalogUser(query: AuthResolverCatalogUserQuery) {\n    let result: Entity[] | Entity | undefined = undefined;\n    const { token } = await this.tokenManager.getToken();\n\n    if ('entityRef' in query) {\n      const entityRef = parseEntityRef(query.entityRef, {\n        defaultKind: 'User',\n        defaultNamespace: DEFAULT_NAMESPACE,\n      });\n      result = await this.catalogApi.getEntityByRef(entityRef, { token });\n    } else if ('annotations' in query) {\n      const filter: Record<string, string> = {\n        kind: 'user',\n      };\n      for (const [key, value] of Object.entries(query.annotations)) {\n        filter[`metadata.annotations.${key}`] = value;\n      }\n      const res = await this.catalogApi.getEntities({ filter }, { token });\n      result = res.items;\n    } else if ('filter' in query) {\n      const res = await this.catalogApi.getEntities(\n        { filter: query.filter },\n        { token },\n      );\n      result = res.items;\n    } else {\n      throw new InputError('Invalid user lookup query');\n    }\n\n    if (Array.isArray(result)) {\n      if (result.length > 1) {\n        throw new ConflictError('User lookup resulted in multiple matches');\n      }\n      result = result[0];\n    }\n    if (!result) {\n      throw new NotFoundError('User not found');\n    }\n\n    return { entity: result };\n  }\n\n  async signInWithCatalogUser(query: AuthResolverCatalogUserQuery) {\n    const { entity } = await this.findCatalogUser(query);\n    const ownershipRefs = getDefaultOwnershipEntityRefs(entity);\n\n    const token = await this.tokenIssuer.issueToken({\n      claims: {\n        sub: stringifyEntityRef(entity),\n        ent: ownershipRefs,\n      },\n    });\n    return { token };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport cookieParser from 'cookie-parser';\nimport { Logger } from 'winston';\nimport {\n  defaultAuthProviderFactories,\n  AuthProviderFactory,\n} from '../providers';\nimport {\n  PluginDatabaseManager,\n  PluginEndpointDiscovery,\n  TokenManager,\n} from '@backstage/backend-common';\nimport { assertError, NotFoundError } from '@backstage/errors';\nimport { CatalogClient } from '@backstage/catalog-client';\nimport { Config } from '@backstage/config';\nimport { createOidcRouter, TokenFactory, KeyStores } from '../identity';\nimport session from 'express-session';\nimport passport from 'passport';\nimport { Minimatch } from 'minimatch';\nimport { CatalogAuthResolverContext } from '../lib/resolvers';\n\ntype ProviderFactories = { [s: string]: AuthProviderFactory };\n\nexport interface RouterOptions {\n  logger: Logger;\n  database: PluginDatabaseManager;\n  config: Config;\n  discovery: PluginEndpointDiscovery;\n  tokenManager: TokenManager;\n  providerFactories?: ProviderFactories;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const {\n    logger,\n    config,\n    discovery,\n    database,\n    tokenManager,\n    providerFactories,\n  } = options;\n  const router = Router();\n\n  const appUrl = config.getString('app.baseUrl');\n  const authUrl = await discovery.getExternalBaseUrl('auth');\n\n  const keyStore = await KeyStores.fromConfig(config, { logger, database });\n  const keyDurationSeconds = 3600;\n\n  const tokenIssuer = new TokenFactory({\n    issuer: authUrl,\n    keyStore,\n    keyDurationSeconds,\n    logger: logger.child({ component: 'token-factory' }),\n  });\n  const catalogApi = new CatalogClient({ discoveryApi: discovery });\n\n  const secret = config.getOptionalString('auth.session.secret');\n  if (secret) {\n    router.use(cookieParser(secret));\n    // TODO: Configure the server-side session storage.  The default MemoryStore is not designed for production\n    const enforceCookieSSL = authUrl.startsWith('https');\n    router.use(\n      session({\n        secret,\n        saveUninitialized: false,\n        resave: false,\n        cookie: { secure: enforceCookieSSL ? 'auto' : false },\n      }),\n    );\n    router.use(passport.initialize());\n    router.use(passport.session());\n  } else {\n    router.use(cookieParser());\n  }\n  router.use(express.urlencoded({ extended: false }));\n  router.use(express.json());\n\n  const allProviderFactories = {\n    ...defaultAuthProviderFactories,\n    ...providerFactories,\n  };\n  const providersConfig = config.getConfig('auth.providers');\n  const configuredProviders = providersConfig.keys();\n\n  const isOriginAllowed = createOriginFilter(config);\n\n  for (const [providerId, providerFactory] of Object.entries(\n    allProviderFactories,\n  )) {\n    if (configuredProviders.includes(providerId)) {\n      logger.info(`Configuring provider, ${providerId}`);\n      try {\n        const provider = providerFactory({\n          providerId,\n          globalConfig: {\n            baseUrl: authUrl,\n            appUrl,\n            isOriginAllowed,\n          },\n          config: providersConfig.getConfig(providerId),\n          logger,\n          tokenManager,\n          tokenIssuer,\n          discovery,\n          catalogApi,\n          resolverContext: CatalogAuthResolverContext.create({\n            logger,\n            catalogApi,\n            tokenIssuer,\n            tokenManager,\n          }),\n        });\n\n        const r = Router();\n\n        r.get('/start', provider.start.bind(provider));\n        r.get('/handler/frame', provider.frameHandler.bind(provider));\n        r.post('/handler/frame', provider.frameHandler.bind(provider));\n        if (provider.logout) {\n          r.post('/logout', provider.logout.bind(provider));\n        }\n        if (provider.refresh) {\n          r.get('/refresh', provider.refresh.bind(provider));\n        }\n\n        router.use(`/${providerId}`, r);\n      } catch (e) {\n        assertError(e);\n        if (process.env.NODE_ENV !== 'development') {\n          throw new Error(\n            `Failed to initialize ${providerId} auth provider, ${e.message}`,\n          );\n        }\n\n        logger.warn(`Skipping ${providerId} auth provider, ${e.message}`);\n\n        router.use(`/${providerId}`, () => {\n          // If the user added the provider under auth.providers but the clientId and clientSecret etc. were not found.\n          throw new NotFoundError(\n            `Auth provider registered for '${providerId}' is misconfigured. This could mean the configs under ` +\n              `auth.providers.${providerId} are missing or the environment variables used are not defined. ` +\n              `Check the auth backend plugin logs when the backend starts to see more details.`,\n          );\n        });\n      }\n    } else {\n      router.use(`/${providerId}`, () => {\n        throw new NotFoundError(\n          `No auth provider registered for '${providerId}'`,\n        );\n      });\n    }\n  }\n\n  router.use(\n    createOidcRouter({\n      tokenIssuer,\n      baseUrl: authUrl,\n    }),\n  );\n\n  router.use('/:provider/', req => {\n    const { provider } = req.params;\n    throw new NotFoundError(`Unknown auth provider '${provider}'`);\n  });\n\n  return router;\n}\n\nexport function createOriginFilter(\n  config: Config,\n): (origin: string) => boolean {\n  const appUrl = config.getString('app.baseUrl');\n  const { origin: appOrigin } = new URL(appUrl);\n\n  const allowedOrigins = config.getOptionalStringArray(\n    'auth.experimentalExtraAllowedOrigins',\n  );\n\n  const allowedOriginPatterns =\n    allowedOrigins?.map(\n      pattern => new Minimatch(pattern, { nocase: true, noglobstar: true }),\n    ) ?? [];\n\n  return origin => {\n    if (origin === appOrigin) {\n      return true;\n    }\n    return allowedOriginPatterns.some(pattern => pattern.match(origin));\n  };\n}\n"],"names":["OAuth2Strategy","InternalOAuthError","pickBy","InputError","NotFoundError","crypto","URL","NotAllowedError","isError","AuthenticationError","jwtDecoder","fetch","NodeCache","jwtVerify","BitbucketStrategy","GithubStrategy","GitlabStrategy","GoogleStrategy","MicrosoftStrategy","getBearerTokenFromAuthorizationHeader","decodeJwt","defaultAuthHandler","Issuer","OidcStrategy","OktaStrategy","OneLoginStrategy","SamlStrategy","OAuth2Client","Router","parseEntityRef","SignJWT","importJWK","DateTime","generateKeyPair","exportJWK","uuid","resolvePackagePath","Firestore","ConflictError","stringifyEntityRef","RELATION_MEMBER_OF","DEFAULT_NAMESPACE","CatalogClient","cookieParser","session","passport","express","defaultAuthProviderFactories","assertError","Minimatch"],"mappings":"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"}