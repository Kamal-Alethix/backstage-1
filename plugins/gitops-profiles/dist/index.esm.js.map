{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/api.ts","../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const gitOpsClusterListRoute = createRouteRef({\n  id: 'gitops-clusters',\n});\n\nexport const gitOpsClusterDetailsRoute = createRouteRef({\n  id: 'gitops-cluster:details',\n  params: ['owner', 'repo'],\n});\n\nexport const gitOpsClusterCreateRoute = createRouteRef({\n  id: 'gitops-cluster:create',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport interface CloneFromTemplateRequest {\n  templateRepository: string;\n  secrets: {\n    awsAccessKeyId: string;\n    awsSecretAccessKey: string;\n  };\n  targetOrg: string;\n  targetRepo: string;\n  gitHubUser: string;\n  gitHubToken: string;\n}\n\nexport interface ApplyProfileRequest {\n  targetOrg: string;\n  targetRepo: string;\n  gitHubUser: string;\n  gitHubToken: string;\n  profiles: string[];\n}\n\nexport interface ChangeClusterStateRequest {\n  targetOrg: string;\n  targetRepo: string;\n  gitHubUser: string;\n  gitHubToken: string;\n  clusterState: 'present' | 'absent'; // /api/cluster/state\n}\n\nexport interface PollLogRequest {\n  targetOrg: string;\n  targetRepo: string;\n  gitHubUser: string;\n  gitHubToken: string;\n}\n\nexport interface Status {\n  status: string; // queued, in_progress, or completed\n  message: string;\n  conclusion: string; // success, failure, neutral, cancelled, skipped, timed_out, or action_required\n}\n\nexport interface StatusResponse {\n  result: Status[];\n  link: string;\n  status: string;\n}\n\nexport interface ClusterStatus {\n  name: string;\n  link: string;\n  status: string;\n  conclusion: string;\n  runStatus: Status[];\n}\n\nexport interface ListClusterStatusesResponse {\n  result: ClusterStatus[];\n}\n\nexport interface ListClusterRequest {\n  gitHubUser: string;\n  gitHubToken: string;\n}\n\nexport interface GithubUserInfoRequest {\n  accessToken: string;\n}\n\nexport interface GithubUserInfoResponse {\n  login: string;\n}\n\nexport class FetchError extends Error {\n  get name(): string {\n    return this.constructor.name;\n  }\n\n  static async forResponse(resp: Response): Promise<FetchError> {\n    return new FetchError(\n      `Request failed with status code ${\n        resp.status\n      }.\\nReason: ${await resp.text()}`,\n    );\n  }\n}\n\nexport type GitOpsApi = {\n  url: string;\n  fetchLog(req: PollLogRequest): Promise<StatusResponse>;\n  changeClusterState(req: ChangeClusterStateRequest): Promise<any>;\n  cloneClusterFromTemplate(req: CloneFromTemplateRequest): Promise<any>;\n  applyProfiles(req: ApplyProfileRequest): Promise<any>;\n  listClusters(req: ListClusterRequest): Promise<ListClusterStatusesResponse>;\n  fetchUserInfo(req: GithubUserInfoRequest): Promise<GithubUserInfoResponse>;\n};\n\nexport const gitOpsApiRef = createApiRef<GitOpsApi>({\n  id: 'plugin.gitops.service',\n});\n\nexport class GitOpsRestApi implements GitOpsApi {\n  constructor(public url: string = '') {}\n\n  private async fetch<T = any>(path: string, init?: RequestInit): Promise<T> {\n    const resp = await fetch(`${this.url}${path}`, init);\n    if (!resp.ok) throw await FetchError.forResponse(resp);\n    return await resp.json();\n  }\n\n  async fetchUserInfo(\n    req: GithubUserInfoRequest,\n  ): Promise<GithubUserInfoResponse> {\n    const resp = await fetch(`https://api.github.com/user`, {\n      method: 'get',\n      headers: new Headers({\n        Authorization: `token ${req.accessToken}`,\n      }),\n    });\n    if (!resp.ok) throw await FetchError.forResponse(resp);\n    return await resp.json();\n  }\n\n  async fetchLog(req: PollLogRequest): Promise<StatusResponse> {\n    return await this.fetch<StatusResponse>(`/api/cluster/run-status`, {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(req),\n    });\n  }\n\n  async changeClusterState(req: ChangeClusterStateRequest): Promise<any> {\n    return await this.fetch<any>('/api/cluster/state', {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(req),\n    });\n  }\n\n  async cloneClusterFromTemplate(req: CloneFromTemplateRequest): Promise<any> {\n    return await this.fetch<any>('/api/cluster/clone-from-template', {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(req),\n    });\n  }\n\n  async applyProfiles(req: ApplyProfileRequest): Promise<any> {\n    return await this.fetch<any>('/api/cluster/profiles', {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(req),\n    });\n  }\n\n  async listClusters(\n    req: ListClusterRequest,\n  ): Promise<ListClusterStatusesResponse> {\n    return await this.fetch<ListClusterStatusesResponse>('/api/clusters', {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify(req),\n    });\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  gitOpsClusterListRoute,\n  gitOpsClusterDetailsRoute,\n  gitOpsClusterCreateRoute,\n} from './routes';\nimport { gitOpsApiRef, GitOpsRestApi } from './api';\nimport {\n  createPlugin,\n  createApiFactory,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\nexport const gitopsProfilesPlugin = createPlugin({\n  id: 'gitops-profiles',\n  apis: [\n    createApiFactory(gitOpsApiRef, new GitOpsRestApi('http://localhost:3008')),\n  ],\n  routes: {\n    listPage: gitOpsClusterListRoute,\n    detailsPage: gitOpsClusterDetailsRoute,\n    createPage: gitOpsClusterCreateRoute,\n  },\n});\n\nexport const GitopsProfilesClusterListPage = gitopsProfilesPlugin.provide(\n  createRoutableExtension({\n    name: 'GitopsProfilesClusterListPage',\n    component: () => import('./components/ClusterList').then(m => m.default),\n    mountPoint: gitOpsClusterListRoute,\n  }),\n);\n\nexport const GitopsProfilesClusterPage = gitopsProfilesPlugin.provide(\n  createRoutableExtension({\n    name: 'GitopsProfilesClusterPage',\n    component: () => import('./components/ClusterPage').then(m => m.default),\n    mountPoint: gitOpsClusterDetailsRoute,\n  }),\n);\n\nexport const GitopsProfilesCreatePage = gitopsProfilesPlugin.provide(\n  createRoutableExtension({\n    name: 'GitopsProfilesCreatePage',\n    component: () => import('./components/ProfileCatalog').then(m => m.default),\n    mountPoint: gitOpsClusterCreateRoute,\n  }),\n);\n"],"names":[],"mappings":"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"}