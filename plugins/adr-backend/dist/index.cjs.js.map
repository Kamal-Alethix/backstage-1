{"version":3,"file":"index.cjs.js","sources":["../src/search/createMadrParser.ts","../src/search/DefaultAdrCollatorFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateTime } from 'luxon';\nimport { marked } from 'marked';\nimport { MADR_DATE_FORMAT } from '@backstage/plugin-adr-common';\n\nimport { AdrParser } from './types';\n\nconst applyArgsToFormat = (\n  format: string,\n  args: Record<string, string>,\n): string => {\n  let formatted = format;\n  for (const [key, value] of Object.entries(args)) {\n    formatted = formatted.replace(`:${key}`, value);\n  }\n  return formatted.toLowerCase();\n};\n\nconst DEFAULT_LOCATION_TEMPLATE =\n  '/catalog/:namespace/:kind/:name/adrs?record=:record';\n\n/**\n *\n * Options for the default MADR content parser\n * @public\n */\nexport type MadrParserOptions = {\n  /**\n   * Location template for the route of the frontend plugin\n   * Defaults to '/catalog/:namespace/:kind/:name/adrs?record=:record'\n   */\n  locationTemplate?: string;\n  /**\n   * luxon DateTime format string to parse ADR dates with.\n   * Defaults to 'yyyy-MM-dd'\n   */\n  dateFormat?: string;\n};\n\n/**\n * Default content parser for ADRs following the MADR template (https://adr.github.io/madr/)\n * @public\n */\nexport const createMadrParser = (\n  options: MadrParserOptions = {},\n): AdrParser => {\n  const locationTemplate =\n    options.locationTemplate ?? DEFAULT_LOCATION_TEMPLATE;\n  const dateFormat = options.dateFormat ?? MADR_DATE_FORMAT;\n\n  return async ({ entity, content, path }) => {\n    const tokens = marked.lexer(content);\n    if (!tokens.length) {\n      throw new Error('ADR has no content');\n    }\n\n    // First h1 header should contain ADR title\n    const adrTitle = (\n      tokens.find(\n        t => t.type === 'heading' && t.depth === 1,\n      ) as marked.Tokens.Heading\n    )?.text;\n\n    // First list should contain status & date metadata (if defined)\n    const listTokens = (\n      tokens.find(t => t.type === 'list') as marked.Tokens.List\n    )?.items;\n    const adrStatus = listTokens\n      .find(t => /^status:/i.test(t.text))\n      ?.text.replace(/^status:/i, '')\n      .trim()\n      .toLocaleLowerCase('en-US');\n    const adrDateTime = DateTime.fromFormat(\n      listTokens\n        .find(t => /^date:/i.test(t.text))\n        ?.text.replace(/^date:/i, '')\n        .trim() ?? '',\n      dateFormat,\n    );\n    const adrDate = adrDateTime.isValid\n      ? adrDateTime.toFormat(MADR_DATE_FORMAT)\n      : undefined;\n\n    return {\n      title: adrTitle ?? path.replace(/\\.md$/, ''),\n      text: content,\n      status: adrStatus,\n      date: adrDate,\n      location: applyArgsToFormat(locationTemplate, {\n        namespace: entity.metadata.namespace || 'default',\n        kind: entity.kind,\n        name: entity.metadata.name,\n        record: path,\n      }),\n    };\n  };\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Readable } from 'stream';\nimport { Logger } from 'winston';\nimport {\n  CacheClient,\n  PluginCacheManager,\n  PluginEndpointDiscovery,\n  TokenManager,\n  UrlReader,\n} from '@backstage/backend-common';\nimport {\n  CatalogApi,\n  CatalogClient,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { NotModifiedError } from '@backstage/errors';\nimport {\n  ScmIntegrationRegistry,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport {\n  AdrDocument,\n  AdrFilePathFilterFn,\n  ANNOTATION_ADR_LOCATION,\n  getAdrLocationUrl,\n  madrFilePathFilter,\n} from '@backstage/plugin-adr-common';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\n\nimport { createMadrParser } from './createMadrParser';\nimport { AdrParser } from './types';\n\n/**\n * Options to configure the AdrCollatorFactory\n * @public\n */\nexport type AdrCollatorFactoryOptions = {\n  /**\n   * Function used to filter ADR file paths.\n   * Defaults to filtering paths following MADR filename format.\n   */\n  adrFilePathFilterFn?: AdrFilePathFilterFn;\n  /**\n   * Plugin cache manager\n   */\n  cache: PluginCacheManager;\n  /**\n   * App Config\n   */\n  config: Config;\n  /**\n   * Catalog API client. Defaults to CatalogClient.\n   */\n  catalogClient?: CatalogApi;\n  /**\n   * Plugin Endpoint Discovery client\n   */\n  discovery: PluginEndpointDiscovery;\n  /**\n   * Logger\n   */\n  logger: Logger;\n  /**\n   * ADR content parser. Defaults to built in MADR parser.\n   */\n  parser?: AdrParser;\n  /**\n   * URL Reader\n   */\n  reader: UrlReader;\n  /**\n   * Token Manager\n   */\n  tokenManager: TokenManager;\n};\n\n/**\n * Default collator to index ADR documents for Backstage search.\n * @public\n */\nexport class DefaultAdrCollatorFactory implements DocumentCollatorFactory {\n  public readonly type: string = 'adr';\n  private readonly adrFilePathFilterFn: AdrFilePathFilterFn;\n  private readonly cacheClient: CacheClient;\n  private readonly catalogClient: CatalogApi;\n  private readonly logger: Logger;\n  private readonly parser: AdrParser;\n  private readonly reader: UrlReader;\n  private readonly scmIntegrations: ScmIntegrationRegistry;\n  private readonly tokenManager: TokenManager;\n\n  private constructor(options: AdrCollatorFactoryOptions) {\n    this.adrFilePathFilterFn =\n      options.adrFilePathFilterFn ?? madrFilePathFilter;\n    this.cacheClient = options.cache.getClient();\n    this.catalogClient =\n      options.catalogClient ??\n      new CatalogClient({ discoveryApi: options.discovery });\n    this.logger = options.logger;\n    this.parser = options.parser ?? createMadrParser();\n    this.reader = options.reader;\n    this.scmIntegrations = ScmIntegrations.fromConfig(options.config);\n    this.tokenManager = options.tokenManager;\n  }\n\n  static fromConfig(options: AdrCollatorFactoryOptions) {\n    return new DefaultAdrCollatorFactory(options);\n  }\n\n  async getCollator() {\n    return Readable.from(this.execute());\n  }\n\n  async *execute(): AsyncGenerator<AdrDocument> {\n    const { token } = await this.tokenManager.getToken();\n    const entities = (\n      await this.catalogClient.getEntities(\n        {\n          filter: {\n            [`metadata.annotations.${ANNOTATION_ADR_LOCATION}`]:\n              CATALOG_FILTER_EXISTS,\n          },\n          fields: [\n            'kind',\n            'metadata.annotations',\n            'metadata.name',\n            'metadata.namespace',\n          ],\n        },\n        { token },\n      )\n    ).items;\n\n    for (const ent of entities) {\n      let adrsUrl: string;\n      try {\n        adrsUrl = getAdrLocationUrl(ent, this.scmIntegrations);\n      } catch (e: any) {\n        this.logger.error(\n          `Unable to get ADR location URL for ${stringifyEntityRef(ent)}: ${\n            e.message\n          }`,\n        );\n        continue;\n      }\n\n      const cacheItem = (await this.cacheClient.get(adrsUrl)) as {\n        adrFiles: {\n          path: string;\n          content: string;\n        }[];\n        etag: string;\n      };\n\n      let adrFiles = cacheItem?.adrFiles;\n      try {\n        const tree = await this.reader.readTree(adrsUrl, {\n          etag: cacheItem?.etag,\n          filter: filePath => this.adrFilePathFilterFn(filePath),\n        });\n\n        adrFiles = await Promise.all(\n          (\n            await tree.files()\n          ).map(async f => ({\n            path: f.path,\n            content: (await f.content()).toString('utf8'),\n          })),\n        );\n\n        await this.cacheClient.set(adrsUrl, { adrFiles, etag: tree.etag });\n      } catch (error: any) {\n        // Ignore error if we're able to use cached response\n        if (!cacheItem || error.name !== NotModifiedError.name) {\n          throw error;\n        }\n      }\n\n      for (const { content, path } of adrFiles) {\n        try {\n          const adrDoc = await this.parser({\n            entity: ent,\n            path,\n            content,\n          });\n          yield adrDoc;\n        } catch (e: any) {\n          this.logger.error(`Unable to parse ADR ${path}: ${e.message}`);\n        }\n      }\n\n      this.logger.info(`Indexed ${adrFiles.length} ADRs from ${adrsUrl}`);\n    }\n  }\n}\n"],"names":["MADR_DATE_FORMAT","marked","DateTime","madrFilePathFilter","CatalogClient","ScmIntegrations","Readable","ANNOTATION_ADR_LOCATION","CATALOG_FILTER_EXISTS","getAdrLocationUrl","stringifyEntityRef","NotModifiedError"],"mappings":"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"}