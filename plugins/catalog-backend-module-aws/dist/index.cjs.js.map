{"version":3,"file":"index.cjs.js","sources":["../src/awsOrganization/config.ts","../src/processors/AwsOrganizationCloudAccountProcessor.ts","../src/processors/AwsS3DiscoveryProcessor.ts","../src/credentials/AwsCredentials.ts","../src/providers/config.ts","../src/providers/AwsS3EntityProvider.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\n\n/**\n * The configuration parameters for a single AWS Organization Processor\n */\nexport type AwsOrganizationProviderConfig = {\n  /**\n   * The role to assume for the processor.\n   */\n  roleArn?: string;\n};\n\nexport function readAwsOrganizationConfig(\n  config: Config,\n): AwsOrganizationProviderConfig {\n  const providerConfig = config.getOptionalConfig('provider');\n\n  const roleArn = providerConfig?.getOptionalString('roleArn');\n  return {\n    roleArn,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ResourceEntityV1alpha1 } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  LocationSpec,\n  processingResult,\n} from '@backstage/plugin-catalog-backend';\nimport AWS, { Credentials, Organizations } from 'aws-sdk';\nimport { Account, ListAccountsResponse } from 'aws-sdk/clients/organizations';\nimport { Logger } from 'winston';\nimport {\n  AwsOrganizationProviderConfig,\n  readAwsOrganizationConfig,\n} from '../awsOrganization/config';\n\nconst AWS_ORGANIZATION_REGION = 'us-east-1';\nconst LOCATION_TYPE = 'aws-cloud-accounts';\n\nconst ACCOUNTID_ANNOTATION = 'amazonaws.com/account-id';\nconst ARN_ANNOTATION = 'amazonaws.com/arn';\nconst ORGANIZATION_ANNOTATION = 'amazonaws.com/organization-id';\n\n/**\n * A processor for ingesting AWS Accounts from AWS Organizations.\n *\n * If custom authentication is needed, it can be achieved by configuring the\n * global AWS.credentials object.\n *\n * @public\n */\nexport class AwsOrganizationCloudAccountProcessor implements CatalogProcessor {\n  private readonly organizations: Organizations;\n  private readonly provider: AwsOrganizationProviderConfig;\n\n  static fromConfig(config: Config, options: { logger: Logger }) {\n    const c = config.getOptionalConfig('catalog.processors.awsOrganization');\n    return new AwsOrganizationCloudAccountProcessor({\n      ...options,\n      provider: c ? readAwsOrganizationConfig(c) : {},\n    });\n  }\n\n  private static buildCredentials(\n    config: AwsOrganizationProviderConfig,\n  ): Credentials | undefined {\n    const roleArn = config.roleArn;\n    if (!roleArn) {\n      return undefined;\n    }\n\n    return new AWS.ChainableTemporaryCredentials({\n      params: {\n        RoleSessionName: 'backstage-aws-organization-processor',\n        RoleArn: roleArn,\n      },\n    });\n  }\n\n  private constructor(options: { provider: AwsOrganizationProviderConfig }) {\n    this.provider = options.provider;\n    const credentials = AwsOrganizationCloudAccountProcessor.buildCredentials(\n      this.provider,\n    );\n    this.organizations = new AWS.Organizations({\n      credentials,\n      region: AWS_ORGANIZATION_REGION,\n    }); // Only available in us-east-1\n  }\n\n  getProcessorName(): string {\n    return 'AwsOrganizationCloudAccountProcessor';\n  }\n\n  async readLocation(\n    location: LocationSpec,\n    _optional: boolean,\n    emit: CatalogProcessorEmit,\n  ): Promise<boolean> {\n    if (location.type !== LOCATION_TYPE) {\n      return false;\n    }\n\n    (await this.getAwsAccounts())\n      .map(account => this.mapAccountToComponent(account))\n      .filter(entity => {\n        if (location.target !== '') {\n          if (entity.metadata.annotations) {\n            return (\n              entity.metadata.annotations[ORGANIZATION_ANNOTATION] ===\n              location.target\n            );\n          }\n          return false;\n        }\n        return true;\n      })\n      .forEach(entity => {\n        emit(processingResult.entity(location, entity));\n      });\n\n    return true;\n  }\n\n  private normalizeName(name: string): string {\n    return name\n      .trim()\n      .toLocaleLowerCase('en-US')\n      .replace(/[^a-zA-Z0-9\\-]/g, '-');\n  }\n\n  private extractInformationFromArn(arn: string): {\n    accountId: string;\n    organizationId: string;\n  } {\n    const parts = arn.split('/');\n\n    return {\n      accountId: parts[parts.length - 1],\n      organizationId: parts[parts.length - 2],\n    };\n  }\n\n  private async getAwsAccounts(): Promise<Account[]> {\n    let awsAccounts: Account[] = [];\n    let isInitialAttempt = true;\n    let nextToken = undefined;\n    while (isInitialAttempt || nextToken) {\n      isInitialAttempt = false;\n      const orgAccounts: ListAccountsResponse = await this.organizations\n        .listAccounts({ NextToken: nextToken })\n        .promise();\n      if (orgAccounts.Accounts) {\n        awsAccounts = awsAccounts.concat(orgAccounts.Accounts);\n      }\n      nextToken = orgAccounts.NextToken;\n    }\n\n    return awsAccounts;\n  }\n\n  private mapAccountToComponent(account: Account): ResourceEntityV1alpha1 {\n    const { accountId, organizationId } = this.extractInformationFromArn(\n      account.Arn as string,\n    );\n    return {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Resource',\n      metadata: {\n        annotations: {\n          [ACCOUNTID_ANNOTATION]: accountId,\n          [ARN_ANNOTATION]: account.Arn || '',\n          [ORGANIZATION_ANNOTATION]: organizationId,\n        },\n        name: this.normalizeName(account.Name || ''),\n        namespace: 'default',\n      },\n      spec: {\n        type: 'cloud-account',\n        owner: 'unknown',\n      },\n    };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { isError } from '@backstage/errors';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  CatalogProcessorParser,\n  LocationSpec,\n  processingResult,\n} from '@backstage/plugin-catalog-backend';\nimport limiterFactory from 'p-limit';\n\n/**\n * A processor for automatic discovery of entities from S3 buckets. Handles the\n * `s3-discovery` location type, and target bucket URLs e.g. on the form\n * `https://testbucket.s3.us-east-2.amazonaws.com`.\n *\n * @public\n */\nexport class AwsS3DiscoveryProcessor implements CatalogProcessor {\n  constructor(private readonly reader: UrlReader) {}\n\n  getProcessorName(): string {\n    return 'AwsS3DiscoveryProcessor';\n  }\n\n  async readLocation(\n    location: LocationSpec,\n    optional: boolean,\n    emit: CatalogProcessorEmit,\n    parser: CatalogProcessorParser,\n  ): Promise<boolean> {\n    if (location.type !== 's3-discovery') {\n      return false;\n    }\n\n    try {\n      const output = await this.doRead(location.target);\n      for (const item of output) {\n        for await (const parseResult of parser({\n          data: item.data,\n          location: { type: location.type, target: item.url },\n        })) {\n          emit(parseResult);\n        }\n      }\n    } catch (error) {\n      const message = `Unable to read ${location.type}, ${error}`;\n\n      if (isError(error) && error.name === 'NotFoundError') {\n        if (!optional) {\n          emit(processingResult.notFoundError(location, message));\n        }\n      } else {\n        emit(processingResult.generalError(location, message));\n      }\n    }\n    return true;\n  }\n\n  private async doRead(\n    location: string,\n  ): Promise<{ data: Buffer; url: string }[]> {\n    const limiter = limiterFactory(5);\n    const response = await this.reader.readTree(location);\n    const responseFiles = await response.files();\n    const output = responseFiles.map(async file => ({\n      url: file.path,\n      data: await limiter(file.content),\n    }));\n    return Promise.all(output);\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport aws, { Credentials } from 'aws-sdk';\nimport { CredentialsOptions } from 'aws-sdk/lib/credentials';\n\nexport class AwsCredentials {\n  /**\n   * If accessKeyId and secretAccessKey are missing, the DefaultAWSCredentialsProviderChain will be used:\n   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html\n   */\n  static create(\n    config: {\n      accessKeyId?: string;\n      secretAccessKey?: string;\n      roleArn?: string;\n    },\n    roleSessionName: string,\n  ): Credentials | CredentialsOptions | undefined {\n    if (!config) {\n      return undefined;\n    }\n\n    const accessKeyId = config.accessKeyId;\n    const secretAccessKey = config.secretAccessKey;\n    let explicitCredentials: Credentials | undefined;\n\n    if (accessKeyId && secretAccessKey) {\n      explicitCredentials = new Credentials({\n        accessKeyId,\n        secretAccessKey,\n      });\n    }\n\n    const roleArn = config.roleArn;\n    if (roleArn) {\n      return new aws.ChainableTemporaryCredentials({\n        masterCredentials: explicitCredentials,\n        params: {\n          RoleArn: roleArn,\n          RoleSessionName: roleSessionName,\n        },\n      });\n    }\n\n    return explicitCredentials;\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { AwsS3Config } from './types';\n\nconst DEFAULT_PROVIDER_ID = 'default';\n\nexport function readAwsS3Configs(config: Config): AwsS3Config[] {\n  const configs: AwsS3Config[] = [];\n\n  const providerConfigs = config.getOptionalConfig('catalog.providers.awsS3');\n  if (!providerConfigs) {\n    return configs;\n  }\n\n  if (providerConfigs.has('bucketName')) {\n    // simple/single config variant\n    configs.push(readAwsS3Config(DEFAULT_PROVIDER_ID, providerConfigs));\n\n    return configs;\n  }\n\n  for (const id of providerConfigs.keys()) {\n    configs.push(readAwsS3Config(id, providerConfigs.getConfig(id)));\n  }\n\n  return configs;\n}\n\nfunction readAwsS3Config(id: string, config: Config): AwsS3Config {\n  const bucketName = config.getString('bucketName');\n  const region = config.getOptionalString('region');\n  const prefix = config.getOptionalString('prefix');\n\n  return {\n    id,\n    bucketName,\n    region,\n    prefix,\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskRunner } from '@backstage/backend-tasks';\nimport { Config } from '@backstage/config';\nimport { AwsS3Integration, ScmIntegrations } from '@backstage/integration';\nimport {\n  EntityProvider,\n  EntityProviderConnection,\n  LocationSpec,\n  locationSpecToLocationEntity,\n} from '@backstage/plugin-catalog-backend';\nimport { AwsCredentials } from '../credentials/AwsCredentials';\nimport { readAwsS3Configs } from './config';\nimport { AwsS3Config } from './types';\nimport { S3 } from 'aws-sdk';\nimport { ListObjectsV2Output } from 'aws-sdk/clients/s3';\nimport * as uuid from 'uuid';\nimport { Logger } from 'winston';\n\n// TODO: event-based updates using S3 events (+ queue like SQS)?\n/**\n * Provider which discovers catalog files (any name) within an S3 bucket.\n *\n * Use `AwsS3EntityProvider.fromConfig(...)` to create instances.\n *\n * @public\n */\nexport class AwsS3EntityProvider implements EntityProvider {\n  private readonly logger: Logger;\n  private readonly s3: S3;\n  private readonly scheduleFn: () => Promise<void>;\n  private connection?: EntityProviderConnection;\n\n  static fromConfig(\n    configRoot: Config,\n    options: {\n      logger: Logger;\n      schedule: TaskRunner;\n    },\n  ): AwsS3EntityProvider[] {\n    const providerConfigs = readAwsS3Configs(configRoot);\n\n    // Even though the awsS3 integration allows a config array\n    // there is no *real* support for multiple configs.\n    // Usually, there will be just the integration for the default host.\n    // In case, a custom endpoint is used, the host from this endpoint\n    // will be extracted and used as host (e.g., localhost when used with LocalStack)\n    // and the default integration will be added as second integration.\n    // In this case, we still want the first one though, but have no means to select it\n    // just from the bucket name (and region).\n    const integration = ScmIntegrations.fromConfig(configRoot).awsS3.list()[0];\n    if (!integration) {\n      throw new Error('No integration found for awsS3');\n    }\n\n    return providerConfigs.map(\n      providerConfig =>\n        new AwsS3EntityProvider(\n          providerConfig,\n          integration,\n          options.logger,\n          options.schedule,\n        ),\n    );\n  }\n\n  private constructor(\n    private readonly config: AwsS3Config,\n    integration: AwsS3Integration,\n    logger: Logger,\n    schedule: TaskRunner,\n  ) {\n    this.logger = logger.child({\n      target: this.getProviderName(),\n    });\n\n    this.s3 = new S3({\n      apiVersion: '2006-03-01',\n      credentials: AwsCredentials.create(\n        integration.config,\n        'backstage-aws-s3-provider',\n      ),\n      endpoint: integration.config.endpoint,\n      region: this.config.region,\n      s3ForcePathStyle: integration.config.s3ForcePathStyle,\n    });\n\n    this.scheduleFn = this.createScheduleFn(schedule);\n  }\n\n  private createScheduleFn(schedule: TaskRunner): () => Promise<void> {\n    return async () => {\n      const taskId = `${this.getProviderName()}:refresh`;\n      return schedule.run({\n        id: taskId,\n        fn: async () => {\n          const logger = this.logger.child({\n            class: AwsS3EntityProvider.prototype.constructor.name,\n            taskId,\n            taskInstanceId: uuid.v4(),\n          });\n\n          try {\n            await this.refresh(logger);\n          } catch (error) {\n            logger.error(error);\n          }\n        },\n      });\n    };\n  }\n\n  /** {@inheritdoc @backstage/plugin-catalog-backend#EntityProvider.getProviderName} */\n  getProviderName(): string {\n    return `awsS3-provider:${this.config.id}`;\n  }\n\n  /** {@inheritdoc @backstage/plugin-catalog-backend#EntityProvider.connect} */\n  async connect(connection: EntityProviderConnection): Promise<void> {\n    this.connection = connection;\n    await this.scheduleFn();\n  }\n\n  async refresh(logger: Logger) {\n    if (!this.connection) {\n      throw new Error('Not initialized');\n    }\n\n    logger.info('Discovering AWS S3 objects');\n\n    const keys = await this.listAllObjectKeys();\n    logger.info(`Discovered ${keys.length} AWS S3 objects`);\n\n    const locations = keys.map(key => this.createLocationSpec(key));\n\n    await this.connection.applyMutation({\n      type: 'full',\n      entities: locations.map(location => {\n        return {\n          locationKey: this.getProviderName(),\n          entity: locationSpecToLocationEntity({ location }),\n        };\n      }),\n    });\n\n    logger.info(`Committed ${locations.length} Locations for AWS S3 objects`);\n  }\n\n  private async listAllObjectKeys(): Promise<string[]> {\n    const keys: string[] = [];\n\n    let continuationToken: string | undefined = undefined;\n    let output: ListObjectsV2Output;\n    do {\n      const request = this.s3.listObjectsV2({\n        Bucket: this.config.bucketName,\n        ContinuationToken: continuationToken,\n        Prefix: this.config.prefix,\n      });\n\n      output = await request.promise();\n      if (output.Contents) {\n        output.Contents.forEach(item => {\n          if (item.Key && !item.Key.endsWith('/')) {\n            keys.push(item.Key);\n          }\n        });\n      }\n      continuationToken = output.NextContinuationToken;\n    } while (continuationToken);\n\n    return keys;\n  }\n\n  private createLocationSpec(key: string): LocationSpec {\n    return {\n      type: 'url',\n      target: this.createObjectUrl(key),\n      presence: 'required',\n    };\n  }\n\n  private createObjectUrl(key: string): string {\n    const bucketName = this.config.bucketName;\n    const endpoint = this.s3.endpoint.href;\n\n    return encodeURI(`${endpoint}${bucketName}/${key}`);\n  }\n}\n"],"names":["AWS","processingResult","isError","limiterFactory","Credentials","aws","S3","integration","ScmIntegrations","uuid","locationSpecToLocationEntity"],"mappings":"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"}