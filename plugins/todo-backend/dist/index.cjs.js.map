{"version":3,"file":"index.cjs.js","sources":["../src/lib/TodoReader/createTodoParser.ts","../src/lib/TodoReader/TodoScmReader.ts","../src/service/router.ts","../src/service/TodoReaderService.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extname } from 'path';\nimport { parse } from 'leasot';\nimport { TodoParser } from './types';\n\n/** @public */\nexport type TodoParserOptions = {\n  /** Custom tags to support in addition to TODO and FIXME */\n  additionalTags?: string[];\n};\n\n/** @public */\nexport function createTodoParser(options: TodoParserOptions = {}): TodoParser {\n  return ({ content, path }) => {\n    try {\n      const comments = parse(content, {\n        customTags: options.additionalTags,\n        extension: extname(path),\n      });\n\n      return comments.map(comment => ({\n        text: comment.text,\n        tag: comment.tag,\n        author: comment.ref || undefined,\n        lineNumber: comment.line,\n      }));\n    } catch /* ignore unsupported extensions */ {\n      return [];\n    }\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { Logger } from 'winston';\n\nimport {\n  ReadTodosOptions,\n  ReadTodosResult,\n  TodoItem,\n  TodoParser,\n  TodoReader,\n} from './types';\nimport { Config } from '@backstage/config';\nimport { createTodoParser } from './createTodoParser';\nimport path from 'path';\n\nconst excludedExtensions = [\n  '.png',\n  '.svg',\n  '.jpg',\n  '.jpeg',\n  '.gif',\n  '.raw',\n  '.lock',\n  '.ico',\n];\nconst MAX_FILE_SIZE = 200000;\n\n/** @public */\nexport type TodoScmReaderOptions = {\n  logger: Logger;\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n  parser?: TodoParser;\n  filePathFilter?: (filePath: string) => boolean;\n};\n\ntype CacheItem = {\n  etag: string;\n  result: ReadTodosResult;\n};\n\n/** @public */\nexport class TodoScmReader implements TodoReader {\n  private readonly logger: Logger;\n  private readonly reader: UrlReader;\n  private readonly parser: TodoParser;\n  private readonly integrations: ScmIntegrations;\n  private readonly filePathFilter: (filePath: string) => boolean;\n\n  private readonly cache = new Map<string, CacheItem>();\n  private readonly inFlightReads = new Map<string, Promise<CacheItem>>();\n\n  static fromConfig(\n    config: Config,\n    options: Omit<TodoScmReaderOptions, 'integrations'>,\n  ) {\n    return new TodoScmReader({\n      ...options,\n      integrations: ScmIntegrations.fromConfig(config),\n    });\n  }\n\n  constructor(options: TodoScmReaderOptions) {\n    this.logger = options.logger;\n    this.reader = options.reader;\n    this.parser = options.parser ?? createTodoParser();\n    this.integrations = options.integrations;\n    this.filePathFilter = options.filePathFilter ?? (() => true);\n  }\n\n  async readTodos(options: ReadTodosOptions): Promise<ReadTodosResult> {\n    const { url } = options;\n    const inFlightRead = this.inFlightReads.get(url);\n    if (inFlightRead) {\n      return inFlightRead.then(read => read.result);\n    }\n\n    const cacheItem = this.cache.get(url);\n    const newRead = this.doReadTodos({ url }, cacheItem?.etag).catch(error => {\n      if (cacheItem && error.name === 'NotModifiedError') {\n        return cacheItem;\n      }\n      throw error;\n    });\n\n    this.inFlightReads.set(url, newRead);\n    try {\n      const newCacheItem = await newRead;\n      this.cache.set(url, newCacheItem);\n      return newCacheItem.result;\n    } finally {\n      this.inFlightReads.delete(url);\n    }\n  }\n\n  private async doReadTodos(\n    options: ReadTodosOptions,\n    etag?: string,\n  ): Promise<CacheItem> {\n    const { url } = options;\n    const filePathFilter = this.filePathFilter;\n    const tree = await this.reader.readTree(url, {\n      etag,\n      filter(filePath, info) {\n        const extname = path.extname(filePath);\n        if (info && info.size > MAX_FILE_SIZE) {\n          return false;\n        }\n        return (\n          !filePath.startsWith('.') &&\n          !filePath.includes('/.') &&\n          !excludedExtensions.includes(extname) &&\n          filePathFilter(filePath)\n        );\n      },\n    });\n\n    const files = await tree.files();\n    this.logger.info(`Read ${files.length} files from ${url}`);\n\n    const todos = new Array<TodoItem>();\n    for (const file of files) {\n      const content = await file.content();\n      try {\n        const items = this.parser({\n          path: file.path,\n          content: content.toString('utf8'),\n        });\n\n        todos.push(\n          ...items.map(({ lineNumber, text, tag, author }) => ({\n            text,\n            tag,\n            author,\n            lineNumber,\n            repoFilePath: file.path,\n            viewUrl: this.integrations.resolveUrl({\n              url: file.path,\n              base: url,\n              lineNumber,\n            }),\n          })),\n        );\n      } catch (error) {\n        this.logger.error(\n          `Failed to parse TODO in ${url} at ${file.path}, ${error}`,\n        );\n      }\n    }\n\n    return { result: { items: todos }, etag: tree.etag };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef, parseEntityRef } from '@backstage/catalog-model';\nimport { InputError } from '@backstage/errors';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { TodoService } from './types';\n\nconst TODO_FIELDS = [\n  'text',\n  'tag',\n  'author',\n  'viewUrl',\n  'repoFilePath',\n] as const;\n\n/** @public */\nexport interface RouterOptions {\n  todoService: TodoService;\n}\n\n/** @public */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { todoService } = options;\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/v1/todos', async (req, res) => {\n    const offset = parseIntegerParam(req.query.offset, 'offset query');\n    const limit = parseIntegerParam(req.query.limit, 'limit query');\n    const orderBy = parseOrderByParam(req.query.orderBy, TODO_FIELDS);\n    const filters = parseFilterParam(req.query.filter, TODO_FIELDS);\n\n    const entityRef = req.query.entity;\n    if (entityRef && typeof entityRef !== 'string') {\n      throw new InputError(`entity query must be a string`);\n    }\n    let entity: CompoundEntityRef | undefined = undefined;\n    if (entityRef) {\n      try {\n        entity = parseEntityRef(entityRef);\n      } catch (error) {\n        throw new InputError(`Invalid entity ref, ${error}`);\n      }\n    }\n\n    const todos = await todoService.listTodos(\n      {\n        entity,\n        offset,\n        limit,\n        orderBy,\n        filters,\n      },\n      {\n        token: getBearerToken(req.headers.authorization),\n      },\n    );\n    res.json(todos);\n  });\n\n  return router;\n}\n\nexport function parseIntegerParam(\n  str: unknown,\n  ctx: string,\n): number | undefined {\n  if (str === undefined) {\n    return undefined;\n  }\n  if (typeof str !== 'string') {\n    throw new InputError(`invalid ${ctx}, must be a string`);\n  }\n  const parsed = parseInt(str, 10);\n  if (!Number.isInteger(parsed) || String(parsed) !== str) {\n    throw new InputError(`invalid ${ctx}, not an integer`);\n  }\n  return parsed;\n}\n\nexport function parseOrderByParam<T extends readonly string[]>(\n  str: unknown,\n  allowedFields: T,\n): { field: T[number]; direction: 'asc' | 'desc' } | undefined {\n  if (str === undefined) {\n    return undefined;\n  }\n  if (typeof str !== 'string') {\n    throw new InputError(`invalid orderBy query, must be a string`);\n  }\n  const [field, direction] = str.split('=');\n  if (!field) {\n    throw new InputError(`invalid orderBy query, field name is empty`);\n  }\n  if (direction !== 'asc' && direction !== 'desc') {\n    throw new InputError(\n      `invalid orderBy query, order direction must be 'asc' or 'desc'`,\n    );\n  }\n\n  if (field && !allowedFields.includes(field)) {\n    throw new InputError(\n      `invalid orderBy field, must be one of ${allowedFields.join(', ')}`,\n    );\n  }\n  return { field, direction };\n}\n\nexport function parseFilterParam<T extends readonly string[]>(\n  str: unknown,\n  allowedFields: T,\n): { field: T[number]; value: string }[] | undefined {\n  if (str === undefined) {\n    return undefined;\n  }\n\n  const filters = new Array<{ field: T[number]; value: string }>();\n\n  const strs = [str].flat();\n  for (const filterStr of strs) {\n    if (typeof filterStr !== 'string') {\n      throw new InputError(\n        `invalid filter query, must be a string or list of strings`,\n      );\n    }\n    const splitIndex = filterStr.indexOf('=');\n    if (splitIndex <= 0) {\n      throw new InputError(\n        `invalid filter query, must separate field from value using '='`,\n      );\n    }\n\n    const field = filterStr.slice(0, splitIndex);\n    if (!allowedFields.includes(field)) {\n      throw new InputError(\n        `invalid filter field, must be one of ${allowedFields.join(', ')}`,\n      );\n    }\n\n    const value = filterStr.slice(splitIndex + 1);\n    if (!value) {\n      throw new InputError(`invalid filter query, value may not be empty`);\n    }\n    filters.push({ field, value });\n  }\n\n  return filters;\n}\n\nfunction getBearerToken(header?: string): string | undefined {\n  return header?.match(/Bearer\\s+(\\S+)/i)?.[1];\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  getEntitySourceLocation,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { TodoReader } from '../lib';\nimport { ListTodosRequest, ListTodosResponse, TodoService } from './types';\n\nconst DEFAULT_DEFAULT_PAGE_SIZE = 10;\nconst DEFAULT_MAX_PAGE_SIZE = 50;\n\n/** @public */\nexport type TodoReaderServiceOptions = {\n  todoReader: TodoReader;\n  catalogClient: CatalogApi;\n  maxPageSize?: number;\n  defaultPageSize?: number;\n};\n\nfunction wildcardRegex(str: string): RegExp {\n  const pattern = str\n    .replace(/[.+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    .replace(/\\*/g, '.*');\n  return new RegExp(`^${pattern}$`, 'i');\n}\n\n/** @public */\nexport class TodoReaderService implements TodoService {\n  private readonly todoReader: TodoReader;\n  private readonly catalogClient: CatalogApi;\n  private readonly maxPageSize: number;\n  private readonly defaultPageSize: number;\n\n  constructor(options: TodoReaderServiceOptions) {\n    this.todoReader = options.todoReader;\n    this.catalogClient = options.catalogClient;\n    this.maxPageSize = options.maxPageSize ?? DEFAULT_MAX_PAGE_SIZE;\n    this.defaultPageSize = options.defaultPageSize ?? DEFAULT_DEFAULT_PAGE_SIZE;\n  }\n\n  async listTodos(\n    req: ListTodosRequest,\n    options?: { token?: string },\n  ): Promise<ListTodosResponse> {\n    if (!req.entity) {\n      throw new InputError('Entity filter is required to list TODOs');\n    }\n    const token = options?.token;\n    const entity = await this.catalogClient.getEntityByRef(req.entity, {\n      token,\n    });\n    if (!entity) {\n      throw new NotFoundError(\n        `Entity not found, ${stringifyEntityRef(req.entity)}`,\n      );\n    }\n    const entitySourceLocation = getEntitySourceLocation(entity);\n    if (entitySourceLocation.type !== 'url') {\n      throw new InputError(\n        `Invalid entity location type for ${stringifyEntityRef(entity)}, got '${\n          entitySourceLocation.type\n        }' for location ${entitySourceLocation.target}`,\n      );\n    }\n    const url = entitySourceLocation.target;\n    const todos = await this.todoReader.readTodos({ url });\n\n    let limit = req.limit ?? this.defaultPageSize;\n    if (limit < 0) {\n      limit = 0;\n    } else if (limit > this.maxPageSize) {\n      limit = this.maxPageSize;\n    }\n\n    let offset = req.offset ?? 0;\n    if (offset < 0) {\n      offset = 0;\n    }\n\n    let items = todos.items;\n    const { orderBy, filters } = req;\n\n    if (filters) {\n      for (const { field, value } of filters) {\n        const pattern = wildcardRegex(value);\n        items = items.filter(item => item[field]?.match(pattern));\n      }\n    }\n\n    if (orderBy) {\n      const dir = orderBy.direction === 'asc' ? 1 : -1;\n      const field = orderBy.field;\n      items = items.slice().sort((item1, item2) => {\n        const field1 = item1[field];\n        const field2 = item2[field];\n\n        if (field1 && field2) {\n          return dir * field1.localeCompare(field2, 'en-US');\n        } else if (field1 && !field2) {\n          return -1;\n        } else if (!field1 && field2) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n\n    return {\n      items: items.slice(offset, offset + limit),\n      totalCount: items.length,\n      offset,\n      limit,\n    };\n  }\n}\n"],"names":["path","parse","extname","ScmIntegrations","Router","express","InputError","parseEntityRef","NotFoundError","stringifyEntityRef","getEntitySourceLocation"],"mappings":"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"}