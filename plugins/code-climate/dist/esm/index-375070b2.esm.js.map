{"version":3,"file":"index-375070b2.esm.js","sources":["../../src/api/mock/mock-api.ts","../../src/api/code-climate-api.ts","../../src/api/production-api.ts","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CodeClimateData } from '../code-climate-data';\nimport { CodeClimateApi } from '../code-climate-api';\nimport maintainabilityMock from './code-climate-maintainability-mock.json';\nimport testCoverageMock from './code-climate-test-coverage-mock.json';\nimport { Duration } from 'luxon';\nimport humanizeDuration from 'humanize-duration';\n\nconst maintainabilityData = maintainabilityMock.data.attributes.ratings[0];\nconst testCoverageData = testCoverageMock.data.attributes.rating;\n\nconst maintainabilityValue: any = {};\nmaintainabilityValue[\n  maintainabilityData.measure.meta.implementation_time.unit\n] = maintainabilityData.measure.meta.implementation_time.value.toFixed();\n\nexport const mockData: CodeClimateData = {\n  repoID: '6b8cc37a64b741dd9d516119',\n  maintainability: {\n    letter: maintainabilityData.letter,\n    value: humanizeDuration(\n      Duration.fromObject(maintainabilityValue).toMillis(),\n      { largest: 1 },\n    ),\n  },\n  testCoverage: {\n    letter: testCoverageData.letter,\n    value: testCoverageData.measure.value.toFixed(),\n  },\n  numberOfCodeSmells: 97,\n  numberOfDuplication: 49,\n  numberOfOtherIssues: 26,\n};\n\nexport class MockCodeClimateApi implements CodeClimateApi {\n  fetchData(): Promise<CodeClimateData> {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(mockData), 800);\n    });\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CodeClimateData } from './code-climate-data';\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport const codeClimateApiRef = createApiRef<CodeClimateApi>({\n  id: 'plugin.code-climate.service',\n});\n\nexport interface CodeClimateApi {\n  fetchData(repoID: string): Promise<CodeClimateData>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CodeClimateData,\n  CodeClimateRepoData,\n  CodeClimateMaintainabilityData,\n  CodeClimateTestCoverageData,\n  CodeClimateIssuesData,\n} from './code-climate-data';\nimport { CodeClimateApi } from './code-climate-api';\nimport { DiscoveryApi } from '@backstage/core-plugin-api';\nimport { Duration } from 'luxon';\nimport humanizeDuration from 'humanize-duration';\n\nconst pageQuery = encodeURIComponent('page[size]');\nconst statusFilter = encodeURIComponent('filter[status][$in][]');\nconst categoriesFilter = encodeURIComponent('filter[categories][$in][]');\nconst basicIssuesOptions = `${pageQuery}=1&${statusFilter}=open&${statusFilter}=confirmed`;\nconst codeSmellsQuery = `${basicIssuesOptions}&${categoriesFilter}=Complexity`;\nconst duplicationQuery = `${basicIssuesOptions}&${categoriesFilter}=Duplication`;\nconst otherIssuesQuery = `${basicIssuesOptions}&${categoriesFilter}=Bug%20Risk`;\n\nexport class ProductionCodeClimateApi implements CodeClimateApi {\n  constructor(private readonly discoveryApi: DiscoveryApi) {}\n\n  async fetchAllData(options: {\n    apiUrl: string;\n    repoID: string;\n    snapshotID: string;\n    testReportID: string;\n  }): Promise<any> {\n    const { apiUrl, repoID, snapshotID, testReportID } = options;\n\n    const [\n      maintainabilityResponse,\n      testCoverageResponse,\n      codeSmellsResponse,\n      duplicationResponse,\n      otherIssuesResponse,\n    ] = await Promise.all([\n      await fetch(`${apiUrl}/repos/${repoID}/snapshots/${snapshotID}`),\n      await fetch(`${apiUrl}/repos/${repoID}/test_reports/${testReportID}`),\n      await fetch(\n        `${apiUrl}/repos/${repoID}/snapshots/${snapshotID}/issues?${codeSmellsQuery}`,\n      ),\n      await fetch(\n        `${apiUrl}/repos/${repoID}/snapshots/${snapshotID}/issues?${duplicationQuery}`,\n      ),\n      await fetch(\n        `${apiUrl}/repos/${repoID}/snapshots/${snapshotID}/issues?${otherIssuesQuery}`,\n      ),\n    ]);\n\n    if (\n      !maintainabilityResponse.ok ||\n      !testCoverageResponse.ok ||\n      !codeSmellsResponse.ok ||\n      !duplicationResponse.ok ||\n      !otherIssuesResponse.ok\n    ) {\n      throw new Error('Failed fetching Code Climate info');\n    }\n\n    const maintainabilityData = (\n      (await maintainabilityResponse.json()) as CodeClimateMaintainabilityData\n    ).data.attributes.ratings[0];\n    const testCoverageData = (\n      (await testCoverageResponse.json()) as CodeClimateTestCoverageData\n    ).data.attributes.rating;\n    const codeSmellsData = (\n      (await codeSmellsResponse.json()) as CodeClimateIssuesData\n    ).meta.total_count;\n    const duplicationData = (\n      (await duplicationResponse.json()) as CodeClimateIssuesData\n    ).meta.total_count;\n    const otherIssuesData = (\n      (await otherIssuesResponse.json()) as CodeClimateIssuesData\n    ).meta.total_count;\n\n    return [\n      maintainabilityData,\n      testCoverageData,\n      codeSmellsData,\n      duplicationData,\n      otherIssuesData,\n    ];\n  }\n\n  async fetchData(repoID: string): Promise<CodeClimateData> {\n    if (!repoID) {\n      throw new Error('No Repo id found');\n    }\n\n    const apiUrl = `${await this.discoveryApi.getBaseUrl(\n      'proxy',\n    )}/codeclimate/api`;\n\n    const repoResponse = await fetch(`${apiUrl}/repos/${repoID}`);\n\n    if (!repoResponse.ok) {\n      throw new Error('Failed fetching Code Climate info');\n    }\n\n    const repoData = ((await repoResponse.json()) as CodeClimateRepoData).data;\n    const snapshotID =\n      repoData.relationships.latest_default_branch_snapshot.data.id;\n    const testReportID =\n      repoData.relationships.latest_default_branch_test_report.data.id;\n\n    const [\n      maintainabilityData,\n      testCoverageData,\n      codeSmellsData,\n      duplicationData,\n      otherIssuesData,\n    ] = await this.fetchAllData({\n      apiUrl,\n      repoID,\n      snapshotID,\n      testReportID,\n    });\n\n    const maintainabilityValue: any = {};\n    maintainabilityValue[\n      maintainabilityData.measure.meta.implementation_time.unit\n    ] = maintainabilityData.measure.meta.implementation_time.value.toFixed();\n\n    return {\n      repoID,\n      maintainability: {\n        letter: maintainabilityData.letter,\n        value: humanizeDuration(\n          Duration.fromObject(maintainabilityValue).toMillis(),\n          { largest: 1 },\n        ),\n      },\n      testCoverage: {\n        letter: testCoverageData.letter,\n        value: testCoverageData.measure.value.toFixed(),\n      },\n      numberOfCodeSmells: codeSmellsData,\n      numberOfDuplication: duplicationData,\n      numberOfOtherIssues: otherIssuesData,\n    };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProductionCodeClimateApi, codeClimateApiRef } from './api';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRouteRef,\n  discoveryApiRef,\n  identityApiRef,\n  createComponentExtension,\n} from '@backstage/core-plugin-api';\n\nexport const CODECLIMATE_REPO_ID_ANNOTATION = 'codeclimate.com/repo-id';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'code-climate',\n});\n\nexport const codeClimatePlugin = createPlugin({\n  id: 'code-climate',\n  apis: [\n    createApiFactory({\n      api: codeClimateApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ discoveryApi }) => new ProductionCodeClimateApi(discoveryApi),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n  },\n});\n\nexport const EntityCodeClimateCard = codeClimatePlugin.provide(\n  createComponentExtension({\n    name: 'EntityCodeClimateCard',\n    component: {\n      lazy: () =>\n        import('./components/CodeClimateCard').then(m => m.CodeClimateCard),\n    },\n  }),\n);\n"],"names":[],"mappings":"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"}