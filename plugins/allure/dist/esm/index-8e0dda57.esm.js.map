{"version":3,"file":"index-8e0dda57.esm.js","sources":["../../src/components/AllureReportComponent/AllureReportComponent.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { allureApiRef } from '../../api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  ALLURE_PROJECT_ID_ANNOTATION,\n  isAllureReportAvailable,\n  getAllureProjectId,\n} from '../annotationHelpers';\nimport {\n  MissingAnnotationEmptyState,\n  Progress,\n} from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { Entity } from '@backstage/catalog-model';\n\nconst AllureReport = (props: { entity: Entity }) => {\n  const allureApi = useApi(allureApiRef);\n\n  const allureProjectId = getAllureProjectId(props.entity);\n  const { value, loading } = useAsync(async () => {\n    const url = await allureApi.getReportUrl(allureProjectId);\n    return url;\n  });\n\n  if (loading) {\n    return <Progress />;\n  }\n  return (\n    <iframe\n      style={{\n        display: 'table',\n        width: '100%',\n        height: '100%',\n      }}\n      title=\"Allure Report\"\n      src={value}\n    />\n  );\n};\n\nexport const AllureReportComponent = () => {\n  const { entity } = useEntity();\n  const isReportAvailable = entity && isAllureReportAvailable(entity);\n\n  if (isReportAvailable) return <AllureReport entity={entity} />;\n  return (\n    <MissingAnnotationEmptyState annotation={ALLURE_PROJECT_ID_ANNOTATION} />\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAcA,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;AAChC,EAAE,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AACzC,EAAE,MAAM,eAAe,GAAG,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC3D,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC,YAAY;AAClD,IAAI,MAAM,GAAG,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AAC9D,IAAI,OAAO,GAAG,CAAC;AACf,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,OAAO,EAAE;AACf,IAAI,uBAAuB,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC/D,GAAG;AACH,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE;AACvD,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,EAAE,OAAO;AACtB,MAAM,KAAK,EAAE,MAAM;AACnB,MAAM,MAAM,EAAE,MAAM;AACpB,KAAK;AACL,IAAI,KAAK,EAAE,eAAe;AAC1B,IAAI,GAAG,EAAE,KAAK;AACd,GAAG,CAAC,CAAC;AACL,CAAC,CAAC;AACU,MAAC,qBAAqB,GAAG,MAAM;AAC3C,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;AACjC,EAAE,MAAM,iBAAiB,GAAG,MAAM,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC;AACtE,EAAE,IAAI,iBAAiB;AACvB,IAAI,uBAAuB,KAAK,CAAC,aAAa,CAAC,YAAY,EAAE;AAC7D,MAAM,MAAM;AACZ,KAAK,CAAC,CAAC;AACP,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,2BAA2B,EAAE;AAC1E,IAAI,UAAU,EAAE,4BAA4B;AAC5C,GAAG,CAAC,CAAC;AACL;;;;"}