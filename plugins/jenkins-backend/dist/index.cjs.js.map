{"version":3,"file":"index.cjs.js","sources":["../src/service/jenkinsInfoProvider.ts","../src/service/jenkinsApi.ts","../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\n\nexport interface JenkinsInfoProvider {\n  getInstance(options: {\n    /**\n     * The entity to get the info about.\n     */\n    entityRef: CompoundEntityRef;\n    /**\n     * A specific job to get. This is only passed in when we know about a job name we are interested in.\n     */\n    jobFullName?: string;\n\n    backstageToken?: string;\n  }): Promise<JenkinsInfo>;\n}\n\nexport interface JenkinsInfo {\n  baseUrl: string;\n  headers?: Record<string, string | string[]>;\n  jobFullName: string; // TODO: make this an array\n  crumbIssuer?: boolean;\n}\n\nexport interface JenkinsInstanceConfig {\n  name: string;\n  baseUrl: string;\n  username: string;\n  apiKey: string;\n  crumbIssuer?: boolean;\n}\n\n/**\n * Holds multiple Jenkins configurations.\n */\nexport class JenkinsConfig {\n  constructor(public readonly instances: JenkinsInstanceConfig[]) {}\n\n  /**\n   * Read all Jenkins instance configurations.\n   * @param config - Root configuration\n   * @returns A JenkinsConfig that contains all configured Jenkins instances.\n   */\n  static fromConfig(config: Config): JenkinsConfig {\n    const DEFAULT_JENKINS_NAME = 'default';\n\n    const jenkinsConfig = config.getConfig('jenkins');\n\n    // load all named instance config\n    const namedInstanceConfig =\n      jenkinsConfig.getOptionalConfigArray('instances')?.map(c => ({\n        name: c.getString('name'),\n        baseUrl: c.getString('baseUrl'),\n        username: c.getString('username'),\n        apiKey: c.getString('apiKey'),\n        crumbIssuer: c.getOptionalBoolean('crumbIssuer'),\n      })) || [];\n\n    // load unnamed default config\n    const hasNamedDefault = namedInstanceConfig.some(\n      x => x.name === DEFAULT_JENKINS_NAME,\n    );\n\n    // Get these as optional strings and check to give a better error message\n    const baseUrl = jenkinsConfig.getOptionalString('baseUrl');\n    const username = jenkinsConfig.getOptionalString('username');\n    const apiKey = jenkinsConfig.getOptionalString('apiKey');\n    const crumbIssuer = jenkinsConfig.getOptionalBoolean('crumbIssuer');\n\n    if (hasNamedDefault && (baseUrl || username || apiKey)) {\n      throw new Error(\n        `Found both a named jenkins instance with name ${DEFAULT_JENKINS_NAME} and top level baseUrl, username or apiKey config. Use only one style of config.`,\n      );\n    }\n\n    const unnamedNonePresent = !baseUrl && !username && !apiKey;\n    const unnamedAllPresent = baseUrl && username && apiKey;\n    if (!(unnamedAllPresent || unnamedNonePresent)) {\n      throw new Error(\n        `Found partial default jenkins config. All (or none) of baseUrl, username and apiKey must be provided.`,\n      );\n    }\n\n    if (unnamedAllPresent) {\n      const unnamedInstanceConfig = [\n        { name: DEFAULT_JENKINS_NAME, baseUrl, username, apiKey, crumbIssuer },\n      ] as {\n        name: string;\n        baseUrl: string;\n        username: string;\n        apiKey: string;\n        crumbIssuer: boolean;\n      }[];\n\n      return new JenkinsConfig([\n        ...namedInstanceConfig,\n        ...unnamedInstanceConfig,\n      ]);\n    }\n\n    return new JenkinsConfig(namedInstanceConfig);\n  }\n\n  /**\n   * Gets a Jenkins instance configuration by name, or the default one if no\n   * name is provided.\n   * @param jenkinsName - Optional name of the Jenkins instance.\n   * @returns The requested Jenkins instance.\n   */\n  getInstanceConfig(jenkinsName?: string): JenkinsInstanceConfig {\n    const DEFAULT_JENKINS_NAME = 'default';\n\n    if (!jenkinsName || jenkinsName === DEFAULT_JENKINS_NAME) {\n      // no name provided, use default\n      const instanceConfig = this.instances.find(\n        c => c.name === DEFAULT_JENKINS_NAME,\n      );\n\n      if (!instanceConfig) {\n        throw new Error(\n          `Couldn't find a default jenkins instance in the config. Either configure an instance with name ${DEFAULT_JENKINS_NAME} or add a prefix to your annotation value.`,\n        );\n      }\n\n      return instanceConfig;\n    }\n\n    // A name is provided, look it up.\n    const instanceConfig = this.instances.find(c => c.name === jenkinsName);\n\n    if (!instanceConfig) {\n      throw new Error(\n        `Couldn't find a jenkins instance in the config with name ${jenkinsName}`,\n      );\n    }\n    return instanceConfig;\n  }\n}\n\n/**\n * Use default config and annotations, build using fromConfig static function.\n *\n * This will fallback through various deprecated config and annotation schemes.\n */\nexport class DefaultJenkinsInfoProvider implements JenkinsInfoProvider {\n  static readonly OLD_JENKINS_ANNOTATION = 'jenkins.io/github-folder';\n  static readonly NEW_JENKINS_ANNOTATION = 'jenkins.io/job-full-name';\n\n  private constructor(\n    private readonly config: JenkinsConfig,\n    private readonly catalog: CatalogApi,\n  ) {}\n\n  static fromConfig(options: {\n    config: Config;\n    catalog: CatalogApi;\n  }): DefaultJenkinsInfoProvider {\n    return new DefaultJenkinsInfoProvider(\n      JenkinsConfig.fromConfig(options.config),\n      options.catalog,\n    );\n  }\n\n  async getInstance(opt: {\n    entityRef: CompoundEntityRef;\n    jobFullName?: string;\n    backstageToken?: string;\n  }): Promise<JenkinsInfo> {\n    // load entity\n    const entity = await this.catalog.getEntityByRef(opt.entityRef, {\n      token: opt.backstageToken,\n    });\n    if (!entity) {\n      throw new Error(\n        `Couldn't find entity with name: ${stringifyEntityRef(opt.entityRef)}`,\n      );\n    }\n\n    // lookup `[jenkinsName#]jobFullName` from entity annotation\n    const jenkinsAndJobName =\n      DefaultJenkinsInfoProvider.getEntityAnnotationValue(entity);\n    if (!jenkinsAndJobName) {\n      throw new Error(\n        `Couldn't find jenkins annotation (${\n          DefaultJenkinsInfoProvider.NEW_JENKINS_ANNOTATION\n        }) on entity with name: ${stringifyEntityRef(opt.entityRef)}`,\n      );\n    }\n\n    let jobFullName;\n    let jenkinsName: string | undefined;\n    const splitIndex = jenkinsAndJobName.indexOf(':');\n    if (splitIndex === -1) {\n      // no jenkinsName specified, use default\n      jobFullName = jenkinsAndJobName;\n    } else {\n      // There is a jenkinsName specified\n      jenkinsName = jenkinsAndJobName.substring(0, splitIndex);\n      jobFullName = jenkinsAndJobName.substring(\n        splitIndex + 1,\n        jenkinsAndJobName.length,\n      );\n    }\n\n    // lookup baseURL + creds from config\n    const instanceConfig = this.config.getInstanceConfig(jenkinsName);\n\n    const creds = Buffer.from(\n      `${instanceConfig.username}:${instanceConfig.apiKey}`,\n      'binary',\n    ).toString('base64');\n\n    return {\n      baseUrl: instanceConfig.baseUrl,\n      headers: {\n        Authorization: `Basic ${creds}`,\n      },\n      jobFullName,\n      crumbIssuer: instanceConfig.crumbIssuer,\n    };\n  }\n\n  private static getEntityAnnotationValue(entity: Entity) {\n    return (\n      entity.metadata.annotations?.[\n        DefaultJenkinsInfoProvider.OLD_JENKINS_ANNOTATION\n      ] ||\n      entity.metadata.annotations?.[\n        DefaultJenkinsInfoProvider.NEW_JENKINS_ANNOTATION\n      ]\n    );\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { JenkinsInfo } from './jenkinsInfoProvider';\nimport jenkins from 'jenkins';\nimport type {\n  BackstageBuild,\n  BackstageProject,\n  JenkinsBuild,\n  JenkinsProject,\n  ScmDetails,\n} from '../types';\nimport {\n  AuthorizeResult,\n  PermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport { jenkinsExecutePermission } from '@backstage/plugin-jenkins-common';\nimport { NotAllowedError } from '@backstage/errors';\n\nexport class JenkinsApiImpl {\n  private static readonly lastBuildTreeSpec = `lastBuild[\n                    number,\n                    url,\n                    fullDisplayName,\n                    displayName,\n                    building,\n                    result,\n                    timestamp,\n                    duration,\n                    actions[\n                      *[\n                        *[\n                          *[\n                            *\n                          ]\n                        ]\n                      ]\n                    ]\n                  ],`;\n\n  private static readonly jobTreeSpec = `actions[*],\n                   ${JenkinsApiImpl.lastBuildTreeSpec}\n                   jobs{0,1},\n                   name,\n                   fullName,\n                   displayName,\n                   fullDisplayName,\n                   inQueue`;\n\n  private static readonly jobsTreeSpec = `jobs[\n                   ${JenkinsApiImpl.jobTreeSpec}\n                 ]{0,50}`;\n\n  constructor(private readonly permissionApi?: PermissionEvaluator) {}\n\n  /**\n   * Get a list of projects for the given JenkinsInfo.\n   * @see ../../../jenkins/src/api/JenkinsApi.ts#getProjects\n   */\n  async getProjects(jenkinsInfo: JenkinsInfo, branch?: string) {\n    const client = await JenkinsApiImpl.getClient(jenkinsInfo);\n    const projects: BackstageProject[] = [];\n\n    if (branch) {\n      // we have been asked to filter to a single branch.\n      // Assume jenkinsInfo.jobFullName is a folder which contains one job per branch.\n      // TODO: extract a strategy interface for this\n      const job = await client.job.get({\n        name: `${jenkinsInfo.jobFullName}/${branch}`,\n        tree: JenkinsApiImpl.jobTreeSpec.replace(/\\s/g, ''),\n      });\n      projects.push(this.augmentProject(job));\n    } else {\n      // We aren't filtering\n      // Assume jenkinsInfo.jobFullName is a folder which contains one job per branch.\n      const folder = await client.job.get({\n        name: jenkinsInfo.jobFullName,\n        // Filter only be the information we need, instead of loading all fields.\n        // Limit to only show the latest build for each job and only load 50 jobs\n        // at all.\n        // Whitespaces are only included for readablity here and stripped out\n        // before sending to Jenkins\n        tree: JenkinsApiImpl.jobsTreeSpec.replace(/\\s/g, ''),\n      });\n\n      // TODO: support this being a project itself.\n      for (const jobDetails of folder.jobs) {\n        // for each branch (we assume)\n        if (jobDetails?.jobs) {\n          // skipping folders inside folders for now\n          // TODO: recurse\n        } else {\n          projects.push(this.augmentProject(jobDetails));\n        }\n      }\n    }\n    return projects;\n  }\n\n  /**\n   * Get a single build.\n   * @see ../../../jenkins/src/api/JenkinsApi.ts#getBuild\n   */\n  async getBuild(\n    jenkinsInfo: JenkinsInfo,\n    jobFullName: string,\n    buildNumber: number,\n  ) {\n    const client = await JenkinsApiImpl.getClient(jenkinsInfo);\n\n    const project = await client.job.get({\n      name: jobFullName,\n      depth: 1,\n    });\n\n    const build = await client.build.get(jobFullName, buildNumber);\n    const jobScmInfo = JenkinsApiImpl.extractScmDetailsFromJob(project);\n\n    return this.augmentBuild(build, jobScmInfo);\n  }\n\n  /**\n   * Trigger a build of a project\n   * @see ../../../jenkins/src/api/JenkinsApi.ts#retry\n   */\n  async buildProject(\n    jenkinsInfo: JenkinsInfo,\n    jobFullName: string,\n    resourceRef: string,\n    options?: { token?: string },\n  ) {\n    const client = await JenkinsApiImpl.getClient(jenkinsInfo);\n\n    if (this.permissionApi) {\n      const response = await this.permissionApi.authorize(\n        [{ permission: jenkinsExecutePermission, resourceRef }],\n        { token: options?.token },\n      );\n      // permission api returns always at least one item, we need to check only one result since we do not expect any additional results\n      const { result } = response[0];\n      if (result === AuthorizeResult.DENY) {\n        throw new NotAllowedError();\n      }\n    }\n\n    // looks like the current SDK only supports triggering a new build\n    // can't see any support for replay (re-running the specific build with the same SCM info)\n\n    // Note Jenkins itself has concepts of rebuild and replay on a job.\n    // The latter should be possible to trigger with a POST to /replay/rebuild\n    await client.job.build(jobFullName);\n  }\n\n  // private helper methods\n\n  private static async getClient(jenkinsInfo: JenkinsInfo) {\n    // The typings for the jenkins library are out of date so just cast to any\n    return jenkins({\n      baseUrl: jenkinsInfo.baseUrl,\n      headers: jenkinsInfo.headers,\n      promisify: true,\n      crumbIssuer: jenkinsInfo.crumbIssuer,\n    }) as any;\n  }\n\n  private augmentProject(project: JenkinsProject): BackstageProject {\n    let status: string;\n\n    if (project.inQueue) {\n      status = 'queued';\n    } else if (!project.lastBuild) {\n      status = 'build not found';\n    } else if (project.lastBuild.building) {\n      status = 'running';\n    } else if (!project.lastBuild.result) {\n      status = 'unknown';\n    } else {\n      status = project.lastBuild.result;\n    }\n\n    const jobScmInfo = JenkinsApiImpl.extractScmDetailsFromJob(project);\n\n    return {\n      ...project,\n      lastBuild: project.lastBuild\n        ? this.augmentBuild(project.lastBuild, jobScmInfo)\n        : null,\n      status,\n      // actions: undefined,\n    };\n  }\n\n  private augmentBuild(\n    build: JenkinsBuild,\n    jobScmInfo: ScmDetails | undefined,\n  ): BackstageBuild {\n    const source =\n      build.actions\n        .filter(\n          (action: any) =>\n            action?._class === 'hudson.plugins.git.util.BuildData',\n        )\n        .map((action: any) => {\n          const [first]: any = Object.values(action.buildsByBranchName);\n          const branch = first.revision.branch[0];\n          return {\n            branchName: branch.name,\n            commit: {\n              hash: branch.SHA1.substring(0, 8),\n            },\n          };\n        })\n        .pop() || {};\n\n    if (jobScmInfo) {\n      source.url = jobScmInfo.url;\n      source.displayName = jobScmInfo.displayName;\n      source.author = jobScmInfo.author;\n    }\n\n    let status: string;\n    if (build.building) {\n      status = 'running';\n    } else if (!build.result) {\n      status = 'unknown';\n    } else {\n      status = build.result;\n    }\n    return {\n      ...build,\n      status,\n      source: source,\n      tests: this.getTestReport(build),\n    };\n  }\n\n  private static extractScmDetailsFromJob(\n    project: JenkinsProject,\n  ): ScmDetails | undefined {\n    const scmInfo: ScmDetails | undefined = project.actions\n      .filter(\n        (action: any) =>\n          action?._class === 'jenkins.scm.api.metadata.ObjectMetadataAction',\n      )\n      .map((action: any) => {\n        return {\n          url: action?.objectUrl,\n          // https://javadoc.jenkins.io/plugin/scm-api/jenkins/scm/api/metadata/ObjectMetadataAction.html\n          // branch name for regular builds, pull request title on pull requests\n          displayName: action?.objectDisplayName,\n        };\n      })\n      .pop();\n\n    if (!scmInfo) {\n      return undefined;\n    }\n\n    const author = project.actions\n      .filter(\n        (action: any) =>\n          action?._class ===\n          'jenkins.scm.api.metadata.ContributorMetadataAction',\n      )\n      .map((action: any) => {\n        return action.contributorDisplayName;\n      })\n      .pop();\n\n    if (author) {\n      scmInfo.author = author;\n    }\n\n    return scmInfo;\n  }\n\n  private getTestReport(build: JenkinsBuild): {\n    total: number;\n    passed: number;\n    skipped: number;\n    failed: number;\n    testUrl: string;\n  } {\n    return build.actions\n      .filter(\n        (action: any) =>\n          action?._class === 'hudson.tasks.junit.TestResultAction',\n      )\n      .map((action: any) => {\n        return {\n          total: action.totalCount,\n          passed: action.totalCount - action.failCount - action.skipCount,\n          skipped: action.skipCount,\n          failed: action.failCount,\n          testUrl: `${build.url}${action.urlName}/`,\n        };\n      })\n      .pop();\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorHandler } from '@backstage/backend-common';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\nimport { JenkinsInfoProvider } from './jenkinsInfoProvider';\nimport { JenkinsApiImpl } from './jenkinsApi';\nimport {\n  PermissionAuthorizer,\n  PermissionEvaluator,\n  toPermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport { getBearerTokenFromAuthorizationHeader } from '@backstage/plugin-auth-node';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\n\nexport interface RouterOptions {\n  logger: Logger;\n  jenkinsInfoProvider: JenkinsInfoProvider;\n  permissions?: PermissionEvaluator | PermissionAuthorizer;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { jenkinsInfoProvider, permissions, logger } = options;\n\n  let permissionEvaluator: PermissionEvaluator | undefined;\n  if (permissions && 'authorizeConditional' in permissions) {\n    permissionEvaluator = permissions as PermissionEvaluator;\n  } else {\n    logger.warn(\n      'PermissionAuthorizer is deprecated. Please use an instance of PermissionEvaluator instead of PermissionAuthorizer in PluginEnvironment#permissions',\n    );\n    permissionEvaluator = permissions\n      ? toPermissionEvaluator(permissions)\n      : undefined;\n  }\n\n  const jenkinsApi = new JenkinsApiImpl(permissionEvaluator);\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get(\n    '/v1/entity/:namespace/:kind/:name/projects',\n    async (request, response) => {\n      const { namespace, kind, name } = request.params;\n      const token = getBearerTokenFromAuthorizationHeader(\n        request.header('authorization'),\n      );\n      const branch = request.query.branch;\n      let branchStr: string | undefined;\n\n      if (branch === undefined) {\n        branchStr = undefined;\n      } else if (typeof branch === 'string') {\n        branchStr = branch;\n      } else {\n        // this was passed in as something weird -> 400\n        // https://evanhahn.com/gotchas-with-express-query-parsing-and-how-to-avoid-them/\n        response\n          .status(400)\n          .send('Something was unexpected about the branch queryString');\n\n        return;\n      }\n\n      const jenkinsInfo = await jenkinsInfoProvider.getInstance({\n        entityRef: {\n          kind,\n          namespace,\n          name,\n        },\n        backstageToken: token,\n      });\n      const projects = await jenkinsApi.getProjects(jenkinsInfo, branchStr);\n\n      response.json({\n        projects: projects,\n      });\n    },\n  );\n\n  router.get(\n    '/v1/entity/:namespace/:kind/:name/job/:jobFullName/:buildNumber',\n    async (request, response) => {\n      const token = getBearerTokenFromAuthorizationHeader(\n        request.header('authorization'),\n      );\n      const { namespace, kind, name, jobFullName, buildNumber } =\n        request.params;\n\n      const jenkinsInfo = await jenkinsInfoProvider.getInstance({\n        entityRef: {\n          kind,\n          namespace,\n          name,\n        },\n        jobFullName,\n        backstageToken: token,\n      });\n\n      const build = await jenkinsApi.getBuild(\n        jenkinsInfo,\n        jobFullName,\n        parseInt(buildNumber, 10),\n      );\n\n      response.json({\n        build: build,\n      });\n    },\n  );\n\n  router.post(\n    '/v1/entity/:namespace/:kind/:name/job/:jobFullName/:buildNumber::rebuild',\n    async (request, response) => {\n      const { namespace, kind, name, jobFullName } = request.params;\n      const token = getBearerTokenFromAuthorizationHeader(\n        request.header('authorization'),\n      );\n      const jenkinsInfo = await jenkinsInfoProvider.getInstance({\n        entityRef: {\n          kind,\n          namespace,\n          name,\n        },\n        jobFullName,\n        backstageToken: token,\n      });\n\n      const resourceRef = stringifyEntityRef({ kind, namespace, name });\n      await jenkinsApi.buildProject(jenkinsInfo, jobFullName, resourceRef, {\n        token,\n      });\n      response.json({});\n    },\n  );\n  router.use(errorHandler());\n  return router;\n}\n"],"names":["stringifyEntityRef","jenkinsExecutePermission","AuthorizeResult","NotAllowedError","jenkins","toPermissionEvaluator","Router","express","getBearerTokenFromAuthorizationHeader","errorHandler"],"mappings":"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"}