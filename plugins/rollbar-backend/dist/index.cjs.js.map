{"version":3,"file":"index.cjs.js","sources":["../src/util/index.ts","../src/api/RollbarApi.ts","../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface PrimitiveMap {\n  [name: string]: number | string | boolean;\n}\n\nexport const buildQuery = (obj: PrimitiveMap) => {\n  return Object.entries(obj)\n    .map(pair => pair.map(encodeURIComponent).join('='))\n    .join('&');\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport camelcaseKeys from 'camelcase-keys';\nimport { buildQuery } from '../util';\nimport {\n  RollbarItemCount,\n  RollbarItemsResponse,\n  RollbarProject,\n  RollbarProjectAccessToken,\n  RollbarTopActiveItem,\n} from './types';\nimport fetch from 'node-fetch';\n\nconst baseUrl = 'https://api.rollbar.com/api/1';\n\nconst buildUrl = (url: string) => `${baseUrl}${url}`;\n\nexport class RollbarApi {\n  private projectMap: ProjectMetadataMap | undefined;\n\n  constructor(\n    private readonly accessToken: string,\n    private readonly logger: Logger,\n  ) {}\n\n  async getAllProjects() {\n    return this.get<RollbarProject[]>('/projects').then(projects =>\n      projects.filter(p => p.name),\n    );\n  }\n\n  async getProject(projectName: string) {\n    return this.getForProject<RollbarProject>(\n      `/project/:projectId`,\n      projectName,\n      false,\n    );\n  }\n\n  async getProjectItems(projectName: string) {\n    return this.getForProject<RollbarItemsResponse>(\n      `/items`,\n      projectName,\n      true,\n    );\n  }\n\n  async getTopActiveItems(\n    projectName: string,\n    options: { hours: number; environment: string } = {\n      hours: 24,\n      environment: 'production',\n    },\n  ) {\n    return this.getForProject<RollbarTopActiveItem[]>(\n      `/reports/top_active_items?${buildQuery(options)}`,\n      projectName,\n    );\n  }\n\n  async getOccuranceCounts(\n    projectName: string,\n    options: { environment: string; item_id?: number } = {\n      environment: 'production',\n    },\n  ) {\n    return this.getForProject<RollbarItemCount[]>(\n      `/reports/occurrence_counts?${buildQuery(options as any)}`,\n      projectName,\n    );\n  }\n\n  async getActivatedCounts(\n    projectName: string,\n    options: { environment: string; item_id?: number } = {\n      environment: 'production',\n    },\n  ) {\n    return this.getForProject<RollbarItemCount[]>(\n      `/reports/activated_counts?${buildQuery(options as any)}`,\n      projectName,\n    );\n  }\n\n  private async getProjectAccessTokens(projectId: number) {\n    return this.get<RollbarProjectAccessToken[]>(\n      `/project/${projectId}/access_tokens`,\n    );\n  }\n\n  private async get<T>(url: string, accessToken?: string) {\n    const fullUrl = buildUrl(url);\n\n    if (this.logger) {\n      this.logger.info(`Calling Rollbar REST API, ${fullUrl}`);\n    }\n\n    return fetch(\n      fullUrl,\n      getRequestHeaders(accessToken || this.accessToken || ''),\n    )\n      .then(response => response.json())\n      .then(json => camelcaseKeys<T>(json?.result, { deep: true }));\n  }\n\n  private async getForProject<T>(\n    url: string,\n    projectName: string,\n    useProjectToken = true,\n  ) {\n    const project = await this.getProjectMetadata(projectName);\n    const resolvedUrl = url.replace(':projectId', project.id.toString());\n    return this.get<T>(resolvedUrl, useProjectToken ? project.accessToken : '');\n  }\n\n  private async getProjectMetadata(name: string) {\n    const projectMap = await this.getProjectMap();\n    const project = projectMap[name];\n\n    if (!project) {\n      throw Error(`Invalid project: '${name}'`);\n    }\n\n    if (!project.accessToken) {\n      const tokens = await this.getProjectAccessTokens(project.id);\n      const token = tokens.find(t => t.scopes.includes('read'));\n      project.accessToken = token ? token.accessToken : undefined;\n    }\n\n    if (!project.accessToken) {\n      throw Error(`Could not find project read access token for '${name}'`);\n    }\n\n    return project;\n  }\n\n  private async getProjectMap() {\n    if (this.projectMap) {\n      return this.projectMap;\n    }\n\n    const projects = await this.getAllProjects();\n\n    this.projectMap = projects.reduce((accum: ProjectMetadataMap, i) => {\n      accum[i.name] = { id: i.id, name: i.name };\n      return accum;\n    }, {});\n\n    return this.projectMap;\n  }\n}\n\nexport function getRequestHeaders(token: string) {\n  return {\n    headers: {\n      'X-Rollbar-Access-Token': `${token}`,\n    },\n  };\n}\n\ntype ProjectMetadata = {\n  name: string;\n  id: number;\n  accessToken?: string | undefined;\n};\n\ninterface ProjectMetadataMap {\n  [name: string]: ProjectMetadata;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\nimport { errorHandler } from '@backstage/backend-common';\nimport { Config } from '@backstage/config';\nimport { RollbarApi } from '../api';\n\nexport interface RouterOptions {\n  rollbarApi?: RollbarApi;\n  logger: Logger;\n  config: Config;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const router = Router();\n\n  const logger = options.logger.child({ plugin: 'rollbar' });\n  const config = options.config.getConfig('rollbar');\n  const accessToken = !options.rollbarApi\n    ? getRollbarAccountToken(config, logger)\n    : '';\n\n  if (options.rollbarApi || accessToken) {\n    const rollbarApi =\n      options.rollbarApi || new RollbarApi(accessToken, logger);\n\n    router.use(express.json());\n\n    router.get('/projects', async (_req, res) => {\n      const projects = await rollbarApi.getAllProjects();\n      res.status(200).header('').send(projects);\n    });\n\n    router.get('/projects/:id', async (req, res) => {\n      const { id } = req.params;\n      const projects = await rollbarApi.getProject(id);\n      res.status(200).send(projects);\n    });\n\n    router.get('/projects/:id/items', async (req, res) => {\n      const { id } = req.params;\n      const projects = await rollbarApi.getProjectItems(id);\n      res.status(200).send(projects);\n    });\n\n    router.get('/projects/:id/top_active_items', async (req, res) => {\n      const { id } = req.params;\n      const query = req.query;\n      const items = await rollbarApi.getTopActiveItems(id, query as any);\n      res.status(200).send(items);\n    });\n\n    router.get('/projects/:id/occurance_counts', async (req, res) => {\n      const { id } = req.params;\n      const query = req.query;\n      const items = await rollbarApi.getOccuranceCounts(id, query as any);\n      res.status(200).send(items);\n    });\n\n    router.get('/projects/:id/activated_item_counts', async (req, res) => {\n      const { id } = req.params;\n      const query = req.query;\n      const items = await rollbarApi.getActivatedCounts(id, query as any);\n      res.status(200).send(items);\n    });\n  }\n\n  router.use(errorHandler());\n\n  return router;\n}\n\nfunction getRollbarAccountToken(config: Config, logger: Logger) {\n  const token =\n    config.getOptionalString('accountToken') ||\n    process.env.ROLLBAR_ACCOUNT_TOKEN ||\n    '';\n\n  if (!token) {\n    if (process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'The rollbar.accountToken must be provided in config to start the API.',\n      );\n    }\n    logger.warn(\n      'Failed to initialize rollbar backend, set rollbar.accountToken in config to start the API.',\n    );\n  }\n\n  return token;\n}\n"],"names":["fetch","camelcaseKeys","Router","express","errorHandler"],"mappings":"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"}