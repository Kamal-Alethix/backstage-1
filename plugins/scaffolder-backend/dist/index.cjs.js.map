{"version":3,"file":"index.cjs.js","sources":["../src/scaffolder/actions/createTemplateAction.ts","../src/scaffolder/actions/builtin/catalog/register.ts","../src/scaffolder/actions/builtin/catalog/write.ts","../src/scaffolder/actions/builtin/debug/log.ts","../src/scaffolder/actions/builtin/fetch/helpers.ts","../src/scaffolder/actions/builtin/fetch/plain.ts","../src/lib/templating/SecureTemplater.ts","../src/scaffolder/actions/builtin/fetch/template.ts","../src/scaffolder/actions/builtin/filesystem/delete.ts","../src/scaffolder/actions/builtin/filesystem/rename.ts","../src/scaffolder/actions/builtin/helpers.ts","../src/scaffolder/actions/builtin/publish/util.ts","../src/scaffolder/actions/builtin/publish/azure.ts","../src/scaffolder/actions/builtin/publish/bitbucket.ts","../src/scaffolder/actions/builtin/publish/bitbucketCloud.ts","../src/scaffolder/actions/builtin/publish/bitbucketServer.ts","../src/scaffolder/actions/builtin/publish/file.ts","../src/scaffolder/actions/builtin/publish/gerrit.ts","../src/scaffolder/actions/builtin/github/helpers.ts","../src/scaffolder/actions/builtin/publish/github.ts","../src/lib/files/serializeDirectoryContents.ts","../src/lib/files/deserializeDirectoryContents.ts","../src/scaffolder/actions/builtin/publish/githubPullRequest.ts","../src/scaffolder/actions/builtin/publish/gitlab.ts","../src/scaffolder/actions/builtin/publish/gitlabMergeRequest.ts","../src/scaffolder/actions/builtin/github/githubActionsDispatch.ts","../src/scaffolder/actions/builtin/github/githubWebhook.ts","../src/scaffolder/actions/builtin/github/githubIssuesLabel.ts","../src/scaffolder/actions/builtin/createBuiltinActions.ts","../src/scaffolder/actions/TemplateActionRegistry.ts","../src/scaffolder/tasks/DatabaseTaskStore.ts","../src/scaffolder/tasks/StorageTaskBroker.ts","../src/scaffolder/tasks/helper.ts","../src/scaffolder/tasks/NunjucksWorkflowRunner.ts","../src/scaffolder/tasks/TaskWorker.ts","../src/scaffolder/dryrun/DecoratedActionsRegistry.ts","../src/scaffolder/dryrun/createDryRunner.ts","../src/service/helpers.ts","../src/service/router.ts","../src/processor/ScaffolderEntitiesProcessor.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { TemplateAction } from './types';\n\n/**\n * This function is used to create new template actions to get type safety.\n * @public\n */\nexport const createTemplateAction = <TInput extends JsonObject>(\n  templateAction: TemplateAction<TInput>,\n): TemplateAction<TInput> => {\n  // TODO(blam): Can add some more validation here to validate the action later on\n  return templateAction;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { createTemplateAction } from '../../createTemplateAction';\n\n/**\n * Registers entities from a catalog descriptor file in the workspace into the software catalog.\n * @public\n */\nexport function createCatalogRegisterAction(options: {\n  catalogClient: CatalogApi;\n  integrations: ScmIntegrations;\n}) {\n  const { catalogClient, integrations } = options;\n\n  return createTemplateAction<\n    | { catalogInfoUrl: string; optional?: boolean }\n    | { repoContentsUrl: string; catalogInfoPath?: string; optional?: boolean }\n  >({\n    id: 'catalog:register',\n    description:\n      'Registers entities from a catalog descriptor file in the workspace into the software catalog.',\n    schema: {\n      input: {\n        oneOf: [\n          {\n            type: 'object',\n            required: ['catalogInfoUrl'],\n            properties: {\n              catalogInfoUrl: {\n                title: 'Catalog Info URL',\n                description:\n                  'An absolute URL pointing to the catalog info file location',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n          {\n            type: 'object',\n            required: ['repoContentsUrl'],\n            properties: {\n              repoContentsUrl: {\n                title: 'Repository Contents URL',\n                description:\n                  'An absolute URL pointing to the root of a repository directory tree',\n                type: 'string',\n              },\n              catalogInfoPath: {\n                title: 'Fetch URL',\n                description:\n                  'A relative path from the repo root pointing to the catalog info file, defaults to /catalog-info.yaml',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n        ],\n      },\n      output: {\n        type: 'object',\n        required: ['catalogInfoUrl'],\n        properties: {\n          entityRef: {\n            type: 'string',\n          },\n          catalogInfoUrl: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const { input } = ctx;\n\n      let catalogInfoUrl;\n      if ('catalogInfoUrl' in input) {\n        catalogInfoUrl = input.catalogInfoUrl;\n      } else {\n        const { repoContentsUrl, catalogInfoPath = '/catalog-info.yaml' } =\n          input;\n        const integration = integrations.byUrl(repoContentsUrl);\n        if (!integration) {\n          throw new InputError(\n            `No integration found for host ${repoContentsUrl}`,\n          );\n        }\n\n        catalogInfoUrl = integration.resolveUrl({\n          base: repoContentsUrl,\n          url: catalogInfoPath,\n        });\n      }\n\n      ctx.logger.info(`Registering ${catalogInfoUrl} in the catalog`);\n\n      await catalogClient.addLocation(\n        {\n          type: 'url',\n          target: catalogInfoUrl,\n        },\n        ctx.secrets?.backstageToken\n          ? { token: ctx.secrets.backstageToken }\n          : {},\n      );\n\n      try {\n        const result = await catalogClient.addLocation(\n          {\n            dryRun: true,\n            type: 'url',\n            target: catalogInfoUrl,\n          },\n          ctx.secrets?.backstageToken\n            ? { token: ctx.secrets.backstageToken }\n            : {},\n        );\n\n        if (result.entities.length > 0) {\n          const { entities } = result;\n          let entity: any;\n          // prioritise 'Component' type as it is the most central kind of entity\n          entity = entities.find(\n            (e: any) =>\n              !e.metadata.name.startsWith('generated-') &&\n              e.kind === 'Component',\n          );\n          if (!entity) {\n            entity = entities.find(\n              (e: any) => !e.metadata.name.startsWith('generated-'),\n            );\n          }\n          if (!entity) {\n            entity = entities[0];\n          }\n\n          ctx.output('entityRef', stringifyEntityRef(entity));\n        }\n      } catch (e) {\n        if (!input.optional) {\n          throw e;\n        }\n      }\n\n      ctx.output('catalogInfoUrl', catalogInfoUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport * as yaml from 'yaml';\nimport { Entity } from '@backstage/catalog-model';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\n\n/**\n * Writes a catalog descriptor file containing the provided entity to a path in the workspace.\n * @public\n */\nexport function createCatalogWriteAction() {\n  return createTemplateAction<{ filePath?: string; entity: Entity }>({\n    id: 'catalog:write',\n    description: 'Writes the catalog-info.yaml for your template',\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          filePath: {\n            title: 'Catalog file path',\n            description: 'Defaults to catalog-info.yaml',\n            type: 'string',\n          },\n          entity: {\n            title: 'Entity info to write catalog-info.yaml',\n            description:\n              'You can provide the same values used in the Entity schema.',\n            type: 'object',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logStream.write(`Writing catalog-info.yaml`);\n      const { filePath, entity } = ctx.input;\n      const path = filePath ?? 'catalog-info.yaml';\n\n      await fs.writeFile(\n        resolveSafeChildPath(ctx.workspacePath, path),\n        yaml.stringify(entity),\n      );\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readdir, stat } from 'fs-extra';\nimport { relative, join } from 'path';\nimport { createTemplateAction } from '../../createTemplateAction';\n\n/**\n * Writes a message into the log or lists all files in the workspace\n *\n * @remarks\n *\n * This task is useful for local development and testing of both the scaffolder\n * and scaffolder templates.\n *\n * @public\n */\nexport function createDebugLogAction() {\n  return createTemplateAction<{ message?: string; listWorkspace?: boolean }>({\n    id: 'debug:log',\n    description:\n      'Writes a message into the log or lists all files in the workspace.',\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          message: {\n            title: 'Message to output.',\n            type: 'string',\n          },\n          listWorkspace: {\n            title: 'List all files in the workspace, if true.',\n            type: 'boolean',\n          },\n          extra: {\n            title: 'Extra info',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(JSON.stringify(ctx.input, null, 2));\n\n      if (ctx.input?.message) {\n        ctx.logStream.write(ctx.input.message);\n      }\n\n      if (ctx.input?.listWorkspace) {\n        const files = await recursiveReadDir(ctx.workspacePath);\n        ctx.logStream.write(\n          `Workspace:\\n${files\n            .map(f => `  - ${relative(ctx.workspacePath, f)}`)\n            .join('\\n')}`,\n        );\n      }\n    },\n  });\n}\n\nexport async function recursiveReadDir(dir: string): Promise<string[]> {\n  const subdirs = await readdir(dir);\n  const files = await Promise.all(\n    subdirs.map(async subdir => {\n      const res = join(dir, subdir);\n      return (await stat(res)).isDirectory() ? recursiveReadDir(res) : [res];\n    }),\n  );\n  return files.reduce((a, f) => a.concat(f), []);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolveSafeChildPath, UrlReader } from '@backstage/backend-common';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport fs from 'fs-extra';\nimport path from 'path';\n\n/**\n * A helper function that reads the contents of a directory from the given URL.\n * Can be used in your own actions, and also used behind fetch:template and fetch:plain\n *\n * @public\n */\nexport async function fetchContents({\n  reader,\n  integrations,\n  baseUrl,\n  fetchUrl = '.',\n  outputPath,\n}: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n  baseUrl?: string;\n  fetchUrl?: string;\n  outputPath: string;\n}) {\n  let fetchUrlIsAbsolute = false;\n  try {\n    // eslint-disable-next-line no-new\n    new URL(fetchUrl);\n    fetchUrlIsAbsolute = true;\n  } catch {\n    /* ignored */\n  }\n\n  // We handle both file locations and url ones\n  if (!fetchUrlIsAbsolute && baseUrl?.startsWith('file://')) {\n    const basePath = baseUrl.slice('file://'.length);\n    const srcDir = resolveSafeChildPath(path.dirname(basePath), fetchUrl);\n    await fs.copy(srcDir, outputPath);\n  } else {\n    let readUrl;\n\n    if (fetchUrlIsAbsolute) {\n      readUrl = fetchUrl;\n    } else if (baseUrl) {\n      const integration = integrations.byUrl(baseUrl);\n      if (!integration) {\n        throw new InputError(`No integration found for location ${baseUrl}`);\n      }\n\n      readUrl = integration.resolveUrl({\n        url: fetchUrl,\n        base: baseUrl,\n      });\n    } else {\n      throw new InputError(\n        `Failed to fetch, template location could not be determined and the fetch URL is relative, ${fetchUrl}`,\n      );\n    }\n\n    const res = await reader.readTree(readUrl);\n    await fs.ensureDir(outputPath);\n    await res.dir({ targetDir: outputPath });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader, resolveSafeChildPath } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { fetchContents } from './helpers';\nimport { createTemplateAction } from '../../createTemplateAction';\n\n/**\n * Downloads content and places it in the workspace, or optionally\n * in a subdirectory specified by the 'targetPath' input option.\n * @public\n */\nexport function createFetchPlainAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n}) {\n  const { reader, integrations } = options;\n\n  return createTemplateAction<{ url: string; targetPath?: string }>({\n    id: 'fetch:plain',\n    description:\n      \"Downloads content and places it in the workspace, or optionally in a subdirectory specified by the 'targetPath' input option.\",\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching plain content from remote URL');\n\n      // Finally move the template result into the task workspace\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputPath = resolveSafeChildPath(ctx.workspacePath, targetPath);\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath,\n      });\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VM } from 'vm2';\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport fs from 'fs-extra';\nimport { JsonValue } from '@backstage/types';\nimport { RepoSpec } from '../../scaffolder/actions/builtin/publish/util';\n\n// language=JavaScript\nconst mkScript = (nunjucksSource: string) => `\nconst { render, renderCompat } = (() => {\n  const module = {};\n  const process = { env: {} };\n  const require = (pkg) => { if (pkg === 'events') { return function (){}; }};\n\n  ${nunjucksSource}\n\n  const env = module.exports.configure({\n    autoescape: false,\n    tags: {\n      variableStart: '\\${{',\n      variableEnd: '}}',\n    },\n  });\n\n  const compatEnv = module.exports.configure({\n    autoescape: false,\n    tags: {\n      variableStart: '{{',\n      variableEnd: '}}',\n    },\n  });\n  compatEnv.addFilter('jsonify', compatEnv.getFilter('dump'));\n\n  if (typeof parseRepoUrl !== 'undefined') {\n    const safeHelperRef = parseRepoUrl;\n\n    env.addFilter('parseRepoUrl', repoUrl => {\n      return JSON.parse(safeHelperRef(repoUrl))\n    });\n    env.addFilter('projectSlug', repoUrl => {\n      const { owner, repo } = JSON.parse(safeHelperRef(repoUrl));\n      return owner + '/' + repo;\n    });\n  }\n\n  if (typeof additionalTemplateFilters !== 'undefined') {\n    for (const [filterName, filterFn] of Object.entries(additionalTemplateFilters)) {\n      env.addFilter(filterName, (...args) => JSON.parse(filterFn(...args)));\n    }\n  }\n\n  let uninstallCompat = undefined;\n\n  function render(str, values) {\n    try {\n      if (uninstallCompat) {\n        uninstallCompat();\n        uninstallCompat = undefined;\n      }\n      return env.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  function renderCompat(str, values) {\n    try {\n      if (!uninstallCompat) {\n        uninstallCompat = module.exports.installJinjaCompat();\n      }\n      return compatEnv.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  return { render, renderCompat };\n})();\n`;\n\n/** @public */\nexport type TemplateFilter = (...args: JsonValue[]) => JsonValue | undefined;\n\nexport interface SecureTemplaterOptions {\n  /* Optional implementation of the parseRepoUrl filter */\n  parseRepoUrl?(repoUrl: string): RepoSpec;\n\n  /* Enables jinja compatibility and the \"jsonify\" filter */\n  cookiecutterCompat?: boolean;\n\n  /* Extra user-provided nunjucks filters */\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n}\n\nexport type SecureTemplateRenderer = (\n  template: string,\n  values: unknown,\n) => string;\n\nexport class SecureTemplater {\n  static async loadRenderer(options: SecureTemplaterOptions = {}) {\n    const { parseRepoUrl, cookiecutterCompat, additionalTemplateFilters } =\n      options;\n    const sandbox: Record<string, any> = {};\n\n    if (parseRepoUrl) {\n      sandbox.parseRepoUrl = (url: string) => JSON.stringify(parseRepoUrl(url));\n    }\n\n    if (additionalTemplateFilters) {\n      sandbox.additionalTemplateFilters = Object.fromEntries(\n        Object.entries(additionalTemplateFilters)\n          .filter(([_, filterFunction]) => !!filterFunction)\n          .map(([filterName, filterFunction]) => [\n            filterName,\n            (...args: JsonValue[]) => JSON.stringify(filterFunction(...args)),\n          ]),\n      );\n    }\n\n    const vm = new VM({ sandbox });\n\n    const nunjucksSource = await fs.readFile(\n      resolvePackagePath(\n        '@backstage/plugin-scaffolder-backend',\n        'assets/nunjucks.js.txt',\n      ),\n      'utf-8',\n    );\n\n    vm.run(mkScript(nunjucksSource));\n\n    const render: SecureTemplateRenderer = (template, values) => {\n      if (!vm) {\n        throw new Error('SecureTemplater has not been initialized');\n      }\n      vm.setGlobal('templateStr', template);\n      vm.setGlobal('templateValues', JSON.stringify(values));\n\n      if (cookiecutterCompat) {\n        return vm.run(`renderCompat(templateStr, templateValues)`);\n      }\n\n      return vm.run(`render(templateStr, templateValues)`);\n    };\n    return render;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extname } from 'path';\nimport { resolveSafeChildPath, UrlReader } from '@backstage/backend-common';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { fetchContents } from './helpers';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport globby from 'globby';\nimport fs from 'fs-extra';\nimport { isBinaryFile } from 'isbinaryfile';\nimport {\n  TemplateFilter,\n  SecureTemplater,\n} from '../../../../lib/templating/SecureTemplater';\n\n/**\n * Downloads a skeleton, templates variables into file and directory names and content.\n * Then places the result in the workspace, or optionally in a subdirectory\n * specified by the 'targetPath' input option.\n *\n * @public\n */\nexport function createFetchTemplateAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n}) {\n  const { reader, integrations, additionalTemplateFilters } = options;\n\n  return createTemplateAction<{\n    url: string;\n    targetPath?: string;\n    values: any;\n    templateFileExtension?: string | boolean;\n\n    // Cookiecutter compat options\n    copyWithoutRender?: string[];\n    cookiecutterCompat?: boolean;\n  }>({\n    id: 'fetch:template',\n    description:\n      \"Downloads a skeleton, templates variables into file and directory names and content, and places the result in the workspace, or optionally in a subdirectory specified by the 'targetPath' input option.\",\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to. Defaults to the working directory root.',\n            type: 'string',\n          },\n          values: {\n            title: 'Template Values',\n            description: 'Values to pass on to the templating engine',\n            type: 'object',\n          },\n          copyWithoutRender: {\n            title: 'Copy Without Render',\n            description:\n              'An array of glob patterns. Any files or directories which match are copied without being processed as templates.',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          cookiecutterCompat: {\n            title: 'Cookiecutter compatibility mode',\n            description:\n              'Enable features to maximise compatibility with templates built for fetch:cookiecutter',\n            type: 'boolean',\n          },\n          templateFileExtension: {\n            title: 'Template File Extension',\n            description:\n              'If set, only files with the given extension will be templated. If set to `true`, the default extension `.njk` is used.',\n            type: ['string', 'boolean'],\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching template content from remote URL');\n\n      const workDir = await ctx.createTemporaryDirectory();\n      const templateDir = resolveSafeChildPath(workDir, 'template');\n\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputDir = resolveSafeChildPath(ctx.workspacePath, targetPath);\n\n      if (\n        ctx.input.copyWithoutRender &&\n        !Array.isArray(ctx.input.copyWithoutRender)\n      ) {\n        throw new InputError(\n          'Fetch action input copyWithoutRender must be an Array',\n        );\n      }\n\n      if (\n        ctx.input.templateFileExtension &&\n        (ctx.input.copyWithoutRender || ctx.input.cookiecutterCompat)\n      ) {\n        throw new InputError(\n          'Fetch action input extension incompatible with copyWithoutRender and cookiecutterCompat',\n        );\n      }\n\n      let extension: string | false = false;\n      if (ctx.input.templateFileExtension) {\n        extension =\n          ctx.input.templateFileExtension === true\n            ? '.njk'\n            : ctx.input.templateFileExtension;\n        if (!extension.startsWith('.')) {\n          extension = `.${extension}`;\n        }\n      }\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath: templateDir,\n      });\n\n      ctx.logger.info('Listing files and directories in template');\n      const allEntriesInTemplate = await globby(`**/*`, {\n        cwd: templateDir,\n        dot: true,\n        onlyFiles: false,\n        markDirectories: true,\n        followSymbolicLinks: false,\n      });\n\n      const nonTemplatedEntries = new Set(\n        (\n          await Promise.all(\n            (ctx.input.copyWithoutRender || []).map(pattern =>\n              globby(pattern, {\n                cwd: templateDir,\n                dot: true,\n                onlyFiles: false,\n                markDirectories: true,\n                followSymbolicLinks: false,\n              }),\n            ),\n          )\n        ).flat(),\n      );\n\n      // Cookiecutter prefixes all parameters in templates with\n      // `cookiecutter.`. To replicate this, we wrap our parameters\n      // in an object with a `cookiecutter` property when compat\n      // mode is enabled.\n      const { cookiecutterCompat, values } = ctx.input;\n      const context = {\n        [cookiecutterCompat ? 'cookiecutter' : 'values']: values,\n      };\n\n      ctx.logger.info(\n        `Processing ${allEntriesInTemplate.length} template files/directories with input values`,\n        ctx.input.values,\n      );\n\n      const renderTemplate = await SecureTemplater.loadRenderer({\n        cookiecutterCompat: ctx.input.cookiecutterCompat,\n        additionalTemplateFilters,\n      });\n\n      for (const location of allEntriesInTemplate) {\n        let renderFilename: boolean;\n        let renderContents: boolean;\n\n        let localOutputPath = location;\n        if (extension) {\n          renderFilename = true;\n          renderContents = extname(localOutputPath) === extension;\n          if (renderContents) {\n            localOutputPath = localOutputPath.slice(0, -extension.length);\n          }\n        } else {\n          renderFilename = renderContents = !nonTemplatedEntries.has(location);\n        }\n        if (renderFilename) {\n          localOutputPath = renderTemplate(localOutputPath, context);\n        }\n        const outputPath = resolveSafeChildPath(outputDir, localOutputPath);\n        // variables have been expanded to make an empty file name\n        // this is due to a conditional like if values.my_condition then file-name.txt else empty string so skip\n        if (outputDir === outputPath) {\n          continue;\n        }\n\n        if (!renderContents && !extension) {\n          ctx.logger.info(\n            `Copying file/directory ${location} without processing.`,\n          );\n        }\n\n        if (location.endsWith('/')) {\n          ctx.logger.info(\n            `Writing directory ${location} to template output path.`,\n          );\n          await fs.ensureDir(outputPath);\n        } else {\n          const inputFilePath = resolveSafeChildPath(templateDir, location);\n\n          if (await isBinaryFile(inputFilePath)) {\n            ctx.logger.info(\n              `Copying binary file ${location} to template output path.`,\n            );\n            await fs.copy(inputFilePath, outputPath);\n          } else {\n            const statsObj = await fs.stat(inputFilePath);\n            ctx.logger.info(\n              `Writing file ${location} to template output path with mode ${statsObj.mode}.`,\n            );\n            const inputFileContents = await fs.readFile(inputFilePath, 'utf-8');\n            await fs.outputFile(\n              outputPath,\n              renderContents\n                ? renderTemplate(inputFileContents, context)\n                : inputFileContents,\n              { mode: statsObj.mode },\n            );\n          }\n        }\n      }\n\n      ctx.logger.info(`Template result written to ${outputDir}`);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { InputError } from '@backstage/errors';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport fs from 'fs-extra';\n\n/**\n * Creates new action that enables deletion of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemDeleteAction = () => {\n  return createTemplateAction<{ files: string[] }>({\n    id: 'fs:delete',\n    description: 'Deletes files and directories from the workspace',\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description: 'A list of files and directories that will be deleted',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        const filepath = resolveSafeChildPath(ctx.workspacePath, file);\n\n        try {\n          await fs.remove(filepath);\n          ctx.logger.info(`File ${filepath} deleted successfully`);\n        } catch (err) {\n          ctx.logger.error(`Failed to delete file ${filepath}:`, err);\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\n\nimport { InputError } from '@backstage/errors';\nimport fs from 'fs-extra';\n\n/**\n * Creates a new action that allows renames of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemRenameAction = () => {\n  return createTemplateAction<{\n    files: Array<{\n      from: string;\n      to: string;\n      overwrite?: boolean;\n    }>;\n  }>({\n    id: 'fs:rename',\n    description: 'Renames files and directories within the workspace',\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description:\n              'A list of file and directory names that will be renamed',\n            type: 'array',\n            items: {\n              type: 'object',\n              required: ['from', 'to'],\n              properties: {\n                from: {\n                  type: 'string',\n                  title: 'The source location of the file to be renamed',\n                },\n                to: {\n                  type: 'string',\n                  title: 'The destination of the new file',\n                },\n                overwrite: {\n                  type: 'boolean',\n                  title:\n                    'Overwrite existing file or directory, default is false',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        if (!file.from || !file.to) {\n          throw new InputError('each file must have a from and to property');\n        }\n\n        const sourceFilepath = resolveSafeChildPath(\n          ctx.workspacePath,\n          file.from,\n        );\n        const destFilepath = resolveSafeChildPath(ctx.workspacePath, file.to);\n\n        try {\n          await fs.move(sourceFilepath, destFilepath, {\n            overwrite: file.overwrite ?? false,\n          });\n          ctx.logger.info(\n            `File ${sourceFilepath} renamed to ${destFilepath} successfully`,\n          );\n        } catch (err) {\n          ctx.logger.error(\n            `Failed to rename file ${sourceFilepath} to ${destFilepath}:`,\n            err,\n          );\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpawnOptionsWithoutStdio, spawn } from 'child_process';\nimport { PassThrough, Writable } from 'stream';\nimport { Logger } from 'winston';\nimport { Git } from '@backstage/backend-common';\nimport { Octokit } from 'octokit';\nimport { assertError } from '@backstage/errors';\n\n/** @public */\nexport type RunCommandOptions = {\n  /** command to run */\n  command: string;\n  /** arguments to pass the command */\n  args: string[];\n  /** options to pass to spawn */\n  options?: SpawnOptionsWithoutStdio;\n  /** stream to capture stdout and stderr output */\n  logStream?: Writable;\n};\n\n/**\n * Run a command in a sub-process, normally a shell command.\n *\n * @public\n */\nexport const executeShellCommand = async (options: RunCommandOptions) => {\n  const {\n    command,\n    args,\n    options: spawnOptions,\n    logStream = new PassThrough(),\n  } = options;\n  await new Promise<void>((resolve, reject) => {\n    const process = spawn(command, args, spawnOptions);\n\n    process.stdout.on('data', stream => {\n      logStream.write(stream);\n    });\n\n    process.stderr.on('data', stream => {\n      logStream.write(stream);\n    });\n\n    process.on('error', error => {\n      return reject(error);\n    });\n\n    process.on('close', code => {\n      if (code !== 0) {\n        return reject(\n          new Error(`Command ${command} failed, exit code: ${code}`),\n        );\n      }\n      return resolve();\n    });\n  });\n};\n\nexport async function initRepoAndPush({\n  dir,\n  remoteUrl,\n  auth,\n  logger,\n  defaultBranch = 'master',\n  commitMessage = 'Initial commit',\n  gitAuthorInfo,\n}: {\n  dir: string;\n  remoteUrl: string;\n  auth: { username: string; password: string };\n  logger: Logger;\n  defaultBranch?: string;\n  commitMessage?: string;\n  gitAuthorInfo?: { name?: string; email?: string };\n}): Promise<void> {\n  const git = Git.fromAuth({\n    username: auth.username,\n    password: auth.password,\n    logger,\n  });\n\n  await git.init({\n    dir,\n    defaultBranch,\n  });\n\n  await git.add({ dir, filepath: '.' });\n\n  // use provided info if possible, otherwise use fallbacks\n  const authorInfo = {\n    name: gitAuthorInfo?.name ?? 'Scaffolder',\n    email: gitAuthorInfo?.email ?? 'scaffolder@backstage.io',\n  };\n\n  await git.commit({\n    dir,\n    message: commitMessage,\n    author: authorInfo,\n    committer: authorInfo,\n  });\n\n  await git.addRemote({\n    dir,\n    url: remoteUrl,\n    remote: 'origin',\n  });\n\n  await git.push({\n    dir,\n    remote: 'origin',\n  });\n}\n\ntype BranchProtectionOptions = {\n  client: Octokit;\n  owner: string;\n  repoName: string;\n  logger: Logger;\n  requireCodeOwnerReviews: boolean;\n  requiredStatusCheckContexts?: string[];\n  defaultBranch?: string;\n};\n\nexport const enableBranchProtectionOnDefaultRepoBranch = async ({\n  repoName,\n  client,\n  owner,\n  logger,\n  requireCodeOwnerReviews,\n  requiredStatusCheckContexts = [],\n  defaultBranch = 'master',\n}: BranchProtectionOptions): Promise<void> => {\n  const tryOnce = async () => {\n    try {\n      await client.rest.repos.updateBranchProtection({\n        mediaType: {\n          /**\n           * 👇 we need this preview because allowing a custom\n           * reviewer count on branch protection is a preview\n           * feature\n           *\n           * More here: https://docs.github.com/en/rest/overview/api-previews#require-multiple-approving-reviews\n           */\n          previews: ['luke-cage-preview'],\n        },\n        owner,\n        repo: repoName,\n        branch: defaultBranch,\n        required_status_checks: {\n          strict: true,\n          contexts: requiredStatusCheckContexts,\n        },\n        restrictions: null,\n        enforce_admins: true,\n        required_pull_request_reviews: {\n          required_approving_review_count: 1,\n          require_code_owner_reviews: requireCodeOwnerReviews,\n        },\n      });\n    } catch (e) {\n      assertError(e);\n      if (\n        e.message.includes(\n          'Upgrade to GitHub Pro or make this repository public to enable this feature',\n        )\n      ) {\n        logger.warn(\n          'Branch protection was not enabled as it requires GitHub Pro for private repositories',\n        );\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  try {\n    await tryOnce();\n  } catch (e) {\n    if (!e.message.includes('Branch not found')) {\n      throw e;\n    }\n\n    // GitHub has eventual consistency. Fail silently, wait, and try again.\n    await new Promise(resolve => setTimeout(resolve, 600));\n    await tryOnce();\n  }\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { isChildPath } from '@backstage/backend-common';\nimport { join as joinPath, normalize as normalizePath } from 'path';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\n\nexport const getRepoSourceDirectory = (\n  workspacePath: string,\n  sourcePath: string | undefined,\n) => {\n  if (sourcePath) {\n    const safeSuffix = normalizePath(sourcePath).replace(\n      /^(\\.\\.(\\/|\\\\|$))+/,\n      '',\n    );\n    const path = joinPath(workspacePath, safeSuffix);\n    if (!isChildPath(workspacePath, path)) {\n      throw new Error('Invalid source path');\n    }\n    return path;\n  }\n  return workspacePath;\n};\nexport type RepoSpec = {\n  repo: string;\n  host: string;\n  owner?: string;\n  organization?: string;\n  workspace?: string;\n  project?: string;\n};\n\nexport const parseRepoUrl = (\n  repoUrl: string,\n  integrations: ScmIntegrationRegistry,\n): RepoSpec => {\n  let parsed;\n  try {\n    parsed = new URL(`https://${repoUrl}`);\n  } catch (error) {\n    throw new InputError(\n      `Invalid repo URL passed to publisher, got ${repoUrl}, ${error}`,\n    );\n  }\n  const host = parsed.host;\n  const owner = parsed.searchParams.get('owner') ?? undefined;\n  const organization = parsed.searchParams.get('organization') ?? undefined;\n  const workspace = parsed.searchParams.get('workspace') ?? undefined;\n  const project = parsed.searchParams.get('project') ?? undefined;\n\n  const type = integrations.byHost(host)?.type;\n\n  if (!type) {\n    throw new InputError(\n      `No matching integration configuration for host ${host}, please check your integrations config`,\n    );\n  }\n\n  if (type === 'bitbucket') {\n    if (host === 'bitbucket.org') {\n      if (!workspace) {\n        throw new InputError(\n          `Invalid repo URL passed to publisher: ${repoUrl}, missing workspace`,\n        );\n      }\n    }\n    if (!project) {\n      throw new InputError(\n        `Invalid repo URL passed to publisher: ${repoUrl}, missing project`,\n      );\n    }\n  } else {\n    if (!owner) {\n      throw new InputError(\n        `Invalid repo URL passed to publisher: ${repoUrl}, missing owner`,\n      );\n    }\n  }\n\n  const repo = parsed.searchParams.get('repo');\n  if (!repo) {\n    throw new InputError(\n      `Invalid repo URL passed to publisher: ${repoUrl}, missing repo`,\n    );\n  }\n\n  return { host, owner, repo, organization, workspace, project };\n};\nexport const isExecutable = (fileMode: number) => {\n  const executeBitMask = 0o000111;\n  const res = fileMode & executeBitMask;\n  return res > 0;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { initRepoAndPush } from '../helpers';\nimport { GitRepositoryCreateOptions } from 'azure-devops-node-api/interfaces/GitInterfaces';\nimport { getPersonalAccessTokenHandler, WebApi } from 'azure-devops-node-api';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { Config } from '@backstage/config';\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to Azure.\n * @public\n */\nexport function createPublishAzureAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    defaultBranch?: string;\n    sourcePath?: string;\n    token?: string;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n  }>({\n    id: 'publish:azure',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Azure.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          gitCommitMessage: {\n            title: 'Git Commit Message',\n            type: 'string',\n            description: `Sets the commit message on the repository. The default value is 'initial commit'`,\n          },\n          gitAuthorName: {\n            title: 'Default Author Name',\n            type: 'string',\n            description: `Sets the default author name for the commit. The default value is 'Scaffolder'`,\n          },\n          gitAuthorEmail: {\n            title: 'Default Author Email',\n            type: 'string',\n            description: `Sets the default author email for the commit.`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to Azure',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        defaultBranch = 'master',\n        gitCommitMessage = 'initial commit',\n        gitAuthorName,\n        gitAuthorEmail,\n      } = ctx.input;\n\n      const { owner, repo, host, organization } = parseRepoUrl(\n        repoUrl,\n        integrations,\n      );\n\n      if (!organization) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing organization`,\n        );\n      }\n\n      const integrationConfig = integrations.azure.byHost(host);\n\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      if (!integrationConfig.config.token && !ctx.input.token) {\n        throw new InputError(`No token provided for Azure Integration ${host}`);\n      }\n\n      const token = ctx.input.token ?? integrationConfig.config.token!;\n      const authHandler = getPersonalAccessTokenHandler(token);\n\n      const webApi = new WebApi(`https://${host}/${organization}`, authHandler);\n      const client = await webApi.getGitApi();\n      const createOptions: GitRepositoryCreateOptions = { name: repo };\n      const returnedRepo = await client.createRepository(createOptions, owner);\n\n      if (!returnedRepo) {\n        throw new InputError(\n          `Unable to create the repository with Organization ${organization}, Project ${owner} and Repo ${repo}.\n          Please make sure that both the Org and Project are typed corrected and exist.`,\n        );\n      }\n      const remoteUrl = returnedRepo.remoteUrl;\n\n      if (!remoteUrl) {\n        throw new InputError(\n          'No remote URL returned from create repository for Azure',\n        );\n      }\n\n      // blam: Repo contents is serialized into the path,\n      // so it's just the base path I think\n      const repoContentsUrl = remoteUrl;\n\n      const gitAuthorInfo = {\n        name: gitAuthorName\n          ? gitAuthorName\n          : config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: gitAuthorEmail\n          ? gitAuthorEmail\n          : config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        defaultBranch,\n        auth: {\n          username: 'notempty',\n          password: token,\n        },\n        logger: ctx.logger,\n        commitMessage: gitCommitMessage\n          ? gitCommitMessage\n          : config.getOptionalString('scaffolder.defaultCommitMessage'),\n        gitAuthorInfo,\n      });\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport {\n  BitbucketIntegrationConfig,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport fetch, { Response, RequestInit } from 'node-fetch';\nimport { initRepoAndPush } from '../helpers';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { Config } from '@backstage/config';\n\nconst createBitbucketCloudRepository = async (opts: {\n  workspace: string;\n  project: string;\n  repo: string;\n  description?: string;\n  repoVisibility: 'private' | 'public';\n  mainBranch: string;\n  authorization: string;\n  apiBaseUrl: string;\n}) => {\n  const {\n    workspace,\n    project,\n    repo,\n    description,\n    repoVisibility,\n    mainBranch,\n    authorization,\n    apiBaseUrl,\n  } = opts;\n\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify({\n      scm: 'git',\n      description: description,\n      is_private: repoVisibility === 'private',\n      project: { key: project },\n    }),\n    headers: {\n      Authorization: authorization,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let response: Response;\n  try {\n    response = await fetch(\n      `${apiBaseUrl}/repositories/${workspace}/${repo}`,\n      options,\n    );\n  } catch (e) {\n    throw new Error(`Unable to create repository, ${e}`);\n  }\n\n  if (response.status !== 200) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n\n  const r = await response.json();\n  let remoteUrl = '';\n  for (const link of r.links.clone) {\n    if (link.name === 'https') {\n      remoteUrl = link.href;\n    }\n  }\n\n  // \"mainbranch.name\" cannot be set neither at create nor update of the repo\n  // the first pushed branch will be set as \"main branch\" then\n  const repoContentsUrl = `${r.links.html.href}/src/${mainBranch}`;\n  return { remoteUrl, repoContentsUrl };\n};\n\nconst createBitbucketServerRepository = async (opts: {\n  project: string;\n  repo: string;\n  description?: string;\n  repoVisibility: 'private' | 'public';\n  authorization: string;\n  apiBaseUrl: string;\n}) => {\n  const {\n    project,\n    repo,\n    description,\n    authorization,\n    repoVisibility,\n    apiBaseUrl,\n  } = opts;\n\n  let response: Response;\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify({\n      name: repo,\n      description: description,\n      public: repoVisibility === 'public',\n    }),\n    headers: {\n      Authorization: authorization,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    response = await fetch(`${apiBaseUrl}/projects/${project}/repos`, options);\n  } catch (e) {\n    throw new Error(`Unable to create repository, ${e}`);\n  }\n\n  if (response.status !== 201) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n\n  const r = await response.json();\n  let remoteUrl = '';\n  for (const link of r.links.clone) {\n    if (link.name === 'http') {\n      remoteUrl = link.href;\n    }\n  }\n\n  const repoContentsUrl = `${r.links.self[0].href}`;\n  return { remoteUrl, repoContentsUrl };\n};\n\nconst getAuthorizationHeader = (config: BitbucketIntegrationConfig) => {\n  if (config.username && config.appPassword) {\n    const buffer = Buffer.from(\n      `${config.username}:${config.appPassword}`,\n      'utf8',\n    );\n\n    return `Basic ${buffer.toString('base64')}`;\n  }\n\n  if (config.token) {\n    return `Bearer ${config.token}`;\n  }\n\n  throw new Error(\n    `Authorization has not been provided for Bitbucket. Please add either username + appPassword or token to the Integrations config`,\n  );\n};\n\nconst performEnableLFS = async (opts: {\n  authorization: string;\n  host: string;\n  project: string;\n  repo: string;\n}) => {\n  const { authorization, host, project, repo } = opts;\n\n  const options: RequestInit = {\n    method: 'PUT',\n    headers: {\n      Authorization: authorization,\n    },\n  };\n\n  const { ok, status, statusText } = await fetch(\n    `https://${host}/rest/git-lfs/admin/projects/${project}/repos/${repo}/enabled`,\n    options,\n  );\n\n  if (!ok)\n    throw new Error(\n      `Failed to enable LFS in the repository, ${status}: ${statusText}`,\n    );\n};\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to Bitbucket.\n * @public\n * @deprecated in favor of createPublishBitbucketCloudAction and createPublishBitbucketServerAction\n */\nexport function createPublishBitbucketAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    defaultBranch?: string;\n    repoVisibility?: 'private' | 'public';\n    sourcePath?: string;\n    enableLFS?: boolean;\n    token?: string;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n  }>({\n    id: 'publish:bitbucket',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Bitbucket.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          enableLFS: {\n            title: 'Enable LFS?',\n            description:\n              'Enable LFS for the repository. Only available for hosted Bitbucket.',\n            type: 'boolean',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to BitBucket',\n          },\n          gitCommitMessage: {\n            title: 'Git Commit Message',\n            type: 'string',\n            description: `Sets the commit message on the repository. The default value is 'initial commit'`,\n          },\n          gitAuthorName: {\n            title: 'Default Author Name',\n            type: 'string',\n            description: `Sets the default author name for the commit. The default value is 'Scaffolder'`,\n          },\n          gitAuthorEmail: {\n            title: 'Default Author Email',\n            type: 'string',\n            description: `Sets the default author email for the commit.`,\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      ctx.logger.warn(\n        `[Deprecated] Please migrate the use of action \"publish:bitbucket\" to \"publish:bitbucketCloud\" or \"publish:bitbucketServer\".`,\n      );\n      const {\n        repoUrl,\n        description,\n        defaultBranch = 'master',\n        repoVisibility = 'private',\n        enableLFS = false,\n        gitCommitMessage = 'initial commit',\n        gitAuthorName,\n        gitAuthorEmail,\n      } = ctx.input;\n\n      const { workspace, project, repo, host } = parseRepoUrl(\n        repoUrl,\n        integrations,\n      );\n\n      // Workspace is only required for bitbucket cloud\n      if (host === 'bitbucket.org') {\n        if (!workspace) {\n          throw new InputError(\n            `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing workspace`,\n          );\n        }\n      }\n\n      // Project is required for both bitbucket cloud and bitbucket server\n      if (!project) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing project`,\n        );\n      }\n\n      const integrationConfig = integrations.bitbucket.byHost(host);\n\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      const authorization = getAuthorizationHeader(\n        ctx.input.token\n          ? {\n              host: integrationConfig.config.host,\n              apiBaseUrl: integrationConfig.config.apiBaseUrl,\n              token: ctx.input.token,\n            }\n          : integrationConfig.config,\n      );\n\n      const apiBaseUrl = integrationConfig.config.apiBaseUrl;\n\n      const createMethod =\n        host === 'bitbucket.org'\n          ? createBitbucketCloudRepository\n          : createBitbucketServerRepository;\n\n      const { remoteUrl, repoContentsUrl } = await createMethod({\n        authorization,\n        workspace: workspace || '',\n        project,\n        repo,\n        repoVisibility,\n        mainBranch: defaultBranch,\n        description,\n        apiBaseUrl,\n      });\n\n      const gitAuthorInfo = {\n        name: gitAuthorName\n          ? gitAuthorName\n          : config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: gitAuthorEmail\n          ? gitAuthorEmail\n          : config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      let auth;\n\n      if (ctx.input.token) {\n        auth = {\n          username: 'x-token-auth',\n          password: ctx.input.token,\n        };\n      } else {\n        auth = {\n          username: integrationConfig.config.username\n            ? integrationConfig.config.username\n            : 'x-token-auth',\n          password: integrationConfig.config.appPassword\n            ? integrationConfig.config.appPassword\n            : integrationConfig.config.token ?? '',\n        };\n      }\n\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        auth,\n        defaultBranch,\n        logger: ctx.logger,\n        commitMessage: gitCommitMessage\n          ? gitCommitMessage\n          : config.getOptionalString('scaffolder.defaultCommitMessage'),\n        gitAuthorInfo,\n      });\n\n      if (enableLFS && host !== 'bitbucket.org') {\n        await performEnableLFS({ authorization, host, project, repo });\n      }\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport fetch, { Response, RequestInit } from 'node-fetch';\nimport { initRepoAndPush } from '../helpers';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { Config } from '@backstage/config';\n\nconst createRepository = async (opts: {\n  workspace: string;\n  project: string;\n  repo: string;\n  description?: string;\n  repoVisibility: 'private' | 'public';\n  mainBranch: string;\n  authorization: string;\n  apiBaseUrl: string;\n}) => {\n  const {\n    workspace,\n    project,\n    repo,\n    description,\n    repoVisibility,\n    mainBranch,\n    authorization,\n    apiBaseUrl,\n  } = opts;\n\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify({\n      scm: 'git',\n      description: description,\n      is_private: repoVisibility === 'private',\n      project: { key: project },\n    }),\n    headers: {\n      Authorization: authorization,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  let response: Response;\n  try {\n    response = await fetch(\n      `${apiBaseUrl}/repositories/${workspace}/${repo}`,\n      options,\n    );\n  } catch (e) {\n    throw new Error(`Unable to create repository, ${e}`);\n  }\n\n  if (response.status !== 200) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n\n  const r = await response.json();\n  let remoteUrl = '';\n  for (const link of r.links.clone) {\n    if (link.name === 'https') {\n      remoteUrl = link.href;\n    }\n  }\n\n  // \"mainbranch.name\" cannot be set neither at create nor update of the repo\n  // the first pushed branch will be set as \"main branch\" then\n  const repoContentsUrl = `${r.links.html.href}/src/${mainBranch}`;\n  return { remoteUrl, repoContentsUrl };\n};\n\nconst getAuthorizationHeader = (config: {\n  username?: string;\n  appPassword?: string;\n  token?: string;\n}) => {\n  if (config.username && config.appPassword) {\n    const buffer = Buffer.from(\n      `${config.username}:${config.appPassword}`,\n      'utf8',\n    );\n\n    return `Basic ${buffer.toString('base64')}`;\n  }\n\n  if (config.token) {\n    return `Bearer ${config.token}`;\n  }\n\n  throw new Error(\n    `Authorization has not been provided for Bitbucket Cloud. Please add either username + appPassword to the Integrations config or a user login auth token`,\n  );\n};\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to Bitbucket Cloud.\n * @public\n */\nexport function createPublishBitbucketCloudAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    defaultBranch?: string;\n    repoVisibility?: 'private' | 'public';\n    sourcePath?: string;\n    token?: string;\n  }>({\n    id: 'publish:bitbucketCloud',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Bitbucket Cloud.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description:\n              'The token to use for authorization to BitBucket Cloud',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        description,\n        defaultBranch = 'master',\n        repoVisibility = 'private',\n      } = ctx.input;\n\n      const { workspace, project, repo, host } = parseRepoUrl(\n        repoUrl,\n        integrations,\n      );\n\n      if (!workspace) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing workspace`,\n        );\n      }\n\n      if (!project) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing project`,\n        );\n      }\n\n      const integrationConfig = integrations.bitbucketCloud.byHost(host);\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      const authorization = getAuthorizationHeader(\n        ctx.input.token ? { token: ctx.input.token } : integrationConfig.config,\n      );\n\n      const apiBaseUrl = integrationConfig.config.apiBaseUrl;\n\n      const { remoteUrl, repoContentsUrl } = await createRepository({\n        authorization,\n        workspace: workspace || '',\n        project,\n        repo,\n        repoVisibility,\n        mainBranch: defaultBranch,\n        description,\n        apiBaseUrl,\n      });\n\n      const gitAuthorInfo = {\n        name: config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      let auth;\n\n      if (ctx.input.token) {\n        auth = {\n          username: 'x-token-auth',\n          password: ctx.input.token,\n        };\n      } else {\n        if (\n          !integrationConfig.config.username ||\n          !integrationConfig.config.appPassword\n        ) {\n          throw new Error(\n            'Credentials for Bitbucket Cloud integration required for this action.',\n          );\n        }\n\n        auth = {\n          username: integrationConfig.config.username,\n          password: integrationConfig.config.appPassword,\n        };\n      }\n\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        auth,\n        defaultBranch,\n        logger: ctx.logger,\n        commitMessage: config.getOptionalString(\n          'scaffolder.defaultCommitMessage',\n        ),\n        gitAuthorInfo,\n      });\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport fetch, { Response, RequestInit } from 'node-fetch';\nimport { initRepoAndPush } from '../helpers';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { Config } from '@backstage/config';\n\nconst createRepository = async (opts: {\n  project: string;\n  repo: string;\n  description?: string;\n  repoVisibility: 'private' | 'public';\n  authorization: string;\n  apiBaseUrl: string;\n}) => {\n  const {\n    project,\n    repo,\n    description,\n    authorization,\n    repoVisibility,\n    apiBaseUrl,\n  } = opts;\n\n  let response: Response;\n  const options: RequestInit = {\n    method: 'POST',\n    body: JSON.stringify({\n      name: repo,\n      description: description,\n      public: repoVisibility === 'public',\n    }),\n    headers: {\n      Authorization: authorization,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    response = await fetch(`${apiBaseUrl}/projects/${project}/repos`, options);\n  } catch (e) {\n    throw new Error(`Unable to create repository, ${e}`);\n  }\n\n  if (response.status !== 201) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n\n  const r = await response.json();\n  let remoteUrl = '';\n  for (const link of r.links.clone) {\n    if (link.name === 'http') {\n      remoteUrl = link.href;\n    }\n  }\n\n  const repoContentsUrl = `${r.links.self[0].href}`;\n  return { remoteUrl, repoContentsUrl };\n};\n\nconst getAuthorizationHeader = (config: { token: string }) => {\n  return `Bearer ${config.token}`;\n};\n\nconst performEnableLFS = async (opts: {\n  authorization: string;\n  host: string;\n  project: string;\n  repo: string;\n}) => {\n  const { authorization, host, project, repo } = opts;\n\n  const options: RequestInit = {\n    method: 'PUT',\n    headers: {\n      Authorization: authorization,\n    },\n  };\n\n  const { ok, status, statusText } = await fetch(\n    `https://${host}/rest/git-lfs/admin/projects/${project}/repos/${repo}/enabled`,\n    options,\n  );\n\n  if (!ok)\n    throw new Error(\n      `Failed to enable LFS in the repository, ${status}: ${statusText}`,\n    );\n};\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to Bitbucket Server.\n * @public\n */\nexport function createPublishBitbucketServerAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    defaultBranch?: string;\n    repoVisibility?: 'private' | 'public';\n    sourcePath?: string;\n    enableLFS?: boolean;\n    token?: string;\n  }>({\n    id: 'publish:bitbucketServer',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Bitbucket Server.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          enableLFS: {\n            title: 'Enable LFS?',\n            description: 'Enable LFS for the repository.',\n            type: 'boolean',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description:\n              'The token to use for authorization to BitBucket Server',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        description,\n        defaultBranch = 'master',\n        repoVisibility = 'private',\n        enableLFS = false,\n      } = ctx.input;\n\n      const { project, repo, host } = parseRepoUrl(repoUrl, integrations);\n\n      if (!project) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing project`,\n        );\n      }\n\n      const integrationConfig = integrations.bitbucketServer.byHost(host);\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      const token = ctx.input.token ?? integrationConfig.config.token;\n      if (!token) {\n        throw new Error(\n          `Authorization has not been provided for ${integrationConfig.config.host}. Please add either token to the Integrations config or a user login auth token`,\n        );\n      }\n\n      const authorization = getAuthorizationHeader({ token });\n\n      const apiBaseUrl = integrationConfig.config.apiBaseUrl;\n\n      const { remoteUrl, repoContentsUrl } = await createRepository({\n        authorization,\n        project,\n        repo,\n        repoVisibility,\n        description,\n        apiBaseUrl,\n      });\n\n      const gitAuthorInfo = {\n        name: config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      const auth = {\n        username: 'x-token-auth',\n        password: token,\n      };\n\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        auth,\n        defaultBranch,\n        logger: ctx.logger,\n        commitMessage: config.getOptionalString(\n          'scaffolder.defaultCommitMessage',\n        ),\n        gitAuthorInfo,\n      });\n\n      if (enableLFS) {\n        await performEnableLFS({ authorization, host, project, repo });\n      }\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { dirname } from 'path';\nimport { InputError } from '@backstage/errors';\nimport { createTemplateAction } from '../../createTemplateAction';\n\n/**\n * This task is useful for local development and testing of both the scaffolder\n * and scaffolder templates.\n *\n * @remarks\n *\n * This action is not installed by default and should not be installed in\n * production, as it writes the files to the local filesystem of the scaffolder.\n *\n * @public\n */\nexport function createPublishFileAction() {\n  return createTemplateAction<{ path: string }>({\n    id: 'publish:file',\n    description: 'Writes contents of the workspace to a local directory',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['path'],\n        properties: {\n          path: {\n            title: 'Path to a directory where the output will be written',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const { path } = ctx.input;\n\n      const exists = await fs.pathExists(path);\n      if (exists) {\n        throw new InputError('Output path already exists');\n      }\n      await fs.ensureDir(dirname(path));\n      await fs.copy(ctx.workspacePath, path);\n    },\n  });\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport crypto from 'crypto';\nimport { InputError } from '@backstage/errors';\nimport { Config } from '@backstage/config';\nimport {\n  GerritIntegrationConfig,\n  getGerritRequestOptions,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport fetch, { Response, RequestInit } from 'node-fetch';\nimport { initRepoAndPush } from '../helpers';\n\nconst createGerritProject = async (\n  config: GerritIntegrationConfig,\n  options: {\n    projectName: string;\n    parent: string;\n    owner: string;\n    description: string;\n  },\n): Promise<void> => {\n  const { projectName, parent, owner, description } = options;\n\n  const fetchOptions: RequestInit = {\n    method: 'PUT',\n    body: JSON.stringify({\n      parent,\n      description,\n      owners: [owner],\n      create_empty_commit: false,\n    }),\n    headers: {\n      ...getGerritRequestOptions(config).headers,\n      'Content-Type': 'application/json',\n    },\n  };\n  const response: Response = await fetch(\n    `${config.baseUrl}/a/projects/${encodeURIComponent(projectName)}`,\n    fetchOptions,\n  );\n  if (response.status !== 201) {\n    throw new Error(\n      `Unable to create repository, ${response.status} ${\n        response.statusText\n      }, ${await response.text()}`,\n    );\n  }\n};\n\nconst generateCommitMessage = (\n  config: Config,\n  commitSubject?: string,\n): string => {\n  const changeId = crypto.randomBytes(20).toString('hex');\n  const msg = `${\n    config.getOptionalString('scaffolder.defaultCommitMessage') || commitSubject\n  }\\n\\nChange-Id: I${changeId}`;\n  return msg;\n};\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to a Gerrit instance.\n * @public\n */\nexport function createPublishGerritAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description: string;\n    defaultBranch?: string;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n  }>({\n    id: 'publish:gerrit',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to Gerrit.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          gitCommitMessage: {\n            title: 'Git Commit Message',\n            type: 'string',\n            description: `Sets the commit message on the repository. The default value is 'initial commit'`,\n          },\n          gitAuthorName: {\n            title: 'Default Author Name',\n            type: 'string',\n            description: `Sets the default author name for the commit. The default value is 'Scaffolder'`,\n          },\n          gitAuthorEmail: {\n            title: 'Default Author Email',\n            type: 'string',\n            description: `Sets the default author email for the commit.`,\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        description,\n        defaultBranch = 'master',\n        gitAuthorName,\n        gitAuthorEmail,\n        gitCommitMessage = 'initial commit',\n      } = ctx.input;\n      const { repo, host, owner, workspace } = parseRepoUrl(\n        repoUrl,\n        integrations,\n      );\n\n      const integrationConfig = integrations.gerrit.byHost(host);\n\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      if (!owner) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing owner`,\n        );\n      }\n      if (!workspace) {\n        throw new InputError(\n          `Invalid URL provider was included in the repo URL to create ${ctx.input.repoUrl}, missing workspace`,\n        );\n      }\n\n      await createGerritProject(integrationConfig.config, {\n        description,\n        owner: owner,\n        projectName: repo,\n        parent: workspace,\n      });\n      const auth = {\n        username: integrationConfig.config.username!,\n        password: integrationConfig.config.password!,\n      };\n      const gitAuthorInfo = {\n        name: gitAuthorName\n          ? gitAuthorName\n          : config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: gitAuthorEmail\n          ? gitAuthorEmail\n          : config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      const remoteUrl = `${integrationConfig.config.cloneUrl}/a/${repo}`;\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, undefined),\n        remoteUrl,\n        auth,\n        defaultBranch,\n        logger: ctx.logger,\n        commitMessage: generateCommitMessage(config, gitCommitMessage),\n        gitAuthorInfo,\n      });\n\n      const repoContentsUrl = `${integrationConfig.config.gitilesBaseUrl}/${repo}/+/refs/heads/${defaultBranch}`;\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InputError } from '@backstage/errors';\nimport {\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { OctokitOptions } from '@octokit/core/dist-types/types';\nimport { parseRepoUrl } from '../publish/util';\n\nconst DEFAULT_TIMEOUT_MS = 60_000;\n\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  repoUrl: string;\n}): Promise<OctokitOptions> {\n  const { integrations, credentialsProvider, repoUrl, token } = options;\n  const { owner, repo, host } = parseRepoUrl(repoUrl, integrations);\n\n  const requestOptions = {\n    // set timeout to 60 seconds\n    timeout: DEFAULT_TIMEOUT_MS,\n  };\n\n  if (!owner) {\n    throw new InputError(`No owner provided for repo ${repoUrl}`);\n  }\n\n  const integrationConfig = integrations.github.byHost(host)?.config;\n\n  if (!integrationConfig) {\n    throw new InputError(`No integration for host ${host}`);\n  }\n\n  // short circuit the `githubCredentialsProvider` if there is a token provided by the caller already\n  if (token) {\n    return {\n      auth: token,\n      baseUrl: integrationConfig.apiBaseUrl,\n      previews: ['nebula-preview'],\n      request: requestOptions,\n    };\n  }\n\n  const githubCredentialsProvider =\n    credentialsProvider ??\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  // TODO(blam): Consider changing this API to take host and repo instead of repoUrl, as we end up parsing in this function\n  // and then parsing in the `getCredentials` function too the other side\n  const { token: credentialProviderToken } =\n    await githubCredentialsProvider.getCredentials({\n      url: `https://${host}/${encodeURIComponent(owner)}/${encodeURIComponent(\n        repo,\n      )}`,\n    });\n\n  if (!credentialProviderToken) {\n    throw new InputError(\n      `No token available for host: ${host}, with owner ${owner}, and repo ${repo}`,\n    );\n  }\n\n  return {\n    auth: credentialProviderToken,\n    baseUrl: integrationConfig.apiBaseUrl,\n    previews: ['nebula-preview'],\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport {\n  enableBranchProtectionOnDefaultRepoBranch,\n  initRepoAndPush,\n} from '../helpers';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { Config } from '@backstage/config';\nimport { assertError, InputError } from '@backstage/errors';\nimport { getOctokitOptions } from '../github/helpers';\nimport { Octokit } from 'octokit';\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to GitHub.\n *\n * @public\n */\nexport function createPublishGithubAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, config, githubCredentialsProvider } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    description?: string;\n    access?: string;\n    defaultBranch?: string;\n    protectDefaultBranch?: boolean;\n    deleteBranchOnMerge?: boolean;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n    allowRebaseMerge?: boolean;\n    allowSquashMerge?: boolean;\n    allowMergeCommit?: boolean;\n    sourcePath?: string;\n    requireCodeOwnerReviews?: boolean;\n    requiredStatusCheckContexts?: string[];\n    repoVisibility?: 'private' | 'internal' | 'public';\n    collaborators?: Array<\n      | {\n          user: string;\n          access: 'pull' | 'push' | 'admin' | 'maintain' | 'triage';\n        }\n      | {\n          team: string;\n          access: 'pull' | 'push' | 'admin' | 'maintain' | 'triage';\n        }\n      | {\n          /** @deprecated This field is deprecated in favor of team */\n          username: string;\n          access: 'pull' | 'push' | 'admin' | 'maintain' | 'triage';\n        }\n    >;\n    token?: string;\n    topics?: string[];\n  }>({\n    id: 'publish:github',\n    description:\n      'Initializes a git repository of contents in workspace and publishes it to GitHub.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            description: `Accepts the format 'github.com?repo=reponame&owner=owner' where 'reponame' is the new repository name and 'owner' is an organization or username`,\n            type: 'string',\n          },\n          description: {\n            title: 'Repository Description',\n            type: 'string',\n          },\n          access: {\n            title: 'Repository Access',\n            description: `Sets an admin collaborator on the repository. Can either be a user reference different from 'owner' in 'repoUrl' or team reference, eg. 'org/team-name'`,\n            type: 'string',\n          },\n          requireCodeOwnerReviews: {\n            title: 'Require CODEOWNER Reviews?',\n            description:\n              'Require an approved review in PR including files with a designated Code Owner',\n            type: 'boolean',\n          },\n          requiredStatusCheckContexts: {\n            title: 'Required Status Check Contexts',\n            description:\n              'The list of status checks to require in order to merge into this branch',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public', 'internal'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          protectDefaultBranch: {\n            title: 'Protect Default Branch',\n            type: 'boolean',\n            description: `Protect the default branch after creating the repository. The default value is 'true'`,\n          },\n          deleteBranchOnMerge: {\n            title: 'Delete Branch On Merge',\n            type: 'boolean',\n            description: `Delete the branch after merging the PR. The default value is 'false'`,\n          },\n          gitCommitMessage: {\n            title: 'Git Commit Message',\n            type: 'string',\n            description: `Sets the commit message on the repository. The default value is 'initial commit'`,\n          },\n          gitAuthorName: {\n            title: 'Default Author Name',\n            type: 'string',\n            description: `Sets the default author name for the commit. The default value is 'Scaffolder'`,\n          },\n          gitAuthorEmail: {\n            title: 'Default Author Email',\n            type: 'string',\n            description: `Sets the default author email for the commit.`,\n          },\n          allowMergeCommit: {\n            title: 'Allow Merge Commits',\n            type: 'boolean',\n            description: `Allow merge commits. The default value is 'true'`,\n          },\n          allowSquashMerge: {\n            title: 'Allow Squash Merges',\n            type: 'boolean',\n            description: `Allow squash merges. The default value is 'true'`,\n          },\n          allowRebaseMerge: {\n            title: 'Allow Rebase Merges',\n            type: 'boolean',\n            description: `Allow rebase merges. The default value is 'true'`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          collaborators: {\n            title: 'Collaborators',\n            description: 'Provide additional users or teams with permissions',\n            type: 'array',\n            items: {\n              type: 'object',\n              additionalProperties: false,\n              required: ['access'],\n              properties: {\n                access: {\n                  type: 'string',\n                  description: 'The type of access for the user',\n                  enum: ['push', 'pull', 'admin', 'maintain', 'triage'],\n                },\n                user: {\n                  type: 'string',\n                  description:\n                    'The name of the user that will be added as a collaborator',\n                },\n                username: {\n                  type: 'string',\n                  description:\n                    'Deprecated. Use the `team` or `user` field instead.',\n                },\n                team: {\n                  type: 'string',\n                  description:\n                    'The name of the team that will be added as a collaborator',\n                },\n              },\n              oneOf: [\n                { required: ['user'] },\n                { required: ['username'] },\n                { required: ['team'] },\n              ],\n            },\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to GitHub',\n          },\n          topics: {\n            title: 'Topics',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        description,\n        access,\n        requireCodeOwnerReviews = false,\n        requiredStatusCheckContexts = [],\n        repoVisibility = 'private',\n        defaultBranch = 'master',\n        protectDefaultBranch = true,\n        deleteBranchOnMerge = false,\n        gitCommitMessage = 'initial commit',\n        gitAuthorName,\n        gitAuthorEmail,\n        allowMergeCommit = true,\n        allowSquashMerge = true,\n        allowRebaseMerge = true,\n        collaborators,\n        topics,\n        token: providedToken,\n      } = ctx.input;\n\n      const { owner, repo } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const octokitOptions = await getOctokitOptions({\n        integrations,\n        credentialsProvider: githubCredentialsProvider,\n        token: providedToken,\n        repoUrl,\n      });\n\n      const client = new Octokit(octokitOptions);\n\n      const user = await client.rest.users.getByUsername({\n        username: owner,\n      });\n\n      const repoCreationPromise =\n        user.data.type === 'Organization'\n          ? client.rest.repos.createInOrg({\n              name: repo,\n              org: owner,\n              private: repoVisibility === 'private',\n              visibility: repoVisibility,\n              description: description,\n              delete_branch_on_merge: deleteBranchOnMerge,\n              allow_merge_commit: allowMergeCommit,\n              allow_squash_merge: allowSquashMerge,\n              allow_rebase_merge: allowRebaseMerge,\n            })\n          : client.rest.repos.createForAuthenticatedUser({\n              name: repo,\n              private: repoVisibility === 'private',\n              description: description,\n              delete_branch_on_merge: deleteBranchOnMerge,\n              allow_merge_commit: allowMergeCommit,\n              allow_squash_merge: allowSquashMerge,\n              allow_rebase_merge: allowRebaseMerge,\n            });\n\n      let newRepo;\n\n      try {\n        newRepo = (await repoCreationPromise).data;\n      } catch (e) {\n        assertError(e);\n        if (e.message === 'Resource not accessible by integration') {\n          ctx.logger.warn(\n            `The GitHub app or token provided may not have the required permissions to create the ${user.data.type} repository ${owner}/${repo}.`,\n          );\n        }\n        throw new Error(\n          `Failed to create the ${user.data.type} repository ${owner}/${repo}, ${e.message}`,\n        );\n      }\n\n      if (access?.startsWith(`${owner}/`)) {\n        const [, team] = access.split('/');\n        await client.rest.teams.addOrUpdateRepoPermissionsInOrg({\n          org: owner,\n          team_slug: team,\n          owner,\n          repo,\n          permission: 'admin',\n        });\n        // No need to add access if it's the person who owns the personal account\n      } else if (access && access !== owner) {\n        await client.rest.repos.addCollaborator({\n          owner,\n          repo,\n          username: access,\n          permission: 'admin',\n        });\n      }\n\n      if (collaborators) {\n        for (const collaborator of collaborators) {\n          try {\n            if ('user' in collaborator) {\n              await client.rest.repos.addCollaborator({\n                owner,\n                repo,\n                username: collaborator.user,\n                permission: collaborator.access,\n              });\n            } else if ('username' in collaborator) {\n              ctx.logger.warn(\n                'The field `username` is deprecated in favor of `team` and will be removed in the future.',\n              );\n              await client.rest.teams.addOrUpdateRepoPermissionsInOrg({\n                org: owner,\n                team_slug: collaborator.username,\n                owner,\n                repo,\n                permission: collaborator.access,\n              });\n            } else if ('team' in collaborator) {\n              await client.rest.teams.addOrUpdateRepoPermissionsInOrg({\n                org: owner,\n                team_slug: collaborator.team,\n                owner,\n                repo,\n                permission: collaborator.access,\n              });\n            }\n          } catch (e) {\n            assertError(e);\n            const name = extractCollaboratorName(collaborator);\n            ctx.logger.warn(\n              `Skipping ${collaborator.access} access for ${name}, ${e.message}`,\n            );\n          }\n        }\n      }\n\n      if (topics) {\n        try {\n          await client.rest.repos.replaceAllTopics({\n            owner,\n            repo,\n            names: topics.map(t => t.toLowerCase()),\n          });\n        } catch (e) {\n          assertError(e);\n          ctx.logger.warn(`Skipping topics ${topics.join(' ')}, ${e.message}`);\n        }\n      }\n\n      const remoteUrl = newRepo.clone_url;\n      const repoContentsUrl = `${newRepo.html_url}/blob/${defaultBranch}`;\n\n      const gitAuthorInfo = {\n        name: gitAuthorName\n          ? gitAuthorName\n          : config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: gitAuthorEmail\n          ? gitAuthorEmail\n          : config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl,\n        defaultBranch,\n        auth: {\n          username: 'x-access-token',\n          password: octokitOptions.auth,\n        },\n        logger: ctx.logger,\n        commitMessage: gitCommitMessage\n          ? gitCommitMessage\n          : config.getOptionalString('scaffolder.defaultCommitMessage'),\n        gitAuthorInfo,\n      });\n\n      if (protectDefaultBranch) {\n        try {\n          await enableBranchProtectionOnDefaultRepoBranch({\n            owner,\n            client,\n            repoName: newRepo.name,\n            logger: ctx.logger,\n            defaultBranch,\n            requireCodeOwnerReviews,\n            requiredStatusCheckContexts,\n          });\n        } catch (e) {\n          assertError(e);\n          ctx.logger.warn(\n            `Skipping: default branch protection on '${newRepo.name}', ${e.message}`,\n          );\n        }\n      }\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n\nfunction extractCollaboratorName(\n  collaborator: { user: string } | { team: string } | { username: string },\n) {\n  if ('username' in collaborator) return collaborator.username;\n  if ('user' in collaborator) return collaborator.user;\n  return collaborator.team;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport globby from 'globby';\nimport limiterFactory from 'p-limit';\nimport { join as joinPath } from 'path';\nimport { SerializedFile } from './types';\n\nconst DEFAULT_GLOB_PATTERNS = ['./**', '!.git'];\n\nexport const isExecutable = (fileMode: number | undefined) => {\n  if (!fileMode) {\n    return false;\n  }\n\n  const executeBitMask = 0o000111;\n  const res = fileMode & executeBitMask;\n  return res > 0;\n};\n\nexport async function serializeDirectoryContents(\n  sourcePath: string,\n  options?: {\n    gitignore?: boolean;\n    globPatterns?: string[];\n  },\n): Promise<SerializedFile[]> {\n  const paths = await globby(options?.globPatterns ?? DEFAULT_GLOB_PATTERNS, {\n    cwd: sourcePath,\n    dot: true,\n    gitignore: options?.gitignore,\n    followSymbolicLinks: false,\n    objectMode: true,\n    stats: true,\n  });\n\n  const limiter = limiterFactory(10);\n\n  return Promise.all(\n    paths.map(async ({ path, stats }) => ({\n      path,\n      content: await limiter(async () =>\n        fs.readFile(joinPath(sourcePath, path)),\n      ),\n      executable: isExecutable(stats?.mode),\n    })),\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { dirname } from 'path';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { SerializedFile } from './types';\n\n/**\n * Deserializes a list of serialized files into the target directory.\n *\n * This method uses `resolveSafeChildPath` to make sure that files are\n * not written outside of the target directory.\n *\n * @internal\n */\nexport async function deserializeDirectoryContents(\n  targetPath: string,\n  files: SerializedFile[],\n): Promise<void> {\n  for (const file of files) {\n    const filePath = resolveSafeChildPath(targetPath, file.path);\n    await fs.ensureDir(dirname(filePath));\n    await fs.writeFile(filePath, file.content); // Ignore file mode\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport { parseRepoUrl } from './util';\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { Octokit } from 'octokit';\nimport { InputError, CustomErrorBase } from '@backstage/errors';\nimport { createPullRequest } from 'octokit-plugin-create-pull-request';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { getOctokitOptions } from '../github/helpers';\nimport { serializeDirectoryContents } from '../../../../lib/files';\n\nexport type Encoding = 'utf-8' | 'base64';\n\nclass GithubResponseError extends CustomErrorBase {}\n\n/** @public */\nexport interface OctokitWithPullRequestPluginClient {\n  createPullRequest(options: createPullRequest.Options): Promise<{\n    data: {\n      html_url: string;\n      number: number;\n    };\n  } | null>;\n}\n\n/**\n * The options passed to the client factory function.\n * @public\n */\nexport type CreateGithubPullRequestClientFactoryInput = {\n  integrations: ScmIntegrationRegistry;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n  host: string;\n  owner: string;\n  repo: string;\n  token?: string;\n};\n\nexport const defaultClientFactory = async ({\n  integrations,\n  githubCredentialsProvider,\n  owner,\n  repo,\n  host = 'github.com',\n  token: providedToken,\n}: CreateGithubPullRequestClientFactoryInput): Promise<OctokitWithPullRequestPluginClient> => {\n  const [encodedHost, encodedOwner, encodedRepo] = [host, owner, repo].map(\n    encodeURIComponent,\n  );\n\n  const octokitOptions = await getOctokitOptions({\n    integrations,\n    credentialsProvider: githubCredentialsProvider,\n    repoUrl: `${encodedHost}?owner=${encodedOwner}&repo=${encodedRepo}`,\n    token: providedToken,\n  });\n\n  const OctokitPR = Octokit.plugin(createPullRequest);\n  return new OctokitPR(octokitOptions);\n};\n\n/**\n * The options passed to {@link createPublishGithubPullRequestAction} method\n * @public\n */\nexport interface CreateGithubPullRequestActionOptions {\n  /**\n   * An instance of {@link @backstage/integration#ScmIntegrationRegistry} that will be used in the action.\n   */\n  integrations: ScmIntegrationRegistry;\n  /**\n   * An instance of {@link @backstage/integration#GithubCredentialsProvider} that will be used to get credentials for the action.\n   */\n  githubCredentialsProvider?: GithubCredentialsProvider;\n  /**\n   * A method to return the Octokit client with the Pull Request Plugin.\n   */\n  clientFactory?: (\n    input: CreateGithubPullRequestClientFactoryInput,\n  ) => Promise<OctokitWithPullRequestPluginClient>;\n}\n\n/**\n * Creates a Github Pull Request action.\n * @public\n */\nexport const createPublishGithubPullRequestAction = ({\n  integrations,\n  githubCredentialsProvider,\n  clientFactory = defaultClientFactory,\n}: CreateGithubPullRequestActionOptions) => {\n  return createTemplateAction<{\n    title: string;\n    branchName: string;\n    description: string;\n    repoUrl: string;\n    draft?: boolean;\n    targetPath?: string;\n    sourcePath?: string;\n    token?: string;\n  }>({\n    id: 'publish:github:pull-request',\n    schema: {\n      input: {\n        required: ['repoUrl', 'title', 'description', 'branchName'],\n        type: 'object',\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            description: `Accepts the format 'github.com?repo=reponame&owner=owner' where 'reponame' is the repository name and 'owner' is an organization or username`,\n            type: 'string',\n          },\n          branchName: {\n            type: 'string',\n            title: 'Branch Name',\n            description: 'The name for the branch',\n          },\n          title: {\n            type: 'string',\n            title: 'Pull Request Name',\n            description: 'The name for the pull request',\n          },\n          description: {\n            type: 'string',\n            title: 'Pull Request Description',\n            description: 'The description of the pull request',\n          },\n          draft: {\n            type: 'boolean',\n            title: 'Create as Draft',\n            description: 'Create a draft pull request',\n          },\n          sourcePath: {\n            type: 'string',\n            title: 'Working Subdirectory',\n            description:\n              'Subdirectory of working directory to copy changes from',\n          },\n          targetPath: {\n            type: 'string',\n            title: 'Repository Subdirectory',\n            description: 'Subdirectory of repository to apply changes to',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to GitHub',\n          },\n        },\n      },\n      output: {\n        required: ['remoteUrl'],\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            type: 'string',\n            title: 'Pull Request URL',\n            description: 'Link to the pull request in Github',\n          },\n          pullRequestNumber: {\n            type: 'number',\n            title: 'Pull Request Number',\n            description: 'The pull request number',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        branchName,\n        title,\n        description,\n        draft,\n        targetPath,\n        sourcePath,\n        token: providedToken,\n      } = ctx.input;\n\n      const { owner, repo, host } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError(\n          `No owner provided for host: ${host}, and repo ${repo}`,\n        );\n      }\n\n      const client = await clientFactory({\n        integrations,\n        githubCredentialsProvider,\n        host,\n        owner,\n        repo,\n        token: providedToken,\n      });\n\n      const fileRoot = sourcePath\n        ? resolveSafeChildPath(ctx.workspacePath, sourcePath)\n        : ctx.workspacePath;\n\n      const directoryContents = await serializeDirectoryContents(fileRoot, {\n        gitignore: true,\n      });\n      const files = Object.fromEntries(\n        directoryContents.map(file => [\n          targetPath ? path.posix.join(targetPath, file.path) : file.path,\n          {\n            // See the properties of tree items\n            // in https://docs.github.com/en/rest/reference/git#trees\n            mode: file.executable ? '100755' : '100644',\n            // Always use base64 encoding to avoid doubling a binary file in size\n            // due to interpreting a binary file as utf-8 and sending github\n            // the utf-8 encoded content.\n            //\n            // For example, the original gradle-wrapper.jar is 57.8k in https://github.com/kennethzfeng/pull-request-test/pull/5/files.\n            // Its size could be doubled to 98.3K (See https://github.com/kennethzfeng/pull-request-test/pull/4/files)\n            encoding: 'base64' as const,\n            content: file.content.toString('base64'),\n          },\n        ]),\n      );\n\n      try {\n        const response = await client.createPullRequest({\n          owner,\n          repo,\n          title,\n          changes: [\n            {\n              files,\n              commit: title,\n            },\n          ],\n          body: description,\n          head: branchName,\n          draft,\n        });\n\n        if (!response) {\n          throw new GithubResponseError('null response from Github');\n        }\n\n        ctx.output('remoteUrl', response.data.html_url);\n        ctx.output('pullRequestNumber', response.data.number);\n      } catch (e) {\n        throw new GithubResponseError('Pull request creation failed', e);\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { Gitlab } from '@gitbeaker/node';\nimport { initRepoAndPush } from '../helpers';\nimport { getRepoSourceDirectory, parseRepoUrl } from './util';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { Config } from '@backstage/config';\n\n/**\n * Creates a new action that initializes a git repository of the content in the workspace\n * and publishes it to GitLab.\n *\n * @public\n */\nexport function createPublishGitlabAction(options: {\n  integrations: ScmIntegrationRegistry;\n  config: Config;\n}) {\n  const { integrations, config } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    defaultBranch?: string;\n    repoVisibility?: 'private' | 'internal' | 'public';\n    sourcePath?: string;\n    token?: string;\n    gitCommitMessage?: string;\n    gitAuthorName?: string;\n    gitAuthorEmail?: string;\n  }>({\n    id: 'publish:gitlab',\n    description:\n      'Initializes a git repository of the content in the workspace, and publishes it to GitLab.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            type: 'string',\n          },\n          repoVisibility: {\n            title: 'Repository Visibility',\n            type: 'string',\n            enum: ['private', 'public', 'internal'],\n          },\n          defaultBranch: {\n            title: 'Default Branch',\n            type: 'string',\n            description: `Sets the default branch on the repository. The default value is 'master'`,\n          },\n          gitCommitMessage: {\n            title: 'Git Commit Message',\n            type: 'string',\n            description: `Sets the commit message on the repository. The default value is 'initial commit'`,\n          },\n          gitAuthorName: {\n            title: 'Default Author Name',\n            type: 'string',\n            description: `Sets the default author name for the commit. The default value is 'Scaffolder'`,\n          },\n          gitAuthorEmail: {\n            title: 'Default Author Email',\n            type: 'string',\n            description: `Sets the default author email for the commit.`,\n          },\n          sourcePath: {\n            title: 'Source Path',\n            description:\n              'Path within the workspace that will be used as the repository root. If omitted, the entire workspace will be published as the repository.',\n            type: 'string',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to GitLab',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          remoteUrl: {\n            title: 'A URL to the repository with the provider',\n            type: 'string',\n          },\n          repoContentsUrl: {\n            title: 'A URL to the root of the repository',\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        repoVisibility = 'private',\n        defaultBranch = 'master',\n        gitCommitMessage = 'initial commit',\n        gitAuthorName,\n        gitAuthorEmail,\n      } = ctx.input;\n      const { owner, repo, host } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError(\n          `No owner provided for host: ${host}, and repo ${repo}`,\n        );\n      }\n\n      const integrationConfig = integrations.gitlab.byHost(host);\n\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      if (!integrationConfig.config.token && !ctx.input.token) {\n        throw new InputError(`No token available for host ${host}`);\n      }\n\n      const token = ctx.input.token || integrationConfig.config.token!;\n      const tokenType = ctx.input.token ? 'oauthToken' : 'token';\n\n      const client = new Gitlab({\n        host: integrationConfig.config.baseUrl,\n        [tokenType]: token,\n      });\n\n      let { id: targetNamespace } = (await client.Namespaces.show(owner)) as {\n        id: number;\n      };\n\n      if (!targetNamespace) {\n        const { id } = (await client.Users.current()) as {\n          id: number;\n        };\n        targetNamespace = id;\n      }\n\n      const { http_url_to_repo } = await client.Projects.create({\n        namespace_id: targetNamespace,\n        name: repo,\n        visibility: repoVisibility,\n      });\n\n      const remoteUrl = (http_url_to_repo as string).replace(/\\.git$/, '');\n      const repoContentsUrl = `${remoteUrl}/-/blob/${defaultBranch}`;\n\n      const gitAuthorInfo = {\n        name: gitAuthorName\n          ? gitAuthorName\n          : config.getOptionalString('scaffolder.defaultAuthor.name'),\n        email: gitAuthorEmail\n          ? gitAuthorEmail\n          : config.getOptionalString('scaffolder.defaultAuthor.email'),\n      };\n      await initRepoAndPush({\n        dir: getRepoSourceDirectory(ctx.workspacePath, ctx.input.sourcePath),\n        remoteUrl: http_url_to_repo as string,\n        defaultBranch,\n        auth: {\n          username: 'oauth2',\n          password: token,\n        },\n        logger: ctx.logger,\n        commitMessage: gitCommitMessage\n          ? gitCommitMessage\n          : config.getOptionalString('scaffolder.defaultCommitMessage'),\n        gitAuthorInfo,\n      });\n\n      ctx.output('remoteUrl', remoteUrl);\n      ctx.output('repoContentsUrl', repoContentsUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { Gitlab } from '@gitbeaker/node';\nimport { Types } from '@gitbeaker/core';\nimport path from 'path';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { InputError } from '@backstage/errors';\nimport { parseRepoUrl } from './util';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { serializeDirectoryContents } from '../../../../lib/files';\n\n/**\n * Create a new action that creates a gitlab merge request.\n *\n * @public\n */\nexport const createPublishGitlabMergeRequestAction = (options: {\n  integrations: ScmIntegrationRegistry;\n}) => {\n  const { integrations } = options;\n\n  return createTemplateAction<{\n    projectid: string;\n    repoUrl: string;\n    title: string;\n    description: string;\n    branchName: string;\n    targetPath: string;\n    token?: string;\n  }>({\n    id: 'publish:gitlab:merge-request',\n    schema: {\n      input: {\n        required: ['projectid', 'repoUrl', 'targetPath', 'branchName'],\n        type: 'object',\n        properties: {\n          repoUrl: {\n            type: 'string',\n            title: 'Repository Location',\n            description: `Accepts the format 'gitlab.com/group_name/project_name' where 'project_name' is the repository name and 'group_name' is a group or username`,\n          },\n          projectid: {\n            type: 'string',\n            title: 'projectid',\n            description: 'Project ID/Name(slug) of the Gitlab Project',\n          },\n          title: {\n            type: 'string',\n            title: 'Merge Request Name',\n            description: 'The name for the merge request',\n          },\n          description: {\n            type: 'string',\n            title: 'Merge Request Description',\n            description: 'The description of the merge request',\n          },\n          branchName: {\n            type: 'string',\n            title: 'Destination Branch name',\n            description: 'The description of the merge request',\n          },\n          targetPath: {\n            type: 'string',\n            title: 'Repository Subdirectory',\n            description: 'Subdirectory of repository to apply changes to',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The token to use for authorization to GitLab',\n          },\n        },\n      },\n      output: {\n        type: 'object',\n        properties: {\n          projectid: {\n            title: 'Gitlab Project id/Name(slug)',\n            type: 'string',\n          },\n          mergeRequestURL: {\n            title: 'MergeRequest(MR) URL',\n            type: 'string',\n            description: 'Link to the merge request in GitLab',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const repoUrl = ctx.input.repoUrl;\n      const { host } = parseRepoUrl(repoUrl, integrations);\n      const integrationConfig = integrations.gitlab.byHost(host);\n\n      const destinationBranch = ctx.input.branchName;\n\n      if (!integrationConfig) {\n        throw new InputError(\n          `No matching integration configuration for host ${host}, please check your integrations config`,\n        );\n      }\n\n      if (!integrationConfig.config.token && !ctx.input.token) {\n        throw new InputError(`No token available for host ${host}`);\n      }\n\n      const token = ctx.input.token ?? integrationConfig.config.token!;\n      const tokenType = ctx.input.token ? 'oauthToken' : 'token';\n\n      const api = new Gitlab({\n        host: integrationConfig.config.baseUrl,\n        [tokenType]: token,\n      });\n\n      const targetPath = resolveSafeChildPath(\n        ctx.workspacePath,\n        ctx.input.targetPath,\n      );\n      const fileContents = await serializeDirectoryContents(targetPath, {\n        gitignore: true,\n      });\n\n      const actions: Types.CommitAction[] = fileContents.map(file => ({\n        action: 'create',\n        filePath: path.posix.join(ctx.input.targetPath, file.path),\n        encoding: 'base64',\n        content: file.content.toString('base64'),\n        execute_filemode: file.executable,\n      }));\n\n      const projects = await api.Projects.show(ctx.input.projectid);\n\n      const { default_branch: defaultBranch } = projects;\n\n      try {\n        await api.Branches.create(\n          ctx.input.projectid,\n          destinationBranch,\n          String(defaultBranch),\n        );\n      } catch (e) {\n        throw new InputError(`The branch creation failed ${e}`);\n      }\n\n      try {\n        await api.Commits.create(\n          ctx.input.projectid,\n          destinationBranch,\n          ctx.input.title,\n          actions,\n        );\n      } catch (e) {\n        throw new InputError(\n          `Committing the changes to ${destinationBranch} failed ${e}`,\n        );\n      }\n\n      try {\n        const mergeRequestUrl = await api.MergeRequests.create(\n          ctx.input.projectid,\n          destinationBranch,\n          String(defaultBranch),\n          ctx.input.title,\n          { description: ctx.input.description },\n        ).then((mergeRequest: { web_url: string }) => {\n          return mergeRequest.web_url;\n        });\n        ctx.output('projectid', ctx.input.projectid);\n        ctx.output('mergeRequestUrl', mergeRequestUrl);\n      } catch (e) {\n        throw new InputError(`Merge request creation failed${e}`);\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InputError } from '@backstage/errors';\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport { Octokit } from 'octokit';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { parseRepoUrl } from '../publish/util';\nimport { getOctokitOptions } from './helpers';\n\n/**\n * Creates a new action that dispatches a GitHub Action workflow for a given branch or tag.\n * @public\n */\nexport function createGithubActionsDispatchAction(options: {\n  integrations: ScmIntegrations;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, githubCredentialsProvider } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    workflowId: string;\n    branchOrTagName: string;\n    workflowInputs?: { [key: string]: string };\n    token?: string;\n  }>({\n    id: 'github:actions:dispatch',\n    description:\n      'Dispatches a GitHub Action workflow for a given branch or tag',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl', 'workflowId', 'branchOrTagName'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            description: `Accepts the format 'github.com?repo=reponame&owner=owner' where 'reponame' is the new repository name and 'owner' is an organization or username`,\n            type: 'string',\n          },\n          workflowId: {\n            title: 'Workflow ID',\n            description: 'The GitHub Action Workflow filename',\n            type: 'string',\n          },\n          branchOrTagName: {\n            title: 'Branch or Tag name',\n            description:\n              'The git branch or tag name used to dispatch the workflow',\n            type: 'string',\n          },\n          workflowInputs: {\n            title: 'Workflow Inputs',\n            description:\n              'Inputs keys and values to send to GitHub Action configured on the workflow file. The maximum number of properties is 10. ',\n            type: 'object',\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The GITHUB_TOKEN to use for authorization to GitHub',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        workflowId,\n        branchOrTagName,\n        workflowInputs,\n        token: providedToken,\n      } = ctx.input;\n\n      ctx.logger.info(\n        `Dispatching workflow ${workflowId} for repo ${repoUrl} on ${branchOrTagName}`,\n      );\n\n      const { owner, repo } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const client = new Octokit(\n        await getOctokitOptions({\n          integrations,\n          repoUrl,\n          credentialsProvider: githubCredentialsProvider,\n          token: providedToken,\n        }),\n      );\n\n      await client.rest.actions.createWorkflowDispatch({\n        owner,\n        repo,\n        workflow_id: workflowId,\n        ref: branchOrTagName,\n        inputs: workflowInputs,\n      });\n\n      ctx.logger.info(`Workflow ${workflowId} dispatched successfully`);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { emitterEventNames } from '@octokit/webhooks';\nimport { assertError, InputError } from '@backstage/errors';\nimport { Octokit } from 'octokit';\nimport { getOctokitOptions } from './helpers';\nimport { parseRepoUrl } from '../publish/util';\n\n/**\n * Creates new action that creates a webhook for a repository on GitHub.\n * @public\n */\nexport function createGithubWebhookAction(options: {\n  integrations: ScmIntegrationRegistry;\n  defaultWebhookSecret?: string;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, defaultWebhookSecret, githubCredentialsProvider } =\n    options;\n\n  const eventNames = emitterEventNames.filter(event => !event.includes('.'));\n\n  return createTemplateAction<{\n    repoUrl: string;\n    webhookUrl: string;\n    webhookSecret?: string;\n    events?: string[];\n    active?: boolean;\n    contentType?: 'form' | 'json';\n    insecureSsl?: boolean;\n    token?: string;\n  }>({\n    id: 'github:webhook',\n    description: 'Creates webhook for a repository on GitHub.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl', 'webhookUrl'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            description: `Accepts the format 'github.com?repo=reponame&owner=owner' where 'reponame' is the new repository name and 'owner' is an organization or username`,\n            type: 'string',\n          },\n          webhookUrl: {\n            title: 'Webhook URL',\n            description: 'The URL to which the payloads will be delivered',\n            type: 'string',\n          },\n          webhookSecret: {\n            title: 'Webhook Secret',\n            description:\n              'Webhook secret value. The default can be provided internally in action creation',\n            type: 'string',\n          },\n          events: {\n            title: 'Triggering Events',\n            description:\n              'Determines what events the hook is triggered for. Default: push',\n            type: 'array',\n            oneOf: [\n              {\n                items: {\n                  type: 'string',\n                  enum: eventNames,\n                },\n              },\n              {\n                items: {\n                  type: 'string',\n                  const: '*',\n                },\n              },\n            ],\n          },\n          active: {\n            title: 'Active',\n            type: 'boolean',\n            description: `Determines if notifications are sent when the webhook is triggered. Default: true`,\n          },\n          contentType: {\n            title: 'Content Type',\n            type: 'string',\n            enum: ['form', 'json'],\n            description: `The media type used to serialize the payloads. The default is 'form'`,\n          },\n          insecureSsl: {\n            title: 'Insecure SSL',\n            type: 'boolean',\n            description: `Determines whether the SSL certificate of the host for url will be verified when delivering payloads. Default 'false'`,\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The GITHUB_TOKEN to use for authorization to GitHub',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const {\n        repoUrl,\n        webhookUrl,\n        webhookSecret = defaultWebhookSecret,\n        events = ['push'],\n        active = true,\n        contentType = 'form',\n        insecureSsl = false,\n        token: providedToken,\n      } = ctx.input;\n\n      ctx.logger.info(`Creating webhook ${webhookUrl} for repo ${repoUrl}`);\n      const { owner, repo } = parseRepoUrl(repoUrl, integrations);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const client = new Octokit(\n        await getOctokitOptions({\n          integrations,\n          credentialsProvider: githubCredentialsProvider,\n          repoUrl: repoUrl,\n          token: providedToken,\n        }),\n      );\n\n      try {\n        const insecure_ssl = insecureSsl ? '1' : '0';\n        await client.rest.repos.createWebhook({\n          owner,\n          repo,\n          config: {\n            url: webhookUrl,\n            content_type: contentType,\n            secret: webhookSecret,\n            insecure_ssl,\n          },\n          events,\n          active,\n        });\n        ctx.logger.info(`Webhook '${webhookUrl}' created successfully`);\n      } catch (e) {\n        assertError(e);\n        ctx.logger.warn(\n          `Failed: create webhook '${webhookUrl}' on repo: '${repo}', ${e.message}`,\n        );\n      }\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { createTemplateAction } from '../../createTemplateAction';\nimport { assertError, InputError } from '@backstage/errors';\nimport { Octokit } from 'octokit';\nimport { getOctokitOptions } from './helpers';\nimport { parseRepoUrl } from '../publish/util';\n\n/**\n * Adds labels to a pull request or issue on GitHub\n * @public\n */\nexport function createGithubIssuesLabelAction(options: {\n  integrations: ScmIntegrationRegistry;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, githubCredentialsProvider } = options;\n\n  return createTemplateAction<{\n    repoUrl: string;\n    number: number;\n    labels: string[];\n    token?: string;\n  }>({\n    id: 'github:issues:label',\n    description: 'Adds labels to a pull request or issue on GitHub.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['repoUrl', 'number', 'labels'],\n        properties: {\n          repoUrl: {\n            title: 'Repository Location',\n            description: `Accepts the format 'github.com?repo=reponame&owner=owner' where 'reponame' is the repository name and 'owner' is an organization or username`,\n            type: 'string',\n          },\n          number: {\n            title: 'Pull Request or issue number',\n            description: 'The pull request or issue number to add labels to',\n            type: 'number',\n          },\n          labels: {\n            title: 'Labels',\n            description: 'The labels to add to the pull request or issue',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          token: {\n            title: 'Authentication Token',\n            type: 'string',\n            description: 'The GITHUB_TOKEN to use for authorization to GitHub',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const { repoUrl, number, labels, token: providedToken } = ctx.input;\n\n      const { owner, repo } = parseRepoUrl(repoUrl, integrations);\n      ctx.logger.info(`Adding labels to ${number} issue on repo ${repo}`);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const client = new Octokit(\n        await getOctokitOptions({\n          integrations,\n          credentialsProvider: githubCredentialsProvider,\n          repoUrl: repoUrl,\n          token: providedToken,\n        }),\n      );\n\n      try {\n        await client.rest.issues.addLabels({\n          owner,\n          repo,\n          issue_number: number,\n          labels,\n        });\n      } catch (e) {\n        assertError(e);\n        ctx.logger.warn(\n          `Failed: adding labels to issue: '${number}' on repo: '${repo}', ${e.message}`,\n        );\n      }\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { JsonObject } from '@backstage/types';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrations,\n  DefaultGithubCredentialsProvider,\n} from '@backstage/integration';\nimport { Config } from '@backstage/config';\nimport {\n  createCatalogWriteAction,\n  createCatalogRegisterAction,\n} from './catalog';\n\nimport { createDebugLogAction } from './debug';\nimport { createFetchPlainAction, createFetchTemplateAction } from './fetch';\nimport {\n  createFilesystemDeleteAction,\n  createFilesystemRenameAction,\n} from './filesystem';\nimport {\n  createPublishAzureAction,\n  createPublishBitbucketAction,\n  createPublishBitbucketCloudAction,\n  createPublishBitbucketServerAction,\n  createPublishGerritAction,\n  createPublishGithubAction,\n  createPublishGithubPullRequestAction,\n  createPublishGitlabAction,\n  createPublishGitlabMergeRequestAction,\n} from './publish';\nimport {\n  createGithubActionsDispatchAction,\n  createGithubWebhookAction,\n  createGithubIssuesLabelAction,\n} from './github';\nimport { TemplateFilter } from '../../../lib';\nimport { TemplateAction } from '../types';\n\n/**\n * The options passed to {@link createBuiltinActions}\n * @public\n */\nexport interface CreateBuiltInActionsOptions {\n  /**\n   * The {@link @backstage/backend-common#UrlReader} interface that will be used in the default actions.\n   */\n  reader: UrlReader;\n  /**\n   * The {@link @backstage/integrations#ScmIntegrations} that will be used in the default actions.\n   */\n  integrations: ScmIntegrations;\n  /**\n   * The {@link @backstage/catalog-client#CatalogApi} that will be used in the default actions.\n   */\n  catalogClient: CatalogApi;\n  /**\n   * The {@link @backstage/config#Config} that will be used in the default actions.\n   */\n  config: Config;\n  /**\n   * Additional custom filters that will be passed to the nunjucks template engine for use in\n   * Template Manifests and also template skeleton files when using `fetch:template`.\n   */\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n}\n\n/**\n * A function to generate create a list of default actions that the scaffolder provides.\n * Is called internally in the default setup, but can be used when adding your own actions or overriding the default ones\n *\n * @public\n * @returns A list of actions that can be used in the scaffolder\n */\nexport const createBuiltinActions = (\n  options: CreateBuiltInActionsOptions,\n): TemplateAction<JsonObject>[] => {\n  const {\n    reader,\n    integrations,\n    catalogClient,\n    config,\n    additionalTemplateFilters,\n  } = options;\n\n  const githubCredentialsProvider: GithubCredentialsProvider =\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  const actions = [\n    createFetchPlainAction({\n      reader,\n      integrations,\n    }),\n    createFetchTemplateAction({\n      integrations,\n      reader,\n      additionalTemplateFilters,\n    }),\n    createPublishGerritAction({\n      integrations,\n      config,\n    }),\n    createPublishGithubAction({\n      integrations,\n      config,\n      githubCredentialsProvider,\n    }),\n    createPublishGithubPullRequestAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createPublishGitlabAction({\n      integrations,\n      config,\n    }),\n    createPublishGitlabMergeRequestAction({\n      integrations,\n    }),\n    createPublishBitbucketAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketCloudAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketServerAction({\n      integrations,\n      config,\n    }),\n    createPublishAzureAction({\n      integrations,\n      config,\n    }),\n    createDebugLogAction(),\n    createCatalogRegisterAction({ catalogClient, integrations }),\n    createCatalogWriteAction(),\n    createFilesystemDeleteAction(),\n    createFilesystemRenameAction(),\n    createGithubActionsDispatchAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubWebhookAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubIssuesLabelAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n  ];\n\n  return actions as TemplateAction<JsonObject>[];\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { TemplateAction } from './types';\n\n/**\n * Registry of all registered template actions.\n * @public\n */\nexport class TemplateActionRegistry {\n  private readonly actions = new Map<string, TemplateAction<any>>();\n\n  register<TInput extends JsonObject>(action: TemplateAction<TInput>) {\n    if (this.actions.has(action.id)) {\n      throw new ConflictError(\n        `Template action with ID '${action.id}' has already been registered`,\n      );\n    }\n    this.actions.set(action.id, action);\n  }\n\n  get(actionId: string): TemplateAction<JsonObject> {\n    const action = this.actions.get(actionId);\n    if (!action) {\n      throw new NotFoundError(\n        `Template action with ID '${actionId}' is not registered.`,\n      );\n    }\n    return action;\n  }\n\n  list(): TemplateAction<JsonObject>[] {\n    return [...this.actions.values()];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { v4 as uuid } from 'uuid';\nimport {\n  SerializedTaskEvent,\n  SerializedTask,\n  TaskStatus,\n  TaskEventType,\n  TaskStore,\n  TaskStoreEmitOptions,\n  TaskStoreListEventsOptions,\n  TaskStoreCreateTaskOptions,\n  TaskStoreCreateTaskResult,\n} from './types';\nimport { DateTime } from 'luxon';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-scaffolder-backend',\n  'migrations',\n);\n\nexport type RawDbTaskRow = {\n  id: string;\n  spec: string;\n  status: TaskStatus;\n  last_heartbeat_at?: string;\n  created_at: string;\n  created_by: string | null;\n  secrets?: string | null;\n};\n\nexport type RawDbTaskEventRow = {\n  id: number;\n  task_id: string;\n  body: string;\n  event_type: TaskEventType;\n  created_at: string;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport type DatabaseTaskStoreOptions = {\n  database: Knex;\n};\n\nconst parseSqlDateToIsoString = <T>(input: T): T | string => {\n  if (typeof input === 'string') {\n    return DateTime.fromSQL(input, { zone: 'UTC' }).toISO();\n  }\n\n  return input;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport class DatabaseTaskStore implements TaskStore {\n  private readonly db: Knex;\n\n  static async create(\n    options: DatabaseTaskStoreOptions,\n  ): Promise<DatabaseTaskStore> {\n    await options.database.migrate.latest({\n      directory: migrationsDir,\n    });\n    return new DatabaseTaskStore(options);\n  }\n\n  private constructor(options: DatabaseTaskStoreOptions) {\n    this.db = options.database;\n  }\n\n  async list(options: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    const queryBuilder = this.db<RawDbTaskRow>('tasks');\n\n    if (options.createdBy) {\n      queryBuilder.where({\n        created_by: options.createdBy,\n      });\n    }\n\n    const results = await queryBuilder.orderBy('created_at', 'desc').select();\n\n    const tasks = results.map(result => ({\n      id: result.id,\n      spec: JSON.parse(result.spec),\n      status: result.status,\n      createdBy: result.created_by ?? undefined,\n      lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n      createdAt: parseSqlDateToIsoString(result.created_at),\n    }));\n\n    return { tasks };\n  }\n\n  async getTask(taskId: string): Promise<SerializedTask> {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId })\n      .select();\n    if (!result) {\n      throw new NotFoundError(`No task with id '${taskId}' found`);\n    }\n    try {\n      const spec = JSON.parse(result.spec);\n      const secrets = result.secrets ? JSON.parse(result.secrets) : undefined;\n      return {\n        id: result.id,\n        spec,\n        status: result.status,\n        lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n        createdAt: parseSqlDateToIsoString(result.created_at),\n        createdBy: result.created_by ?? undefined,\n        secrets,\n      };\n    } catch (error) {\n      throw new Error(`Failed to parse spec of task '${taskId}', ${error}`);\n    }\n  }\n\n  async createTask(\n    options: TaskStoreCreateTaskOptions,\n  ): Promise<TaskStoreCreateTaskResult> {\n    const taskId = uuid();\n    await this.db<RawDbTaskRow>('tasks').insert({\n      id: taskId,\n      spec: JSON.stringify(options.spec),\n      secrets: options.secrets ? JSON.stringify(options.secrets) : undefined,\n      created_by: options.createdBy ?? null,\n      status: 'open',\n    });\n    return { taskId };\n  }\n\n  async claimTask(): Promise<SerializedTask | undefined> {\n    return this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          status: 'open',\n        })\n        .limit(1)\n        .select();\n\n      if (!task) {\n        return undefined;\n      }\n\n      const updateCount = await tx<RawDbTaskRow>('tasks')\n        .where({ id: task.id, status: 'open' })\n        .update({\n          status: 'processing',\n          last_heartbeat_at: this.db.fn.now(),\n          // remove the secrets when moving moving to processing state.\n          secrets: null,\n        });\n\n      if (updateCount < 1) {\n        return undefined;\n      }\n\n      try {\n        const spec = JSON.parse(task.spec);\n        const secrets = task.secrets ? JSON.parse(task.secrets) : undefined;\n        return {\n          id: task.id,\n          spec,\n          status: 'processing',\n          lastHeartbeatAt: task.last_heartbeat_at,\n          createdAt: task.created_at,\n          createdBy: task.created_by ?? undefined,\n          secrets,\n        };\n      } catch (error) {\n        throw new Error(`Failed to parse spec of task '${task.id}', ${error}`);\n      }\n    });\n  }\n\n  async heartbeatTask(taskId: string): Promise<void> {\n    const updateCount = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId, status: 'processing' })\n      .update({\n        last_heartbeat_at: this.db.fn.now(),\n      });\n    if (updateCount === 0) {\n      throw new ConflictError(`No running task with taskId ${taskId} found`);\n    }\n  }\n\n  async listStaleTasks({ timeoutS }: { timeoutS: number }): Promise<{\n    tasks: { taskId: string }[];\n  }> {\n    const rawRows = await this.db<RawDbTaskRow>('tasks')\n      .where('status', 'processing')\n      .andWhere(\n        'last_heartbeat_at',\n        '<=',\n        this.db.client.config.client.includes('sqlite3')\n          ? this.db.raw(`datetime('now', ?)`, [`-${timeoutS} seconds`])\n          : this.db.raw(`dateadd('second', ?, ?)`, [\n              `-${timeoutS}`,\n              this.db.fn.now(),\n            ]),\n      );\n    const tasks = rawRows.map(row => ({\n      taskId: row.id,\n    }));\n    return { tasks };\n  }\n\n  async completeTask({\n    taskId,\n    status,\n    eventBody,\n  }: {\n    taskId: string;\n    status: TaskStatus;\n    eventBody: JsonObject;\n  }): Promise<void> {\n    let oldStatus: string;\n    if (status === 'failed' || status === 'completed') {\n      oldStatus = 'processing';\n    } else {\n      throw new Error(\n        `Invalid status update of run '${taskId}' to status '${status}'`,\n      );\n    }\n    await this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          id: taskId,\n        })\n        .limit(1)\n        .select();\n\n      if (!task) {\n        throw new Error(`No task with taskId ${taskId} found`);\n      }\n      if (task.status !== oldStatus) {\n        throw new ConflictError(\n          `Refusing to update status of run '${taskId}' to status '${status}' ` +\n            `as it is currently '${task.status}', expected '${oldStatus}'`,\n        );\n      }\n      const updateCount = await tx<RawDbTaskRow>('tasks')\n        .where({\n          id: taskId,\n          status: oldStatus,\n        })\n        .update({\n          status,\n        });\n\n      if (updateCount !== 1) {\n        throw new ConflictError(\n          `Failed to update status to '${status}' for taskId ${taskId}`,\n        );\n      }\n\n      await tx<RawDbTaskEventRow>('task_events').insert({\n        task_id: taskId,\n        event_type: 'completion',\n        body: JSON.stringify(eventBody),\n      });\n    });\n  }\n\n  async emitLogEvent(\n    options: TaskStoreEmitOptions<{ message: string } & JsonObject>,\n  ): Promise<void> {\n    const { taskId, body } = options;\n    const serializedBody = JSON.stringify(body);\n    await this.db<RawDbTaskEventRow>('task_events').insert({\n      task_id: taskId,\n      event_type: 'log',\n      body: serializedBody,\n    });\n  }\n\n  async listEvents({\n    taskId,\n    after,\n  }: TaskStoreListEventsOptions): Promise<{ events: SerializedTaskEvent[] }> {\n    const rawEvents = await this.db<RawDbTaskEventRow>('task_events')\n      .where({\n        task_id: taskId,\n      })\n      .andWhere(builder => {\n        if (typeof after === 'number') {\n          builder.where('id', '>', after).orWhere('event_type', 'completion');\n        }\n      })\n      .orderBy('id')\n      .select();\n\n    const events = rawEvents.map(event => {\n      try {\n        const body = JSON.parse(event.body) as JsonObject;\n        return {\n          id: Number(event.id),\n          taskId,\n          body,\n          type: event.event_type,\n          createdAt: parseSqlDateToIsoString(event.created_at),\n        };\n      } catch (error) {\n        throw new Error(\n          `Failed to parse event body from event taskId=${taskId} id=${event.id}, ${error}`,\n        );\n      }\n    });\n    return { events };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonObject, Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { Logger } from 'winston';\nimport {\n  TaskCompletionState,\n  TaskContext,\n  TaskSecrets,\n  TaskStore,\n  TaskBroker,\n  SerializedTaskEvent,\n  SerializedTask,\n} from './types';\nimport { TaskBrokerDispatchOptions } from '.';\n\n/**\n * TaskManager\n *\n * @public\n */\nexport class TaskManager implements TaskContext {\n  private isDone = false;\n\n  private heartbeatTimeoutId?: ReturnType<typeof setInterval>;\n\n  static create(task: CurrentClaimedTask, storage: TaskStore, logger: Logger) {\n    const agent = new TaskManager(task, storage, logger);\n    agent.startTimeout();\n    return agent;\n  }\n\n  // Runs heartbeat internally\n  private constructor(\n    private readonly task: CurrentClaimedTask,\n    private readonly storage: TaskStore,\n    private readonly logger: Logger,\n  ) {}\n\n  get spec() {\n    return this.task.spec;\n  }\n\n  get secrets() {\n    return this.task.secrets;\n  }\n\n  get createdBy() {\n    return this.task.createdBy;\n  }\n\n  async getWorkspaceName() {\n    return this.task.taskId;\n  }\n\n  get done() {\n    return this.isDone;\n  }\n\n  async emitLog(message: string, logMetadata?: JsonObject): Promise<void> {\n    await this.storage.emitLogEvent({\n      taskId: this.task.taskId,\n      body: { message, ...logMetadata },\n    });\n  }\n\n  async complete(\n    result: TaskCompletionState,\n    metadata?: JsonObject,\n  ): Promise<void> {\n    await this.storage.completeTask({\n      taskId: this.task.taskId,\n      status: result === 'failed' ? 'failed' : 'completed',\n      eventBody: {\n        message: `Run completed with status: ${result}`,\n        ...metadata,\n      },\n    });\n    this.isDone = true;\n    if (this.heartbeatTimeoutId) {\n      clearTimeout(this.heartbeatTimeoutId);\n    }\n  }\n\n  private startTimeout() {\n    this.heartbeatTimeoutId = setTimeout(async () => {\n      try {\n        await this.storage.heartbeatTask(this.task.taskId);\n        this.startTimeout();\n      } catch (error) {\n        this.isDone = true;\n\n        this.logger.error(\n          `Heartbeat for task ${this.task.taskId} failed`,\n          error,\n        );\n      }\n    }, 1000);\n  }\n}\n\n/**\n * Stores the state of the current claimed task passed to the TaskContext\n *\n * @public\n */\nexport interface CurrentClaimedTask {\n  /**\n   * The TaskSpec of the current claimed task.\n   */\n  spec: TaskSpec;\n  /**\n   * The uuid of the current claimed task.\n   */\n  taskId: string;\n  /**\n   * The secrets that are stored with the task.\n   */\n  secrets?: TaskSecrets;\n  /**\n   * The creator of the task.\n   */\n  createdBy?: string;\n}\n\nfunction defer() {\n  let resolve = () => {};\n  const promise = new Promise<void>(_resolve => {\n    resolve = _resolve;\n  });\n  return { promise, resolve };\n}\n\nexport class StorageTaskBroker implements TaskBroker {\n  constructor(\n    private readonly storage: TaskStore,\n    private readonly logger: Logger,\n  ) {}\n\n  async list(options?: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    if (!this.storage.list) {\n      throw new Error(\n        'TaskStore does not implement the list method. Please implement the list method to be able to list tasks',\n      );\n    }\n    return await this.storage.list({ createdBy: options?.createdBy });\n  }\n\n  private deferredDispatch = defer();\n\n  /**\n   * {@inheritdoc TaskBroker.claim}\n   */\n  async claim(): Promise<TaskContext> {\n    for (;;) {\n      const pendingTask = await this.storage.claimTask();\n      if (pendingTask) {\n        return TaskManager.create(\n          {\n            taskId: pendingTask.id,\n            spec: pendingTask.spec,\n            secrets: pendingTask.secrets,\n            createdBy: pendingTask.createdBy,\n          },\n          this.storage,\n          this.logger,\n        );\n      }\n\n      await this.waitForDispatch();\n    }\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.dispatch}\n   */\n  async dispatch(\n    options: TaskBrokerDispatchOptions,\n  ): Promise<{ taskId: string }> {\n    const taskRow = await this.storage.createTask(options);\n    this.signalDispatch();\n    return {\n      taskId: taskRow.taskId,\n    };\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.get}\n   */\n  async get(taskId: string): Promise<SerializedTask> {\n    return this.storage.getTask(taskId);\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.event$}\n   */\n  event$(options: {\n    taskId: string;\n    after?: number;\n  }): Observable<{ events: SerializedTaskEvent[] }> {\n    return new ObservableImpl(observer => {\n      const { taskId } = options;\n\n      let after = options.after;\n      let cancelled = false;\n\n      (async () => {\n        while (!cancelled) {\n          const result = await this.storage.listEvents({ taskId, after });\n          const { events } = result;\n          if (events.length) {\n            after = events[events.length - 1].id;\n            observer.next(result);\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      })();\n\n      return () => {\n        cancelled = true;\n      };\n    });\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.vacuumTasks}\n   */\n  async vacuumTasks(options: { timeoutS: number }): Promise<void> {\n    const { tasks } = await this.storage.listStaleTasks(options);\n    await Promise.all(\n      tasks.map(async task => {\n        try {\n          await this.storage.completeTask({\n            taskId: task.taskId,\n            status: 'failed',\n            eventBody: {\n              message:\n                'The task was cancelled because the task worker lost connection to the task broker',\n            },\n          });\n        } catch (error) {\n          this.logger.warn(`Failed to cancel task '${task.taskId}', ${error}`);\n        }\n      }),\n    );\n  }\n\n  private waitForDispatch() {\n    return this.deferredDispatch.promise;\n  }\n\n  private signalDispatch() {\n    this.deferredDispatch.resolve();\n    this.deferredDispatch = defer();\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isArray } from 'lodash';\nimport { Schema } from 'jsonschema';\n\n/**\n * Returns true if the input is not `false`, `undefined`, `null`, `\"\"`, `0`, or\n * `[]`. This behavior is based on the behavior of handlebars, see\n * https://handlebarsjs.com/guide/builtin-helpers.html#if\n */\nexport function isTruthy(value: any): boolean {\n  return isArray(value) ? value.length > 0 : !!value;\n}\n\nexport function generateExampleOutput(schema: Schema): unknown {\n  const { examples } = schema as { examples?: unknown };\n  if (examples && Array.isArray(examples)) {\n    return examples[0];\n  }\n  if (schema.type === 'object') {\n    return Object.fromEntries(\n      Object.entries(schema.properties ?? {}).map(([key, value]) => [\n        key,\n        generateExampleOutput(value),\n      ]),\n    );\n  } else if (schema.type === 'array') {\n    const [firstSchema] = [schema.items]?.flat();\n    if (firstSchema) {\n      return [generateExampleOutput(firstSchema)];\n    }\n    return [];\n  } else if (schema.type === 'string') {\n    return '<example>';\n  } else if (schema.type === 'number') {\n    return 0;\n  } else if (schema.type === 'boolean') {\n    return false;\n  }\n  return '<unknown>';\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskContext, WorkflowResponse, WorkflowRunner } from './types';\nimport * as winston from 'winston';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport nunjucks from 'nunjucks';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { InputError } from '@backstage/errors';\nimport { PassThrough } from 'stream';\nimport { generateExampleOutput, isTruthy } from './helper';\nimport { validate as validateJsonSchema } from 'jsonschema';\nimport { parseRepoUrl } from '../actions/builtin/publish/util';\nimport { TemplateActionRegistry } from '../actions';\nimport {\n  TemplateFilter,\n  SecureTemplater,\n  SecureTemplateRenderer,\n} from '../../lib/templating/SecureTemplater';\nimport {\n  TaskSpec,\n  TaskSpecV1beta3,\n  TaskStep,\n} from '@backstage/plugin-scaffolder-common';\nimport { UserEntity } from '@backstage/catalog-model';\n\ntype NunjucksWorkflowRunnerOptions = {\n  workingDirectory: string;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  logger: winston.Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n};\n\ntype TemplateContext = {\n  parameters: JsonObject;\n  steps: {\n    [stepName: string]: { output: { [outputName: string]: JsonValue } };\n  };\n  secrets?: Record<string, string>;\n  user?: {\n    entity?: UserEntity;\n    ref?: string;\n  };\n};\n\nconst isValidTaskSpec = (taskSpec: TaskSpec): taskSpec is TaskSpecV1beta3 => {\n  return taskSpec.apiVersion === 'scaffolder.backstage.io/v1beta3';\n};\n\nconst createStepLogger = ({\n  task,\n  step,\n}: {\n  task: TaskContext;\n  step: TaskStep;\n}) => {\n  const metadata = { stepId: step.id };\n  const taskLogger = winston.createLogger({\n    level: process.env.LOG_LEVEL || 'info',\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.timestamp(),\n      winston.format.simple(),\n    ),\n    defaultMeta: {},\n  });\n\n  const streamLogger = new PassThrough();\n  streamLogger.on('data', async data => {\n    const message = data.toString().trim();\n    if (message?.length > 1) {\n      await task.emitLog(message, metadata);\n    }\n  });\n\n  taskLogger.add(new winston.transports.Stream({ stream: streamLogger }));\n\n  return { taskLogger, streamLogger };\n};\n\nexport class NunjucksWorkflowRunner implements WorkflowRunner {\n  constructor(private readonly options: NunjucksWorkflowRunnerOptions) {}\n\n  private isSingleTemplateString(input: string) {\n    const { parser, nodes } = nunjucks as unknown as {\n      parser: {\n        parse(\n          template: string,\n          ctx: object,\n          options: nunjucks.ConfigureOptions,\n        ): { children: { children?: unknown[] }[] };\n      };\n      nodes: { TemplateData: Function };\n    };\n\n    const parsed = parser.parse(\n      input,\n      {},\n      {\n        autoescape: false,\n        tags: {\n          variableStart: '${{',\n          variableEnd: '}}',\n        },\n      },\n    );\n\n    return (\n      parsed.children.length === 1 &&\n      !(parsed.children[0]?.children?.[0] instanceof nodes.TemplateData)\n    );\n  }\n\n  private render<T>(\n    input: T,\n    context: TemplateContext,\n    renderTemplate: SecureTemplateRenderer,\n  ): T {\n    return JSON.parse(JSON.stringify(input), (_key, value) => {\n      try {\n        if (typeof value === 'string') {\n          try {\n            if (this.isSingleTemplateString(value)) {\n              // Lets convert ${{ parameters.bob }} to ${{ (parameters.bob) | dump }} so we can keep the input type\n              const wrappedDumped = value.replace(\n                /\\${{(.+)}}/g,\n                '${{ ( $1 ) | dump }}',\n              );\n\n              // Run the templating\n              const templated = renderTemplate(wrappedDumped, context);\n\n              // If there's an empty string returned, then it's undefined\n              if (templated === '') {\n                return undefined;\n              }\n\n              // Reparse the dumped string\n              return JSON.parse(templated);\n            }\n          } catch (ex) {\n            this.options.logger.error(\n              `Failed to parse template string: ${value} with error ${ex.message}`,\n            );\n          }\n\n          // Fallback to default behaviour\n          const templated = renderTemplate(value, context);\n\n          if (templated === '') {\n            return undefined;\n          }\n\n          return templated;\n        }\n      } catch {\n        return value;\n      }\n      return value;\n    });\n  }\n\n  async execute(task: TaskContext): Promise<WorkflowResponse> {\n    if (!isValidTaskSpec(task.spec)) {\n      throw new InputError(\n        'Wrong template version executed with the workflow engine',\n      );\n    }\n    const workspacePath = path.join(\n      this.options.workingDirectory,\n      await task.getWorkspaceName(),\n    );\n\n    const { integrations } = this.options;\n    const renderTemplate = await SecureTemplater.loadRenderer({\n      // TODO(blam): let's work out how we can deprecate this.\n      // We shouldn't really need to be exposing these now we can deal with\n      // objects in the params block.\n      // Maybe we can expose a new RepoUrlPicker with secrets for V3 that provides an object already.\n      parseRepoUrl(url: string) {\n        return parseRepoUrl(url, integrations);\n      },\n      additionalTemplateFilters: this.options.additionalTemplateFilters,\n    });\n\n    try {\n      await fs.ensureDir(workspacePath);\n      await task.emitLog(\n        `Starting up task with ${task.spec.steps.length} steps`,\n      );\n\n      const context: TemplateContext = {\n        parameters: task.spec.parameters,\n        steps: {},\n        user: task.spec.user,\n      };\n\n      for (const step of task.spec.steps) {\n        try {\n          if (step.if) {\n            const ifResult = await this.render(\n              step.if,\n              context,\n              renderTemplate,\n            );\n            if (!isTruthy(ifResult)) {\n              await task.emitLog(\n                `Skipping step ${step.id} because it's if condition was false`,\n                { stepId: step.id, status: 'skipped' },\n              );\n              continue;\n            }\n          }\n\n          await task.emitLog(`Beginning step ${step.name}`, {\n            stepId: step.id,\n            status: 'processing',\n          });\n\n          const action = this.options.actionRegistry.get(step.action);\n          const { taskLogger, streamLogger } = createStepLogger({ task, step });\n\n          if (task.isDryRun && !action.supportsDryRun) {\n            task.emitLog(\n              `Skipping because ${action.id} does not support dry-run`,\n              {\n                stepId: step.id,\n                status: 'skipped',\n              },\n            );\n            const outputSchema = action.schema?.output;\n            if (outputSchema) {\n              context.steps[step.id] = {\n                output: generateExampleOutput(outputSchema) as {\n                  [name in string]: JsonValue;\n                },\n              };\n            } else {\n              context.steps[step.id] = { output: {} };\n            }\n            continue;\n          }\n\n          // Secrets are only passed when templating the input to actions for security reasons\n          const input =\n            (step.input &&\n              this.render(\n                step.input,\n                { ...context, secrets: task.secrets ?? {} },\n                renderTemplate,\n              )) ??\n            {};\n\n          if (action.schema?.input) {\n            const validateResult = validateJsonSchema(\n              input,\n              action.schema.input,\n            );\n            if (!validateResult.valid) {\n              const errors = validateResult.errors.join(', ');\n              throw new InputError(\n                `Invalid input passed to action ${action.id}, ${errors}`,\n              );\n            }\n          }\n\n          const tmpDirs = new Array<string>();\n          const stepOutput: { [outputName: string]: JsonValue } = {};\n\n          await action.handler({\n            input,\n            secrets: task.secrets ?? {},\n            logger: taskLogger,\n            logStream: streamLogger,\n            workspacePath,\n            createTemporaryDirectory: async () => {\n              const tmpDir = await fs.mkdtemp(\n                `${workspacePath}_step-${step.id}-`,\n              );\n              tmpDirs.push(tmpDir);\n              return tmpDir;\n            },\n            output(name: string, value: JsonValue) {\n              stepOutput[name] = value;\n            },\n            templateInfo: task.spec.templateInfo,\n          });\n\n          // Remove all temporary directories that were created when executing the action\n          for (const tmpDir of tmpDirs) {\n            await fs.remove(tmpDir);\n          }\n\n          context.steps[step.id] = { output: stepOutput };\n\n          await task.emitLog(`Finished step ${step.name}`, {\n            stepId: step.id,\n            status: 'completed',\n          });\n        } catch (err) {\n          await task.emitLog(String(err.stack), {\n            stepId: step.id,\n            status: 'failed',\n          });\n          throw err;\n        }\n      }\n\n      const output = this.render(task.spec.output, context, renderTemplate);\n\n      return { output };\n    } finally {\n      if (workspacePath) {\n        await fs.remove(workspacePath);\n      }\n    }\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskContext, TaskBroker, WorkflowRunner } from './types';\nimport { NunjucksWorkflowRunner } from './NunjucksWorkflowRunner';\nimport { Logger } from 'winston';\nimport { TemplateActionRegistry } from '../actions';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { assertError } from '@backstage/errors';\nimport { TemplateFilter } from '../../lib/templating/SecureTemplater';\n\n/**\n * TaskWorkerOptions\n *\n * @public\n */\nexport type TaskWorkerOptions = {\n  taskBroker: TaskBroker;\n  runners: {\n    workflowRunner: WorkflowRunner;\n  };\n};\n\n/**\n * CreateWorkerOptions\n *\n * @public\n */\nexport type CreateWorkerOptions = {\n  taskBroker: TaskBroker;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  workingDirectory: string;\n  logger: Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n};\n\n/**\n * TaskWorker\n *\n * @public\n */\nexport class TaskWorker {\n  private constructor(private readonly options: TaskWorkerOptions) {}\n\n  static async create(options: CreateWorkerOptions): Promise<TaskWorker> {\n    const {\n      taskBroker,\n      logger,\n      actionRegistry,\n      integrations,\n      workingDirectory,\n      additionalTemplateFilters,\n    } = options;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      actionRegistry,\n      integrations,\n      logger,\n      workingDirectory,\n      additionalTemplateFilters,\n    });\n\n    return new TaskWorker({\n      taskBroker: taskBroker,\n      runners: { workflowRunner },\n    });\n  }\n\n  start() {\n    (async () => {\n      for (;;) {\n        const task = await this.options.taskBroker.claim();\n        await this.runOneTask(task);\n      }\n    })();\n  }\n\n  async runOneTask(task: TaskContext) {\n    try {\n      if (task.spec.apiVersion !== 'scaffolder.backstage.io/v1beta3') {\n        throw new Error(\n          `Unsupported Template apiVersion ${task.spec.apiVersion}`,\n        );\n      }\n\n      const { output } = await this.options.runners.workflowRunner.execute(\n        task,\n      );\n\n      await task.complete('completed', { output });\n    } catch (error) {\n      assertError(error);\n      await task.complete('failed', {\n        error: { name: error.name, message: error.message },\n      });\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { TemplateAction, TemplateActionRegistry } from '../actions';\n\n/** @internal */\nexport class DecoratedActionsRegistry extends TemplateActionRegistry {\n  constructor(\n    private readonly innerRegistry: TemplateActionRegistry,\n    extraActions: Array<TemplateAction<JsonObject>>,\n  ) {\n    super();\n    for (const action of extraActions) {\n      this.register(action);\n    }\n  }\n\n  get(actionId: string): TemplateAction<JsonObject> {\n    try {\n      return super.get(actionId);\n    } catch {\n      return this.innerRegistry.get(actionId);\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject } from '@backstage/types';\nimport { v4 as uuid } from 'uuid';\nimport { pathToFileURL } from 'url';\nimport { Logger } from 'winston';\nimport {\n  deserializeDirectoryContents,\n  SerializedFile,\n  serializeDirectoryContents,\n} from '../../lib/files';\nimport { TemplateFilter } from '../../lib/templating';\nimport { createTemplateAction, TemplateActionRegistry } from '../actions';\nimport { NunjucksWorkflowRunner } from '../tasks/NunjucksWorkflowRunner';\nimport { TaskSecrets } from '../tasks/types';\nimport { DecoratedActionsRegistry } from './DecoratedActionsRegistry';\nimport fs from 'fs-extra';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\n\ninterface DryRunInput {\n  spec: TaskSpec;\n  secrets?: TaskSecrets;\n  directoryContents: SerializedFile[];\n}\n\ninterface DryRunResult {\n  log: Array<{ body: JsonObject }>;\n  directoryContents: SerializedFile[];\n  output: JsonObject;\n}\n\n/** @internal */\nexport type TemplateTesterCreateOptions = {\n  logger: Logger;\n  integrations: ScmIntegrations;\n  actionRegistry: TemplateActionRegistry;\n  workingDirectory: string;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n};\n\n/**\n * Executes a dry-run of the provided template.\n *\n * The provided content will be extracted into a temporary directory\n * which is then use as the base for any relative file fetch paths.\n *\n * @internal\n */\nexport function createDryRunner(options: TemplateTesterCreateOptions) {\n  return async function dryRun(input: DryRunInput): Promise<DryRunResult> {\n    let contentPromise;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      ...options,\n      actionRegistry: new DecoratedActionsRegistry(options.actionRegistry, [\n        createTemplateAction({\n          id: 'dry-run:extract',\n          supportsDryRun: true,\n          async handler(ctx) {\n            contentPromise = serializeDirectoryContents(ctx.workspacePath);\n            await contentPromise.catch(() => {});\n          },\n        }),\n      ]),\n    });\n\n    const dryRunId = uuid();\n    const log = new Array<{ body: JsonObject }>();\n    const contentsPath = resolveSafeChildPath(\n      options.workingDirectory,\n      `dry-run-content-${dryRunId}`,\n    );\n\n    try {\n      await deserializeDirectoryContents(contentsPath, input.directoryContents);\n\n      const result = await workflowRunner.execute({\n        spec: {\n          ...input.spec,\n          steps: [\n            ...input.spec.steps,\n            {\n              id: dryRunId,\n              name: 'dry-run:extract',\n              action: 'dry-run:extract',\n            },\n          ],\n          templateInfo: {\n            entityRef: 'template:default/dry-run',\n            baseUrl: pathToFileURL(\n              resolveSafeChildPath(contentsPath, 'template.yaml'),\n            ).toString(),\n          },\n        },\n        secrets: input.secrets,\n        // No need to update this at the end of the run, so just hard-code it\n        done: false,\n        isDryRun: true,\n        getWorkspaceName: async () => `dry-run-${dryRunId}`,\n        async emitLog(message: string, logMetadata?: JsonObject) {\n          if (logMetadata?.stepId === dryRunId) {\n            return;\n          }\n          log.push({\n            body: {\n              ...logMetadata,\n              message,\n            },\n          });\n        },\n        async complete() {\n          throw new Error('Not implemented');\n        },\n      });\n\n      if (!contentPromise) {\n        throw new Error('Content extraction step was skipped');\n      }\n      const directoryContents = await contentPromise;\n\n      return {\n        log,\n        directoryContents,\n        output: result.output,\n      };\n    } finally {\n      await fs.remove(contentsPath);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  parseLocationRef,\n  ANNOTATION_SOURCE_LOCATION,\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { assertError, InputError, NotFoundError } from '@backstage/errors';\nimport { TemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport { Logger } from 'winston';\n\nexport async function getWorkingDirectory(\n  config: Config,\n  logger: Logger,\n): Promise<string> {\n  if (!config.has('backend.workingDirectory')) {\n    return os.tmpdir();\n  }\n\n  const workingDirectory = config.getString('backend.workingDirectory');\n  try {\n    // Check if working directory exists and is writable\n    await fs.access(workingDirectory, fs.constants.F_OK | fs.constants.W_OK);\n    logger.info(`using working directory: ${workingDirectory}`);\n  } catch (err) {\n    assertError(err);\n    logger.error(\n      `working directory ${workingDirectory} ${\n        err.code === 'ENOENT' ? 'does not exist' : 'is not writable'\n      }`,\n    );\n    throw err;\n  }\n  return workingDirectory;\n}\n\n/**\n * Gets the base URL of the entity location that points to the source location\n * of the entity description within a repo. If there is not source location\n * or if it has an invalid type, undefined will be returned instead.\n *\n * For file locations this will return a `file://` URL.\n */\nexport function getEntityBaseUrl(entity: Entity): string | undefined {\n  let location = entity.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION];\n  if (!location) {\n    location = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n  }\n  if (!location) {\n    return undefined;\n  }\n\n  const { type, target } = parseLocationRef(location);\n  if (type === 'url') {\n    return target;\n  } else if (type === 'file') {\n    return `file://${target}`;\n  }\n\n  // Only url and file location are handled, as we otherwise don't know if\n  // what the url is pointing to makes sense to use as a baseUrl\n  return undefined;\n}\n\n/**\n * Will use the provided CatalogApi to go find the given template entity with an additional token.\n * Returns the matching template, or throws a NotFoundError if no such template existed.\n */\nexport async function findTemplate(options: {\n  entityRef: CompoundEntityRef;\n  token?: string;\n  catalogApi: CatalogApi;\n}): Promise<TemplateEntityV1beta3> {\n  const { entityRef, token, catalogApi } = options;\n\n  if (entityRef.namespace.toLocaleLowerCase('en-US') !== DEFAULT_NAMESPACE) {\n    throw new InputError(\n      `Invalid namespace, only '${DEFAULT_NAMESPACE}' namespace is supported`,\n    );\n  }\n  if (entityRef.kind.toLocaleLowerCase('en-US') !== 'template') {\n    throw new InputError(`Invalid kind, only 'Template' kind is supported`);\n  }\n\n  const template = await catalogApi.getEntityByRef(entityRef, { token });\n  if (!template) {\n    throw new NotFoundError(\n      `Template ${stringifyEntityRef(entityRef)} not found`,\n    );\n  }\n\n  return template as TemplateEntityV1beta3;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PluginDatabaseManager, UrlReader } from '@backstage/backend-common';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  parseEntityRef,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { Entity } from '@backstage/catalog-model';\nimport { Config, JsonObject } from '@backstage/config';\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport {\n  TemplateEntityV1beta3,\n  TaskSpec,\n  templateEntityV1beta3Validator,\n} from '@backstage/plugin-scaffolder-common';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { validate } from 'jsonschema';\nimport { Logger } from 'winston';\nimport { TemplateFilter } from '../lib';\nimport { z } from 'zod';\nimport {\n  createBuiltinActions,\n  DatabaseTaskStore,\n  TaskBroker,\n  TaskWorker,\n  TemplateAction,\n  TemplateActionRegistry,\n} from '../scaffolder';\nimport { createDryRunner } from '../scaffolder/dryrun';\nimport { StorageTaskBroker } from '../scaffolder/tasks/StorageTaskBroker';\nimport { getEntityBaseUrl, getWorkingDirectory, findTemplate } from './helpers';\n\n/**\n * RouterOptions\n *\n * @public\n */\nexport interface RouterOptions {\n  logger: Logger;\n  config: Config;\n  reader: UrlReader;\n  database: PluginDatabaseManager;\n  catalogClient: CatalogApi;\n  actions?: TemplateAction<any>[];\n  taskWorkers?: number;\n  taskBroker?: TaskBroker;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n}\n\nfunction isSupportedTemplate(entity: TemplateEntityV1beta3) {\n  return entity.apiVersion === 'scaffolder.backstage.io/v1beta3';\n}\n\n/**\n * A method to create a router for the scaffolder backend plugin.\n * @public\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const router = Router();\n  router.use(express.json());\n\n  const {\n    logger: parentLogger,\n    config,\n    reader,\n    database,\n    catalogClient,\n    actions,\n    taskWorkers,\n    additionalTemplateFilters,\n  } = options;\n\n  const logger = parentLogger.child({ plugin: 'scaffolder' });\n  const workingDirectory = await getWorkingDirectory(config, logger);\n  const integrations = ScmIntegrations.fromConfig(config);\n  let taskBroker: TaskBroker;\n\n  if (!options.taskBroker) {\n    const databaseTaskStore = await DatabaseTaskStore.create({\n      database: await database.getClient(),\n    });\n    taskBroker = new StorageTaskBroker(databaseTaskStore, logger);\n  } else {\n    taskBroker = options.taskBroker;\n  }\n\n  const actionRegistry = new TemplateActionRegistry();\n\n  const workers = [];\n  for (let i = 0; i < (taskWorkers || 1); i++) {\n    const worker = await TaskWorker.create({\n      taskBroker,\n      actionRegistry,\n      integrations,\n      logger,\n      workingDirectory,\n      additionalTemplateFilters,\n    });\n    workers.push(worker);\n  }\n\n  const actionsToRegister = Array.isArray(actions)\n    ? actions\n    : createBuiltinActions({\n        integrations,\n        catalogClient,\n        reader,\n        config,\n        additionalTemplateFilters,\n      });\n\n  actionsToRegister.forEach(action => actionRegistry.register(action));\n  workers.forEach(worker => worker.start());\n\n  const dryRunner = createDryRunner({\n    actionRegistry,\n    integrations,\n    logger,\n    workingDirectory,\n    additionalTemplateFilters,\n  });\n\n  router\n    .get(\n      '/v2/templates/:namespace/:kind/:name/parameter-schema',\n      async (req, res) => {\n        const { namespace, kind, name } = req.params;\n        const { token } = parseBearerToken(req.headers.authorization);\n        const template = await findTemplate({\n          catalogApi: catalogClient,\n          entityRef: { kind, namespace, name },\n          token,\n        });\n        if (isSupportedTemplate(template)) {\n          const parameters = [template.spec.parameters ?? []].flat();\n          res.json({\n            title: template.metadata.title ?? template.metadata.name,\n            steps: parameters.map(schema => ({\n              title: schema.title ?? 'Fill in template parameters',\n              schema,\n            })),\n          });\n        } else {\n          throw new InputError(\n            `Unsupported apiVersion field in schema entity, ${\n              (template as Entity).apiVersion\n            }`,\n          );\n        }\n      },\n    )\n    .get('/v2/actions', async (_req, res) => {\n      const actionsList = actionRegistry.list().map(action => {\n        return {\n          id: action.id,\n          description: action.description,\n          schema: action.schema,\n        };\n      });\n      res.json(actionsList);\n    })\n    .post('/v2/tasks', async (req, res) => {\n      const templateRef: string = req.body.templateRef;\n      const { kind, namespace, name } = parseEntityRef(templateRef, {\n        defaultKind: 'template',\n      });\n      const { token, entityRef: userEntityRef } = parseBearerToken(\n        req.headers.authorization,\n      );\n\n      const userEntity = userEntityRef\n        ? await catalogClient.getEntityByRef(userEntityRef, { token })\n        : undefined;\n\n      const values = req.body.values;\n\n      const template = await findTemplate({\n        catalogApi: catalogClient,\n        entityRef: { kind, namespace, name },\n        token,\n      });\n\n      if (!isSupportedTemplate(template)) {\n        throw new InputError(\n          `Unsupported apiVersion field in schema entity, ${\n            (template as Entity).apiVersion\n          }`,\n        );\n      }\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(values, parameters);\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const baseUrl = getEntityBaseUrl(template);\n\n      const taskSpec: TaskSpec = {\n        apiVersion: template.apiVersion,\n        steps: template.spec.steps.map((step, index) => ({\n          ...step,\n          id: step.id ?? `step-${index + 1}`,\n          name: step.name ?? step.action,\n        })),\n        output: template.spec.output ?? {},\n        parameters: values,\n        user: {\n          entity: userEntity as UserEntity,\n          ref: userEntityRef,\n        },\n        templateInfo: {\n          entityRef: stringifyEntityRef({\n            kind,\n            namespace,\n            name: template.metadata?.name,\n          }),\n          baseUrl,\n        },\n      };\n\n      const result = await taskBroker.dispatch({\n        spec: taskSpec,\n        createdBy: userEntityRef,\n        secrets: {\n          ...req.body.secrets,\n          backstageToken: token,\n        },\n      });\n\n      res.status(201).json({ id: result.taskId });\n    })\n    .get('/v2/tasks', async (req, res) => {\n      const [userEntityRef] = [req.query.createdBy].flat();\n\n      if (\n        typeof userEntityRef !== 'string' &&\n        typeof userEntityRef !== 'undefined'\n      ) {\n        throw new InputError('createdBy query parameter must be a string');\n      }\n\n      if (!taskBroker.list) {\n        throw new Error(\n          'TaskBroker does not support listing tasks, please implement the list method on the TaskBroker.',\n        );\n      }\n\n      const tasks = await taskBroker.list({\n        createdBy: userEntityRef,\n      });\n\n      res.status(200).json(tasks);\n    })\n    .get('/v2/tasks/:taskId', async (req, res) => {\n      const { taskId } = req.params;\n      const task = await taskBroker.get(taskId);\n      if (!task) {\n        throw new NotFoundError(`Task with id ${taskId} does not exist`);\n      }\n      // Do not disclose secrets\n      delete task.secrets;\n      res.status(200).json(task);\n    })\n    .get('/v2/tasks/:taskId/eventstream', async (req, res) => {\n      const { taskId } = req.params;\n      const after =\n        req.query.after !== undefined ? Number(req.query.after) : undefined;\n\n      logger.debug(`Event stream observing taskId '${taskId}' opened`);\n\n      // Mandatory headers and http status to keep connection open\n      res.writeHead(200, {\n        Connection: 'keep-alive',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'text/event-stream',\n      });\n\n      // After client opens connection send all events as string\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n        },\n        next: ({ events }) => {\n          let shouldUnsubscribe = false;\n          for (const event of events) {\n            res.write(\n              `event: ${event.type}\\ndata: ${JSON.stringify(event)}\\n\\n`,\n            );\n            if (event.type === 'completion') {\n              shouldUnsubscribe = true;\n            }\n          }\n          // res.flush() is only available with the compression middleware\n          res.flush?.();\n          if (shouldUnsubscribe) subscription.unsubscribe();\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        logger.debug(`Event stream observing taskId '${taskId}' closed`);\n      });\n    })\n    .get('/v2/tasks/:taskId/events', async (req, res) => {\n      const { taskId } = req.params;\n      const after = Number(req.query.after) || undefined;\n\n      // cancel the request after 30 seconds. this aligns with the recommendations of RFC 6202.\n      const timeout = setTimeout(() => {\n        res.json([]);\n      }, 30_000);\n\n      // Get all known events after an id (always includes the completion event) and return the first callback\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n        },\n        next: ({ events }) => {\n          clearTimeout(timeout);\n          subscription.unsubscribe();\n          res.json(events);\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        clearTimeout(timeout);\n      });\n    })\n    .post('/v2/dry-run', async (req, res) => {\n      const bodySchema = z.object({\n        template: z.unknown(),\n        values: z.record(z.unknown()),\n        secrets: z.record(z.string()).optional(),\n        directoryContents: z.array(\n          z.object({ path: z.string(), base64Content: z.string() }),\n        ),\n      });\n      const body = await bodySchema.parseAsync(req.body).catch(e => {\n        throw new InputError(`Malformed request: ${e}`);\n      });\n\n      const template = body.template as TemplateEntityV1beta3;\n      if (!(await templateEntityV1beta3Validator.check(template))) {\n        throw new InputError('Input template is not a template');\n      }\n\n      const { token } = parseBearerToken(req.headers.authorization);\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(body.values, parameters);\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const steps = template.spec.steps.map((step, index) => ({\n        ...step,\n        id: step.id ?? `step-${index + 1}`,\n        name: step.name ?? step.action,\n      }));\n\n      const result = await dryRunner({\n        spec: {\n          apiVersion: template.apiVersion,\n          steps,\n          output: template.spec.output ?? {},\n          parameters: body.values as JsonObject,\n        },\n        directoryContents: (body.directoryContents ?? []).map(file => ({\n          path: file.path,\n          content: Buffer.from(file.base64Content, 'base64'),\n        })),\n        secrets: {\n          ...body.secrets,\n          ...(token && { backstageToken: token }),\n        },\n      });\n\n      res.status(200).json({\n        ...result,\n        steps,\n        directoryContents: result.directoryContents.map(file => ({\n          path: file.path,\n          executable: file.executable,\n          base64Content: file.content.toString('base64'),\n        })),\n      });\n    });\n\n  const app = express();\n  app.set('logger', logger);\n  app.use('/', router);\n\n  return app;\n}\n\nfunction parseBearerToken(header?: string): {\n  token?: string;\n  entityRef?: string;\n} {\n  const token = header?.match(/Bearer\\s+(\\S+)/i)?.[1];\n\n  if (!token) return {};\n\n  const [_header, rawPayload, _signature] = token.split('.');\n  const payload: { sub: string } = JSON.parse(\n    Buffer.from(rawPayload, 'base64').toString(),\n  );\n\n  return {\n    entityRef: payload.sub,\n    token,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  getCompoundEntityRef,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n} from '@backstage/catalog-model';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  LocationSpec,\n  processingResult,\n} from '@backstage/plugin-catalog-backend';\nimport {\n  TemplateEntityV1beta3,\n  templateEntityV1beta3Validator,\n} from '@backstage/plugin-scaffolder-common';\n\n/** @public */\nexport class ScaffolderEntitiesProcessor implements CatalogProcessor {\n  getProcessorName(): string {\n    return 'ScaffolderEntitiesProcessor';\n  }\n\n  private readonly validators = [templateEntityV1beta3Validator];\n\n  async validateEntityKind(entity: Entity): Promise<boolean> {\n    for (const validator of this.validators) {\n      if (await validator.check(entity)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async postProcessEntity(\n    entity: Entity,\n    _location: LocationSpec,\n    emit: CatalogProcessorEmit,\n  ): Promise<Entity> {\n    const selfRef = getCompoundEntityRef(entity);\n\n    if (\n      entity.apiVersion === 'scaffolder.backstage.io/v1beta3' &&\n      entity.kind === 'Template'\n    ) {\n      const template = entity as TemplateEntityV1beta3;\n\n      const target = template.spec.owner;\n      if (target) {\n        const targetRef = parseEntityRef(target, {\n          defaultKind: 'Group',\n          defaultNamespace: selfRef.namespace,\n        });\n        emit(\n          processingResult.relation({\n            source: selfRef,\n            type: RELATION_OWNED_BY,\n            target: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n          }),\n        );\n        emit(\n          processingResult.relation({\n            source: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n            type: RELATION_OWNER_OF,\n            target: selfRef,\n          }),\n        );\n      }\n    }\n\n    return entity;\n  }\n}\n"],"names":["InputError","stringifyEntityRef","fs","resolveSafeChildPath","yaml","relative","readdir","join","stat","path","VM","resolvePackagePath","globby","extname","isBinaryFile","PassThrough","spawn","Git","assertError","normalizePath","joinPath","isChildPath","getPersonalAccessTokenHandler","WebApi","fetch","getAuthorizationHeader","performEnableLFS","createRepository","dirname","getGerritRequestOptions","crypto","DefaultGithubCredentialsProvider","Octokit","limiterFactory","CustomErrorBase","createPullRequest","Gitlab","emitterEventNames","ConflictError","NotFoundError","DateTime","uuid","ObservableImpl","isArray","winston","nunjucks","validateJsonSchema","errors","pathToFileURL","os","ANNOTATION_SOURCE_LOCATION","ANNOTATION_LOCATION","parseLocationRef","DEFAULT_NAMESPACE","Router","express","ScmIntegrations","parseEntityRef","validate","z","templateEntityV1beta3Validator","getCompoundEntityRef","processingResult","RELATION_OWNED_BY","RELATION_OWNER_OF"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAY,MAAC,oBAAoB,GAAG,CAAC,cAAc,KAAK;AACxD,EAAE,OAAO,cAAc,CAAC;AACxB;;ACCO,SAAS,2BAA2B,CAAC,OAAO,EAAE;AACrD,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;AAClD,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,kBAAkB;AAC1B,IAAI,WAAW,EAAE,+FAA+F;AAChH,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,KAAK,EAAE;AACf,UAAU;AACV,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,QAAQ,EAAE,CAAC,gBAAgB,CAAC;AACxC,YAAY,UAAU,EAAE;AACxB,cAAc,cAAc,EAAE;AAC9B,gBAAgB,KAAK,EAAE,kBAAkB;AACzC,gBAAgB,WAAW,EAAE,4DAA4D;AACzF,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,eAAe;AACf,cAAc,QAAQ,EAAE;AACxB,gBAAgB,KAAK,EAAE,UAAU;AACjC,gBAAgB,WAAW,EAAE,oEAAoE;AACjG,gBAAgB,IAAI,EAAE,SAAS;AAC/B,eAAe;AACf,aAAa;AACb,WAAW;AACX,UAAU;AACV,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,QAAQ,EAAE,CAAC,iBAAiB,CAAC;AACzC,YAAY,UAAU,EAAE;AACxB,cAAc,eAAe,EAAE;AAC/B,gBAAgB,KAAK,EAAE,yBAAyB;AAChD,gBAAgB,WAAW,EAAE,qEAAqE;AAClG,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,eAAe;AACf,cAAc,eAAe,EAAE;AAC/B,gBAAgB,KAAK,EAAE,WAAW;AAClC,gBAAgB,WAAW,EAAE,sGAAsG;AACnI,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,eAAe;AACf,cAAc,QAAQ,EAAE;AACxB,gBAAgB,KAAK,EAAE,UAAU;AACjC,gBAAgB,WAAW,EAAE,oEAAoE;AACjG,gBAAgB,IAAI,EAAE,SAAS;AAC/B,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,gBAAgB,CAAC;AACpC,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC;AACjB,MAAM,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAC5B,MAAM,IAAI,cAAc,CAAC;AACzB,MAAM,IAAI,gBAAgB,IAAI,KAAK,EAAE;AACrC,QAAQ,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;AAC9C,OAAO,MAAM;AACb,QAAQ,MAAM,EAAE,eAAe,EAAE,eAAe,GAAG,oBAAoB,EAAE,GAAG,KAAK,CAAC;AAClF,QAAQ,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChE,QAAQ,IAAI,CAAC,WAAW,EAAE;AAC1B,UAAU,MAAM,IAAIA,iBAAU,CAAC,CAAC,8BAA8B,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;AACnF,SAAS;AACT,QAAQ,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC;AAChD,UAAU,IAAI,EAAE,eAAe;AAC/B,UAAU,GAAG,EAAE,eAAe;AAC9B,SAAS,CAAC,CAAC;AACX,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;AACtE,MAAM,MAAM,aAAa,CAAC,WAAW,CAAC;AACtC,QAAQ,IAAI,EAAE,KAAK;AACnB,QAAQ,MAAM,EAAE,cAAc;AAC9B,OAAO,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,cAAc,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC;AACjH,MAAM,IAAI;AACV,QAAQ,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC;AACvD,UAAU,MAAM,EAAE,IAAI;AACtB,UAAU,IAAI,EAAE,KAAK;AACrB,UAAU,MAAM,EAAE,cAAc;AAChC,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,cAAc,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC;AACnH,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC,UAAU,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;AACtC,UAAU,IAAI,MAAM,CAAC;AACrB,UAAU,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;AAC7G,UAAU,IAAI,CAAC,MAAM,EAAE;AACvB,YAAY,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;AACrF,WAAW;AACX,UAAU,IAAI,CAAC,MAAM,EAAE;AACvB,YAAY,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,GAAG,CAAC,MAAM,CAAC,WAAW,EAAEC,+BAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9D,SAAS;AACT,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC7B,UAAU,MAAM,CAAC,CAAC;AAClB,SAAS;AACT,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACnD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC3GO,SAAS,wBAAwB,GAAG;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,eAAe;AACvB,IAAI,WAAW,EAAE,gDAAgD;AACjE,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,QAAQ,EAAE;AACpB,YAAY,KAAK,EAAE,mBAAmB;AACtC,YAAY,WAAW,EAAE,+BAA+B;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,wCAAwC;AAC3D,YAAY,WAAW,EAAE,4DAA4D;AACrF,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACvD,MAAM,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;AAC7C,MAAM,MAAM,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,mBAAmB,CAAC;AACrE,MAAM,MAAMC,sBAAE,CAAC,SAAS,CAACC,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,EAAEC,eAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAChG,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC9BO,SAAS,oBAAoB,GAAG;AACvC,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,WAAW;AACnB,IAAI,WAAW,EAAE,oEAAoE;AACrF,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,SAAS;AAC3B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,YAAY;AAC/B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC;AACjB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1D,MAAM,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE;AAC1D,QAAQ,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/C,OAAO;AACP,MAAM,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE;AAChE,QAAQ,MAAM,KAAK,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAChE,QAAQ,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7B,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAEC,aAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL,CAAC;AACM,eAAe,gBAAgB,CAAC,GAAG,EAAE;AAC5C,EAAE,MAAM,OAAO,GAAG,MAAMC,UAAO,CAAC,GAAG,CAAC,CAAC;AACrC,EAAE,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,MAAM,KAAK;AAChE,IAAI,MAAM,GAAG,GAAGC,SAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,MAAMC,OAAI,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3E,GAAG,CAAC,CAAC,CAAC;AACN,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjD;;AC3CO,eAAe,aAAa,CAAC;AACpC,EAAE,MAAM;AACR,EAAE,YAAY;AACd,EAAE,OAAO;AACT,EAAE,QAAQ,GAAG,GAAG;AAChB,EAAE,UAAU;AACZ,CAAC,EAAE;AACH,EAAE,IAAI,kBAAkB,GAAG,KAAK,CAAC;AACjC,EAAE,IAAI;AACN,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAC9B,GAAG,CAAC,MAAM;AACV,GAAG;AACH,EAAE,IAAI,CAAC,kBAAkB,KAAK,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE;AACzF,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACrD,IAAI,MAAM,MAAM,GAAGL,kCAAoB,CAACM,wBAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC1E,IAAI,MAAMP,sBAAE,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACtC,GAAG,MAAM;AACT,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,kBAAkB,EAAE;AAC5B,MAAM,OAAO,GAAG,QAAQ,CAAC;AACzB,KAAK,MAAM,IAAI,OAAO,EAAE;AACxB,MAAM,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACtD,MAAM,IAAI,CAAC,WAAW,EAAE;AACxB,QAAQ,MAAM,IAAIF,iBAAU,CAAC,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7E,OAAO;AACP,MAAM,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC;AACvC,QAAQ,GAAG,EAAE,QAAQ;AACrB,QAAQ,IAAI,EAAE,OAAO;AACrB,OAAO,CAAC,CAAC;AACT,KAAK,MAAM;AACX,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,0FAA0F,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACpI,KAAK;AACL,IAAI,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC/C,IAAI,MAAME,sBAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC7C,GAAG;AACH;;ACtCO,SAAS,sBAAsB,CAAC,OAAO,EAAE;AAChD,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,aAAa;AACrB,IAAI,WAAW,EAAE,+HAA+H;AAChJ,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,KAAK,CAAC;AACzB,QAAQ,UAAU,EAAE;AACpB,UAAU,GAAG,EAAE;AACf,YAAY,KAAK,EAAE,WAAW;AAC9B,YAAY,WAAW,EAAE,uEAAuE;AAChG,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,uEAAuE;AAChG,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC;AACjB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;AAChE,MAAM,MAAM,UAAU,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;AACzE,MAAM,MAAM,UAAU,GAAGC,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AAC7E,MAAM,MAAM,aAAa,CAAC;AAC1B,QAAQ,MAAM;AACd,QAAQ,YAAY;AACpB,QAAQ,OAAO,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO;AACtE,QAAQ,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG;AAC/B,QAAQ,UAAU;AAClB,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACtCA,MAAM,QAAQ,GAAG,CAAC,cAAc,KAAK,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,cAAc,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACK,MAAM,eAAe,CAAC;AAC7B,EAAE,aAAa,YAAY,CAAC,OAAO,GAAG,EAAE,EAAE;AAC1C,IAAI,MAAM,EAAE,YAAY,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AACpF,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,OAAO,CAAC,YAAY,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,IAAI,yBAAyB,EAAE;AACnC,MAAM,OAAO,CAAC,yBAAyB,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,cAAc,CAAC,KAAK;AAC/L,QAAQ,UAAU;AAClB,QAAQ,CAAC,GAAG,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;AAC5D,OAAO,CAAC,CAAC,CAAC;AACV,KAAK;AACL,IAAI,MAAM,EAAE,GAAG,IAAIO,MAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AACnC,IAAI,MAAM,cAAc,GAAG,MAAMR,sBAAE,CAAC,QAAQ,CAACS,gCAAkB,CAAC,sCAAsC,EAAE,wBAAwB,CAAC,EAAE,OAAO,CAAC,CAAC;AAC5I,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;AACrC,IAAI,MAAM,MAAM,GAAG,CAAC,QAAQ,EAAE,MAAM,KAAK;AACzC,MAAM,IAAI,CAAC,EAAE,EAAE;AACf,QAAQ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AACpE,OAAO;AACP,MAAM,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AAC5C,MAAM,EAAE,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,MAAM,IAAI,kBAAkB,EAAE;AAC9B,QAAQ,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,yCAAyC,CAAC,CAAC,CAAC;AACnE,OAAO;AACP,MAAM,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC;AAC3D,KAAK,CAAC;AACN,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;;AC9FO,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AACtE,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,gBAAgB;AACxB,IAAI,WAAW,EAAE,0MAA0M;AAC3N,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,KAAK,CAAC;AACzB,QAAQ,UAAU,EAAE;AACpB,UAAU,GAAG,EAAE;AACf,YAAY,KAAK,EAAE,WAAW;AAC9B,YAAY,WAAW,EAAE,uEAAuE;AAChG,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,+GAA+G;AACxI,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,iBAAiB;AACpC,YAAY,WAAW,EAAE,4CAA4C;AACrE,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,iBAAiB,EAAE;AAC7B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,kHAAkH;AAC3I,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,aAAa;AACb,WAAW;AACX,UAAU,kBAAkB,EAAE;AAC9B,YAAY,KAAK,EAAE,iCAAiC;AACpD,YAAY,WAAW,EAAE,uFAAuF;AAChH,YAAY,IAAI,EAAE,SAAS;AAC3B,WAAW;AACX,UAAU,qBAAqB,EAAE;AACjC,YAAY,KAAK,EAAE,yBAAyB;AAC5C,YAAY,WAAW,EAAE,wHAAwH;AACjJ,YAAY,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;AACvC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC;AACjB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;AACnE,MAAM,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,wBAAwB,EAAE,CAAC;AAC3D,MAAM,MAAM,WAAW,GAAGR,kCAAoB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AACpE,MAAM,MAAM,UAAU,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;AACzE,MAAM,MAAM,SAAS,GAAGA,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AAC5E,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,iBAAiB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;AACtF,QAAQ,MAAM,IAAIH,iBAAU,CAAC,uDAAuD,CAAC,CAAC;AACtF,OAAO;AACP,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,qBAAqB,KAAK,GAAG,CAAC,KAAK,CAAC,iBAAiB,IAAI,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE;AAC5G,QAAQ,MAAM,IAAIA,iBAAU,CAAC,yFAAyF,CAAC,CAAC;AACxH,OAAO;AACP,MAAM,IAAI,SAAS,GAAG,KAAK,CAAC;AAC5B,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,qBAAqB,EAAE;AAC3C,QAAQ,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,qBAAqB,KAAK,IAAI,GAAG,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,qBAAqB,CAAC;AACxG,QAAQ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACxC,UAAU,SAAS,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACtC,SAAS;AACT,OAAO;AACP,MAAM,MAAM,aAAa,CAAC;AAC1B,QAAQ,MAAM;AACd,QAAQ,YAAY;AACpB,QAAQ,OAAO,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO;AACtE,QAAQ,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG;AAC/B,QAAQ,UAAU,EAAE,WAAW;AAC/B,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;AACnE,MAAM,MAAM,oBAAoB,GAAG,MAAMY,0BAAM,CAAC,CAAC,IAAI,CAAC,EAAE;AACxD,QAAQ,GAAG,EAAE,WAAW;AACxB,QAAQ,GAAG,EAAE,IAAI;AACjB,QAAQ,SAAS,EAAE,KAAK;AACxB,QAAQ,eAAe,EAAE,IAAI;AAC7B,QAAQ,mBAAmB,EAAE,KAAK;AAClC,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,mBAAmB,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,KAAKA,0BAAM,CAAC,OAAO,EAAE;AAClI,QAAQ,GAAG,EAAE,WAAW;AACxB,QAAQ,GAAG,EAAE,IAAI;AACjB,QAAQ,SAAS,EAAE,KAAK;AACxB,QAAQ,eAAe,EAAE,IAAI;AAC7B,QAAQ,mBAAmB,EAAE,KAAK;AAClC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AACpB,MAAM,MAAM,EAAE,kBAAkB,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;AACvD,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,CAAC,kBAAkB,GAAG,cAAc,GAAG,QAAQ,GAAG,MAAM;AAChE,OAAO,CAAC;AACR,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,oBAAoB,CAAC,MAAM,CAAC,6CAA6C,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClI,MAAM,MAAM,cAAc,GAAG,MAAM,eAAe,CAAC,YAAY,CAAC;AAChE,QAAQ,kBAAkB,EAAE,GAAG,CAAC,KAAK,CAAC,kBAAkB;AACxD,QAAQ,yBAAyB;AACjC,OAAO,CAAC,CAAC;AACT,MAAM,KAAK,MAAM,QAAQ,IAAI,oBAAoB,EAAE;AACnD,QAAQ,IAAI,cAAc,CAAC;AAC3B,QAAQ,IAAI,cAAc,CAAC;AAC3B,QAAQ,IAAI,eAAe,GAAG,QAAQ,CAAC;AACvC,QAAQ,IAAI,SAAS,EAAE;AACvB,UAAU,cAAc,GAAG,IAAI,CAAC;AAChC,UAAU,cAAc,GAAGC,YAAO,CAAC,eAAe,CAAC,KAAK,SAAS,CAAC;AAClE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC1E,WAAW;AACX,SAAS,MAAM;AACf,UAAU,cAAc,GAAG,cAAc,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC/E,SAAS;AACT,QAAQ,IAAI,cAAc,EAAE;AAC5B,UAAU,eAAe,GAAG,cAAc,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACrE,SAAS;AACT,QAAQ,MAAM,UAAU,GAAGV,kCAAoB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC5E,QAAQ,IAAI,SAAS,KAAK,UAAU,EAAE;AACtC,UAAU,SAAS;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,cAAc,IAAI,CAAC,SAAS,EAAE;AAC3C,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;AACpF,SAAS;AACT,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACpC,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACpF,UAAU,MAAMD,sBAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACzC,SAAS,MAAM;AACf,UAAU,MAAM,aAAa,GAAGC,kCAAoB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC5E,UAAU,IAAI,MAAMW,yBAAY,CAAC,aAAa,CAAC,EAAE;AACjD,YAAY,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,oBAAoB,EAAE,QAAQ,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACxF,YAAY,MAAMZ,sBAAE,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACrD,WAAW,MAAM;AACjB,YAAY,MAAM,QAAQ,GAAG,MAAMA,sBAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1D,YAAY,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,mCAAmC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5G,YAAY,MAAM,iBAAiB,GAAG,MAAMA,sBAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAChF,YAAY,MAAMA,sBAAE,CAAC,UAAU,CAAC,UAAU,EAAE,cAAc,GAAG,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,GAAG,iBAAiB,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AACtJ,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACnJY,MAAC,4BAA4B,GAAG,MAAM;AAClD,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,WAAW;AACnB,IAAI,WAAW,EAAE,kDAAkD;AACnE,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,QAAQ,EAAE,CAAC,OAAO,CAAC;AAC3B,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,OAAO;AAC1B,YAAY,WAAW,EAAE,sDAAsD;AAC/E,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE;AACxE,QAAQ,MAAM,IAAIF,iBAAU,CAAC,wBAAwB,CAAC,CAAC;AACvD,OAAO;AACP,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC1C,QAAQ,MAAM,QAAQ,GAAGG,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AACvE,QAAQ,IAAI;AACZ,UAAU,MAAMD,sBAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACpC,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACnE,SAAS,CAAC,OAAO,GAAG,EAAE;AACtB,UAAU,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACtE,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACtCY,MAAC,4BAA4B,GAAG,MAAM;AAClD,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,WAAW;AACnB,IAAI,WAAW,EAAE,oDAAoD;AACrE,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,QAAQ,EAAE,CAAC,OAAO,CAAC;AAC3B,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,OAAO;AAC1B,YAAY,WAAW,EAAE,yDAAyD;AAClF,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,cAAc,QAAQ,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;AACtC,cAAc,UAAU,EAAE;AAC1B,gBAAgB,IAAI,EAAE;AACtB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,KAAK,EAAE,+CAA+C;AACxE,iBAAiB;AACjB,gBAAgB,EAAE,EAAE;AACpB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,KAAK,EAAE,iCAAiC;AAC1D,iBAAiB;AACjB,gBAAgB,SAAS,EAAE;AAC3B,kBAAkB,IAAI,EAAE,SAAS;AACjC,kBAAkB,KAAK,EAAE,wDAAwD;AACjF,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC;AACjB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE;AACxE,QAAQ,MAAM,IAAIF,iBAAU,CAAC,wBAAwB,CAAC,CAAC;AACvD,OAAO;AACP,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC1C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;AACpC,UAAU,MAAM,IAAIA,iBAAU,CAAC,4CAA4C,CAAC,CAAC;AAC7E,SAAS;AACT,QAAQ,MAAM,cAAc,GAAGG,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClF,QAAQ,MAAM,YAAY,GAAGA,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9E,QAAQ,IAAI;AACZ,UAAU,MAAMD,sBAAE,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE;AACtD,YAAY,SAAS,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK;AACjE,WAAW,CAAC,CAAC;AACb,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,cAAc,CAAC,YAAY,EAAE,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;AAC5F,SAAS,CAAC,OAAO,GAAG,EAAE;AACtB,UAAU,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,sBAAsB,EAAE,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/F,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC3DY,MAAC,mBAAmB,GAAG,OAAO,OAAO,KAAK;AACtD,EAAE,MAAM;AACR,IAAI,OAAO;AACX,IAAI,IAAI;AACR,IAAI,OAAO,EAAE,YAAY;AACzB,IAAI,SAAS,GAAG,IAAIa,kBAAW,EAAE;AACjC,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACzC,IAAI,MAAM,OAAO,GAAGC,mBAAK,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AACvD,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK;AAC1C,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK;AAC1C,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,KAAK;AACnC,MAAM,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK;AAClC,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;AACtB,QAAQ,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,OAAO;AACP,MAAM,OAAO,OAAO,EAAE,CAAC;AACvB,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL,EAAE;AACK,eAAe,eAAe,CAAC;AACtC,EAAE,GAAG;AACL,EAAE,SAAS;AACX,EAAE,IAAI;AACN,EAAE,MAAM;AACR,EAAE,aAAa,GAAG,QAAQ;AAC1B,EAAE,aAAa,GAAG,gBAAgB;AAClC,EAAE,aAAa;AACf,CAAC,EAAE;AACH,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,MAAM,GAAG,GAAGC,iBAAG,CAAC,QAAQ,CAAC;AAC3B,IAAI,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC3B,IAAI,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC3B,IAAI,MAAM;AACV,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC;AACjB,IAAI,GAAG;AACP,IAAI,aAAa;AACjB,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AACxC,EAAE,MAAM,UAAU,GAAG;AACrB,IAAI,IAAI,EAAE,CAAC,EAAE,GAAG,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,aAAa,CAAC,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,YAAY;AAChG,IAAI,KAAK,EAAE,CAAC,EAAE,GAAG,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,yBAAyB;AAC/G,GAAG,CAAC;AACJ,EAAE,MAAM,GAAG,CAAC,MAAM,CAAC;AACnB,IAAI,GAAG;AACP,IAAI,OAAO,EAAE,aAAa;AAC1B,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,SAAS,EAAE,UAAU;AACzB,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,GAAG,CAAC,SAAS,CAAC;AACtB,IAAI,GAAG;AACP,IAAI,GAAG,EAAE,SAAS;AAClB,IAAI,MAAM,EAAE,QAAQ;AACpB,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC;AACjB,IAAI,GAAG;AACP,IAAI,MAAM,EAAE,QAAQ;AACpB,GAAG,CAAC,CAAC;AACL,CAAC;AACM,MAAM,yCAAyC,GAAG,OAAO;AAChE,EAAE,QAAQ;AACV,EAAE,MAAM;AACR,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAAE,uBAAuB;AACzB,EAAE,2BAA2B,GAAG,EAAE;AAClC,EAAE,aAAa,GAAG,QAAQ;AAC1B,CAAC,KAAK;AACN,EAAE,MAAM,OAAO,GAAG,YAAY;AAC9B,IAAI,IAAI;AACR,MAAM,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;AACrD,QAAQ,SAAS,EAAE;AACnB,UAAU,QAAQ,EAAE,CAAC,mBAAmB,CAAC;AACzC,SAAS;AACT,QAAQ,KAAK;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,MAAM,EAAE,aAAa;AAC7B,QAAQ,sBAAsB,EAAE;AAChC,UAAU,MAAM,EAAE,IAAI;AACtB,UAAU,QAAQ,EAAE,2BAA2B;AAC/C,SAAS;AACT,QAAQ,YAAY,EAAE,IAAI;AAC1B,QAAQ,cAAc,EAAE,IAAI;AAC5B,QAAQ,6BAA6B,EAAE;AACvC,UAAU,+BAA+B,EAAE,CAAC;AAC5C,UAAU,0BAA0B,EAAE,uBAAuB;AAC7D,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAMC,kBAAW,CAAC,CAAC,CAAC,CAAC;AACrB,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,6EAA6E,CAAC,EAAE;AAC7G,QAAQ,MAAM,CAAC,IAAI,CAAC,sFAAsF,CAAC,CAAC;AAC5G,OAAO,MAAM;AACb,QAAQ,MAAM,CAAC,CAAC;AAChB,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI;AACN,IAAI,MAAM,OAAO,EAAE,CAAC;AACpB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;AACjD,MAAM,MAAM,CAAC,CAAC;AACd,KAAK;AACL,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,MAAM,OAAO,EAAE,CAAC;AACpB,GAAG;AACH,CAAC;;AClHM,MAAM,sBAAsB,GAAG,CAAC,aAAa,EAAE,UAAU,KAAK;AACrE,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,MAAM,UAAU,GAAGC,cAAa,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;AAClF,IAAI,MAAMV,MAAI,GAAGW,SAAQ,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACrD,IAAI,IAAI,CAACC,yBAAW,CAAC,aAAa,EAAEZ,MAAI,CAAC,EAAE;AAC3C,MAAM,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC7C,KAAK;AACL,IAAI,OAAOA,MAAI,CAAC;AAChB,GAAG;AACH,EAAE,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC;AACK,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,YAAY,KAAK;AACvD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACzB,EAAE,IAAI,MAAM,CAAC;AACb,EAAE,IAAI;AACN,IAAI,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3C,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,IAAIT,iBAAU,CAAC,CAAC,0CAA0C,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3F,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,EAAE,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;AAC9E,EAAE,MAAM,YAAY,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;AAC5F,EAAE,MAAM,SAAS,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;AACtF,EAAE,MAAM,OAAO,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;AAClF,EAAE,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;AAC3E,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC1H,GAAG;AACH,EAAE,IAAI,IAAI,KAAK,WAAW,EAAE;AAC5B,IAAI,IAAI,IAAI,KAAK,eAAe,EAAE;AAClC,MAAM,IAAI,CAAC,SAAS,EAAE;AACtB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,sCAAsC,EAAE,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACpG,OAAO;AACP,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,sCAAsC,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAChG,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,sCAAsC,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC9F,KAAK;AACL,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/C,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,sCAAsC,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAC3F,GAAG;AACH,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AACjE,CAAC;;AC7CM,SAAS,wBAAwB,CAAC,OAAO,EAAE;AAClD,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,eAAe;AACvB,IAAI,WAAW,EAAE,0FAA0F;AAC3G,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,gFAAgF,CAAC;AAC3G,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,8EAA8E,CAAC;AACzG,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,6CAA6C,CAAC;AACxE,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,6CAA6C;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,gBAAgB,GAAG,gBAAgB;AAC3C,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACtF,MAAM,IAAI,CAAC,YAAY,EAAE;AACzB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACvI,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChE,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC/D,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,wCAAwC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAChF,OAAO;AACP,MAAM,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;AACzF,MAAM,MAAM,WAAW,GAAGsB,gDAA6B,CAAC,KAAK,CAAC,CAAC;AAC/D,MAAM,MAAM,MAAM,GAAG,IAAIC,yBAAM,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAChF,MAAM,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;AAC9C,MAAM,MAAM,aAAa,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC3C,MAAM,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/E,MAAM,IAAI,CAAC,YAAY,EAAE;AACzB,QAAQ,MAAM,IAAIvB,iBAAU,CAAC,CAAC,kDAAkD,EAAE,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC;AAClI,uFAAuF,CAAC,CAAC,CAAC;AAC1F,OAAO;AACP,MAAM,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;AAC/C,MAAM,IAAI,CAAC,SAAS,EAAE;AACtB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,yDAAyD,CAAC,CAAC;AACxF,OAAO;AACP,MAAM,MAAM,eAAe,GAAG,SAAS,CAAC;AACxC,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvG,QAAQ,KAAK,EAAE,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AAC3G,OAAO,CAAC;AACR,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS;AACjB,QAAQ,aAAa;AACrB,QAAQ,IAAI,EAAE;AACd,UAAU,QAAQ,EAAE,UAAU;AAC9B,UAAU,QAAQ,EAAE,KAAK;AACzB,SAAS;AACT,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,gBAAgB,GAAG,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AACxH,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACvHA,MAAM,8BAA8B,GAAG,OAAO,IAAI,KAAK;AACvD,EAAE,MAAM;AACR,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,IAAI;AACR,IAAI,WAAW;AACf,IAAI,cAAc;AAClB,IAAI,UAAU;AACd,IAAI,aAAa;AACjB,IAAI,UAAU;AACd,GAAG,GAAG,IAAI,CAAC;AACX,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACzB,MAAM,GAAG,EAAE,KAAK;AAChB,MAAM,WAAW;AACjB,MAAM,UAAU,EAAE,cAAc,KAAK,SAAS;AAC9C,MAAM,OAAO,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE;AAC/B,KAAK,CAAC;AACN,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI;AACN,IAAI,QAAQ,GAAG,MAAMwB,yBAAK,CAAC,CAAC,EAAE,UAAU,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACvF,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxH,GAAG;AACH,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClC,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;AAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AACnE,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AACxC,CAAC,CAAC;AACF,MAAM,+BAA+B,GAAG,OAAO,IAAI,KAAK;AACxD,EAAE,MAAM;AACR,IAAI,OAAO;AACX,IAAI,IAAI;AACR,IAAI,WAAW;AACf,IAAI,aAAa;AACjB,IAAI,cAAc;AAClB,IAAI,UAAU;AACd,GAAG,GAAG,IAAI,CAAC;AACX,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACzB,MAAM,IAAI,EAAE,IAAI;AAChB,MAAM,WAAW;AACjB,MAAM,MAAM,EAAE,cAAc,KAAK,QAAQ;AACzC,KAAK,CAAC;AACN,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI;AACN,IAAI,QAAQ,GAAG,MAAMA,yBAAK,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;AAC/E,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxH,GAAG;AACH,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClC,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AACxC,CAAC,CAAC;AACF,MAAMC,wBAAsB,GAAG,CAAC,MAAM,KAAK;AAC3C,EAAE,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;AAC7C,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACnF,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;AACpB,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,GAAG;AACH,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,+HAA+H,CAAC,CAAC,CAAC;AACrJ,CAAC,CAAC;AACF,MAAMC,kBAAgB,GAAG,OAAO,IAAI,KAAK;AACzC,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AACtD,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,KAAK;AACjB,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAMF,yBAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;AAC1I,EAAE,IAAI,CAAC,EAAE;AACT,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,wCAAwC,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC;AACK,SAAS,4BAA4B,CAAC,OAAO,EAAE;AACtD,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,mBAAmB;AAC3B,IAAI,WAAW,EAAE,8FAA8F;AAC/G,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,uBAAuB;AAC1C,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;AACvC,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,qEAAqE;AAC9F,YAAY,IAAI,EAAE,SAAS;AAC3B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,iDAAiD;AAC1E,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,gFAAgF,CAAC;AAC3G,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,8EAA8E,CAAC;AACzG,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,6CAA6C,CAAC;AACxE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,2HAA2H,CAAC,CAAC,CAAC;AACrJ,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,cAAc,GAAG,SAAS;AAClC,QAAQ,SAAS,GAAG,KAAK;AACzB,QAAQ,gBAAgB,GAAG,gBAAgB;AAC3C,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACrF,MAAM,IAAI,IAAI,KAAK,eAAe,EAAE;AACpC,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,UAAU,MAAM,IAAIxB,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACtI,SAAS;AACT,OAAO;AACP,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAClI,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpE,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,MAAM,aAAa,GAAGyB,wBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG;AACrE,QAAQ,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC,IAAI;AAC3C,QAAQ,UAAU,EAAE,iBAAiB,CAAC,MAAM,CAAC,UAAU;AACvD,QAAQ,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK;AAC9B,OAAO,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACpC,MAAM,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7D,MAAM,MAAM,YAAY,GAAG,IAAI,KAAK,eAAe,GAAG,8BAA8B,GAAG,+BAA+B,CAAC;AACvH,MAAM,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAM,YAAY,CAAC;AAChE,QAAQ,aAAa;AACrB,QAAQ,SAAS,EAAE,SAAS,IAAI,EAAE;AAClC,QAAQ,OAAO;AACf,QAAQ,IAAI;AACZ,QAAQ,cAAc;AACtB,QAAQ,UAAU,EAAE,aAAa;AACjC,QAAQ,WAAW;AACnB,QAAQ,UAAU;AAClB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvG,QAAQ,KAAK,EAAE,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AAC3G,OAAO,CAAC;AACR,MAAM,IAAI,IAAI,CAAC;AACf,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,GAAG;AACf,UAAU,QAAQ,EAAE,cAAc;AAClC,UAAU,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK;AACnC,SAAS,CAAC;AACV,OAAO,MAAM;AACb,QAAQ,IAAI,GAAG;AACf,UAAU,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,QAAQ,GAAG,cAAc;AAC1G,UAAU,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AACzJ,SAAS,CAAC;AACV,OAAO;AACP,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS;AACjB,QAAQ,IAAI;AACZ,QAAQ,aAAa;AACrB,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,gBAAgB,GAAG,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AACxH,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,SAAS,IAAI,IAAI,KAAK,eAAe,EAAE;AACjD,QAAQ,MAAMC,kBAAgB,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACvE,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC9PA,MAAMC,kBAAgB,GAAG,OAAO,IAAI,KAAK;AACzC,EAAE,MAAM;AACR,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,IAAI;AACR,IAAI,WAAW;AACf,IAAI,cAAc;AAClB,IAAI,UAAU;AACd,IAAI,aAAa;AACjB,IAAI,UAAU;AACd,GAAG,GAAG,IAAI,CAAC;AACX,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACzB,MAAM,GAAG,EAAE,KAAK;AAChB,MAAM,WAAW;AACjB,MAAM,UAAU,EAAE,cAAc,KAAK,SAAS;AAC9C,MAAM,OAAO,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE;AAC/B,KAAK,CAAC;AACN,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI;AACN,IAAI,QAAQ,GAAG,MAAMH,yBAAK,CAAC,CAAC,EAAE,UAAU,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACvF,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxH,GAAG;AACH,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClC,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;AAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AACnE,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AACxC,CAAC,CAAC;AACF,MAAMC,wBAAsB,GAAG,CAAC,MAAM,KAAK;AAC3C,EAAE,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;AAC7C,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACnF,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;AACpB,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,GAAG;AACH,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,uJAAuJ,CAAC,CAAC,CAAC;AAC7K,CAAC,CAAC;AACK,SAAS,iCAAiC,CAAC,OAAO,EAAE;AAC3D,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,wBAAwB;AAChC,IAAI,WAAW,EAAE,oGAAoG;AACrH,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,uBAAuB;AAC1C,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;AACvC,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,uDAAuD;AAChF,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,cAAc,GAAG,SAAS;AAClC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACrF,MAAM,IAAI,CAAC,SAAS,EAAE;AACtB,QAAQ,MAAM,IAAIzB,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACpI,OAAO;AACP,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAClI,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzE,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,MAAM,aAAa,GAAGyB,wBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAC5H,MAAM,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7D,MAAM,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAME,kBAAgB,CAAC;AACpE,QAAQ,aAAa;AACrB,QAAQ,SAAS,EAAE,SAAS,IAAI,EAAE;AAClC,QAAQ,OAAO;AACf,QAAQ,IAAI;AACZ,QAAQ,cAAc;AACtB,QAAQ,UAAU,EAAE,aAAa;AACjC,QAAQ,WAAW;AACnB,QAAQ,UAAU;AAClB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvE,QAAQ,KAAK,EAAE,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AACzE,OAAO,CAAC;AACR,MAAM,IAAI,IAAI,CAAC;AACf,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,GAAG;AACf,UAAU,QAAQ,EAAE,cAAc;AAClC,UAAU,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK;AACnC,SAAS,CAAC;AACV,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,EAAE;AACzF,UAAU,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;AACnG,SAAS;AACT,QAAQ,IAAI,GAAG;AACf,UAAU,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,QAAQ;AACrD,UAAU,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,WAAW;AACxD,SAAS,CAAC;AACV,OAAO;AACP,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS;AACjB,QAAQ,IAAI;AACZ,QAAQ,aAAa;AACrB,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AAClF,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACzKA,MAAM,gBAAgB,GAAG,OAAO,IAAI,KAAK;AACzC,EAAE,MAAM;AACR,IAAI,OAAO;AACX,IAAI,IAAI;AACR,IAAI,WAAW;AACf,IAAI,aAAa;AACjB,IAAI,cAAc;AAClB,IAAI,UAAU;AACd,GAAG,GAAG,IAAI,CAAC;AACX,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACzB,MAAM,IAAI,EAAE,IAAI;AAChB,MAAM,WAAW;AACjB,MAAM,MAAM,EAAE,cAAc,KAAK,QAAQ;AACzC,KAAK,CAAC;AACN,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,IAAI;AACN,IAAI,QAAQ,GAAG,MAAMH,yBAAK,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;AAC/E,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxH,GAAG;AACH,EAAE,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClC,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AACxC,CAAC,CAAC;AACF,MAAM,sBAAsB,GAAG,CAAC,MAAM,KAAK;AAC3C,EAAE,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC;AACF,MAAM,gBAAgB,GAAG,OAAO,IAAI,KAAK;AACzC,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AACtD,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,KAAK;AACjB,IAAI,OAAO,EAAE;AACb,MAAM,aAAa,EAAE,aAAa;AAClC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAMA,yBAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;AAC1I,EAAE,IAAI,CAAC,EAAE;AACT,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,wCAAwC,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC;AACK,SAAS,kCAAkC,CAAC,OAAO,EAAE;AAC5D,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,yBAAyB;AACjC,IAAI,WAAW,EAAE,qGAAqG;AACtH,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,uBAAuB;AAC1C,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;AACvC,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,gCAAgC;AACzD,YAAY,IAAI,EAAE,SAAS;AAC3B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,wDAAwD;AACjF,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,cAAc,GAAG,SAAS;AAClC,QAAQ,SAAS,GAAG,KAAK;AACzB,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAC1E,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,MAAM,IAAIxB,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAClI,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1E,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;AACzF,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,wCAAwC,EAAE,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,+EAA+E,CAAC,CAAC,CAAC;AACnL,OAAO;AACP,MAAM,MAAM,aAAa,GAAG,sBAAsB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9D,MAAM,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7D,MAAM,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAM,gBAAgB,CAAC;AACpE,QAAQ,aAAa;AACrB,QAAQ,OAAO;AACf,QAAQ,IAAI;AACZ,QAAQ,cAAc;AACtB,QAAQ,WAAW;AACnB,QAAQ,UAAU;AAClB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvE,QAAQ,KAAK,EAAE,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AACzE,OAAO,CAAC;AACR,MAAM,MAAM,IAAI,GAAG;AACnB,QAAQ,QAAQ,EAAE,cAAc;AAChC,QAAQ,QAAQ,EAAE,KAAK;AACvB,OAAO,CAAC;AACR,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS;AACjB,QAAQ,IAAI;AACZ,QAAQ,aAAa;AACrB,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AAClF,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,SAAS,EAAE;AACrB,QAAQ,MAAM,gBAAgB,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACvE,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC1KO,SAAS,uBAAuB,GAAG;AAC1C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,cAAc;AACtB,IAAI,WAAW,EAAE,uDAAuD;AACxE,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,MAAM,CAAC;AAC1B,QAAQ,UAAU,EAAE;AACpB,UAAU,IAAI,EAAE;AAChB,YAAY,KAAK,EAAE,sDAAsD;AACzE,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM,QAAES,MAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;AACjC,MAAM,MAAM,MAAM,GAAG,MAAMP,sBAAE,CAAC,UAAU,CAACO,MAAI,CAAC,CAAC;AAC/C,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,MAAM,IAAIT,iBAAU,CAAC,4BAA4B,CAAC,CAAC;AAC3D,OAAO;AACP,MAAM,MAAME,sBAAE,CAAC,SAAS,CAAC0B,YAAO,CAACnB,MAAI,CAAC,CAAC,CAAC;AACxC,MAAM,MAAMP,sBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAEO,MAAI,CAAC,CAAC;AAC7C,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACrBA,MAAM,mBAAmB,GAAG,OAAO,MAAM,EAAE,OAAO,KAAK;AACvD,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;AAC9D,EAAE,MAAM,YAAY,GAAG;AACvB,IAAI,MAAM,EAAE,KAAK;AACjB,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACzB,MAAM,MAAM;AACZ,MAAM,WAAW;AACjB,MAAM,MAAM,EAAE,CAAC,KAAK,CAAC;AACrB,MAAM,mBAAmB,EAAE,KAAK;AAChC,KAAK,CAAC;AACN,IAAI,OAAO,EAAE;AACb,MAAM,GAAGoB,mCAAuB,CAAC,MAAM,CAAC,CAAC,OAAO;AAChD,MAAM,cAAc,EAAE,kBAAkB;AACxC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,MAAM,QAAQ,GAAG,MAAML,yBAAK,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AAChH,EAAE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxH,GAAG;AACH,CAAC,CAAC;AACF,MAAM,qBAAqB,GAAG,CAAC,MAAM,EAAE,aAAa,KAAK;AACzD,EAAE,MAAM,QAAQ,GAAGM,0BAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC1D,EAAE,MAAM,GAAG,GAAG,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC,IAAI,aAAa,CAAC;AAC9F;AACA,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;AACzB,EAAE,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AACK,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,gBAAgB;AACxB,IAAI,WAAW,EAAE,2FAA2F;AAC5G,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,gFAAgF,CAAC;AAC3G,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,8EAA8E,CAAC;AACzG,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,6CAA6C,CAAC;AACxE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,QAAQ,gBAAgB,GAAG,gBAAgB;AAC3C,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACnF,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjE,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAI9B,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAChI,OAAO;AACP,MAAM,IAAI,CAAC,SAAS,EAAE;AACtB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4DAA4D,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACpI,OAAO;AACP,MAAM,MAAM,mBAAmB,CAAC,iBAAiB,CAAC,MAAM,EAAE;AAC1D,QAAQ,WAAW;AACnB,QAAQ,KAAK;AACb,QAAQ,WAAW,EAAE,IAAI;AACzB,QAAQ,MAAM,EAAE,SAAS;AACzB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,IAAI,GAAG;AACnB,QAAQ,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,QAAQ;AACnD,QAAQ,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,QAAQ;AACnD,OAAO,CAAC;AACR,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvG,QAAQ,KAAK,EAAE,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AAC3G,OAAO,CAAC;AACR,MAAM,MAAM,SAAS,GAAG,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACzE,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9D,QAAQ,SAAS;AACjB,QAAQ,IAAI;AACZ,QAAQ,aAAa;AACrB,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,qBAAqB,CAAC,MAAM,EAAE,gBAAgB,CAAC;AACtE,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,eAAe,GAAG,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC;AACjH,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACtIA,MAAM,kBAAkB,GAAG,GAAG,CAAC;AACxB,eAAe,iBAAiB,CAAC,OAAO,EAAE;AACjD,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,EAAE,YAAY,EAAE,mBAAmB,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AACxE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACpE,EAAE,MAAM,cAAc,GAAG;AACzB,IAAI,OAAO,EAAE,kBAAkB;AAC/B,GAAG,CAAC;AACJ,EAAE,IAAI,CAAC,KAAK,EAAE;AACd,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAClE,GAAG;AACH,EAAE,MAAM,iBAAiB,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AACjG,EAAE,IAAI,CAAC,iBAAiB,EAAE;AAC1B,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5D,GAAG;AACH,EAAE,IAAI,KAAK,EAAE;AACb,IAAI,OAAO;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,OAAO,EAAE,iBAAiB,CAAC,UAAU;AAC3C,MAAM,QAAQ,EAAE,CAAC,gBAAgB,CAAC;AAClC,MAAM,OAAO,EAAE,cAAc;AAC7B,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,yBAAyB,GAAG,mBAAmB,IAAI,IAAI,GAAG,mBAAmB,GAAG+B,4CAAgC,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACxJ,EAAE,MAAM,EAAE,KAAK,EAAE,uBAAuB,EAAE,GAAG,MAAM,yBAAyB,CAAC,cAAc,CAAC;AAC5F,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;AACnF,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,CAAC,uBAAuB,EAAE;AAChC,IAAI,MAAM,IAAI/B,iBAAU,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACxG,GAAG;AACH,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,uBAAuB;AACjC,IAAI,OAAO,EAAE,iBAAiB,CAAC,UAAU;AACzC,IAAI,QAAQ,EAAE,CAAC,gBAAgB,CAAC;AAChC,GAAG,CAAC;AACJ;;AC/BO,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AACtE,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,gBAAgB;AACxB,IAAI,WAAW,EAAE,mFAAmF;AACpG,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,gJAAgJ,CAAC;AAC3K,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,mBAAmB;AACtC,YAAY,WAAW,EAAE,CAAC,uJAAuJ,CAAC;AAClL,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,uBAAuB,EAAE;AACnC,YAAY,KAAK,EAAE,4BAA4B;AAC/C,YAAY,WAAW,EAAE,+EAA+E;AACxG,YAAY,IAAI,EAAE,SAAS;AAC3B,WAAW;AACX,UAAU,2BAA2B,EAAE;AACvC,YAAY,KAAK,EAAE,gCAAgC;AACnD,YAAY,WAAW,EAAE,yEAAyE;AAClG,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,aAAa;AACb,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,uBAAuB;AAC1C,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;AACnD,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,oBAAoB,EAAE;AAChC,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,qFAAqF,CAAC;AAChH,WAAW;AACX,UAAU,mBAAmB,EAAE;AAC/B,YAAY,KAAK,EAAE,wBAAwB;AAC3C,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,oEAAoE,CAAC;AAC/F,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,gFAAgF,CAAC;AAC3G,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,8EAA8E,CAAC;AACzG,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,6CAA6C,CAAC;AACxE,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,gDAAgD,CAAC;AAC3E,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,gDAAgD,CAAC;AAC3E,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,gDAAgD,CAAC;AAC3E,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,eAAe;AAClC,YAAY,WAAW,EAAE,oDAAoD;AAC7E,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,cAAc,oBAAoB,EAAE,KAAK;AACzC,cAAc,QAAQ,EAAE,CAAC,QAAQ,CAAC;AAClC,cAAc,UAAU,EAAE;AAC1B,gBAAgB,MAAM,EAAE;AACxB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,WAAW,EAAE,iCAAiC;AAChE,kBAAkB,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;AACvE,iBAAiB;AACjB,gBAAgB,IAAI,EAAE;AACtB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,WAAW,EAAE,2DAA2D;AAC1F,iBAAiB;AACjB,gBAAgB,QAAQ,EAAE;AAC1B,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,WAAW,EAAE,qDAAqD;AACpF,iBAAiB;AACjB,gBAAgB,IAAI,EAAE;AACtB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,WAAW,EAAE,2DAA2D;AAC1F,iBAAiB;AACjB,eAAe;AACf,cAAc,KAAK,EAAE;AACrB,gBAAgB,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;AACtC,gBAAgB,EAAE,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAE;AAC1C,gBAAgB,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE;AACtC,eAAe;AACf,aAAa;AACb,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,8CAA8C;AACvE,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,QAAQ;AAC3B,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,WAAW;AACnB,QAAQ,MAAM;AACd,QAAQ,uBAAuB,GAAG,KAAK;AACvC,QAAQ,2BAA2B,GAAG,EAAE;AACxC,QAAQ,cAAc,GAAG,SAAS;AAClC,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,oBAAoB,GAAG,IAAI;AACnC,QAAQ,mBAAmB,GAAG,KAAK;AACnC,QAAQ,gBAAgB,GAAG,gBAAgB;AAC3C,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,QAAQ,gBAAgB,GAAG,IAAI;AAC/B,QAAQ,gBAAgB,GAAG,IAAI;AAC/B,QAAQ,gBAAgB,GAAG,IAAI;AAC/B,QAAQ,aAAa;AACrB,QAAQ,MAAM;AACd,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAClE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,8CAA8C,CAAC,CAAC;AAC7E,OAAO;AACP,MAAM,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC;AACrD,QAAQ,YAAY;AACpB,QAAQ,mBAAmB,EAAE,yBAAyB;AACtD,QAAQ,KAAK,EAAE,aAAa;AAC5B,QAAQ,OAAO;AACf,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,MAAM,GAAG,IAAIgC,eAAO,CAAC,cAAc,CAAC,CAAC;AACjD,MAAM,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;AACzD,QAAQ,QAAQ,EAAE,KAAK;AACvB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AACpG,QAAQ,IAAI,EAAE,IAAI;AAClB,QAAQ,GAAG,EAAE,KAAK;AAClB,QAAQ,OAAO,EAAE,cAAc,KAAK,SAAS;AAC7C,QAAQ,UAAU,EAAE,cAAc;AAClC,QAAQ,WAAW;AACnB,QAAQ,sBAAsB,EAAE,mBAAmB;AACnD,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,OAAO,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC;AACxD,QAAQ,IAAI,EAAE,IAAI;AAClB,QAAQ,OAAO,EAAE,cAAc,KAAK,SAAS;AAC7C,QAAQ,WAAW;AACnB,QAAQ,sBAAsB,EAAE,mBAAmB;AACnD,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,OAAO,CAAC;AAClB,MAAM,IAAI;AACV,QAAQ,OAAO,GAAG,CAAC,MAAM,mBAAmB,EAAE,IAAI,CAAC;AACnD,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQd,kBAAW,CAAC,CAAC,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,wCAAwC,EAAE;AACpE,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,qFAAqF,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjK,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5G,OAAO;AACP,MAAM,IAAI,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACpE,QAAQ,MAAM,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3C,QAAQ,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC;AAChE,UAAU,GAAG,EAAE,KAAK;AACpB,UAAU,SAAS,EAAE,IAAI;AACzB,UAAU,KAAK;AACf,UAAU,IAAI;AACd,UAAU,UAAU,EAAE,OAAO;AAC7B,SAAS,CAAC,CAAC;AACX,OAAO,MAAM,IAAI,MAAM,IAAI,MAAM,KAAK,KAAK,EAAE;AAC7C,QAAQ,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;AAChD,UAAU,KAAK;AACf,UAAU,IAAI;AACd,UAAU,QAAQ,EAAE,MAAM;AAC1B,UAAU,UAAU,EAAE,OAAO;AAC7B,SAAS,CAAC,CAAC;AACX,OAAO;AACP,MAAM,IAAI,aAAa,EAAE;AACzB,QAAQ,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;AAClD,UAAU,IAAI;AACd,YAAY,IAAI,MAAM,IAAI,YAAY,EAAE;AACxC,cAAc,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;AACtD,gBAAgB,KAAK;AACrB,gBAAgB,IAAI;AACpB,gBAAgB,QAAQ,EAAE,YAAY,CAAC,IAAI;AAC3C,gBAAgB,UAAU,EAAE,YAAY,CAAC,MAAM;AAC/C,eAAe,CAAC,CAAC;AACjB,aAAa,MAAM,IAAI,UAAU,IAAI,YAAY,EAAE;AACnD,cAAc,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,0FAA0F,CAAC,CAAC;AAC1H,cAAc,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC;AACtE,gBAAgB,GAAG,EAAE,KAAK;AAC1B,gBAAgB,SAAS,EAAE,YAAY,CAAC,QAAQ;AAChD,gBAAgB,KAAK;AACrB,gBAAgB,IAAI;AACpB,gBAAgB,UAAU,EAAE,YAAY,CAAC,MAAM;AAC/C,eAAe,CAAC,CAAC;AACjB,aAAa,MAAM,IAAI,MAAM,IAAI,YAAY,EAAE;AAC/C,cAAc,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,CAAC;AACtE,gBAAgB,GAAG,EAAE,KAAK;AAC1B,gBAAgB,SAAS,EAAE,YAAY,CAAC,IAAI;AAC5C,gBAAgB,KAAK;AACrB,gBAAgB,IAAI;AACpB,gBAAgB,UAAU,EAAE,YAAY,CAAC,MAAM;AAC/C,eAAe,CAAC,CAAC;AACjB,aAAa;AACb,WAAW,CAAC,OAAO,CAAC,EAAE;AACtB,YAAYA,kBAAW,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAY,MAAM,IAAI,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAC;AAC/D,YAAY,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChG,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,IAAI;AACZ,UAAU,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AACnD,YAAY,KAAK;AACjB,YAAY,IAAI;AAChB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AACrD,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAUA,kBAAW,CAAC,CAAC,CAAC,CAAC;AACzB,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/E,SAAS;AACT,OAAO;AACP,MAAM,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAC1C,MAAM,MAAM,eAAe,GAAG,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;AAC1E,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvG,QAAQ,KAAK,EAAE,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AAC3G,OAAO,CAAC;AACR,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS;AACjB,QAAQ,aAAa;AACrB,QAAQ,IAAI,EAAE;AACd,UAAU,QAAQ,EAAE,gBAAgB;AACpC,UAAU,QAAQ,EAAE,cAAc,CAAC,IAAI;AACvC,SAAS;AACT,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,gBAAgB,GAAG,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AACxH,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,oBAAoB,EAAE;AAChC,QAAQ,IAAI;AACZ,UAAU,MAAM,yCAAyC,CAAC;AAC1D,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,QAAQ,EAAE,OAAO,CAAC,IAAI;AAClC,YAAY,MAAM,EAAE,GAAG,CAAC,MAAM;AAC9B,YAAY,aAAa;AACzB,YAAY,uBAAuB;AACnC,YAAY,2BAA2B;AACvC,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAUA,kBAAW,CAAC,CAAC,CAAC,CAAC;AACzB,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,wCAAwC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACpG,SAAS;AACT,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL,CAAC;AACD,SAAS,uBAAuB,CAAC,YAAY,EAAE;AAC/C,EAAE,IAAI,UAAU,IAAI,YAAY;AAChC,IAAI,OAAO,YAAY,CAAC,QAAQ,CAAC;AACjC,EAAE,IAAI,MAAM,IAAI,YAAY;AAC5B,IAAI,OAAO,YAAY,CAAC,IAAI,CAAC;AAC7B,EAAE,OAAO,YAAY,CAAC,IAAI,CAAC;AAC3B;;AC5UA,MAAM,qBAAqB,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACzC,MAAM,YAAY,GAAG,CAAC,QAAQ,KAAK;AAC1C,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,MAAM,cAAc,GAAG,EAAE,CAAC;AAC5B,EAAE,MAAM,GAAG,GAAG,QAAQ,GAAG,cAAc,CAAC;AACxC,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC;AACjB,CAAC,CAAC;AACK,eAAe,0BAA0B,CAAC,UAAU,EAAE,OAAO,EAAE;AACtE,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,KAAK,GAAG,MAAMN,0BAAM,CAAC,CAAC,EAAE,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,YAAY,KAAK,IAAI,GAAG,EAAE,GAAG,qBAAqB,EAAE;AAC1H,IAAI,GAAG,EAAE,UAAU;AACnB,IAAI,GAAG,EAAE,IAAI;AACb,IAAI,SAAS,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAC3D,IAAI,mBAAmB,EAAE,KAAK;AAC9B,IAAI,UAAU,EAAE,IAAI;AACpB,IAAI,KAAK,EAAE,IAAI;AACf,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,OAAO,GAAGqB,kCAAc,CAAC,EAAE,CAAC,CAAC;AACrC,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,QAAExB,MAAI,EAAE,KAAK,EAAE,MAAM;AAC3D,UAAIA,MAAI;AACR,IAAI,OAAO,EAAE,MAAM,OAAO,CAAC,YAAYP,sBAAE,CAAC,QAAQ,CAACkB,SAAQ,CAAC,UAAU,EAAEX,MAAI,CAAC,CAAC,CAAC;AAC/E,IAAI,UAAU,EAAE,YAAY,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;AACjE,GAAG,CAAC,CAAC,CAAC,CAAC;AACP;;AC1BO,eAAe,4BAA4B,CAAC,UAAU,EAAE,KAAK,EAAE;AACtE,EAAE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC5B,IAAI,MAAM,QAAQ,GAAGN,kCAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACjE,IAAI,MAAMD,sBAAE,CAAC,SAAS,CAAC0B,YAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1C,IAAI,MAAM1B,sBAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/C,GAAG;AACH;;ACAA,MAAM,mBAAmB,SAASgC,sBAAe,CAAC;AAClD,CAAC;AACM,MAAM,oBAAoB,GAAG,OAAO;AAC3C,EAAE,YAAY;AACd,EAAE,yBAAyB;AAC3B,EAAE,KAAK;AACP,EAAE,IAAI;AACN,EAAE,IAAI,GAAG,YAAY;AACrB,EAAE,KAAK,EAAE,aAAa;AACtB,CAAC,KAAK;AACN,EAAE,MAAM,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAC/F,EAAE,MAAM,cAAc,GAAG,MAAM,iBAAiB,CAAC;AACjD,IAAI,YAAY;AAChB,IAAI,mBAAmB,EAAE,yBAAyB;AAClD,IAAI,OAAO,EAAE,CAAC,EAAE,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACvE,IAAI,KAAK,EAAE,aAAa;AACxB,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,SAAS,GAAGF,eAAO,CAAC,MAAM,CAACG,gDAAiB,CAAC,CAAC;AACtD,EAAE,OAAO,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;AACvC,CAAC,CAAC;AACU,MAAC,oCAAoC,GAAG,CAAC;AACrD,EAAE,YAAY;AACd,EAAE,yBAAyB;AAC3B,EAAE,aAAa,GAAG,oBAAoB;AACtC,CAAC,KAAK;AACN,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,6BAA6B;AACrC,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,YAAY,CAAC;AACnE,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,4IAA4I,CAAC;AACvK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,yBAAyB;AAClD,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,mBAAmB;AACtC,YAAY,WAAW,EAAE,+BAA+B;AACxD,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,0BAA0B;AAC7C,YAAY,WAAW,EAAE,qCAAqC;AAC9D,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,KAAK,EAAE,iBAAiB;AACpC,YAAY,WAAW,EAAE,6BAA6B;AACtD,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,WAAW,EAAE,wDAAwD;AACjF,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,yBAAyB;AAC5C,YAAY,WAAW,EAAE,gDAAgD;AACzE,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,8CAA8C;AACvE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,QAAQ,EAAE,CAAC,WAAW,CAAC;AAC/B,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,kBAAkB;AACrC,YAAY,WAAW,EAAE,oCAAoC;AAC7D,WAAW;AACX,UAAU,iBAAiB,EAAE;AAC7B,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,yBAAyB;AAClD,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,UAAU;AAClB,QAAQ,KAAK;AACb,QAAQ,WAAW;AACnB,QAAQ,KAAK;AACb,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACxE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAInC,iBAAU,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACtF,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC;AACzC,QAAQ,YAAY;AACpB,QAAQ,yBAAyB;AACjC,QAAQ,IAAI;AACZ,QAAQ,KAAK;AACb,QAAQ,IAAI;AACZ,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,QAAQ,GAAG,UAAU,GAAGG,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC;AAC5G,MAAM,MAAM,iBAAiB,GAAG,MAAM,0BAA0B,CAAC,QAAQ,EAAE;AAC3E,QAAQ,SAAS,EAAE,IAAI;AACvB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AACvE,QAAQ,UAAU,GAAGM,wBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;AACvE,QAAQ;AACR,UAAU,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,QAAQ;AACrD,UAAU,QAAQ,EAAE,QAAQ;AAC5B,UAAU,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAClD,SAAS;AACT,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,IAAI;AACV,QAAQ,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC;AACxD,UAAU,KAAK;AACf,UAAU,IAAI;AACd,UAAU,KAAK;AACf,UAAU,OAAO,EAAE;AACnB,YAAY;AACZ,cAAc,KAAK;AACnB,cAAc,MAAM,EAAE,KAAK;AAC3B,aAAa;AACb,WAAW;AACX,UAAU,IAAI,EAAE,WAAW;AAC3B,UAAU,IAAI,EAAE,UAAU;AAC1B,UAAU,KAAK;AACf,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,UAAU,MAAM,IAAI,mBAAmB,CAAC,2BAA2B,CAAC,CAAC;AACrE,SAAS;AACT,QAAQ,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxD,QAAQ,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9D,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAI,mBAAmB,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC;AACzE,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AC3JO,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AAC3C,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,gBAAgB;AACxB,IAAI,WAAW,EAAE,2FAA2F;AAC5G,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC;AAC7B,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,uBAAuB;AAC1C,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;AACnD,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,wEAAwE,CAAC;AACnG,WAAW;AACX,UAAU,gBAAgB,EAAE;AAC5B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,gFAAgF,CAAC;AAC3G,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,8EAA8E,CAAC;AACzG,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,CAAC,6CAA6C,CAAC;AACxE,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,2IAA2I;AACpK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,8CAA8C;AACvE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,2CAA2C;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,qCAAqC;AACxD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,cAAc,GAAG,SAAS;AAClC,QAAQ,aAAa,GAAG,QAAQ;AAChC,QAAQ,gBAAgB,GAAG,gBAAgB;AAC3C,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACxE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIT,iBAAU,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACtF,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjE,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC/D,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,OAAO;AACP,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;AACtE,MAAM,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,GAAG,OAAO,CAAC;AACjE,MAAM,MAAM,MAAM,GAAG,IAAIoC,WAAM,CAAC;AAChC,QAAQ,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC,OAAO;AAC9C,QAAQ,CAAC,SAAS,GAAG,KAAK;AAC1B,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,EAAE,EAAE,EAAE,eAAe,EAAE,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxE,MAAM,IAAI,CAAC,eAAe,EAAE;AAC5B,QAAQ,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACpD,QAAQ,eAAe,GAAG,EAAE,CAAC;AAC7B,OAAO;AACP,MAAM,MAAM,EAAE,gBAAgB,EAAE,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AAChE,QAAQ,YAAY,EAAE,eAAe;AACrC,QAAQ,IAAI,EAAE,IAAI;AAClB,QAAQ,UAAU,EAAE,cAAc;AAClC,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,SAAS,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC/D,MAAM,MAAM,eAAe,GAAG,CAAC,EAAE,SAAS,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;AACrE,MAAM,MAAM,aAAa,GAAG;AAC5B,QAAQ,IAAI,EAAE,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,+BAA+B,CAAC;AACvG,QAAQ,KAAK,EAAE,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,CAAC;AAC3G,OAAO,CAAC;AACR,MAAM,MAAM,eAAe,CAAC;AAC5B,QAAQ,GAAG,EAAE,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AAC5E,QAAQ,SAAS,EAAE,gBAAgB;AACnC,QAAQ,aAAa;AACrB,QAAQ,IAAI,EAAE;AACd,UAAU,QAAQ,EAAE,QAAQ;AAC5B,UAAU,QAAQ,EAAE,KAAK;AACzB,SAAS;AACT,QAAQ,MAAM,EAAE,GAAG,CAAC,MAAM;AAC1B,QAAQ,aAAa,EAAE,gBAAgB,GAAG,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;AACxH,QAAQ,aAAa;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACrD,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACzHY,MAAC,qCAAqC,GAAG,CAAC,OAAO,KAAK;AAClE,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;AACnC,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,8BAA8B;AACtC,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,QAAQ,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC;AACtE,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,2IAA2I,CAAC;AACtK,WAAW;AACX,UAAU,SAAS,EAAE;AACrB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,WAAW;AAC9B,YAAY,WAAW,EAAE,6CAA6C;AACtE,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,WAAW,EAAE,gCAAgC;AACzD,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,2BAA2B;AAC9C,YAAY,WAAW,EAAE,sCAAsC;AAC/D,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,yBAAyB;AAC5C,YAAY,WAAW,EAAE,sCAAsC;AAC/D,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,KAAK,EAAE,yBAAyB;AAC5C,YAAY,WAAW,EAAE,gDAAgD;AACzE,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,8CAA8C;AACvE,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,UAAU,EAAE;AACpB,UAAU,SAAS,EAAE;AACrB,YAAY,KAAK,EAAE,8BAA8B;AACjD,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,qCAAqC;AAC9D,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACxC,MAAM,MAAM,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAC3D,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjE,MAAM,MAAM,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AACrD,MAAM,IAAI,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,MAAM,IAAIpC,iBAAU,CAAC,CAAC,+CAA+C,EAAE,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC9H,OAAO;AACP,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;AAC/D,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,OAAO;AACP,MAAM,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC;AACzF,MAAM,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,GAAG,OAAO,CAAC;AACjE,MAAM,MAAM,GAAG,GAAG,IAAIoC,WAAM,CAAC;AAC7B,QAAQ,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC,OAAO;AAC9C,QAAQ,CAAC,SAAS,GAAG,KAAK;AAC1B,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,UAAU,GAAGjC,kCAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACvF,MAAM,MAAM,YAAY,GAAG,MAAM,0BAA0B,CAAC,UAAU,EAAE;AACxE,QAAQ,SAAS,EAAE,IAAI;AACvB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AAClD,QAAQ,MAAM,EAAE,QAAQ;AACxB,QAAQ,QAAQ,EAAEM,wBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;AAClE,QAAQ,QAAQ,EAAE,QAAQ;AAC1B,QAAQ,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAChD,QAAQ,gBAAgB,EAAE,IAAI,CAAC,UAAU;AACzC,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACpE,MAAM,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,QAAQ,CAAC;AACzD,MAAM,IAAI;AACV,QAAQ,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,iBAAiB,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AACjG,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAIT,iBAAU,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,OAAO;AACP,MAAM,IAAI;AACV,QAAQ,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,iBAAiB,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACnG,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,0BAA0B,EAAE,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,OAAO;AACP,MAAM,IAAI;AACV,QAAQ,MAAM,eAAe,GAAG,MAAM,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,iBAAiB,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK;AAC9M,UAAU,OAAO,YAAY,CAAC,OAAO,CAAC;AACtC,SAAS,CAAC,CAAC;AACX,QAAQ,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACrD,QAAQ,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACvD,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACnHO,SAAS,iCAAiC,CAAC,OAAO,EAAE;AAC3D,EAAE,MAAM,EAAE,YAAY,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AAC9D,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,yBAAyB;AACjC,IAAI,WAAW,EAAE,+DAA+D;AAChF,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,iBAAiB,CAAC;AAC9D,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,gJAAgJ,CAAC;AAC3K,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,qCAAqC;AAC9D,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,eAAe,EAAE;AAC3B,YAAY,KAAK,EAAE,oBAAoB;AACvC,YAAY,WAAW,EAAE,0DAA0D;AACnF,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,cAAc,EAAE;AAC1B,YAAY,KAAK,EAAE,iBAAiB;AACpC,YAAY,WAAW,EAAE,2HAA2H;AACpJ,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,qDAAqD;AAC9E,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,UAAU;AAClB,QAAQ,eAAe;AACvB,QAAQ,cAAc;AACtB,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;AACtG,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAClE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,8CAA8C,CAAC,CAAC;AAC7E,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,IAAIgC,eAAO,CAAC,MAAM,iBAAiB,CAAC;AACzD,QAAQ,YAAY;AACpB,QAAQ,OAAO;AACf,QAAQ,mBAAmB,EAAE,yBAAyB;AACtD,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;AACvD,QAAQ,KAAK;AACb,QAAQ,IAAI;AACZ,QAAQ,WAAW,EAAE,UAAU;AAC/B,QAAQ,GAAG,EAAE,eAAe;AAC5B,QAAQ,MAAM,EAAE,cAAc;AAC9B,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;AClEO,SAAS,yBAAyB,CAAC,OAAO,EAAE;AACnD,EAAE,MAAM,EAAE,YAAY,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AACpF,EAAE,MAAM,UAAU,GAAGK,0BAAiB,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/E,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,gBAAgB;AACxB,IAAI,WAAW,EAAE,6CAA6C;AAC9D,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;AAC3C,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,gJAAgJ,CAAC;AAC3K,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,YAAY,KAAK,EAAE,aAAa;AAChC,YAAY,WAAW,EAAE,iDAAiD;AAC1E,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,aAAa,EAAE;AACzB,YAAY,KAAK,EAAE,gBAAgB;AACnC,YAAY,WAAW,EAAE,iFAAiF;AAC1G,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,mBAAmB;AACtC,YAAY,WAAW,EAAE,iEAAiE;AAC1F,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc;AACd,gBAAgB,KAAK,EAAE;AACvB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,IAAI,EAAE,UAAU;AAClC,iBAAiB;AACjB,eAAe;AACf,cAAc;AACd,gBAAgB,KAAK,EAAE;AACvB,kBAAkB,IAAI,EAAE,QAAQ;AAChC,kBAAkB,KAAK,EAAE,GAAG;AAC5B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,QAAQ;AAC3B,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,iFAAiF,CAAC;AAC5G,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,cAAc;AACjC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;AAClC,YAAY,WAAW,EAAE,CAAC,oEAAoE,CAAC;AAC/F,WAAW;AACX,UAAU,WAAW,EAAE;AACvB,YAAY,KAAK,EAAE,cAAc;AACjC,YAAY,IAAI,EAAE,SAAS;AAC3B,YAAY,WAAW,EAAE,CAAC,qHAAqH,CAAC;AAChJ,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,qDAAqD;AAC9E,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM;AACZ,QAAQ,OAAO;AACf,QAAQ,UAAU;AAClB,QAAQ,aAAa,GAAG,oBAAoB;AAC5C,QAAQ,MAAM,GAAG,CAAC,MAAM,CAAC;AACzB,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,WAAW,GAAG,MAAM;AAC5B,QAAQ,WAAW,GAAG,KAAK;AAC3B,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;AACpB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5E,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAClE,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIrC,iBAAU,CAAC,8CAA8C,CAAC,CAAC;AAC7E,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,IAAIgC,eAAO,CAAC,MAAM,iBAAiB,CAAC;AACzD,QAAQ,YAAY;AACpB,QAAQ,mBAAmB,EAAE,yBAAyB;AACtD,QAAQ,OAAO;AACf,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,IAAI;AACV,QAAQ,MAAM,YAAY,GAAG,WAAW,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAQ,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;AAC9C,UAAU,KAAK;AACf,UAAU,IAAI;AACd,UAAU,MAAM,EAAE;AAClB,YAAY,GAAG,EAAE,UAAU;AAC3B,YAAY,YAAY,EAAE,WAAW;AACrC,YAAY,MAAM,EAAE,aAAa;AACjC,YAAY,YAAY;AACxB,WAAW;AACX,UAAU,MAAM;AAChB,UAAU,MAAM;AAChB,SAAS,CAAC,CAAC;AACX,QAAQ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC;AACxE,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQd,kBAAW,CAAC,CAAC,CAAC,CAAC;AACvB,QAAQ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACnG,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACjHO,SAAS,6BAA6B,CAAC,OAAO,EAAE;AACvD,EAAE,MAAM,EAAE,YAAY,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;AAC9D,EAAE,OAAO,oBAAoB,CAAC;AAC9B,IAAI,EAAE,EAAE,qBAAqB;AAC7B,IAAI,WAAW,EAAE,mDAAmD;AACpE,IAAI,MAAM,EAAE;AACZ,MAAM,KAAK,EAAE;AACb,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,QAAQ,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;AACjD,QAAQ,UAAU,EAAE;AACpB,UAAU,OAAO,EAAE;AACnB,YAAY,KAAK,EAAE,qBAAqB;AACxC,YAAY,WAAW,EAAE,CAAC,4IAA4I,CAAC;AACvK,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,8BAA8B;AACjD,YAAY,WAAW,EAAE,mDAAmD;AAC5E,YAAY,IAAI,EAAE,QAAQ;AAC1B,WAAW;AACX,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,QAAQ;AAC3B,YAAY,WAAW,EAAE,gDAAgD;AACzE,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,KAAK,EAAE;AACnB,cAAc,IAAI,EAAE,QAAQ;AAC5B,aAAa;AACb,WAAW;AACX,UAAU,KAAK,EAAE;AACjB,YAAY,KAAK,EAAE,sBAAsB;AACzC,YAAY,IAAI,EAAE,QAAQ;AAC1B,YAAY,WAAW,EAAE,qDAAqD;AAC9E,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,GAAG,EAAE;AACvB,MAAM,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;AAC1E,MAAM,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAClE,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1E,MAAM,IAAI,CAAC,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAIlB,iBAAU,CAAC,8CAA8C,CAAC,CAAC;AAC7E,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,IAAIgC,eAAO,CAAC,MAAM,iBAAiB,CAAC;AACzD,QAAQ,YAAY;AACpB,QAAQ,mBAAmB,EAAE,yBAAyB;AACtD,QAAQ,OAAO;AACf,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,IAAI;AACV,QAAQ,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC3C,UAAU,KAAK;AACf,UAAU,IAAI;AACd,UAAU,YAAY,EAAE,MAAM;AAC9B,UAAU,MAAM;AAChB,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQd,kBAAW,CAAC,CAAC,CAAC,CAAC;AACvB,QAAQ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,iCAAiC,EAAE,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxG,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACtCY,MAAC,oBAAoB,GAAG,CAAC,OAAO,KAAK;AACjD,EAAE,MAAM;AACR,IAAI,MAAM;AACV,IAAI,YAAY;AAChB,IAAI,aAAa;AACjB,IAAI,MAAM;AACV,IAAI,yBAAyB;AAC7B,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,MAAM,yBAAyB,GAAGa,4CAAgC,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACpG,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,sBAAsB,CAAC;AAC3B,MAAM,MAAM;AACZ,MAAM,YAAY;AAClB,KAAK,CAAC;AACN,IAAI,yBAAyB,CAAC;AAC9B,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,IAAI,yBAAyB,CAAC;AAC9B,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,yBAAyB,CAAC;AAC9B,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,IAAI,oCAAoC,CAAC;AACzC,MAAM,YAAY;AAClB,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,IAAI,yBAAyB,CAAC;AAC9B,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,qCAAqC,CAAC;AAC1C,MAAM,YAAY;AAClB,KAAK,CAAC;AACN,IAAI,4BAA4B,CAAC;AACjC,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,iCAAiC,CAAC;AACtC,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,kCAAkC,CAAC;AACvC,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,wBAAwB,CAAC;AAC7B,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,oBAAoB,EAAE;AAC1B,IAAI,2BAA2B,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;AAChE,IAAI,wBAAwB,EAAE;AAC9B,IAAI,4BAA4B,EAAE;AAClC,IAAI,4BAA4B,EAAE;AAClC,IAAI,iCAAiC,CAAC;AACtC,MAAM,YAAY;AAClB,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,IAAI,yBAAyB,CAAC;AAC9B,MAAM,YAAY;AAClB,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,IAAI,6BAA6B,CAAC;AAClC,MAAM,YAAY;AAClB,MAAM,yBAAyB;AAC/B,KAAK,CAAC;AACN,GAAG,CAAC;AACJ,EAAE,OAAO,OAAO,CAAC;AACjB;;ACtGO,MAAM,sBAAsB,CAAC;AACpC,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,OAAO,mBAAmB,IAAI,GAAG,EAAE,CAAC;AAC7C,GAAG;AACH,EAAE,QAAQ,CAAC,MAAM,EAAE;AACnB,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AACrC,MAAM,MAAM,IAAIO,oBAAa,CAAC,CAAC,yBAAyB,EAAE,MAAM,CAAC,EAAE,CAAC,6BAA6B,CAAC,CAAC,CAAC;AACpG,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AACxC,GAAG;AACH,EAAE,GAAG,CAAC,QAAQ,EAAE;AAChB,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC9C,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,MAAM,MAAM,IAAIC,oBAAa,CAAC,CAAC,yBAAyB,EAAE,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAC1F,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,GAAG;AACT,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;AACtC,GAAG;AACH;;ACjBA,MAAM,aAAa,GAAG5B,gCAAkB,CAAC,sCAAsC,EAAE,YAAY,CAAC,CAAC;AAC/F,MAAM,uBAAuB,GAAG,CAAC,KAAK,KAAK;AAC3C,EAAE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACjC,IAAI,OAAO6B,cAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;AAC5D,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AACK,MAAM,iBAAiB,CAAC;AAC/B,EAAE,aAAa,MAAM,CAAC,OAAO,EAAE;AAC/B,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1C,MAAM,SAAS,EAAE,aAAa;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC1C,GAAG;AACH,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,IAAI,CAAC,OAAO,EAAE;AACtB,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;AAC1C,IAAI,IAAI,OAAO,CAAC,SAAS,EAAE;AAC3B,MAAM,YAAY,CAAC,KAAK,CAAC;AACzB,QAAQ,UAAU,EAAE,OAAO,CAAC,SAAS;AACrC,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;AAC9E,IAAI,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC1C,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,OAAO;AACb,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE;AACrB,QAAQ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,QAAQ,MAAM,EAAE,MAAM,CAAC,MAAM;AAC7B,QAAQ,SAAS,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;AACjE,QAAQ,eAAe,EAAE,uBAAuB,CAAC,MAAM,CAAC,iBAAiB,CAAC;AAC1E,QAAQ,SAAS,EAAE,uBAAuB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7D,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC;AACrB,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,MAAM,EAAE;AACxB,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3E,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,MAAM,MAAM,IAAID,oBAAa,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACnE,KAAK;AACL,IAAI,IAAI;AACR,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C,MAAM,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC;AAC3E,MAAM,OAAO;AACb,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE;AACrB,QAAQ,IAAI;AACZ,QAAQ,MAAM,EAAE,MAAM,CAAC,MAAM;AAC7B,QAAQ,eAAe,EAAE,uBAAuB,CAAC,MAAM,CAAC,iBAAiB,CAAC;AAC1E,QAAQ,SAAS,EAAE,uBAAuB,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7D,QAAQ,SAAS,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;AACjE,QAAQ,OAAO;AACf,OAAO,CAAC;AACR,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,8BAA8B,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5E,KAAK;AACL,GAAG;AACH,EAAE,MAAM,UAAU,CAAC,OAAO,EAAE;AAC5B,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,MAAM,GAAGE,OAAI,EAAE,CAAC;AAC1B,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;AAClC,MAAM,EAAE,EAAE,MAAM;AAChB,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;AACxC,MAAM,OAAO,EAAE,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AACzE,MAAM,UAAU,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI;AAC9D,MAAM,MAAM,EAAE,MAAM;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,EAAE,MAAM,EAAE,CAAC;AACtB,GAAG;AACH,EAAE,MAAM,SAAS,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAC7C,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AAC7C,QAAQ,MAAM,EAAE,MAAM;AACtB,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3B,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,OAAO,KAAK,CAAC,CAAC;AACtB,OAAO;AACP,MAAM,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;AAC1F,QAAQ,MAAM,EAAE,YAAY;AAC5B,QAAQ,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AAC3C,QAAQ,OAAO,EAAE,IAAI;AACrB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,WAAW,GAAG,CAAC,EAAE;AAC3B,QAAQ,OAAO,KAAK,CAAC,CAAC;AACtB,OAAO;AACP,MAAM,IAAI;AACV,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3C,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC;AACzE,QAAQ,OAAO;AACf,UAAU,EAAE,EAAE,IAAI,CAAC,EAAE;AACrB,UAAU,IAAI;AACd,UAAU,MAAM,EAAE,YAAY;AAC9B,UAAU,eAAe,EAAE,IAAI,CAAC,iBAAiB;AACjD,UAAU,SAAS,EAAE,IAAI,CAAC,UAAU;AACpC,UAAU,SAAS,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;AACjE,UAAU,OAAO;AACjB,SAAS,CAAC;AACV,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,8BAA8B,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/E,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,aAAa,CAAC,MAAM,EAAE;AAC9B,IAAI,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC;AAClG,MAAM,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACzC,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,WAAW,KAAK,CAAC,EAAE;AAC3B,MAAM,MAAM,IAAIH,oBAAa,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7E,KAAK;AACL,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE,EAAE;AACrC,IAAI,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,uBAAuB,CAAC,EAAE;AACrQ,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACtB,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AACxC,MAAM,MAAM,EAAE,GAAG,CAAC,EAAE;AACpB,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC;AACrB,GAAG;AACH,EAAE,MAAM,YAAY,CAAC;AACrB,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,SAAS;AACb,GAAG,EAAE;AACL,IAAI,IAAI,SAAS,CAAC;AAClB,IAAI,IAAI,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,WAAW,EAAE;AACvD,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,8BAA8B,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,KAAK;AACL,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAC5C,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AAC7C,QAAQ,EAAE,EAAE,MAAM;AAClB,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3B,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/D,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;AACrC,QAAQ,MAAM,IAAIA,oBAAa,CAAC,CAAC,kCAAkC,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,sBAAsB,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACnK,OAAO;AACP,MAAM,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AAClD,QAAQ,EAAE,EAAE,MAAM;AAClB,QAAQ,MAAM,EAAE,SAAS;AACzB,OAAO,CAAC,CAAC,MAAM,CAAC;AAChB,QAAQ,MAAM;AACd,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;AAC7B,QAAQ,MAAM,IAAIA,oBAAa,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/F,OAAO;AACP,MAAM,MAAM,EAAE,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;AACrC,QAAQ,OAAO,EAAE,MAAM;AACvB,QAAQ,UAAU,EAAE,YAAY;AAChC,QAAQ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AACvC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,YAAY,CAAC,OAAO,EAAE;AAC9B,IAAI,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;AACrC,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAChD,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;AACxC,MAAM,OAAO,EAAE,MAAM;AACrB,MAAM,UAAU,EAAE,KAAK;AACvB,MAAM,IAAI,EAAE,cAAc;AAC1B,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,UAAU,CAAC;AACnB,IAAI,MAAM;AACV,IAAI,KAAK;AACT,GAAG,EAAE;AACL,IAAI,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;AACzD,MAAM,OAAO,EAAE,MAAM;AACrB,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,KAAK;AAC7B,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACrC,QAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC5E,OAAO;AACP,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;AAC5C,MAAM,IAAI;AACV,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5C,QAAQ,OAAO;AACf,UAAU,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;AAC9B,UAAU,MAAM;AAChB,UAAU,IAAI;AACd,UAAU,IAAI,EAAE,KAAK,CAAC,UAAU;AAChC,UAAU,SAAS,EAAE,uBAAuB,CAAC,KAAK,CAAC,UAAU,CAAC;AAC9D,SAAS,CAAC;AACV,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,6CAA6C,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3G,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,EAAE,MAAM,EAAE,CAAC;AACtB,GAAG;AACH;;ACxMO,MAAM,WAAW,CAAC;AACzB,EAAE,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE;AACrC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,GAAG;AACH,EAAE,OAAO,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE;AACvC,IAAI,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC;AACzB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B,GAAG;AACH,EAAE,IAAI,OAAO,GAAG;AAChB,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7B,GAAG;AACH,EAAE,IAAI,SAAS,GAAG;AAClB,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,gBAAgB,GAAG;AAC3B,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5B,GAAG;AACH,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,OAAO,EAAE,WAAW,EAAE;AACtC,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AACpC,MAAM,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;AAC9B,MAAM,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,WAAW,EAAE;AACvC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnC,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AACpC,MAAM,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;AAC9B,MAAM,MAAM,EAAE,MAAM,KAAK,QAAQ,GAAG,QAAQ,GAAG,WAAW;AAC1D,MAAM,SAAS,EAAE;AACjB,QAAQ,OAAO,EAAE,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;AACvD,QAAQ,GAAG,QAAQ;AACnB,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACvB,IAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,MAAM,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC5C,KAAK;AACL,GAAG;AACH,EAAE,YAAY,GAAG;AACjB,IAAI,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,YAAY;AACrD,MAAM,IAAI;AACV,QAAQ,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;AAClF,OAAO;AACP,KAAK,EAAE,GAAG,CAAC,CAAC;AACZ,GAAG;AACH,CAAC;AACD,SAAS,KAAK,GAAG;AACjB,EAAE,IAAI,OAAO,GAAG,MAAM;AACtB,GAAG,CAAC;AACJ,EAAE,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,QAAQ,KAAK;AAC5C,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAC9B,CAAC;AACM,MAAM,iBAAiB,CAAC;AAC/B,EAAE,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE;AAC/B,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,EAAE,CAAC;AACpC,GAAG;AACH,EAAE,MAAM,IAAI,CAAC,OAAO,EAAE;AACtB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC5B,MAAM,MAAM,IAAI,KAAK,CAAC,yGAAyG,CAAC,CAAC;AACjI,KAAK;AACL,IAAI,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;AAChG,GAAG;AACH,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,WAAW;AACf,MAAM,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;AACzD,MAAM,IAAI,WAAW,EAAE;AACvB,QAAQ,OAAO,WAAW,CAAC,MAAM,CAAC;AAClC,UAAU,MAAM,EAAE,WAAW,CAAC,EAAE;AAChC,UAAU,IAAI,EAAE,WAAW,CAAC,IAAI;AAChC,UAAU,OAAO,EAAE,WAAW,CAAC,OAAO;AACtC,UAAU,SAAS,EAAE,WAAW,CAAC,SAAS;AAC1C,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,OAAO;AACP,MAAM,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AACnC,KAAK;AACL,GAAG;AACH,EAAE,MAAM,QAAQ,CAAC,OAAO,EAAE;AAC1B,IAAI,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3D,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;AAC1B,IAAI,OAAO;AACX,MAAM,MAAM,EAAE,OAAO,CAAC,MAAM;AAC5B,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,MAAM,EAAE;AACpB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,GAAG;AACH,EAAE,MAAM,CAAC,OAAO,EAAE;AAClB,IAAI,OAAO,IAAII,kCAAc,CAAC,CAAC,QAAQ,KAAK;AAC5C,MAAM,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;AACjC,MAAM,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAChC,MAAM,IAAI,SAAS,GAAG,KAAK,CAAC;AAC5B,MAAM,CAAC,YAAY;AACnB,QAAQ,OAAO,CAAC,SAAS,EAAE;AAC3B,UAAU,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AAC1E,UAAU,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AACpC,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;AAC7B,YAAY,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;AACjD,YAAY,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,WAAW;AACX,UAAU,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AACnE,SAAS;AACT,OAAO,GAAG,CAAC;AACX,MAAM,OAAO,MAAM;AACnB,QAAQ,SAAS,GAAG,IAAI,CAAC;AACzB,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,OAAO,EAAE;AAC7B,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACjE,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,KAAK;AAChD,MAAM,IAAI;AACV,QAAQ,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AACxC,UAAU,MAAM,EAAE,IAAI,CAAC,MAAM;AAC7B,UAAU,MAAM,EAAE,QAAQ;AAC1B,UAAU,SAAS,EAAE;AACrB,YAAY,OAAO,EAAE,mFAAmF;AACxG,WAAW;AACX,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7E,OAAO;AACP,KAAK,CAAC,CAAC,CAAC;AACR,GAAG;AACH,EAAE,eAAe,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;AACzC,GAAG;AACH,EAAE,cAAc,GAAG;AACnB,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;AACpC,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,EAAE,CAAC;AACpC,GAAG;AACH;;ACnJO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,EAAE,OAAOC,cAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACrD,CAAC;AACM,SAAS,qBAAqB,CAAC,MAAM,EAAE;AAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;AAC9B,EAAE,IAAI,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC3C,IAAI,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvB,GAAG;AACH,EAAE,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAChC,IAAI,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK;AAC/G,MAAM,GAAG;AACT,MAAM,qBAAqB,CAAC,KAAK,CAAC;AAClC,KAAK,CAAC,CAAC,CAAC;AACR,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACtC,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC7E,IAAI,IAAI,WAAW,EAAE;AACrB,MAAM,OAAO,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;AAClD,KAAK;AACL,IAAI,OAAO,EAAE,CAAC;AACd,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACvC,IAAI,OAAO,WAAW,CAAC;AACvB,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACvC,IAAI,OAAO,CAAC,CAAC;AACb,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;AACxC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,OAAO,WAAW,CAAC;AACrB;;ACjBA,MAAM,eAAe,GAAG,CAAC,QAAQ,KAAK;AACtC,EAAE,OAAO,QAAQ,CAAC,UAAU,KAAK,iCAAiC,CAAC;AACnE,CAAC,CAAC;AACF,MAAM,gBAAgB,GAAG,CAAC;AAC1B,EAAE,IAAI;AACN,EAAE,IAAI;AACN,CAAC,KAAK;AACN,EAAE,MAAM,QAAQ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;AACvC,EAAE,MAAM,UAAU,GAAGC,kBAAO,CAAC,YAAY,CAAC;AAC1C,IAAI,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,MAAM;AAC1C,IAAI,MAAM,EAAEA,kBAAO,CAAC,MAAM,CAAC,OAAO,CAACA,kBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAEA,kBAAO,CAAC,MAAM,CAAC,SAAS,EAAE,EAAEA,kBAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AAClH,IAAI,WAAW,EAAE,EAAE;AACnB,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,YAAY,GAAG,IAAI7B,kBAAW,EAAE,CAAC;AACzC,EAAE,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,IAAI,KAAK;AAC1C,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;AAC3C,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;AACzD,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC5C,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,UAAU,CAAC,GAAG,CAAC,IAAI6B,kBAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AAC1E,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC;AACtC,CAAC,CAAC;AACK,MAAM,sBAAsB,CAAC;AACpC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,sBAAsB,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAGC,4BAAQ,CAAC;AACvC,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE;AAC3C,MAAM,UAAU,EAAE,KAAK;AACvB,MAAM,IAAI,EAAE;AACZ,QAAQ,aAAa,EAAE,KAAK;AAC5B,QAAQ,WAAW,EAAE,IAAI;AACzB,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,YAAY,CAAC,CAAC;AACvK,GAAG;AACH,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE;AACzC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;AAC9D,MAAM,IAAI;AACV,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,UAAU,IAAI;AACd,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE;AACpD,cAAc,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;AACzF,cAAc,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AACxE,cAAc,IAAI,UAAU,KAAK,EAAE,EAAE;AACrC,gBAAgB,OAAO,KAAK,CAAC,CAAC;AAC9B,eAAe;AACf,cAAc,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC5C,aAAa;AACb,WAAW,CAAC,OAAO,EAAE,EAAE;AACvB,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5G,WAAW;AACX,UAAU,MAAM,SAAS,GAAG,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC3D,UAAU,IAAI,SAAS,KAAK,EAAE,EAAE;AAChC,YAAY,OAAO,KAAK,CAAC,CAAC;AAC1B,WAAW;AACX,UAAU,OAAO,SAAS,CAAC;AAC3B,SAAS;AACT,OAAO,CAAC,MAAM;AACd,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,IAAI,EAAE;AACtB,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC3B,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrC,MAAM,MAAM,IAAI7C,iBAAU,CAAC,0DAA0D,CAAC,CAAC;AACvF,KAAK;AACL,IAAI,MAAM,aAAa,GAAGS,wBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAClG,IAAI,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,IAAI,MAAM,cAAc,GAAG,MAAM,eAAe,CAAC,YAAY,CAAC;AAC9D,MAAM,YAAY,CAAC,GAAG,EAAE;AACxB,QAAQ,OAAO,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC/C,OAAO;AACP,MAAM,yBAAyB,EAAE,IAAI,CAAC,OAAO,CAAC,yBAAyB;AACvE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI;AACR,MAAM,MAAMP,sBAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACxC,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAClF,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;AACxC,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;AAC5B,OAAO,CAAC;AACR,MAAM,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AAC1C,QAAQ,IAAI;AACZ,UAAU,IAAI,IAAI,CAAC,EAAE,EAAE;AACvB,YAAY,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AACjF,YAAY,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACrC,cAAc,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,oCAAoC,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AACzI,cAAc,SAAS;AACvB,aAAa;AACb,WAAW;AACX,UAAU,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AAC5D,YAAY,MAAM,EAAE,IAAI,CAAC,EAAE;AAC3B,YAAY,MAAM,EAAE,YAAY;AAChC,WAAW,CAAC,CAAC;AACb,UAAU,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtE,UAAU,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,gBAAgB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAChF,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACvD,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAE,CAAC,yBAAyB,CAAC,EAAE;AACnF,cAAc,MAAM,EAAE,IAAI,CAAC,EAAE;AAC7B,cAAc,MAAM,EAAE,SAAS;AAC/B,aAAa,CAAC,CAAC;AACf,YAAY,MAAM,YAAY,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AACnF,YAAY,IAAI,YAAY,EAAE;AAC9B,cAAc,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;AACvC,gBAAgB,MAAM,EAAE,qBAAqB,CAAC,YAAY,CAAC;AAC3D,eAAe,CAAC;AAChB,aAAa,MAAM;AACnB,cAAc,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;AACtD,aAAa;AACb,YAAY,SAAS;AACrB,WAAW;AACX,UAAU,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,cAAc,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACvK,UAAU,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE;AAChE,YAAY,MAAM,cAAc,GAAG4C,mBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAClF,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;AACvC,cAAc,MAAMC,QAAM,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9D,cAAc,MAAM,IAAI/C,iBAAU,CAAC,CAAC,+BAA+B,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE+C,QAAM,CAAC,CAAC,CAAC,CAAC;AAC7F,aAAa;AACb,WAAW;AACX,UAAU,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;AACtC,UAAU,MAAM,UAAU,GAAG,EAAE,CAAC;AAChC,UAAU,MAAM,MAAM,CAAC,OAAO,CAAC;AAC/B,YAAY,KAAK;AACjB,YAAY,OAAO,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AAC1D,YAAY,MAAM,EAAE,UAAU;AAC9B,YAAY,SAAS,EAAE,YAAY;AACnC,YAAY,aAAa;AACzB,YAAY,wBAAwB,EAAE,YAAY;AAClD,cAAc,MAAM,MAAM,GAAG,MAAM7C,sBAAE,CAAC,OAAO,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,cAAc,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,cAAc,OAAO,MAAM,CAAC;AAC5B,aAAa;AACb,YAAY,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;AAChC,cAAc,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACvC,aAAa;AACb,YAAY,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;AAChD,WAAW,CAAC,CAAC;AACb,UAAU,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AACxC,YAAY,MAAMA,sBAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACpC,WAAW;AACX,UAAU,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;AAC1D,UAAU,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3D,YAAY,MAAM,EAAE,IAAI,CAAC,EAAE;AAC3B,YAAY,MAAM,EAAE,WAAW;AAC/B,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,OAAO,GAAG,EAAE;AACtB,UAAU,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAChD,YAAY,MAAM,EAAE,IAAI,CAAC,EAAE;AAC3B,YAAY,MAAM,EAAE,QAAQ;AAC5B,WAAW,CAAC,CAAC;AACb,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AAC5E,MAAM,OAAO,EAAE,MAAM,EAAE,CAAC;AACxB,KAAK,SAAS;AACd,MAAM,IAAI,aAAa,EAAE;AACzB,QAAQ,MAAMA,sBAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACvC,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AClLO,MAAM,UAAU,CAAC;AACxB,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,aAAa,MAAM,CAAC,OAAO,EAAE;AAC/B,IAAI,MAAM;AACV,MAAM,UAAU;AAChB,MAAM,MAAM;AACZ,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,gBAAgB;AACtB,MAAM,yBAAyB;AAC/B,KAAK,GAAG,OAAO,CAAC;AAChB,IAAI,MAAM,cAAc,GAAG,IAAI,sBAAsB,CAAC;AACtD,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,MAAM,gBAAgB;AACtB,MAAM,yBAAyB;AAC/B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,UAAU,CAAC;AAC1B,MAAM,UAAU;AAChB,MAAM,OAAO,EAAE,EAAE,cAAc,EAAE;AACjC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,KAAK,GAAG;AACV,IAAI,CAAC,YAAY;AACjB,MAAM,WAAW;AACjB,QAAQ,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC3D,QAAQ,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACpC,OAAO;AACP,KAAK,GAAG,CAAC;AACT,GAAG;AACH,EAAE,MAAM,UAAU,CAAC,IAAI,EAAE;AACzB,IAAI,IAAI;AACR,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,iCAAiC,EAAE;AACtE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnF,OAAO;AACP,MAAM,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjF,MAAM,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;AACnD,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAMgB,kBAAW,CAAC,KAAK,CAAC,CAAC;AACzB,MAAM,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;AACpC,QAAQ,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE;AAC3D,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AACH;;AChDO,MAAM,wBAAwB,SAAS,sBAAsB,CAAC;AACrE,EAAE,WAAW,CAAC,aAAa,EAAE,YAAY,EAAE;AAC3C,IAAI,KAAK,EAAE,CAAC;AACZ,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,IAAI,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;AACvC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,GAAG,CAAC,QAAQ,EAAE;AAChB,IAAI,IAAI;AACR,MAAM,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,KAAK,CAAC,MAAM;AACZ,MAAM,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC9C,KAAK;AACL,GAAG;AACH;;ACLO,SAAS,eAAe,CAAC,OAAO,EAAE;AACzC,EAAE,OAAO,eAAe,MAAM,CAAC,KAAK,EAAE;AACtC,IAAI,IAAI,cAAc,CAAC;AACvB,IAAI,MAAM,cAAc,GAAG,IAAI,sBAAsB,CAAC;AACtD,MAAM,GAAG,OAAO;AAChB,MAAM,cAAc,EAAE,IAAI,wBAAwB,CAAC,OAAO,CAAC,cAAc,EAAE;AAC3E,QAAQ,oBAAoB,CAAC;AAC7B,UAAU,EAAE,EAAE,iBAAiB;AAC/B,UAAU,cAAc,EAAE,IAAI;AAC9B,UAAU,MAAM,OAAO,CAAC,GAAG,EAAE;AAC7B,YAAY,cAAc,GAAG,0BAA0B,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3E,YAAY,MAAM,cAAc,CAAC,KAAK,CAAC,MAAM;AAC7C,aAAa,CAAC,CAAC;AACf,WAAW;AACX,SAAS,CAAC;AACV,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,QAAQ,GAAGuB,OAAI,EAAE,CAAC;AAC5B,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;AAC5B,IAAI,MAAM,YAAY,GAAGtC,kCAAoB,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvG,IAAI,IAAI;AACR,MAAM,MAAM,4BAA4B,CAAC,YAAY,EAAE,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAChF,MAAM,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC;AAClD,QAAQ,IAAI,EAAE;AACd,UAAU,GAAG,KAAK,CAAC,IAAI;AACvB,UAAU,KAAK,EAAE;AACjB,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK;AAC/B,YAAY;AACZ,cAAc,EAAE,EAAE,QAAQ;AAC1B,cAAc,IAAI,EAAE,iBAAiB;AACrC,cAAc,MAAM,EAAE,iBAAiB;AACvC,aAAa;AACb,WAAW;AACX,UAAU,YAAY,EAAE;AACxB,YAAY,SAAS,EAAE,0BAA0B;AACjD,YAAY,OAAO,EAAE6C,iBAAa,CAAC7C,kCAAoB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC,QAAQ,EAAE;AAClG,WAAW;AACX,SAAS;AACT,QAAQ,OAAO,EAAE,KAAK,CAAC,OAAO;AAC9B,QAAQ,IAAI,EAAE,KAAK;AACnB,QAAQ,QAAQ,EAAE,IAAI;AACtB,QAAQ,gBAAgB,EAAE,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC3D,QAAQ,MAAM,OAAO,CAAC,OAAO,EAAE,WAAW,EAAE;AAC5C,UAAU,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,MAAM,MAAM,QAAQ,EAAE;AAChF,YAAY,OAAO;AACnB,WAAW;AACX,UAAU,GAAG,CAAC,IAAI,CAAC;AACnB,YAAY,IAAI,EAAE;AAClB,cAAc,GAAG,WAAW;AAC5B,cAAc,OAAO;AACrB,aAAa;AACb,WAAW,CAAC,CAAC;AACb,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG;AACzB,UAAU,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC7C,SAAS;AACT,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,cAAc,EAAE;AAC3B,QAAQ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;AAC/D,OAAO;AACP,MAAM,MAAM,iBAAiB,GAAG,MAAM,cAAc,CAAC;AACrD,MAAM,OAAO;AACb,QAAQ,GAAG;AACX,QAAQ,iBAAiB;AACzB,QAAQ,MAAM,EAAE,MAAM,CAAC,MAAM;AAC7B,OAAO,CAAC;AACR,KAAK,SAAS;AACd,MAAM,MAAMD,sBAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACpC,KAAK;AACL,GAAG,CAAC;AACJ;;ACvEO,eAAe,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE;AAC1D,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE;AAC/C,IAAI,OAAO+C,sBAAE,CAAC,MAAM,EAAE,CAAC;AACvB,GAAG;AACH,EAAE,MAAM,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;AACxE,EAAE,IAAI;AACN,IAAI,MAAM/C,sBAAE,CAAC,MAAM,CAAC,gBAAgB,EAAEA,sBAAE,CAAC,SAAS,CAAC,IAAI,GAAGA,sBAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7E,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,yBAAyB,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChE,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAIgB,kBAAW,CAAC,GAAG,CAAC,CAAC;AACrB,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,KAAK,QAAQ,GAAG,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAC1H,IAAI,MAAM,GAAG,CAAC;AACd,GAAG;AACH,EAAE,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AACM,SAAS,gBAAgB,CAAC,MAAM,EAAE;AACzC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,IAAI,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAACgC,uCAA0B,CAAC,CAAC;AACtG,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAACC,gCAAmB,CAAC,CAAC;AAC7F,GAAG;AACH,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAGC,6BAAgB,CAAC,QAAQ,CAAC,CAAC;AACtD,EAAE,IAAI,IAAI,KAAK,KAAK,EAAE;AACtB,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAC9B,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;AAC9B,GAAG;AACH,EAAE,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AACM,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;AACnD,EAAE,IAAI,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAKC,8BAAiB,EAAE;AAC5E,IAAI,MAAM,IAAIrD,iBAAU,CAAC,CAAC,yBAAyB,EAAEqD,8BAAiB,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAClG,GAAG;AACH,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,UAAU,EAAE;AAChE,IAAI,MAAM,IAAIrD,iBAAU,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;AAC5E,GAAG;AACH,EAAE,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AACzE,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,MAAM,IAAIuC,oBAAa,CAAC,CAAC,SAAS,EAAEtC,+BAAkB,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AACnF,GAAG;AACH,EAAE,OAAO,QAAQ,CAAC;AAClB;;ACjCA,SAAS,mBAAmB,CAAC,MAAM,EAAE;AACrC,EAAE,OAAO,MAAM,CAAC,UAAU,KAAK,iCAAiC,CAAC;AACjE,CAAC;AACM,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,MAAM,GAAGqD,0BAAM,EAAE,CAAC;AAC1B,EAAE,MAAM,CAAC,GAAG,CAACC,2BAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,EAAE,MAAM;AACR,IAAI,MAAM,EAAE,YAAY;AACxB,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,QAAQ;AACZ,IAAI,aAAa;AACjB,IAAI,OAAO;AACX,IAAI,WAAW;AACf,IAAI,yBAAyB;AAC7B,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;AAC9D,EAAE,MAAM,gBAAgB,GAAG,MAAM,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACrE,EAAE,MAAM,YAAY,GAAGC,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC1D,EAAE,IAAI,UAAU,CAAC;AACjB,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AAC3B,IAAI,MAAM,iBAAiB,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC;AAC7D,MAAM,QAAQ,EAAE,MAAM,QAAQ,CAAC,SAAS,EAAE;AAC1C,KAAK,CAAC,CAAC;AACP,IAAI,UAAU,GAAG,IAAI,iBAAiB,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AAClE,GAAG,MAAM;AACT,IAAI,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACpC,GAAG;AACH,EAAE,MAAM,cAAc,GAAG,IAAI,sBAAsB,EAAE,CAAC;AACtD,EAAE,MAAM,OAAO,GAAG,EAAE,CAAC;AACrB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,IAAI,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC;AAC3C,MAAM,UAAU;AAChB,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,MAAM,gBAAgB;AACtB,MAAM,yBAAyB;AAC/B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,GAAG;AACH,EAAE,MAAM,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,oBAAoB,CAAC;AACpF,IAAI,YAAY;AAChB,IAAI,aAAa;AACjB,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,yBAAyB;AAC7B,GAAG,CAAC,CAAC;AACL,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACzE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9C,EAAE,MAAM,SAAS,GAAG,eAAe,CAAC;AACpC,IAAI,cAAc;AAClB,IAAI,YAAY;AAChB,IAAI,MAAM;AACV,IAAI,gBAAgB;AACpB,IAAI,yBAAyB;AAC7B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,uDAAuD,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC1F,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACjD,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAClE,IAAI,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC;AACxC,MAAM,UAAU,EAAE,aAAa;AAC/B,MAAM,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;AAC1C,MAAM,KAAK;AACX,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,mBAAmB,CAAC,QAAQ,CAAC,EAAE;AACvC,MAAM,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACpF,MAAM,GAAG,CAAC,IAAI,CAAC;AACf,QAAQ,KAAK,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI;AACnF,QAAQ,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC1C,UAAU,IAAI,GAAG,CAAC;AAClB,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,6BAA6B;AACrF,YAAY,MAAM;AAClB,WAAW,CAAC;AACZ,SAAS,CAAC;AACV,OAAO,CAAC,CAAC;AACT,KAAK,MAAM;AACX,MAAM,MAAM,IAAIxD,iBAAU,CAAC,CAAC,+CAA+C,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACpG,KAAK;AACL,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,IAAI,EAAE,GAAG,KAAK;AAC7C,IAAI,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC9D,MAAM,OAAO;AACb,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE;AACrB,QAAQ,WAAW,EAAE,MAAM,CAAC,WAAW;AACvC,QAAQ,MAAM,EAAE,MAAM,CAAC,MAAM;AAC7B,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC3C,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnB,IAAI,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;AAC7C,IAAI,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAGyD,2BAAc,CAAC,WAAW,EAAE;AAClE,MAAM,WAAW,EAAE,UAAU;AAC7B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC5F,IAAI,MAAM,UAAU,GAAG,aAAa,GAAG,MAAM,aAAa,CAAC,cAAc,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;AAC7G,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AACnC,IAAI,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC;AACxC,MAAM,UAAU,EAAE,aAAa;AAC/B,MAAM,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;AAC1C,MAAM,KAAK;AACX,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;AACxC,MAAM,MAAM,IAAIzD,iBAAU,CAAC,CAAC,+CAA+C,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACpG,KAAK;AACL,IAAI,KAAK,MAAM,UAAU,IAAI,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;AACzF,MAAM,MAAM,OAAO,GAAG0D,mBAAQ,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACnD,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAC1B,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;AACzD,QAAQ,OAAO;AACf,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,UAAU,EAAE,QAAQ,CAAC,UAAU;AACrC,MAAM,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AACtD,QAAQ,IAAI,GAAG,EAAE,GAAG,CAAC;AACrB,QAAQ,OAAO;AACf,UAAU,GAAG,IAAI;AACjB,UAAU,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AACjE,UAAU,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM;AAC7D,SAAS,CAAC;AACV,OAAO,CAAC;AACR,MAAM,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AAC3D,MAAM,UAAU,EAAE,MAAM;AACxB,MAAM,IAAI,EAAE;AACZ,QAAQ,MAAM,EAAE,UAAU;AAC1B,QAAQ,GAAG,EAAE,aAAa;AAC1B,OAAO;AACP,MAAM,YAAY,EAAE;AACpB,QAAQ,SAAS,EAAEzD,+BAAkB,CAAC;AACtC,UAAU,IAAI;AACd,UAAU,SAAS;AACnB,UAAU,IAAI,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI;AACnE,SAAS,CAAC;AACV,QAAQ,OAAO;AACf,OAAO;AACP,KAAK,CAAC;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC;AAC7C,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,SAAS,EAAE,aAAa;AAC9B,MAAM,OAAO,EAAE;AACf,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO;AAC3B,QAAQ,cAAc,EAAE,KAAK;AAC7B,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AAChD,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC1C,IAAI,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;AACzD,IAAI,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,OAAO,aAAa,KAAK,WAAW,EAAE;AACnF,MAAM,MAAM,IAAID,iBAAU,CAAC,4CAA4C,CAAC,CAAC;AACzE,KAAK;AACL,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;AAC1B,MAAM,MAAM,IAAI,KAAK,CAAC,gGAAgG,CAAC,CAAC;AACxH,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC,IAAI,CAAC;AACxC,MAAM,SAAS,EAAE,aAAa;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAClD,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAClC,IAAI,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9C,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,MAAM,MAAM,IAAIuC,oBAAa,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;AACvE,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,GAAG,CAAC,CAAC,GAAG,CAAC,+BAA+B,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC9D,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAClC,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAChF,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,+BAA+B,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrE,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE;AACvB,MAAM,UAAU,EAAE,YAAY;AAC9B,MAAM,eAAe,EAAE,UAAU;AACjC,MAAM,cAAc,EAAE,mBAAmB;AACzC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;AACxE,MAAM,KAAK,EAAE,CAAC,KAAK,KAAK;AACxB,QAAQ,MAAM,CAAC,KAAK,CAAC,CAAC,wDAAwD,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACrG,OAAO;AACP,MAAM,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK;AAC5B,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,iBAAiB,GAAG,KAAK,CAAC;AACtC,QAAQ,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACpC,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC;AACzC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA,CAAC,CAAC,CAAC;AACH,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,EAAE;AAC3C,YAAY,iBAAiB,GAAG,IAAI,CAAC;AACrC,WAAW;AACX,SAAS;AACT,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzD,QAAQ,IAAI,iBAAiB;AAC7B,UAAU,YAAY,CAAC,WAAW,EAAE,CAAC;AACrC,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM;AAC1B,MAAM,YAAY,CAAC,WAAW,EAAE,CAAC;AACjC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,+BAA+B,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACvE,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC,GAAG,CAAC,0BAA0B,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACzD,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAClC,IAAI,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC;AACpD,IAAI,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM;AACrC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnB,KAAK,EAAE,GAAG,CAAC,CAAC;AACZ,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC;AACxE,MAAM,KAAK,EAAE,CAAC,KAAK,KAAK;AACxB,QAAQ,MAAM,CAAC,KAAK,CAAC,CAAC,wDAAwD,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACrG,OAAO;AACP,MAAM,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK;AAC5B,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC;AAC9B,QAAQ,YAAY,CAAC,WAAW,EAAE,CAAC;AACnC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM;AAC1B,MAAM,YAAY,CAAC,WAAW,EAAE,CAAC;AACjC,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC7C,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnB,IAAI,MAAM,UAAU,GAAGoB,KAAC,CAAC,MAAM,CAAC;AAChC,MAAM,QAAQ,EAAEA,KAAC,CAAC,OAAO,EAAE;AAC3B,MAAM,MAAM,EAAEA,KAAC,CAAC,MAAM,CAACA,KAAC,CAAC,OAAO,EAAE,CAAC;AACnC,MAAM,OAAO,EAAEA,KAAC,CAAC,MAAM,CAACA,KAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;AAC9C,MAAM,iBAAiB,EAAEA,KAAC,CAAC,KAAK,CAACA,KAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAEA,KAAC,CAAC,MAAM,EAAE,EAAE,aAAa,EAAEA,KAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC3F,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;AACpE,MAAM,MAAM,IAAI3D,iBAAU,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACnC,IAAI,IAAI,CAAC,MAAM4D,qDAA8B,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AAC/D,MAAM,MAAM,IAAI5D,iBAAU,CAAC,kCAAkC,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAClE,IAAI,KAAK,MAAM,UAAU,IAAI,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;AACzF,MAAM,MAAM,OAAO,GAAG0D,mBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACxD,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAC1B,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;AACzD,QAAQ,OAAO;AACf,OAAO;AACP,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AAC3D,MAAM,IAAI,GAAG,EAAE,GAAG,CAAC;AACnB,MAAM,OAAO;AACb,QAAQ,GAAG,IAAI;AACf,QAAQ,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM;AAC3D,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC;AACnC,MAAM,IAAI,EAAE;AACZ,QAAQ,UAAU,EAAE,QAAQ,CAAC,UAAU;AACvC,QAAQ,KAAK;AACb,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AAC7D,QAAQ,UAAU,EAAE,IAAI,CAAC,MAAM;AAC/B,OAAO;AACP,MAAM,iBAAiB,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,MAAM;AAC1F,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI;AACvB,QAAQ,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;AAC1D,OAAO,CAAC,CAAC;AACT,MAAM,OAAO,EAAE;AACf,QAAQ,GAAG,IAAI,CAAC,OAAO;AACvB,QAAQ,GAAG,KAAK,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE;AAC7C,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACzB,MAAM,GAAG,MAAM;AACf,MAAM,KAAK;AACX,MAAM,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AACjE,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI;AACvB,QAAQ,UAAU,EAAE,IAAI,CAAC,UAAU;AACnC,QAAQ,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACtD,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,GAAG,GAAGH,2BAAO,EAAE,CAAC;AACxB,EAAE,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC5B,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACvB,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACD,SAAS,gBAAgB,CAAC,MAAM,EAAE;AAClC,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1G,EAAE,IAAI,CAAC,KAAK;AACZ,IAAI,OAAO,EAAE,CAAC;AACd,EAAE,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7D,EAAE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3E,EAAE,OAAO;AACT,IAAI,SAAS,EAAE,OAAO,CAAC,GAAG;AAC1B,IAAI,KAAK;AACT,GAAG,CAAC;AACJ;;AClTO,MAAM,2BAA2B,CAAC;AACzC,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,UAAU,GAAG,CAACK,qDAA8B,CAAC,CAAC;AACvD,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,6BAA6B,CAAC;AACzC,GAAG;AACH,EAAE,MAAM,kBAAkB,CAAC,MAAM,EAAE;AACnC,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7C,MAAM,IAAI,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACzC,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE;AACnD,IAAI,MAAM,OAAO,GAAGC,iCAAoB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,MAAM,CAAC,UAAU,KAAK,iCAAiC,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/F,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC9B,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACzC,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,MAAM,SAAS,GAAGJ,2BAAc,CAAC,MAAM,EAAE;AACjD,UAAU,WAAW,EAAE,OAAO;AAC9B,UAAU,gBAAgB,EAAE,OAAO,CAAC,SAAS;AAC7C,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAACK,qCAAgB,CAAC,QAAQ,CAAC;AACvC,UAAU,MAAM,EAAE,OAAO;AACzB,UAAU,IAAI,EAAEC,8BAAiB;AACjC,UAAU,MAAM,EAAE;AAClB,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,YAAY,SAAS,EAAE,SAAS,CAAC,SAAS;AAC1C,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,WAAW;AACX,SAAS,CAAC,CAAC,CAAC;AACZ,QAAQ,IAAI,CAACD,qCAAgB,CAAC,QAAQ,CAAC;AACvC,UAAU,MAAM,EAAE;AAClB,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,YAAY,SAAS,EAAE,SAAS,CAAC,SAAS;AAC1C,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,WAAW;AACX,UAAU,IAAI,EAAEE,8BAAiB;AACjC,UAAU,MAAM,EAAE,OAAO;AACzB,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO;AACP,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}