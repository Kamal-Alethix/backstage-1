{"version":3,"file":"index-32152426.esm.js","sources":["../../src/api/types.ts","../../src/api/XcmetricsClient.ts","../../src/routes.ts","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport type BuildStatus = 'succeeded' | 'failed' | 'stopped';\n\nexport type Build = {\n  userid: string;\n  warningCount: number;\n  duration: number;\n  startTimestamp: string;\n  isCi: boolean;\n  startTimestampMicroseconds: number;\n  category: string;\n  endTimestampMicroseconds: number;\n  day: string;\n  compilationEndTimestamp: string;\n  tag: string;\n  projectName: string;\n  compilationEndTimestampMicroseconds: number;\n  errorCount: number;\n  id: string;\n  buildStatus: BuildStatus;\n  compilationDuration: number;\n  schema: string;\n  compiledCount: number;\n  endTimestamp: string;\n  userid256: string;\n  machineName: string;\n  wasSuspended: boolean;\n};\n\nexport type BuildStatusResult = Pick<Build, 'id' | 'buildStatus'>;\n\nexport type BuildCount = {\n  day: string;\n  errors: number;\n  builds: number;\n};\n\nexport type BuildError = {\n  detail: string;\n  characterRangeEnd: number;\n  id: string;\n  endingColumn: number;\n  parentIdentifier: string;\n  day: string;\n  type: string;\n  title: string;\n  endingLine: number;\n  severity: number;\n  startingLine: number;\n  parentType: string;\n  buildIdentifier: string;\n  startingColumn: number;\n  characterRangeStart: number;\n  documentURL: string;\n};\n\nexport type BuildHost = {\n  id: string;\n  swapFreeMb: number;\n  hostOsFamily: string;\n  isVirtual: boolean;\n  uptimeSeconds: number;\n  hostModel: string;\n  hostOsVersion: string;\n  day: string;\n  cpuCount: number;\n  swapTotalMb: number;\n  hostOs: string;\n  hostArchitecture: string;\n  memoryTotalMb: number;\n  timezone: string;\n  cpuModel: string;\n  buildIdentifier: string;\n  memoryFreeMb: number;\n  cpuSpeedGhz: number;\n};\n\nexport type BuildMetadata = {\n  [key: string]: string;\n};\n\nexport type BuildTime = {\n  day: string;\n  durationP50: number;\n  durationP95: number;\n  totalDuration: number;\n};\n\nexport type BuildWarning = {\n  detail: string | null;\n  characterRangeEnd: number;\n  documentURL: string;\n  endingColumn: number;\n  id: string;\n  parentIdentifier: string;\n  day: string;\n  type: string;\n  title: string;\n  endingLine: number;\n  severity: number;\n  startingLine: number;\n  parentType: string;\n  clangFlag: string;\n  startingColumn: number;\n  buildIdentifier: string;\n  characterRangeStart: number;\n};\n\nexport type PaginationResult<T> = {\n  items: T[];\n  metadata: {\n    per: number;\n    total: number;\n    page: number;\n  };\n};\n\nexport type Target = {\n  id: string;\n  category: string;\n  startTimestamp: string;\n  compilationEndTimestampMicroseconds: number;\n  endTimestampMicroseconds: number;\n  endTimestamp: string;\n  fetchedFromCache: boolean;\n  errorCount: number;\n  day: string;\n  warningCount: number;\n  compilationEndTimestamp: string;\n  compilationDuration: number;\n  compiledCount: number;\n  duration: number;\n  buildIdentifier: string;\n  name: string;\n  startTimestampMicroseconds: number;\n};\n\nexport type Xcode = {\n  buildNumber: string;\n  id: string;\n  buildIdentifier: string;\n  day: string;\n  version: string;\n};\n\nexport type BuildResponse = {\n  build: Build;\n  targets: Target[];\n  xcode?: Xcode; // Can be undefined if XCMetrics version < v0.0.8\n};\n\nexport type BuildFilters = {\n  from: string; // ISO Date (e.g. \"2021-01-01\")\n  to: string; // ISO Date (e.g. \"2021-01-02\")\n  buildStatus?: BuildStatus;\n  project?: string;\n};\n\nexport interface XcmetricsApi {\n  getBuild(id: string): Promise<BuildResponse>;\n  getBuilds(limit?: number): Promise<Build[]>;\n  getFilteredBuilds(\n    filters: BuildFilters,\n    page?: number,\n    perPage?: number,\n  ): Promise<PaginationResult<Build>>;\n  getBuildErrors(buildId: string): Promise<BuildError[]>;\n  getBuildCounts(days: number): Promise<BuildCount[]>;\n  getBuildHost(buildId: string): Promise<BuildHost>;\n  getBuildMetadata(buildId: string): Promise<BuildMetadata>;\n  getBuildTimes(days: number): Promise<BuildTime[]>;\n  getBuildStatuses(limit: number): Promise<BuildStatusResult[]>;\n  getBuildWarnings(buildId: string): Promise<BuildWarning[]>;\n  getProjects(): Promise<string[]>;\n}\n\nexport const xcmetricsApiRef = createApiRef<XcmetricsApi>({\n  id: 'plugin.xcmetrics.api',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi } from '@backstage/core-plugin-api';\nimport { ResponseError } from '@backstage/errors';\nimport { DateTime } from 'luxon';\nimport {\n  Build,\n  BuildCount,\n  BuildError,\n  BuildFilters,\n  BuildHost,\n  BuildMetadata,\n  BuildResponse,\n  BuildStatusResult,\n  BuildTime,\n  BuildWarning,\n  PaginationResult,\n  XcmetricsApi,\n} from './types';\n\ninterface Options {\n  discoveryApi: DiscoveryApi;\n}\n\nexport class XcmetricsClient implements XcmetricsApi {\n  private readonly discoveryApi: DiscoveryApi;\n\n  constructor(options: Options) {\n    this.discoveryApi = options.discoveryApi;\n  }\n\n  async getBuild(id: string): Promise<BuildResponse> {\n    const response = await this.get(`/build/${id}`);\n    return (await response.json()) as BuildResponse;\n  }\n\n  async getBuilds(limit: number = 10): Promise<Build[]> {\n    const response = await this.get(`/build?per=${limit}`);\n    return ((await response.json()) as PaginationResult<Build>).items;\n  }\n\n  async getFilteredBuilds(\n    filters: BuildFilters,\n    page?: number,\n    perPage?: number,\n  ): Promise<PaginationResult<Build>> {\n    const response = await this.post('/build/filter', {\n      from: DateTime.fromISO(filters.from)\n        .startOf('day')\n        .toISO({ suppressMilliseconds: true }),\n      to: DateTime.fromISO(filters.to)\n        .endOf('day')\n        .startOf('second')\n        .toISO({ suppressMilliseconds: true }),\n      status: filters.buildStatus,\n      projectName: filters.project,\n      page,\n      per: perPage,\n    });\n\n    return (await response.json()) as PaginationResult<Build>;\n  }\n\n  async getBuildCounts(days: number): Promise<BuildCount[]> {\n    const response = await this.get(`/statistics/build/count?days=${days}`);\n    return (await response.json()) as BuildCount[];\n  }\n\n  async getBuildErrors(buildId: string): Promise<BuildError[]> {\n    const response = await this.get(`/build/error/${buildId}`);\n    return (await response.json()) as BuildError[];\n  }\n\n  async getBuildHost(buildId: string): Promise<BuildHost> {\n    const response = await this.get(`/build/host/${buildId}`);\n    return (await response.json()) as BuildHost;\n  }\n\n  async getBuildMetadata(buildId: string): Promise<BuildMetadata> {\n    const response = await this.get(`/build/metadata/${buildId}`);\n    return ((await response.json()) as Record<'metadata', BuildMetadata>)\n      .metadata;\n  }\n\n  async getBuildTimes(days: number): Promise<BuildTime[]> {\n    const response = await this.get(`/statistics/build/time?days=${days}`);\n    return (await response.json()) as BuildTime[];\n  }\n\n  async getBuildStatuses(limit: number): Promise<BuildStatusResult[]> {\n    const response = await this.get(`/statistics/build/status?per=${limit}`);\n    return ((await response.json()) as PaginationResult<BuildStatusResult>)\n      .items;\n  }\n\n  async getBuildWarnings(buildId: string): Promise<BuildWarning[]> {\n    const response = await this.get(`/build/warning/${buildId}`);\n    return (await response.json()) as BuildWarning[];\n  }\n\n  async getProjects(): Promise<string[]> {\n    const response = await this.get('/build/project');\n    return (await response.json()) as string[];\n  }\n\n  private async get(path: string): Promise<Response> {\n    const baseUrl = `${await this.discoveryApi.getBaseUrl('proxy')}/xcmetrics`;\n    const response = await fetch(`${baseUrl}${path}`);\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return response;\n  }\n\n  private async post(path: string, body: Object): Promise<Response> {\n    const baseUrl = `${await this.discoveryApi.getBaseUrl('proxy')}/xcmetrics`;\n    const response = await fetch(`${baseUrl}${path}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return response;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createRouteRef, createSubRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'xcmetrics',\n});\n\nexport const buildsRouteRef = createSubRouteRef({\n  id: 'xcmetrics-builds',\n  parent: rootRouteRef,\n  path: '/builds',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n} from '@backstage/core-plugin-api';\nimport { xcmetricsApiRef, XcmetricsClient } from './api';\nimport { rootRouteRef } from './routes';\n\nexport const xcmetricsPlugin = createPlugin({\n  id: 'xcmetrics',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: xcmetricsApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n      },\n      factory({ discoveryApi }) {\n        return new XcmetricsClient({ discoveryApi });\n      },\n    }),\n  ],\n});\n\nexport const XcmetricsPage = xcmetricsPlugin.provide(\n  createRoutableExtension({\n    name: 'XcmetricsPage',\n    component: () =>\n      import('./components/XcmetricsLayout').then(m => m.XcmetricsLayout),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":[],"mappings":"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"}