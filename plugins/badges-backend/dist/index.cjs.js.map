{"version":3,"file":"index.cjs.js","sources":["../src/badges.ts","../src/lib/BadgeBuilder/DefaultBadgeBuilder.ts","../src/service/router.ts","../src/types.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { InputError } from '@backstage/errors';\nimport { Badge, BadgeContext, BadgeFactories } from './types';\n\nfunction appTitle(context: BadgeContext): string {\n  return context.config.getOptionalString('app.title') || 'Backstage';\n}\n\nfunction entityUrl(context: BadgeContext): string {\n  const e = context.entity!;\n  const entityUri = `${e.metadata.namespace || DEFAULT_NAMESPACE}/${e.kind}/${\n    e.metadata.name\n  }`;\n  const catalogUrl = `${context.config.getString('app.baseUrl')}/catalog`;\n  return `${catalogUrl}/${entityUri}`.toLowerCase();\n}\n\nexport const createDefaultBadgeFactories = (): BadgeFactories => ({\n  pingback: {\n    createBadge: (context: BadgeContext): Badge => {\n      if (!context.entity) {\n        throw new InputError('\"pingback\" badge only defined for entities');\n      }\n      return {\n        description: `Link to ${context.entity.metadata.name} in ${appTitle(\n          context,\n        )}`,\n        kind: 'entity',\n        label: context.entity.kind,\n        link: entityUrl(context),\n        message: context.entity.metadata.name,\n        style: 'flat-square',\n      };\n    },\n  },\n\n  lifecycle: {\n    createBadge: (context: BadgeContext): Badge => {\n      if (!context.entity) {\n        throw new InputError('\"lifecycle\" badge only defined for entities');\n      }\n      return {\n        description: 'Entity lifecycle badge',\n        kind: 'entity',\n        label: 'lifecycle',\n        link: entityUrl(context),\n        message: `${context.entity.spec?.lifecycle || 'unknown'}`,\n        style: 'flat-square',\n      };\n    },\n  },\n\n  owner: {\n    createBadge: (context: BadgeContext): Badge => {\n      if (!context.entity) {\n        throw new InputError('\"owner\" badge only defined for entities');\n      }\n      return {\n        description: 'Entity owner badge',\n        kind: 'entity',\n        label: 'owner',\n        link: entityUrl(context),\n        message: `${context.entity.spec?.owner || 'unknown'}`,\n        style: 'flat-square',\n      };\n    },\n  },\n\n  docs: {\n    createBadge: (context: BadgeContext): Badge => {\n      if (!context.entity) {\n        throw new InputError('\"docs\" badge only defined for entities');\n      }\n      return {\n        description: 'Entity docs badge',\n        kind: 'entity',\n        label: 'docs',\n        link: `${entityUrl(context)}/docs`,\n        message: context.entity.metadata.name,\n        style: 'flat-square',\n      };\n    },\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { makeBadge, Format } from 'badge-maker';\nimport { BadgeBuilder, BadgeInfo, BadgeOptions, BadgeSpec } from './types';\nimport { Badge, BadgeFactories } from '../../types';\n\nexport class DefaultBadgeBuilder implements BadgeBuilder {\n  constructor(private readonly factories: BadgeFactories) {}\n\n  public async getBadges(): Promise<BadgeInfo[]> {\n    return Object.keys(this.factories).map(id => ({ id }));\n  }\n\n  public async createBadgeJson(options: BadgeOptions): Promise<BadgeSpec> {\n    const factory = this.factories[options.badgeInfo.id];\n    const badge = factory\n      ? factory.createBadge(options.context)\n      : ({\n          label: 'unknown badge',\n          message: options.badgeInfo.id,\n          color: 'red',\n        } as Badge);\n\n    if (!badge) {\n      throw new InputError(\n        `The badge factory failed to produce a \"${options.badgeInfo.id}\" badge with the provided context`,\n      );\n    }\n\n    return {\n      badge,\n      id: options.badgeInfo.id,\n      url: options.context.badgeUrl,\n      markdown: this.getMarkdownCode(badge, options.context.badgeUrl),\n    };\n  }\n\n  public async createBadgeSvg(options: BadgeOptions): Promise<string> {\n    const { badge } = await this.createBadgeJson(options);\n    try {\n      const format = {\n        message: badge.message,\n        color: badge.color || '#36BAA2',\n        label: badge.label || '',\n        labelColor: badge.labelColor || '',\n        style: badge.style || 'flat-square',\n      } as Format;\n      return makeBadge(format);\n    } catch (err) {\n      return makeBadge({\n        label: 'invalid badge',\n        message: `${err}`,\n        color: 'red',\n      });\n    }\n  }\n\n  protected getMarkdownCode(params: Badge, badgeUrl: string): string {\n    let altText = `${params.label}: ${params.message}`;\n    if (params.description && params.description !== params.label) {\n      altText = `${params.description}, ${altText}`;\n    }\n    const tooltip = params.description ? ` \"${params.description}\"` : '';\n    const img = `![${altText}](${badgeUrl}${tooltip})`;\n    return params.link ? `[${img}](${params.link})` : img;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport {\n  errorHandler,\n  PluginEndpointDiscovery,\n} from '@backstage/backend-common';\nimport { CatalogApi, CatalogClient } from '@backstage/catalog-client';\nimport { Config } from '@backstage/config';\nimport { NotFoundError } from '@backstage/errors';\nimport { BadgeBuilder, DefaultBadgeBuilder } from '../lib/BadgeBuilder';\nimport { BadgeContext, BadgeFactories } from '../types';\n\nexport interface RouterOptions {\n  badgeBuilder?: BadgeBuilder;\n  badgeFactories?: BadgeFactories;\n  catalog?: CatalogApi;\n  config: Config;\n  discovery: PluginEndpointDiscovery;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const catalog =\n    options.catalog || new CatalogClient({ discoveryApi: options.discovery });\n  const badgeBuilder =\n    options.badgeBuilder ||\n    new DefaultBadgeBuilder(options.badgeFactories || {});\n  const router = Router();\n\n  router.get('/entity/:namespace/:kind/:name/badge-specs', async (req, res) => {\n    const { namespace, kind, name } = req.params;\n    const entity = await catalog.getEntityByRef(\n      { namespace, kind, name },\n      {\n        token: getBearerToken(req.headers.authorization),\n      },\n    );\n    if (!entity) {\n      throw new NotFoundError(\n        `No ${kind} entity in ${namespace} named \"${name}\"`,\n      );\n    }\n\n    const specs = [];\n    for (const badgeInfo of await badgeBuilder.getBadges()) {\n      const context: BadgeContext = {\n        badgeUrl: await getBadgeUrl(\n          namespace,\n          kind,\n          name,\n          badgeInfo.id,\n          options,\n        ),\n        config: options.config,\n        entity,\n      };\n\n      const badge = await badgeBuilder.createBadgeJson({ badgeInfo, context });\n      specs.push(badge);\n    }\n\n    res.setHeader('Content-Type', 'application/json');\n    res.status(200).send(JSON.stringify(specs, null, 2));\n  });\n\n  router.get(\n    '/entity/:namespace/:kind/:name/badge/:badgeId',\n    async (req, res) => {\n      const { namespace, kind, name, badgeId } = req.params;\n      const entity = await catalog.getEntityByRef(\n        { namespace, kind, name },\n        {\n          token: getBearerToken(req.headers.authorization),\n        },\n      );\n      if (!entity) {\n        throw new NotFoundError(\n          `No ${kind} entity in ${namespace} named \"${name}\"`,\n        );\n      }\n\n      let format =\n        req.accepts(['image/svg+xml', 'application/json']) || 'image/svg+xml';\n      if (req.query.format === 'json') {\n        format = 'application/json';\n      }\n\n      const badgeOptions = {\n        badgeInfo: { id: badgeId },\n        context: {\n          badgeUrl: await getBadgeUrl(namespace, kind, name, badgeId, options),\n          config: options.config,\n          entity,\n        },\n      };\n\n      let data: string;\n      if (format === 'application/json') {\n        data = JSON.stringify(\n          await badgeBuilder.createBadgeJson(badgeOptions),\n          null,\n          2,\n        );\n      } else {\n        data = await badgeBuilder.createBadgeSvg(badgeOptions);\n      }\n\n      res.setHeader('Content-Type', format);\n      res.status(200).send(data);\n    },\n  );\n\n  router.use(errorHandler());\n\n  return router;\n}\n\nasync function getBadgeUrl(\n  namespace: string,\n  kind: string,\n  name: string,\n  badgeId: string,\n  options: RouterOptions,\n): Promise<string> {\n  const baseUrl = await options.discovery.getExternalBaseUrl('badges');\n  return `${baseUrl}/entity/${namespace}/${kind}/${name}/badge/${badgeId}`;\n}\n\nfunction getBearerToken(header?: string): string | undefined {\n  return header?.match(/Bearer\\s+(\\S+)/i)?.[1];\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { Entity } from '@backstage/catalog-model';\n\nexport const BADGE_STYLES = [\n  'plastic',\n  'flat',\n  'flat-square',\n  'for-the-badge',\n  'social',\n] as const;\nexport type BadgeStyle = typeof BADGE_STYLES[number];\n\nexport interface Badge {\n  /** Badge message background color. */\n  color?: string;\n  /** Badge description (tooltip text) */\n  description?: string;\n  /** Kind of badge */\n  kind?: 'entity';\n  /**\n   * Badge label (should be a rather static value)\n   * ref. shields spec https://github.com/badges/shields/blob/master/spec/SPECIFICATION.md\n   */\n  label: string;\n  /** Badge label background color */\n  labelColor?: string;\n  /** Custom badge link */\n  link?: string;\n  /** Badge message */\n  message: string;\n  /** Badge style (appearance). One of \"plastic\", \"flat\", \"flat-square\", \"for-the-badge\" and \"social\" */\n  style?: BadgeStyle;\n}\n\nexport interface BadgeContext {\n  badgeUrl: string;\n  config: Config;\n  entity?: Entity; // for entity badges\n}\n\nexport interface BadgeFactory {\n  createBadge(context: BadgeContext): Badge;\n}\n\nexport interface BadgeFactories {\n  [id: string]: BadgeFactory;\n}\n"],"names":["DEFAULT_NAMESPACE","InputError","makeBadge","CatalogClient","Router","NotFoundError","errorHandler"],"mappings":";;;;;;;;;;;;;;;AAEA,SAAS,QAAQ,CAAC,OAAO,EAAE;AAC3B,EAAE,OAAO,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC;AACtE,CAAC;AACD,SAAS,SAAS,CAAC,OAAO,EAAE;AAC5B,EAAE,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;AAC3B,EAAE,MAAM,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAIA,8BAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAChG,EAAE,MAAM,UAAU,GAAG,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC1E,EAAE,OAAO,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACpD,CAAC;AACW,MAAC,2BAA2B,GAAG,OAAO;AAClD,EAAE,QAAQ,EAAE;AACZ,IAAI,WAAW,EAAE,CAAC,OAAO,KAAK;AAC9B,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC3B,QAAQ,MAAM,IAAIC,iBAAU,CAAC,4CAA4C,CAAC,CAAC;AAC3E,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,WAAW,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AACtF,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI;AAClC,QAAQ,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC;AAChC,QAAQ,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;AAC7C,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC;AACR,KAAK;AACL,GAAG;AACH,EAAE,SAAS,EAAE;AACb,IAAI,WAAW,EAAE,CAAC,OAAO,KAAK;AAC9B,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC3B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,6CAA6C,CAAC,CAAC;AAC5E,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,WAAW,EAAE,wBAAwB;AAC7C,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,KAAK,EAAE,WAAW;AAC1B,QAAQ,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC;AAChC,QAAQ,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;AAC/F,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC;AACR,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,WAAW,EAAE,CAAC,OAAO,KAAK;AAC9B,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC3B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,yCAAyC,CAAC,CAAC;AACxE,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,WAAW,EAAE,oBAAoB;AACzC,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,KAAK,EAAE,OAAO;AACtB,QAAQ,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC;AAChC,QAAQ,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;AAC3F,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC;AACR,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE;AACR,IAAI,WAAW,EAAE,CAAC,OAAO,KAAK;AAC9B,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC3B,QAAQ,MAAM,IAAIA,iBAAU,CAAC,wCAAwC,CAAC,CAAC;AACvE,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,WAAW,EAAE,mBAAmB;AACxC,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,KAAK,EAAE,MAAM;AACrB,QAAQ,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AAC1C,QAAQ,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI;AAC7C,QAAQ,KAAK,EAAE,aAAa;AAC5B,OAAO,CAAC;AACR,KAAK;AACL,GAAG;AACH,CAAC;;ACxEM,MAAM,mBAAmB,CAAC;AACjC,EAAE,WAAW,CAAC,SAAS,EAAE;AACzB,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,SAAS,GAAG;AACpB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7D,GAAG;AACH,EAAE,MAAM,eAAe,CAAC,OAAO,EAAE;AACjC,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACzD,IAAI,MAAM,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG;AACnE,MAAM,KAAK,EAAE,eAAe;AAC5B,MAAM,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE;AACnC,MAAM,KAAK,EAAE,KAAK;AAClB,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,uCAAuC,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,iCAAiC,CAAC,CAAC,CAAC;AAC9H,KAAK;AACL,IAAI,OAAO;AACX,MAAM,KAAK;AACX,MAAM,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9B,MAAM,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ;AACnC,MAAM,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;AACrE,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,OAAO,EAAE;AAChC,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAC1D,IAAI,IAAI;AACR,MAAM,MAAM,MAAM,GAAG;AACrB,QAAQ,OAAO,EAAE,KAAK,CAAC,OAAO;AAC9B,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,SAAS;AACvC,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE;AAChC,QAAQ,UAAU,EAAE,KAAK,CAAC,UAAU,IAAI,EAAE;AAC1C,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,aAAa;AAC3C,OAAO,CAAC;AACR,MAAM,OAAOC,oBAAS,CAAC,MAAM,CAAC,CAAC;AAC/B,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAOA,oBAAS,CAAC;AACvB,QAAQ,KAAK,EAAE,eAAe;AAC9B,QAAQ,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACzB,QAAQ,KAAK,EAAE,KAAK;AACpB,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AACH,EAAE,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACvD,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM,CAAC,KAAK,EAAE;AACnE,MAAM,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;AACpD,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACzE,IAAI,MAAM,GAAG,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACvD,IAAI,OAAO,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC1D,GAAG;AACH;;AC/CO,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAIC,2BAAa,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5F,EAAE,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,mBAAmB,CAAC,OAAO,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC;AACrG,EAAE,MAAM,MAAM,GAAGC,0BAAM,EAAE,CAAC;AAC1B,EAAE,MAAM,CAAC,GAAG,CAAC,4CAA4C,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC/E,IAAI,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACjD,IAAI,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAC3E,MAAM,KAAK,EAAE,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;AACtD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,MAAM,MAAM,IAAIC,oBAAa,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,KAAK,MAAM,SAAS,IAAI,MAAM,YAAY,CAAC,SAAS,EAAE,EAAE;AAC5D,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC;AACjF,QAAQ,MAAM,EAAE,OAAO,CAAC,MAAM;AAC9B,QAAQ,MAAM;AACd,OAAO,CAAC;AACR,MAAM,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;AAC/E,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,KAAK;AACL,IAAI,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AACtD,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,+CAA+C,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAClF,IAAI,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1D,IAAI,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAC3E,MAAM,KAAK,EAAE,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;AACtD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,MAAM,MAAM,IAAIA,oBAAa,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,KAAK;AACL,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,IAAI,eAAe,CAAC;AACvF,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,MAAM,MAAM,GAAG,kBAAkB,CAAC;AAClC,KAAK;AACL,IAAI,MAAM,YAAY,GAAG;AACzB,MAAM,SAAS,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE;AAChC,MAAM,OAAO,EAAE;AACf,QAAQ,QAAQ,EAAE,MAAM,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC;AAC5E,QAAQ,MAAM,EAAE,OAAO,CAAC,MAAM;AAC9B,QAAQ,MAAM;AACd,OAAO;AACP,KAAK,CAAC;AACN,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,MAAM,KAAK,kBAAkB,EAAE;AACvC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACvF,KAAK,MAAM;AACX,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;AAC1C,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAACC,0BAAY,EAAE,CAAC,CAAC;AAC7B,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD,eAAe,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AACpE,EAAE,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACvE,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC3E,CAAC;AACD,SAAS,cAAc,CAAC,MAAM,EAAE;AAChC,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,OAAO,CAAC,EAAE,GAAG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACnG;;ACvEY,MAAC,YAAY,GAAG;AAC5B,EAAE,SAAS;AACX,EAAE,MAAM;AACR,EAAE,aAAa;AACf,EAAE,eAAe;AACjB,EAAE,QAAQ;AACV;;;;;;;"}