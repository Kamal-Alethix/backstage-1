{"version":3,"file":"index.cjs.js","sources":["../src/utils/azure-devops-utils.ts","../src/api/AzureDevOpsApi.ts","../src/api/PullRequestsDashboardProvider.ts","../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CreatedBy,\n  DashboardPullRequest,\n  Policy,\n  PolicyEvaluationStatus,\n  PolicyType,\n  PolicyTypeId,\n  PullRequestVoteStatus,\n  Repository,\n  Reviewer,\n} from '@backstage/plugin-azure-devops-common';\nimport {\n  GitPullRequest,\n  GitRepository,\n  IdentityRefWithVote,\n} from 'azure-devops-node-api/interfaces/GitInterfaces';\n\nimport { IdentityRef } from 'azure-devops-node-api/interfaces/common/VSSInterfaces';\nimport { PolicyEvaluationRecord } from 'azure-devops-node-api/interfaces/PolicyInterfaces';\n\nexport function convertDashboardPullRequest(\n  pullRequest: GitPullRequest,\n  baseUrl: string,\n  policies: Policy[] | undefined,\n): DashboardPullRequest {\n  return {\n    pullRequestId: pullRequest.pullRequestId,\n    title: pullRequest.title,\n    description: pullRequest.description,\n    repository: convertRepository(pullRequest.repository),\n    createdBy: convertCreatedBy(pullRequest.createdBy),\n    hasAutoComplete: hasAutoComplete(pullRequest),\n    policies,\n    reviewers: convertReviewers(pullRequest.reviewers),\n    creationDate: pullRequest.creationDate?.toISOString(),\n    status: pullRequest.status,\n    isDraft: pullRequest.isDraft,\n    link: getPullRequestLink(baseUrl, pullRequest),\n  };\n}\n\nexport function getPullRequestLink(\n  baseUrl: string,\n  pullRequest: GitPullRequest,\n): string | undefined {\n  const projectName = pullRequest.repository?.project?.name;\n  const repoName = pullRequest.repository?.name;\n  const pullRequestId = pullRequest.pullRequestId;\n\n  if (!projectName || !repoName || !pullRequestId) {\n    return undefined;\n  }\n\n  const encodedProjectName = encodeURIComponent(projectName);\n  const encodedRepoName = encodeURIComponent(repoName);\n\n  return `${baseUrl}/${encodedProjectName}/_git/${encodedRepoName}/pullrequest/${pullRequestId}`;\n}\n\n/**\n * Tries to get the avatar from the new property if not then falls-back to deprecated `imageUrl`.\n * https://docs.microsoft.com/en-us/rest/api/azure/devops/git/pull-requests/get-pull-requests-by-project?view=azure-devops-rest-6.0#identityref\n */\nexport function getAvatarUrl(identity: IdentityRef): string | undefined {\n  return identity._links?.avatar?.href ?? identity.imageUrl;\n}\n\nexport function getArtifactId(\n  projectId: string,\n  pullRequestId: number,\n): string {\n  return `vstfs:///CodeReview/CodeReviewId/${projectId}/${pullRequestId}`;\n}\n\nexport function convertPolicy(\n  policyEvaluationRecord: PolicyEvaluationRecord,\n): Policy | undefined {\n  const policyConfig = policyEvaluationRecord.configuration;\n  const policyStatus = policyEvaluationRecord.status;\n\n  if (!policyConfig) {\n    return undefined;\n  }\n\n  if (\n    !(\n      policyConfig.isEnabled &&\n      !policyConfig.isDeleted &&\n      (policyConfig.isBlocking ||\n        policyConfig.type?.id === PolicyType.Status) && // Optional \"Status\" policies are actually required for automatic completion.\n      policyStatus !== PolicyEvaluationStatus.Approved\n    )\n  ) {\n    return undefined;\n  }\n\n  const policyTypeId = policyConfig.type?.id;\n\n  if (!policyTypeId) {\n    return undefined;\n  }\n\n  const policyType: PolicyType | undefined = (\n    {\n      [PolicyTypeId.Build]: PolicyType.Build,\n      [PolicyTypeId.Status]: PolicyType.Status,\n      [PolicyTypeId.MinimumReviewers]: PolicyType.MinimumReviewers,\n      [PolicyTypeId.Comments]: PolicyType.Comments,\n      [PolicyTypeId.RequiredReviewers]: PolicyType.RequiredReviewers,\n      [PolicyTypeId.MergeStrategy]: PolicyType.MergeStrategy,\n    } as Record<string, PolicyType | undefined>\n  )[policyTypeId];\n\n  if (!policyType) {\n    return undefined;\n  }\n\n  const policyConfigSettings = policyConfig.settings;\n  let policyText = policyConfig.type?.displayName;\n  let policyLink: string | undefined;\n\n  switch (policyType) {\n    case PolicyType.Build: {\n      const buildDisplayName = policyConfigSettings.displayName;\n\n      if (buildDisplayName) {\n        policyText += `: ${buildDisplayName}`;\n      }\n\n      const buildId = policyEvaluationRecord.context?.buildId;\n      const policyConfigUrl = policyConfig.url;\n\n      if (buildId && policyConfigUrl) {\n        policyLink = policyConfigUrl.replace(\n          `_apis/policy/configurations/${policyConfig.id}`,\n          `_build/results?buildId=${buildId}`,\n        );\n      }\n\n      if (!policyStatus) {\n        break;\n      }\n\n      const buildExpired = Boolean(policyConfigSettings.isExpired);\n      const buildPolicyStatus =\n        (\n          {\n            [PolicyEvaluationStatus.Queued]: buildExpired\n              ? 'expired'\n              : 'queued',\n            [PolicyEvaluationStatus.Rejected]: 'failed',\n          } as Record<PolicyEvaluationStatus, string | undefined>\n        )[policyStatus] ?? PolicyEvaluationStatus[policyStatus].toLowerCase();\n\n      policyText += ` (${buildPolicyStatus})`;\n\n      break;\n    }\n    case PolicyType.Status: {\n      const statusGenre = policyConfigSettings.statusGenre;\n      const statusName = policyConfigSettings.statusGenre;\n\n      if (statusName) {\n        policyText += `: ${statusGenre}/${statusName}`;\n      }\n\n      break;\n    }\n    case PolicyType.MinimumReviewers: {\n      const minimumApproverCount = policyConfigSettings.minimumApproverCount;\n      policyText += ` (${minimumApproverCount})`;\n      break;\n    }\n    case PolicyType.Comments:\n      break;\n    case PolicyType.RequiredReviewers:\n      break;\n    case PolicyType.MergeStrategy:\n    default:\n      return undefined;\n  }\n\n  return {\n    id: policyConfig.id,\n    type: policyType,\n    status: policyStatus,\n    text: policyText,\n    link: policyLink,\n  };\n}\n\nfunction convertReviewer(\n  identityRef?: IdentityRefWithVote,\n): Reviewer | undefined {\n  if (!identityRef) {\n    return undefined;\n  }\n\n  return {\n    id: identityRef.id,\n    displayName: identityRef.displayName,\n    uniqueName: identityRef.uniqueName,\n    imageUrl: getAvatarUrl(identityRef),\n    isRequired: identityRef.isRequired,\n    isContainer: identityRef.isContainer,\n    voteStatus: (identityRef.vote ?? 0) as PullRequestVoteStatus,\n  };\n}\n\nfunction convertReviewers(\n  identityRefs?: IdentityRefWithVote[],\n): Reviewer[] | undefined {\n  if (!identityRefs) {\n    return undefined;\n  }\n\n  return identityRefs\n    .map(convertReviewer)\n    .filter((reviewer): reviewer is Reviewer => Boolean(reviewer));\n}\n\nfunction convertRepository(repository?: GitRepository): Repository | undefined {\n  if (!repository) {\n    return undefined;\n  }\n\n  return {\n    id: repository.id,\n    name: repository.name,\n    url: repository.url?.replace('_apis/git/repositories', '_git'),\n  };\n}\n\nfunction convertCreatedBy(identityRef?: IdentityRef): CreatedBy | undefined {\n  if (!identityRef) {\n    return undefined;\n  }\n\n  return {\n    id: identityRef.id,\n    displayName: identityRef.displayName,\n    uniqueName: identityRef.uniqueName,\n    imageUrl: getAvatarUrl(identityRef),\n  };\n}\n\nfunction hasAutoComplete(pullRequest: GitPullRequest): boolean {\n  return pullRequest.isDraft !== true && !!pullRequest.completionOptions;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Build,\n  BuildDefinitionReference,\n} from 'azure-devops-node-api/interfaces/BuildInterfaces';\nimport {\n  BuildResult,\n  BuildRun,\n  BuildStatus,\n  DashboardPullRequest,\n  GitTag,\n  Policy,\n  PullRequest,\n  PullRequestOptions,\n  RepoBuild,\n  Team,\n  TeamMember,\n} from '@backstage/plugin-azure-devops-common';\nimport {\n  GitPullRequest,\n  GitPullRequestSearchCriteria,\n  GitRef,\n  GitRepository,\n} from 'azure-devops-node-api/interfaces/GitInterfaces';\nimport {\n  convertDashboardPullRequest,\n  convertPolicy,\n  getArtifactId,\n} from '../utils';\n\nimport { TeamMember as AdoTeamMember } from 'azure-devops-node-api/interfaces/common/VSSInterfaces';\nimport { Logger } from 'winston';\nimport { PolicyEvaluationRecord } from 'azure-devops-node-api/interfaces/PolicyInterfaces';\nimport { WebApi } from 'azure-devops-node-api';\nimport { WebApiTeam } from 'azure-devops-node-api/interfaces/CoreInterfaces';\n\nexport class AzureDevOpsApi {\n  public constructor(\n    private readonly logger: Logger,\n    private readonly webApi: WebApi,\n  ) {}\n\n  public async getGitRepository(\n    projectName: string,\n    repoName: string,\n  ): Promise<GitRepository> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting Repository ${repoName} for Project ${projectName}`,\n    );\n\n    const client = await this.webApi.getGitApi();\n    return client.getRepository(repoName, projectName);\n  }\n\n  public async getBuildList(\n    projectName: string,\n    repoId: string,\n    top: number,\n  ): Promise<Build[]> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting up to ${top} Builds for Repository Id ${repoId} for Project ${projectName}`,\n    );\n\n    const client = await this.webApi.getBuildApi();\n    return client.getBuilds(\n      projectName,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      top,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      repoId,\n      'TfsGit',\n    );\n  }\n\n  public async getRepoBuilds(\n    projectName: string,\n    repoName: string,\n    top: number,\n  ) {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting up to ${top} Builds for Repository ${repoName} for Project ${projectName}`,\n    );\n\n    const gitRepository = await this.getGitRepository(projectName, repoName);\n    const buildList = await this.getBuildList(\n      projectName,\n      gitRepository.id as string,\n      top,\n    );\n\n    const repoBuilds: RepoBuild[] = buildList.map(build => {\n      return mappedRepoBuild(build);\n    });\n\n    return repoBuilds;\n  }\n\n  public async getGitTags(\n    projectName: string,\n    repoName: string,\n  ): Promise<GitTag[]> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting Git Tags for Repository ${repoName} for Project ${projectName}`,\n    );\n\n    const gitRepository = await this.getGitRepository(projectName, repoName);\n    const client = await this.webApi.getGitApi();\n    const tagRefs: GitRef[] = await client.getRefs(\n      gitRepository.id as string,\n      projectName,\n      'tags',\n      false,\n      false,\n      false,\n      false,\n      true,\n    );\n    const linkBaseUrl = `${this.webApi.serverUrl}/${encodeURIComponent(\n      projectName,\n    )}/_git/${encodeURIComponent(repoName)}?version=GT`;\n    const commitBaseUrl = `${this.webApi.serverUrl}/${encodeURIComponent(\n      projectName,\n    )}/_git/${encodeURIComponent(repoName)}/commit`;\n    const gitTags: GitTag[] = tagRefs.map(tagRef => {\n      return mappedGitTag(tagRef, linkBaseUrl, commitBaseUrl);\n    });\n\n    return gitTags;\n  }\n\n  public async getPullRequests(\n    projectName: string,\n    repoName: string,\n    options: PullRequestOptions,\n  ): Promise<PullRequest[]> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting up to ${options.top} Pull Requests for Repository ${repoName} for Project ${projectName}`,\n    );\n\n    const gitRepository = await this.getGitRepository(projectName, repoName);\n    const client = await this.webApi.getGitApi();\n    const searchCriteria: GitPullRequestSearchCriteria = {\n      status: options.status,\n    };\n    const gitPullRequests = await client.getPullRequests(\n      gitRepository.id as string,\n      searchCriteria,\n      projectName,\n      undefined,\n      undefined,\n      options.top,\n    );\n    const linkBaseUrl = `${this.webApi.serverUrl}/${encodeURIComponent(\n      projectName,\n    )}/_git/${encodeURIComponent(repoName)}/pullrequest`;\n    const pullRequests: PullRequest[] = gitPullRequests.map(gitPullRequest => {\n      return mappedPullRequest(gitPullRequest, linkBaseUrl);\n    });\n\n    return pullRequests;\n  }\n\n  public async getDashboardPullRequests(\n    projectName: string,\n    options: PullRequestOptions,\n  ): Promise<DashboardPullRequest[]> {\n    this.logger?.debug(\n      `Getting dashboard pull requests for project '${projectName}'.`,\n    );\n\n    const client = await this.webApi.getGitApi();\n\n    const searchCriteria: GitPullRequestSearchCriteria = {\n      status: options.status,\n    };\n\n    const gitPullRequests: GitPullRequest[] =\n      await client.getPullRequestsByProject(\n        projectName,\n        searchCriteria,\n        undefined,\n        undefined,\n        options.top,\n      );\n\n    return Promise.all(\n      gitPullRequests.map(async gitPullRequest => {\n        const projectId = gitPullRequest.repository?.project?.id;\n        const prId = gitPullRequest.pullRequestId;\n\n        let policies: Policy[] | undefined;\n\n        if (projectId && prId) {\n          policies = await this.getPullRequestPolicies(\n            projectName,\n            projectId,\n            prId,\n          );\n        }\n\n        return convertDashboardPullRequest(\n          gitPullRequest,\n          this.webApi.serverUrl,\n          policies,\n        );\n      }),\n    );\n  }\n\n  private async getPullRequestPolicies(\n    projectName: string,\n    projectId: string,\n    pullRequestId: number,\n  ): Promise<Policy[]> {\n    this.logger?.debug(\n      `Getting pull request policies for pull request id '${pullRequestId}'.`,\n    );\n\n    const client = await this.webApi.getPolicyApi();\n\n    const artifactId = getArtifactId(projectId, pullRequestId);\n\n    const policyEvaluationRecords: PolicyEvaluationRecord[] =\n      await client.getPolicyEvaluations(projectName, artifactId);\n\n    return policyEvaluationRecords\n      .map(convertPolicy)\n      .filter((policy): policy is Policy => Boolean(policy));\n  }\n\n  public async getAllTeams(): Promise<Team[]> {\n    this.logger?.debug('Getting all teams.');\n\n    const client = await this.webApi.getCoreApi();\n    const webApiTeams: WebApiTeam[] = await client.getAllTeams();\n\n    const teams: Team[] = webApiTeams.map(team => ({\n      id: team.id,\n      name: team.name,\n      projectId: team.projectId,\n      projectName: team.projectName,\n    }));\n\n    return teams.sort((a, b) =>\n      a.name && b.name ? a.name.localeCompare(b.name) : 0,\n    );\n  }\n\n  public async getTeamMembers({\n    projectId,\n    teamId,\n  }: {\n    projectId: string;\n    teamId: string;\n  }): Promise<TeamMember[] | undefined> {\n    this.logger?.debug(`Getting team member ids for team '${teamId}'.`);\n\n    const client = await this.webApi.getCoreApi();\n\n    const teamMembers: AdoTeamMember[] =\n      await client.getTeamMembersWithExtendedProperties(projectId, teamId);\n\n    return teamMembers.map(teamMember => ({\n      id: teamMember.identity?.id,\n      displayName: teamMember.identity?.displayName,\n      uniqueName: teamMember.identity?.uniqueName,\n    }));\n  }\n\n  public async getBuildDefinitions(\n    projectName: string,\n    definitionName: string,\n  ): Promise<BuildDefinitionReference[]> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting Build Definitions for ${definitionName} in Project ${projectName}`,\n    );\n\n    const client = await this.webApi.getBuildApi();\n    return client.getDefinitions(projectName, definitionName);\n  }\n\n  public async getBuilds(\n    projectName: string,\n    top: number,\n    repoId?: string,\n    definitions?: number[],\n  ): Promise<Build[]> {\n    this.logger?.debug(\n      `Calling Azure DevOps REST API, getting up to ${top} Builds for Repository Id ${repoId} for Project ${projectName}`,\n    );\n\n    const client = await this.webApi.getBuildApi();\n    return client.getBuilds(\n      projectName,\n      definitions,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      top,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      repoId,\n      repoId ? 'TfsGit' : undefined,\n    );\n  }\n\n  public async getBuildRuns(\n    projectName: string,\n    top: number,\n    repoName?: string,\n    definitionName?: string,\n  ) {\n    let repoId: string | undefined;\n    let definitions: number[] | undefined;\n\n    if (repoName) {\n      const gitRepository = await this.getGitRepository(projectName, repoName);\n      repoId = gitRepository.id;\n    }\n\n    if (definitionName) {\n      const buildDefinitions = await this.getBuildDefinitions(\n        projectName,\n        definitionName,\n      );\n      definitions = buildDefinitions\n        .map(bd => bd.id)\n        .filter((bd): bd is number => Boolean(bd));\n    }\n\n    const builds = await this.getBuilds(projectName, top, repoId, definitions);\n\n    const buildRuns: BuildRun[] = builds.map(mappedBuildRun);\n\n    return buildRuns;\n  }\n}\n\nexport function mappedRepoBuild(build: Build): RepoBuild {\n  return {\n    id: build.id,\n    title: [build.definition?.name, build.buildNumber]\n      .filter(Boolean)\n      .join(' - '),\n    link: build._links?.web.href ?? '',\n    status: build.status ?? BuildStatus.None,\n    result: build.result ?? BuildResult.None,\n    queueTime: build.queueTime?.toISOString(),\n    startTime: build.startTime?.toISOString(),\n    finishTime: build.finishTime?.toISOString(),\n    source: `${build.sourceBranch} (${build.sourceVersion?.substr(0, 8)})`,\n    uniqueName: build.requestedFor?.uniqueName ?? 'N/A',\n  };\n}\n\nexport function mappedGitTag(\n  gitRef: GitRef,\n  linkBaseUrl: string,\n  commitBaseUrl: string,\n): GitTag {\n  return {\n    objectId: gitRef.objectId,\n    peeledObjectId: gitRef.peeledObjectId,\n    name: gitRef.name?.replace('refs/tags/', ''),\n    createdBy: gitRef.creator?.displayName ?? 'N/A',\n    link: `${linkBaseUrl}${encodeURIComponent(\n      gitRef.name?.replace('refs/tags/', '') ?? '',\n    )}`,\n    commitLink: `${commitBaseUrl}/${encodeURIComponent(\n      gitRef.peeledObjectId ?? '',\n    )}`,\n  };\n}\n\nexport function mappedPullRequest(\n  pullRequest: GitPullRequest,\n  linkBaseUrl: string,\n): PullRequest {\n  return {\n    pullRequestId: pullRequest.pullRequestId,\n    repoName: pullRequest.repository?.name,\n    title: pullRequest.title,\n    uniqueName: pullRequest.createdBy?.uniqueName ?? 'N/A',\n    createdBy: pullRequest.createdBy?.displayName ?? 'N/A',\n    creationDate: pullRequest.creationDate?.toISOString(),\n    sourceRefName: pullRequest.sourceRefName,\n    targetRefName: pullRequest.targetRefName,\n    status: pullRequest.status,\n    isDraft: pullRequest.isDraft,\n    link: `${linkBaseUrl}/${pullRequest.pullRequestId}`,\n  };\n}\n\nexport function mappedBuildRun(build: Build): BuildRun {\n  return {\n    id: build.id,\n    title: [build.definition?.name, build.buildNumber]\n      .filter(Boolean)\n      .join(' - '),\n    link: build._links?.web.href ?? '',\n    status: build.status ?? BuildStatus.None,\n    result: build.result ?? BuildResult.None,\n    queueTime: build.queueTime?.toISOString(),\n    startTime: build.startTime?.toISOString(),\n    finishTime: build.finishTime?.toISOString(),\n    source: `${build.sourceBranch} (${build.sourceVersion?.substr(0, 8)})`,\n    uniqueName: build.requestedFor?.uniqueName ?? 'N/A',\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DashboardPullRequest,\n  PullRequestOptions,\n  Team,\n  TeamMember,\n} from '@backstage/plugin-azure-devops-common';\n\nimport { AzureDevOpsApi } from './AzureDevOpsApi';\nimport { Logger } from 'winston';\nimport limiterFactory from 'p-limit';\n\nexport class PullRequestsDashboardProvider {\n  private teams = new Map<string, Team>();\n\n  private teamMembers = new Map<string, TeamMember>();\n\n  private constructor(\n    private readonly logger: Logger,\n    private readonly azureDevOpsApi: AzureDevOpsApi,\n  ) {}\n\n  public static async create(\n    logger: Logger,\n    azureDevOpsApi: AzureDevOpsApi,\n  ): Promise<PullRequestsDashboardProvider> {\n    const provider = new PullRequestsDashboardProvider(logger, azureDevOpsApi);\n    return provider;\n  }\n\n  public async readTeams(): Promise<void> {\n    this.logger.info('Reading teams.');\n\n    let teams = await this.azureDevOpsApi.getAllTeams();\n\n    // This is used to filter out the default Azure Devops project teams.\n    teams = teams.filter(team =>\n      team.name && team.projectName\n        ? team.name !== `${team.projectName} Team`\n        : true,\n    );\n\n    this.teams = new Map<string, Team>();\n    this.teamMembers = new Map<string, TeamMember>();\n\n    const limiter = limiterFactory(5);\n\n    await Promise.all(\n      teams.map(team =>\n        limiter(async () => {\n          const teamId = team.id;\n          const projectId = team.projectId;\n\n          if (teamId) {\n            let teamMembers: TeamMember[] | undefined;\n\n            if (projectId) {\n              teamMembers = await this.azureDevOpsApi.getTeamMembers({\n                projectId,\n                teamId,\n              });\n            }\n\n            if (teamMembers) {\n              team.members = teamMembers.reduce((arr, teamMember) => {\n                const teamMemberId = teamMember.id;\n\n                if (teamMemberId) {\n                  arr.push(teamMemberId);\n                  const memberOf = [\n                    ...(this.teamMembers.get(teamMemberId)?.memberOf ?? []),\n                    teamId,\n                  ];\n                  this.teamMembers.set(teamMemberId, {\n                    ...teamMember,\n                    memberOf,\n                  });\n                }\n\n                return arr;\n              }, [] as string[]);\n\n              this.teams.set(teamId, team);\n            }\n          }\n        }),\n      ),\n    );\n  }\n\n  public async getDashboardPullRequests(\n    projectName: string,\n    options: PullRequestOptions,\n  ): Promise<DashboardPullRequest[]> {\n    const dashboardPullRequests =\n      await this.azureDevOpsApi.getDashboardPullRequests(projectName, options);\n\n    await this.getAllTeams(); // Make sure team members are loaded\n\n    return dashboardPullRequests.map(pr => {\n      if (pr.createdBy?.id) {\n        const teamIds = this.teamMembers.get(pr.createdBy.id)?.memberOf;\n        pr.createdBy.teamIds = teamIds;\n        pr.createdBy.teamNames = teamIds?.map(\n          teamId => this.teams.get(teamId)?.name ?? '',\n        );\n      }\n\n      return pr;\n    });\n  }\n\n  public async getUserTeamIds(email: string): Promise<string[]> {\n    await this.getAllTeams(); // Make sure team members are loaded\n    return (\n      Array.from(this.teamMembers.values()).find(\n        teamMember => teamMember.uniqueName === email,\n      )?.memberOf ?? []\n    );\n  }\n\n  public async getAllTeams(): Promise<Team[]> {\n    if (!this.teams.size) {\n      await this.readTeams();\n    }\n\n    return Array.from(this.teams.values());\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DashboardPullRequest,\n  PullRequestOptions,\n  PullRequestStatus,\n} from '@backstage/plugin-azure-devops-common';\nimport { WebApi, getPersonalAccessTokenHandler } from 'azure-devops-node-api';\n\nimport { AzureDevOpsApi } from '../api';\nimport { Config } from '@backstage/config';\nimport { Logger } from 'winston';\nimport { PullRequestsDashboardProvider } from '../api/PullRequestsDashboardProvider';\nimport Router from 'express-promise-router';\nimport { errorHandler } from '@backstage/backend-common';\nimport express from 'express';\n\nconst DEFAULT_TOP = 10;\n\nexport interface RouterOptions {\n  azureDevOpsApi?: AzureDevOpsApi;\n  logger: Logger;\n  config: Config;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger } = options;\n  const config = options.config.getConfig('azureDevOps');\n\n  const token = config.getString('token');\n  const host = config.getString('host');\n  const organization = config.getString('organization');\n\n  const authHandler = getPersonalAccessTokenHandler(token);\n  const webApi = new WebApi(`https://${host}/${organization}`, authHandler);\n\n  const azureDevOpsApi =\n    options.azureDevOpsApi || new AzureDevOpsApi(logger, webApi);\n\n  const pullRequestsDashboardProvider =\n    await PullRequestsDashboardProvider.create(logger, azureDevOpsApi);\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/health', (_req, res) => {\n    res.status(200).json({ status: 'ok' });\n  });\n\n  router.get('/repository/:projectName/:repoName', async (req, res) => {\n    const { projectName, repoName } = req.params;\n    const gitRepository = await azureDevOpsApi.getGitRepository(\n      projectName,\n      repoName,\n    );\n    res.status(200).json(gitRepository);\n  });\n\n  router.get('/builds/:projectName/:repoId', async (req, res) => {\n    const { projectName, repoId } = req.params;\n    const top = req.query.top ? Number(req.query.top) : DEFAULT_TOP;\n    const buildList = await azureDevOpsApi.getBuildList(\n      projectName,\n      repoId,\n      top,\n    );\n    res.status(200).json(buildList);\n  });\n\n  router.get('/repo-builds/:projectName/:repoName', async (req, res) => {\n    const { projectName, repoName } = req.params;\n\n    const top = req.query.top ? Number(req.query.top) : DEFAULT_TOP;\n\n    const gitRepository = await azureDevOpsApi.getRepoBuilds(\n      projectName,\n      repoName,\n      top,\n    );\n\n    res.status(200).json(gitRepository);\n  });\n\n  router.get('/git-tags/:projectName/:repoName', async (req, res) => {\n    const { projectName, repoName } = req.params;\n    const gitTags = await azureDevOpsApi.getGitTags(projectName, repoName);\n    res.status(200).json(gitTags);\n  });\n\n  router.get('/pull-requests/:projectName/:repoName', async (req, res) => {\n    const { projectName, repoName } = req.params;\n\n    const top = req.query.top ? Number(req.query.top) : DEFAULT_TOP;\n\n    const status = req.query.status\n      ? Number(req.query.status)\n      : PullRequestStatus.Active;\n\n    const pullRequestOptions: PullRequestOptions = {\n      top: top,\n      status: status,\n    };\n\n    const gitPullRequest = await azureDevOpsApi.getPullRequests(\n      projectName,\n      repoName,\n      pullRequestOptions,\n    );\n\n    res.status(200).json(gitPullRequest);\n  });\n\n  router.get('/dashboard-pull-requests/:projectName', async (req, res) => {\n    const { projectName } = req.params;\n\n    const top = req.query.top ? Number(req.query.top) : DEFAULT_TOP;\n\n    const status = req.query.status\n      ? Number(req.query.status)\n      : PullRequestStatus.Active;\n\n    const pullRequestOptions: PullRequestOptions = {\n      top: top,\n      status: status,\n    };\n\n    const pullRequests: DashboardPullRequest[] =\n      await pullRequestsDashboardProvider.getDashboardPullRequests(\n        projectName,\n        pullRequestOptions,\n      );\n\n    res.status(200).json(pullRequests);\n  });\n\n  router.get('/all-teams', async (_req, res) => {\n    const allTeams = await pullRequestsDashboardProvider.getAllTeams();\n    res.status(200).json(allTeams);\n  });\n\n  router.get(\n    '/build-definitions/:projectName/:definitionName',\n    async (req, res) => {\n      const { projectName, definitionName } = req.params;\n      const buildDefinitionList = await azureDevOpsApi.getBuildDefinitions(\n        projectName,\n        definitionName,\n      );\n      res.status(200).json(buildDefinitionList);\n    },\n  );\n\n  router.get('/builds/:projectName', async (req, res) => {\n    const { projectName } = req.params;\n    const repoName = req.query.repoName?.toString();\n    const definitionName = req.query.definitionName?.toString();\n    const top = req.query.top ? Number(req.query.top) : DEFAULT_TOP;\n    const builds = await azureDevOpsApi.getBuildRuns(\n      projectName,\n      top,\n      repoName,\n      definitionName,\n    );\n    res.status(200).json(builds);\n  });\n\n  router.get('/users/:userId/team-ids', async (req, res) => {\n    const { userId } = req.params;\n    const teamIds = await pullRequestsDashboardProvider.getUserTeamIds(userId);\n    res.status(200).json(teamIds);\n  });\n\n  router.use(errorHandler());\n  return router;\n}\n"],"names":["PolicyType","PolicyEvaluationStatus","PolicyTypeId","BuildStatus","BuildResult","limiterFactory","getPersonalAccessTokenHandler","WebApi","Router","express","PullRequestStatus","errorHandler"],"mappings":"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"}