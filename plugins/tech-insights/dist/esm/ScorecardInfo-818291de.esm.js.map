{"version":3,"file":"ScorecardInfo-818291de.esm.js","sources":["../../src/components/ScorecardsInfo/ScorecardInfo.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { makeStyles, Grid, Typography } from '@material-ui/core';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { InfoCard } from '@backstage/core-components';\nimport { CheckResult } from '@backstage/plugin-tech-insights-common';\nimport { techInsightsApiRef } from '../../api/TechInsightsApi';\nimport { BackstageTheme } from '@backstage/theme';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme: BackstageTheme) => ({\n  subheader: {\n    fontWeight: 'bold',\n    paddingLeft: theme.spacing(0.5),\n  },\n}));\n\ntype Checks = {\n  checks: CheckResult[];\n  title?: string;\n  description?: string;\n};\n\nconst infoCard = (\n  title: Checks['title'],\n  description: Checks['description'],\n  className: string,\n  element: JSX.Element,\n) => (\n  <Grid item xs={12}>\n    <InfoCard title={title}>\n      <Typography className={className} variant=\"body1\" gutterBottom>\n        {description}\n      </Typography>\n      <Grid item xs={12}>\n        {element}\n      </Grid>\n    </InfoCard>\n  </Grid>\n);\n\nexport const ScorecardInfo = ({ checks, title, description }: Checks) => {\n  const classes = useStyles();\n  const api = useApi(techInsightsApiRef);\n\n  if (!checks.length) {\n    return infoCard(\n      title,\n      description,\n      classes.subheader,\n      <Alert severity=\"warning\">No checks have any data yet.</Alert>,\n    );\n  }\n\n  const checkRenderType = api.getScorecardsDefinition(\n    checks[0].check.type,\n    checks,\n    title,\n    description,\n  );\n\n  if (checkRenderType) {\n    return infoCard(\n      checkRenderType.title,\n      checkRenderType.description,\n      classes.subheader,\n      checkRenderType.component,\n    );\n  }\n\n  return <></>;\n};\n"],"names":[],"mappings":";;;;;;;AAMA,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,KAAK,MAAM;AACzC,EAAE,SAAS,EAAE;AACb,IAAI,UAAU,EAAE,MAAM;AACtB,IAAI,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;AACnC,GAAG;AACH,CAAC,CAAC,CAAC,CAAC;AACJ,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,qBAAqB,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE;AACvG,EAAE,IAAI,EAAE,IAAI;AACZ,EAAE,EAAE,EAAE,EAAE;AACR,CAAC,kBAAkB,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE;AACjD,EAAE,KAAK;AACP,CAAC,kBAAkB,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE;AACnD,EAAE,SAAS;AACX,EAAE,OAAO,EAAE,OAAO;AAClB,EAAE,YAAY,EAAE,IAAI;AACpB,CAAC,EAAE,WAAW,CAAC,kBAAkB,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE;AAC3D,EAAE,IAAI,EAAE,IAAI;AACZ,EAAE,EAAE,EAAE,EAAE;AACR,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACF,MAAC,aAAa,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK;AACjE,EAAE,MAAM,OAAO,GAAG,SAAS,EAAE,CAAC;AAC9B,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACzC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACtB,IAAI,OAAO,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,SAAS,kBAAkB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;AACtG,MAAM,QAAQ,EAAE,SAAS;AACzB,KAAK,EAAE,8BAA8B,CAAC,CAAC,CAAC;AACxC,GAAG;AACH,EAAE,MAAM,eAAe,GAAG,GAAG,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;AACxG,EAAE,IAAI,eAAe,EAAE;AACvB,IAAI,OAAO,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC;AACtH,GAAG;AACH,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACnE;;;;"}