{"version":3,"file":"index.cjs.js","sources":["../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport {\n  createProxyMiddleware,\n  Options,\n  RequestHandler,\n} from 'http-proxy-middleware';\nimport { Logger } from 'winston';\nimport http from 'http';\nimport { PluginEndpointDiscovery } from '@backstage/backend-common';\n\n// A list of headers that are always forwarded to the proxy targets.\nconst safeForwardHeaders = [\n  // https://fetch.spec.whatwg.org/#cors-safelisted-request-header\n  'cache-control',\n  'content-language',\n  'content-length',\n  'content-type',\n  'expires',\n  'last-modified',\n  'pragma',\n\n  // host is overridden by default. if changeOrigin is configured to false,\n  // we assume this is a intentional and should also be forwarded.\n  'host',\n\n  // other headers that we assume to be ok\n  'accept',\n  'accept-language',\n  'user-agent',\n];\n\nexport interface RouterOptions {\n  logger: Logger;\n  config: Config;\n  discovery: PluginEndpointDiscovery;\n  skipInvalidProxies?: boolean;\n}\n\nexport interface ProxyConfig extends Options {\n  allowedMethods?: string[];\n  allowedHeaders?: string[];\n}\n\n// Creates a proxy middleware, possibly with defaults added on top of the\n// given config.\nexport function buildMiddleware(\n  pathPrefix: string,\n  logger: Logger,\n  route: string,\n  config: string | ProxyConfig,\n): RequestHandler {\n  const fullConfig =\n    typeof config === 'string' ? { target: config } : { ...config };\n\n  // Validate that target is a valid URL.\n  if (typeof fullConfig.target !== 'string') {\n    throw new Error(`Proxy target must be a string`);\n  }\n  try {\n    // eslint-disable-next-line no-new\n    new URL(fullConfig.target! as string);\n  } catch {\n    throw new Error(\n      `Proxy target is not a valid URL: ${fullConfig.target ?? ''}`,\n    );\n  }\n\n  // Default is to do a path rewrite that strips out the proxy's path prefix\n  // and the rest of the route.\n  if (fullConfig.pathRewrite === undefined) {\n    let routeWithSlash = route.endsWith('/') ? route : `${route}/`;\n\n    if (!pathPrefix.endsWith('/') && !routeWithSlash.startsWith('/')) {\n      // Need to insert a / between pathPrefix and routeWithSlash\n      routeWithSlash = `/${routeWithSlash}`;\n    } else if (pathPrefix.endsWith('/') && routeWithSlash.startsWith('/')) {\n      // Never expect this to happen at this point in time as\n      // pathPrefix is set using `getExternalBaseUrl` which \"Returns the\n      // external HTTP base backend URL for a given plugin,\n      // **without a trailing slash.**\". But in case this changes in future, we\n      // need to drop a / on either pathPrefix or routeWithSlash\n      routeWithSlash = routeWithSlash.substring(1);\n    }\n\n    // The ? makes the slash optional for the rewrite, so that a base path without an ending slash\n    // will also be matched (e.g. '/sample' and then requesting just '/api/proxy/sample' without an\n    // ending slash). Otherwise the target gets called with the full '/api/proxy/sample' path\n    // appended.\n    fullConfig.pathRewrite = {\n      [`^${pathPrefix}${routeWithSlash}?`]: '/',\n    };\n  }\n\n  // Default is to update the Host header to the target\n  if (fullConfig.changeOrigin === undefined) {\n    fullConfig.changeOrigin = true;\n  }\n\n  // Attach the logger to the proxy config\n  fullConfig.logProvider = () => logger;\n\n  // Only return the allowed HTTP headers to not forward unwanted secret headers\n  const requestHeaderAllowList = new Set<string>(\n    [\n      // allow all safe headers\n      ...safeForwardHeaders,\n\n      // allow all headers that are set by the proxy\n      ...((fullConfig.headers && Object.keys(fullConfig.headers)) || []),\n\n      // allow all configured headers\n      ...(fullConfig.allowedHeaders || []),\n    ].map(h => h.toLocaleLowerCase()),\n  );\n\n  // Use the custom middleware filter to do two things:\n  //  1. Remove any headers not in the allow list to stop them being forwarded\n  //  2. Only permit the allowed HTTP methods if configured\n  //\n  // We are filtering the proxy request headers here rather than in\n  // `onProxyReq` because when global-agent is enabled then `onProxyReq`\n  // fires _after_ the agent has already sent the headers to the proxy\n  // target, causing a ERR_HTTP_HEADERS_SENT crash\n  const filter = (_pathname: string, req: http.IncomingMessage): boolean => {\n    const headerNames = Object.keys(req.headers);\n    headerNames.forEach(h => {\n      if (!requestHeaderAllowList.has(h.toLocaleLowerCase())) {\n        delete req.headers[h];\n      }\n    });\n\n    return fullConfig?.allowedMethods?.includes(req.method!) ?? true;\n  };\n  // Makes http-proxy-middleware logs look nicer and include the mount path\n  filter.toString = () => route;\n\n  // Only forward the allowed HTTP headers to not forward unwanted secret headers\n  const responseHeaderAllowList = new Set<string>(\n    [\n      // allow all safe headers\n      ...safeForwardHeaders,\n\n      // allow all configured headers\n      ...(fullConfig.allowedHeaders || []),\n    ].map(h => h.toLocaleLowerCase()),\n  );\n\n  // only forward the allowed headers in backend->client\n  fullConfig.onProxyRes = (proxyRes: http.IncomingMessage) => {\n    const headerNames = Object.keys(proxyRes.headers);\n\n    headerNames.forEach(h => {\n      if (!responseHeaderAllowList.has(h.toLocaleLowerCase())) {\n        delete proxyRes.headers[h];\n      }\n    });\n  };\n\n  return createProxyMiddleware(filter, fullConfig);\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const router = Router();\n\n  const externalUrl = await options.discovery.getExternalBaseUrl('proxy');\n  const { pathname: pathPrefix } = new URL(externalUrl);\n\n  const proxyConfig = options.config.getOptional('proxy') ?? {};\n\n  Object.entries(proxyConfig).forEach(([route, proxyRouteConfig]) => {\n    try {\n      router.use(\n        route,\n        buildMiddleware(pathPrefix, options.logger, route, proxyRouteConfig),\n      );\n    } catch (e) {\n      if (options.skipInvalidProxies) {\n        options.logger.warn(`skipped configuring ${route} due to ${e.message}`);\n      } else {\n        throw e;\n      }\n    }\n  });\n\n  return router;\n}\n"],"names":["createProxyMiddleware","Router"],"mappings":"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"}