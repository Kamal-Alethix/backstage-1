{"version":3,"file":"index.cjs.js","sources":["../src/service/client.ts","../src/schema.js","../src/graphql/module.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, EntityMeta } from '@backstage/catalog-model';\nimport fetch from 'node-fetch';\n\nexport interface ReaderEntityMeta extends EntityMeta {\n  uid: string;\n  etag: string;\n  namespace: string;\n  annotations: Record<string, string>;\n  labels: Record<string, string>;\n}\n\nexport interface ReaderEntity extends Entity {\n  metadata: ReaderEntityMeta;\n}\n\nexport class CatalogClient {\n  constructor(private baseUrl: string) {}\n\n  async list(): Promise<ReaderEntity[]> {\n    const res = await fetch(`${this.baseUrl}/api/catalog/entities`);\n\n    if (!res.ok) {\n      // todo(blam): need some better way to handle errors here\n      // experiment with throwing the input errors etc and having graphql versions of that\n      throw new Error(await res.text());\n    }\n\n    const entities = (await res.json()) as ReaderEntity[];\n    return entities;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst schema = /* GraphQL */ `\n  scalar JSON\n  scalar JSONObject\n\n  interface EntityMetadata {\n    name: String!\n    annotations: JSONObject!\n    annotation(name: String!): JSON\n    labels: JSONObject!\n    label(name: String!): JSON\n    uid: String!\n    etag: String!\n  }\n\n  type DefaultEntityMetadata implements EntityMetadata {\n    name: String!\n    annotations: JSONObject!\n    annotation(name: String!): JSON\n    labels: JSONObject!\n    label(name: String!): JSON\n    uid: String!\n    etag: String!\n  }\n\n  type ComponentMetadata implements EntityMetadata {\n    name: String!\n    annotations: JSONObject!\n    annotation(name: String!): JSON\n    labels: JSONObject!\n    label(name: String!): JSON\n    uid: String!\n    etag: String!\n    # mock field to prove extensions working\n    relationships: String\n  }\n\n  type TemplateMetadata implements EntityMetadata {\n    name: String!\n    annotations: JSONObject!\n    annotation(name: String!): JSON\n    labels: JSONObject!\n    label(name: String!): JSON\n    uid: String!\n    etag: String!\n    # mock field to prove extensions working\n    updatedBy: String\n  }\n\n  # TODO: move this definition into plugin-scaffolder-graphql\n  type TemplateEntitySpec {\n    type: String!\n    path: String\n    schema: JSONObject!\n    templater: String!\n  }\n\n  type ComponentEntitySpec {\n    type: String!\n    lifecycle: String!\n    owner: String!\n  }\n\n  type DefaultEntitySpec {\n    raw: JSONObject\n  }\n\n  union EntitySpec =\n      DefaultEntitySpec\n    | TemplateEntitySpec\n    | ComponentEntitySpec\n\n  type CatalogEntity {\n    apiVersion: String!\n    kind: String!\n    metadata: EntityMetadata\n    spec: EntitySpec!\n  }\n\n  type CatalogQuery {\n    list: [CatalogEntity!]!\n  }\n\n  type Query {\n    catalog: CatalogQuery!\n  }\n`;\n\nexport default schema;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport {\n  createModule as createGraphQLModule,\n  Module,\n  gql,\n} from 'graphql-modules';\nimport { Resolvers, CatalogQuery } from './types';\nimport { Config } from '@backstage/config';\nimport { CatalogClient } from '../service/client';\nimport GraphQLJSON, { GraphQLJSONObject } from 'graphql-type-json';\nimport { Entity } from '@backstage/catalog-model';\nimport typeDefs from '../schema';\n\nexport interface ModuleOptions {\n  logger: Logger;\n  config: Config;\n}\n\nexport async function createModule(options: ModuleOptions): Promise<Module> {\n  const catalogClient = new CatalogClient(\n    options.config.getString('backend.baseUrl'),\n  );\n\n  const resolvers: Resolvers = {\n    JSON: GraphQLJSON,\n    JSONObject: GraphQLJSONObject,\n    DefaultEntitySpec: {\n      raw: rootValue => {\n        const { entity } = rootValue as { entity: Entity };\n        return entity.spec ?? null;\n      },\n    },\n    Query: {\n      catalog: () => ({} as CatalogQuery),\n    },\n    CatalogQuery: {\n      list: async () => {\n        return await catalogClient.list();\n      },\n    },\n    CatalogEntity: {\n      metadata: entity => ({ ...entity.metadata!, entity }),\n      spec: entity => ({ ...entity.spec!, entity }),\n    },\n    EntityMetadata: {\n      __resolveType: rootValue => {\n        const {\n          entity: { kind },\n        } = rootValue as { entity: Entity };\n\n        switch (kind) {\n          case 'Component':\n            return 'ComponentMetadata';\n          case 'Template':\n            return 'TemplateMetadata';\n          default:\n            return 'DefaultEntityMetadata';\n        }\n      },\n      annotation: (e, { name }) => e.annotations?.[name] ?? null,\n      labels: e => e.labels ?? {},\n      annotations: e => e.annotations ?? {},\n      label: (e, { name }) => e.labels?.[name] ?? null,\n    },\n    EntitySpec: {\n      __resolveType: rootValue => {\n        const {\n          entity: { kind },\n        } = rootValue as { entity: Entity };\n\n        switch (kind) {\n          case 'Component':\n            return 'ComponentEntitySpec';\n          case 'Template':\n            return 'TemplateEntitySpec';\n          default:\n            return 'DefaultEntitySpec';\n        }\n      },\n    },\n  };\n\n  return createGraphQLModule({\n    id: 'plugin-catalog-graphql',\n    typeDefs: gql(typeDefs),\n    resolvers,\n  });\n}\n"],"names":["fetch","GraphQLJSON","GraphQLJSONObject","createGraphQLModule","gql","typeDefs"],"mappings":"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"}