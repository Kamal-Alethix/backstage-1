{"version":3,"file":"index-41db7896.esm.js","sources":["../../src/routes.ts","../../src/api/ApacheAirflowApi.ts","../../src/api/ApacheAirflowClient.ts","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'apache-airflow',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef, DiscoveryApi } from '@backstage/core-plugin-api';\nimport { Dag, InstanceStatus, InstanceVersion } from './types';\n\nexport const apacheAirflowApiRef = createApiRef<ApacheAirflowApi>({\n  id: 'plugin.apacheairflow.service',\n});\n\nexport type ApacheAirflowApi = {\n  discoveryApi: DiscoveryApi;\n  baseUrl: string;\n  listDags(options?: { objectsPerRequest: number }): Promise<Dag[]>;\n  updateDag(dagId: string, isPaused: boolean): Promise<any>;\n  getInstanceStatus(): Promise<InstanceStatus>;\n  getInstanceVersion(): Promise<InstanceVersion>;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi } from '@backstage/core-plugin-api';\nimport fetch from 'cross-fetch';\nimport qs from 'qs';\nimport { ApacheAirflowApi } from './ApacheAirflowApi';\nimport {\n  Dag,\n  Dags,\n  InstanceStatus,\n  InstanceVersion,\n  ListDagsParams,\n} from './types';\n\nexport class ApacheAirflowClient implements ApacheAirflowApi {\n  discoveryApi: DiscoveryApi;\n  baseUrl: string;\n\n  constructor({\n    discoveryApi,\n    baseUrl = 'http://localhost:8080',\n  }: {\n    discoveryApi: DiscoveryApi;\n    baseUrl: string;\n  }) {\n    this.discoveryApi = discoveryApi;\n    this.baseUrl = baseUrl.endsWith('/') ? baseUrl : `${baseUrl}/`;\n  }\n\n  /**\n   * List all DAGs in the Airflow instance\n   *\n   * @remarks\n   *\n   * All DAGs with a limit of 100 results per request are returned; this may be\n   * bogged-down for instances with many DAGs, in which case table pagination\n   * should be implemented\n   *\n   * @param objectsPerRequest - records returned per request in pagination\n   */\n  async listDags(options = { objectsPerRequest: 100 }): Promise<Dag[]> {\n    const dags: Dag[] = [];\n    const searchParams: ListDagsParams = {\n      limit: options.objectsPerRequest,\n      offset: 0,\n    };\n\n    for (;;) {\n      const response = await this.fetch<Dags>(\n        `/dags?${qs.stringify(searchParams)}`,\n      );\n      dags.push(...response.dags);\n\n      if (dags.length >= response.total_entries) {\n        break;\n      }\n      if (typeof searchParams.offset !== 'undefined') {\n        searchParams.offset += options.objectsPerRequest;\n      }\n    }\n    return dags;\n  }\n\n  async updateDag(dagId: string, isPaused: boolean): Promise<Dag> {\n    const init = {\n      method: 'PATCH',\n      body: JSON.stringify({ is_paused: isPaused }),\n    };\n    return await this.fetch<Dag>(`/dags/${dagId}`, init);\n  }\n\n  async getInstanceStatus(): Promise<InstanceStatus> {\n    return await this.fetch<InstanceStatus>('/health');\n  }\n\n  async getInstanceVersion(): Promise<InstanceVersion> {\n    return await this.fetch<InstanceVersion>('/version');\n  }\n\n  private async fetch<T = any>(input: string, init?: RequestInit): Promise<T> {\n    const proxyUri = `${await this.discoveryApi.getBaseUrl('proxy')}/airflow`;\n    const response = await fetch(`${proxyUri}${input}`, init);\n    if (!response.ok) throw new Error(response.statusText);\n    return await response.json();\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { rootRouteRef } from './routes';\nimport { apacheAirflowApiRef, ApacheAirflowClient } from './api';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  configApiRef,\n} from '@backstage/core-plugin-api';\n\nexport const apacheAirflowPlugin = createPlugin({\n  id: 'apache-airflow',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: apacheAirflowApiRef,\n      deps: { configApi: configApiRef, discoveryApi: discoveryApiRef },\n      factory: ({ configApi, discoveryApi }) =>\n        new ApacheAirflowClient({\n          discoveryApi,\n          baseUrl: configApi.getString('apacheAirflow.baseUrl'),\n        }),\n    }),\n  ],\n});\n\nexport const ApacheAirflowPage = apacheAirflowPlugin.provide(\n  createRoutableExtension({\n    name: 'ApacheAirflowPage',\n    component: () => import('./components/HomePage').then(m => m.HomePage),\n    mountPoint: rootRouteRef,\n  }),\n);\n"],"names":[],"mappings":"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"}