{"version":3,"file":"index-49c85f51.esm.js","sources":["../../src/components/EntityAdrContent/EntityAdrContent.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport {\n  Content,\n  ContentHeader,\n  MissingAnnotationEmptyState,\n  Progress,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport {\n  AdrFilePathFilterFn,\n  ANNOTATION_ADR_LOCATION,\n  getAdrLocationUrl,\n  isAdrAvailable,\n  madrFilePathFilter,\n} from '@backstage/plugin-adr-common';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\n\nimport { useOctokitRequest } from '../../hooks';\nimport { rootRouteRef } from '../../routes';\nimport { AdrContentDecorator, AdrReader } from '../AdrReader';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  adrMenu: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n/**\n * Component for browsing ADRs on an entity page.\n * @public\n */\nexport const EntityAdrContent = ({\n  contentDecorators,\n  filePathFilterFn,\n}: {\n  contentDecorators?: AdrContentDecorator[];\n  filePathFilterFn?: AdrFilePathFilterFn;\n}) => {\n  const classes = useStyles();\n  const { entity } = useEntity();\n  const rootLink = useRouteRef(rootRouteRef);\n  const [adrList, setAdrList] = useState<string[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const scmIntegrations = useApi(scmIntegrationsApiRef);\n  const entityHasAdrs = isAdrAvailable(entity);\n\n  const { value, loading, error } = useOctokitRequest(\n    getAdrLocationUrl(entity, scmIntegrations),\n  );\n\n  const selectedAdr =\n    adrList.find(adr => adr === searchParams.get('record')) ?? '';\n  useEffect(() => {\n    if (adrList.length && !selectedAdr) {\n      searchParams.set('record', adrList[0]);\n      setSearchParams(searchParams, { replace: true });\n    }\n  });\n\n  useEffect(() => {\n    if (!value?.data) {\n      return;\n    }\n\n    const adrs = value.data\n      .filter(\n        (item: { type: string; name: string }) =>\n          item.type === 'file' &&\n          (filePathFilterFn\n            ? filePathFilterFn(item.name)\n            : madrFilePathFilter(item.name)),\n      )\n      .map(({ name }: { name: string }) => name);\n\n    setAdrList(adrs);\n  }, [filePathFilterFn, value]);\n\n  return (\n    <Content>\n      <ContentHeader title=\"Architecture Decision Records\">\n        <SupportButton />\n      </ContentHeader>\n\n      {!entityHasAdrs && (\n        <MissingAnnotationEmptyState annotation={ANNOTATION_ADR_LOCATION} />\n      )}\n\n      {loading && <Progress />}\n\n      {entityHasAdrs && !loading && error && (\n        <WarningPanel title=\"Failed to fetch ADRs\" message={error?.message} />\n      )}\n\n      {entityHasAdrs &&\n        !loading &&\n        !error &&\n        (adrList.length ? (\n          <Grid container direction=\"row\">\n            <Grid item xs={3}>\n              <List className={classes.adrMenu} dense>\n                {adrList.map((adr, idx) => (\n                  <ListItem\n                    key={idx}\n                    button\n                    component={Link}\n                    to={`${rootLink()}?record=${adr}`}\n                    selected={selectedAdr === adr}\n                  >\n                    <ListItemText\n                      secondaryTypographyProps={{ noWrap: true }}\n                      secondary={adr.replace(/\\.md$/, '')}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Grid>\n            <Grid item xs={9}>\n              <AdrReader adr={selectedAdr} decorators={contentDecorators} />\n            </Grid>\n          </Grid>\n        ) : (\n          <Typography>No ADRs found</Typography>\n        ))}\n    </Content>\n  );\n};\n"],"names":[],"mappings":"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"}