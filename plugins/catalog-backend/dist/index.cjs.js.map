{"version":3,"file":"index.cjs.js","sources":["../src/api/processingResult.ts","../src/modules/codeowners/lib/resolve.ts","../src/modules/codeowners/lib/scm.ts","../src/modules/codeowners/lib/read.ts","../src/modules/codeowners/CodeOwnersProcessor.ts","../src/modules/core/AnnotateLocationEntityProcessor.ts","../src/modules/core/AnnotateScmSlugEntityProcessor.ts","../src/modules/core/BuiltinKindsEntityProcessor.ts","../src/modules/core/FileReaderProcessor.ts","../src/modules/core/LocationEntityProcessor.ts","../src/modules/core/PlaceholderProcessor.ts","../src/modules/core/UrlReaderProcessor.ts","../src/modules/util/parse.ts","../src/permissions/rules/util.ts","../src/permissions/rules/hasAnnotation.ts","../src/permissions/rules/isEntityKind.ts","../src/permissions/rules/isEntityOwner.ts","../src/permissions/rules/hasLabel.ts","../src/permissions/rules/createPropertyRule.ts","../src/permissions/rules/hasMetadata.ts","../src/permissions/rules/hasSpec.ts","../src/permissions/rules/index.ts","../src/permissions/conditionExports.ts","../src/processing/refresh.ts","../src/search/util.ts","../src/search/DefaultCatalogCollatorFactory.ts","../src/search/DefaultCatalogCollator.ts","../src/processing/util.ts","../src/util/conversion.ts","../src/modules/core/ConfigLocationEntityProvider.ts","../src/modules/core/DefaultLocationStore.ts","../src/ingestion/LocationAnalyzer.ts","../src/database/conversion.ts","../src/util/metrics.ts","../src/database/metrics.ts","../src/database/util.ts","../src/database/DefaultProcessingDatabase.ts","../src/database/migrations.ts","../src/processing/TaskPipeline.ts","../src/processing/DefaultCatalogProcessingEngine.ts","../src/service/DefaultLocationService.ts","../src/service/DefaultEntitiesCatalog.ts","../src/processing/ProcessorOutputCollector.ts","../src/processing/ProcessorCacheManager.ts","../src/processing/DefaultCatalogProcessingOrchestrator.ts","../src/stitching/buildEntitySearch.ts","../src/stitching/util.ts","../src/stitching/Stitcher.ts","../src/service/request/basicEntityFilter.ts","../src/service/request/common.ts","../src/service/request/parseEntityFilterParams.ts","../src/service/request/parseEntityPaginationParams.ts","../src/service/request/parseEntityTransformParams.ts","../src/service/util.ts","../src/service/request/parseEntityFacetParams.ts","../src/service/createRouter.ts","../src/service/DefaultRefreshService.ts","../src/service/AuthorizedRefreshService.ts","../src/ingestion/CatalogRules.ts","../src/processing/connectEntityProviders.ts","../src/service/AuthorizedEntitiesCatalog.ts","../src/service/AuthorizedLocationService.ts","../src/service/CatalogBuilder.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { Entity } from '@backstage/catalog-model';\nimport { CatalogProcessorResult } from './processor';\nimport { EntityRelationSpec, LocationSpec } from './common';\n\n/**\n * Factory functions for the standard processing result types.\n *\n * @public\n */\nexport const processingResult = Object.freeze({\n  notFoundError(\n    atLocation: LocationSpec,\n    message: string,\n  ): CatalogProcessorResult {\n    return {\n      type: 'error',\n      location: atLocation,\n      error: new NotFoundError(message),\n    };\n  },\n\n  inputError(\n    atLocation: LocationSpec,\n    message: string,\n  ): CatalogProcessorResult {\n    return {\n      type: 'error',\n      location: atLocation,\n      error: new InputError(message),\n    };\n  },\n\n  generalError(\n    atLocation: LocationSpec,\n    message: string,\n  ): CatalogProcessorResult {\n    return { type: 'error', location: atLocation, error: new Error(message) };\n  },\n\n  location(newLocation: LocationSpec): CatalogProcessorResult {\n    return { type: 'location', location: newLocation };\n  },\n\n  entity(atLocation: LocationSpec, newEntity: Entity): CatalogProcessorResult {\n    return { type: 'entity', location: atLocation, entity: newEntity };\n  },\n\n  relation(spec: EntityRelationSpec): CatalogProcessorResult {\n    return { type: 'relation', relation: spec };\n  },\n} as const);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as codeowners from 'codeowners-utils';\nimport { CodeOwnersEntry } from 'codeowners-utils';\nimport { filter, get, head, pipe, reverse } from 'lodash/fp';\n\nconst USER_PATTERN = /^@.*/;\nconst GROUP_PATTERN = /^@.*\\/.*/;\nconst EMAIL_PATTERN = /^.*@.*\\..*$/;\n\nexport function resolveCodeOwner(\n  contents: string,\n  pattern = '*',\n): string | undefined {\n  const owners = codeowners.parse(contents);\n\n  return pipe(\n    filter((e: CodeOwnersEntry) => e.pattern === pattern),\n    reverse,\n    head,\n    get('owners'),\n    head,\n    normalizeCodeOwner,\n  )(owners);\n}\n\nexport function normalizeCodeOwner(owner: string) {\n  if (owner.match(GROUP_PATTERN)) {\n    return owner.split('/')[1];\n  } else if (owner.match(USER_PATTERN)) {\n    return `User:${owner.substring(1)}`;\n  } else if (owner.match(EMAIL_PATTERN)) {\n    return owner.split('@')[0];\n  }\n\n  return owner;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CODEOWNERS = 'CODEOWNERS';\n\nexport const scmCodeOwnersPaths: Record<string, string[]> = {\n  // https://mibexsoftware.atlassian.net/wiki/spaces/CODEOWNERS/pages/222822413/Usage\n  bitbucket: [CODEOWNERS, `.bitbucket/${CODEOWNERS}`],\n\n  // https://docs.gitlab.com/ee/user/project/code_owners.html#how-to-set-up-code-owners\n  gitlab: [CODEOWNERS, `.gitlab/${CODEOWNERS}`, `docs/${CODEOWNERS}`],\n\n  // https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners#codeowners-file-location\n  github: [CODEOWNERS, `.github/${CODEOWNERS}`, `docs/${CODEOWNERS}`],\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { NotFoundError } from '@backstage/errors';\nimport { ScmIntegration } from '@backstage/integration';\nimport 'core-js/features/promise'; // NOTE: This can be removed when ES2021 is implemented\nimport { resolveCodeOwner } from './resolve';\nimport { scmCodeOwnersPaths } from './scm';\n\nexport async function readCodeOwners(\n  reader: UrlReader,\n  sourceUrl: string,\n  codeownersPaths: string[],\n): Promise<string | undefined> {\n  const readOwnerLocation = async (path: string): Promise<string> => {\n    const url = `${sourceUrl}${path}`;\n\n    if (reader.readUrl) {\n      const data = await reader.readUrl(url);\n      const buffer = await data.buffer();\n      return buffer.toString();\n    }\n    const data = await reader.read(url);\n    return data.toString();\n  };\n\n  const candidates = codeownersPaths.map(readOwnerLocation);\n\n  return Promise.any(candidates).catch((aggregateError: AggregateError) => {\n    const hardError = aggregateError.errors.find(\n      error => !(error instanceof NotFoundError),\n    );\n\n    if (hardError) {\n      throw hardError;\n    }\n\n    return undefined;\n  });\n}\n\nexport async function findCodeOwnerByTarget(\n  reader: UrlReader,\n  targetUrl: string,\n  scmIntegration: ScmIntegration,\n): Promise<string | undefined> {\n  const codeownersPaths = scmCodeOwnersPaths[scmIntegration?.type ?? ''];\n\n  const sourceUrl = scmIntegration?.resolveUrl({\n    url: '/',\n    base: targetUrl,\n  });\n\n  if (!sourceUrl || !codeownersPaths) {\n    return undefined;\n  }\n\n  const contents = await readCodeOwners(reader, sourceUrl, codeownersPaths);\n\n  if (!contents) {\n    return undefined;\n  }\n\n  const owner = resolveCodeOwner(contents);\n\n  return owner;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { Entity } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  ScmIntegrationRegistry,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport { Logger } from 'winston';\nimport { CatalogProcessor, LocationSpec } from '../../api';\nimport { findCodeOwnerByTarget } from './lib';\n\nconst ALLOWED_KINDS = ['API', 'Component', 'Domain', 'Resource', 'System'];\nconst ALLOWED_LOCATION_TYPES = ['url'];\n\n/** @public */\nexport class CodeOwnersProcessor implements CatalogProcessor {\n  private readonly integrations: ScmIntegrationRegistry;\n  private readonly logger: Logger;\n  private readonly reader: UrlReader;\n\n  static fromConfig(\n    config: Config,\n    options: { logger: Logger; reader: UrlReader },\n  ) {\n    const integrations = ScmIntegrations.fromConfig(config);\n\n    return new CodeOwnersProcessor({\n      ...options,\n      integrations,\n    });\n  }\n\n  constructor(options: {\n    integrations: ScmIntegrationRegistry;\n    logger: Logger;\n    reader: UrlReader;\n  }) {\n    this.integrations = options.integrations;\n    this.logger = options.logger;\n    this.reader = options.reader;\n  }\n\n  getProcessorName(): string {\n    return 'CodeOwnersProcessor';\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n  ): Promise<Entity> {\n    // Only continue if the owner is not set\n    if (\n      !entity ||\n      !ALLOWED_KINDS.includes(entity.kind) ||\n      !ALLOWED_LOCATION_TYPES.includes(location.type) ||\n      (entity.spec && entity.spec.owner)\n    ) {\n      return entity;\n    }\n\n    const scmIntegration = this.integrations.byUrl(location.target);\n    if (!scmIntegration) {\n      return entity;\n    }\n\n    const owner = await findCodeOwnerByTarget(\n      this.reader,\n      location.target,\n      scmIntegration,\n    );\n\n    if (!owner) {\n      this.logger.debug(\n        `CodeOwnerProcessor could not resolve owner for ${location.target}`,\n      );\n      return entity;\n    }\n\n    return {\n      ...entity,\n      spec: { ...entity.spec, owner },\n    };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  ANNOTATION_SOURCE_LOCATION,\n  ANNOTATION_VIEW_URL,\n  Entity,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport { identity, merge, pickBy } from 'lodash';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  LocationSpec,\n} from '../../api';\n\n/** @public */\nexport class AnnotateLocationEntityProcessor implements CatalogProcessor {\n  constructor(\n    private readonly options: {\n      integrations: ScmIntegrationRegistry;\n    },\n  ) {}\n\n  getProcessorName(): string {\n    return 'AnnotateLocationEntityProcessor';\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n    _: CatalogProcessorEmit,\n    originLocation: LocationSpec,\n  ): Promise<Entity> {\n    const { integrations } = this.options;\n    let viewUrl;\n    let editUrl;\n    let sourceLocation;\n\n    if (location.type === 'url') {\n      const scmIntegration = integrations.byUrl(location.target);\n\n      viewUrl = location.target;\n      editUrl = scmIntegration?.resolveEditUrl(location.target);\n\n      const sourceUrl = scmIntegration?.resolveUrl({\n        url: './',\n        base: location.target,\n      });\n\n      if (sourceUrl) {\n        sourceLocation = stringifyLocationRef({\n          type: 'url',\n          target: sourceUrl,\n        });\n      }\n    }\n\n    return merge(\n      {\n        metadata: {\n          annotations: pickBy(\n            {\n              [ANNOTATION_LOCATION]: stringifyLocationRef(location),\n              [ANNOTATION_ORIGIN_LOCATION]:\n                stringifyLocationRef(originLocation),\n              [ANNOTATION_VIEW_URL]: viewUrl,\n              [ANNOTATION_EDIT_URL]: editUrl,\n              [ANNOTATION_SOURCE_LOCATION]: sourceLocation,\n            },\n            identity,\n          ),\n        },\n      },\n      entity,\n    );\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  ScmIntegrationRegistry,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\nimport { identity, merge, pickBy } from 'lodash';\nimport { CatalogProcessor, LocationSpec } from '../../api';\n\nconst GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\nconst GITLAB_ACTIONS_ANNOTATION = 'gitlab.com/project-slug';\n\n/** @public */\nexport class AnnotateScmSlugEntityProcessor implements CatalogProcessor {\n  constructor(\n    private readonly opts: { scmIntegrationRegistry: ScmIntegrationRegistry },\n  ) {}\n\n  getProcessorName(): string {\n    return 'AnnotateScmSlugEntityProcessor';\n  }\n\n  static fromConfig(config: Config): AnnotateScmSlugEntityProcessor {\n    return new AnnotateScmSlugEntityProcessor({\n      scmIntegrationRegistry: ScmIntegrations.fromConfig(config),\n    });\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n  ): Promise<Entity> {\n    if (entity.kind !== 'Component' || location.type !== 'url') {\n      return entity;\n    }\n\n    const scmIntegration = this.opts.scmIntegrationRegistry.byUrl(\n      location.target,\n    );\n\n    if (!scmIntegration) {\n      return entity;\n    }\n\n    let annotation;\n    switch (scmIntegration.type) {\n      case 'github':\n        annotation = GITHUB_ACTIONS_ANNOTATION;\n        break;\n      case 'gitlab':\n        annotation = GITLAB_ACTIONS_ANNOTATION;\n        break;\n      default:\n        return entity;\n    }\n\n    let projectSlug = entity.metadata.annotations?.[annotation];\n    if (!projectSlug) {\n      const gitUrl = parseGitUrl(location.target);\n      projectSlug = `${gitUrl.owner}/${gitUrl.name}`;\n    }\n\n    return merge(\n      {\n        metadata: {\n          annotations: pickBy(\n            {\n              [annotation]: projectSlug,\n            },\n            identity,\n          ),\n        },\n      },\n      entity,\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiEntity,\n  apiEntityV1alpha1Validator,\n  ComponentEntity,\n  componentEntityV1alpha1Validator,\n  DomainEntity,\n  domainEntityV1alpha1Validator,\n  Entity,\n  getCompoundEntityRef,\n  GroupEntity,\n  groupEntityV1alpha1Validator,\n  locationEntityV1alpha1Validator,\n  parseEntityRef,\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CHILD_OF,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_MEMBER,\n  RELATION_HAS_PART,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n  RELATION_PARENT_OF,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n  ResourceEntity,\n  resourceEntityV1alpha1Validator,\n  SystemEntity,\n  systemEntityV1alpha1Validator,\n  UserEntity,\n  userEntityV1alpha1Validator,\n} from '@backstage/catalog-model';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  LocationSpec,\n  processingResult,\n} from '../../api';\n\n/** @public */\nexport class BuiltinKindsEntityProcessor implements CatalogProcessor {\n  private readonly validators = [\n    apiEntityV1alpha1Validator,\n    componentEntityV1alpha1Validator,\n    resourceEntityV1alpha1Validator,\n    groupEntityV1alpha1Validator,\n    locationEntityV1alpha1Validator,\n    userEntityV1alpha1Validator,\n    systemEntityV1alpha1Validator,\n    domainEntityV1alpha1Validator,\n  ];\n\n  getProcessorName(): string {\n    return 'BuiltinKindsEntityProcessor';\n  }\n\n  async validateEntityKind(entity: Entity): Promise<boolean> {\n    for (const validator of this.validators) {\n      const results = await validator.check(entity);\n      if (results) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async postProcessEntity(\n    entity: Entity,\n    _location: LocationSpec,\n    emit: CatalogProcessorEmit,\n  ): Promise<Entity> {\n    const selfRef = getCompoundEntityRef(entity);\n\n    /*\n     * Utilities\n     */\n\n    function doEmit(\n      targets: string | string[] | undefined,\n      context: { defaultKind?: string; defaultNamespace: string },\n      outgoingRelation: string,\n      incomingRelation: string,\n    ): void {\n      if (!targets) {\n        return;\n      }\n      for (const target of [targets].flat()) {\n        const targetRef = parseEntityRef(target, context);\n        emit(\n          processingResult.relation({\n            source: selfRef,\n            type: outgoingRelation,\n            target: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n          }),\n        );\n        emit(\n          processingResult.relation({\n            source: {\n              kind: targetRef.kind,\n              namespace: targetRef.namespace,\n              name: targetRef.name,\n            },\n            type: incomingRelation,\n            target: selfRef,\n          }),\n        );\n      }\n    }\n\n    /*\n     * Emit relations for the Component kind\n     */\n\n    if (entity.kind === 'Component') {\n      const component = entity as ComponentEntity;\n      doEmit(\n        component.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        component.spec.subcomponentOf,\n        { defaultKind: 'Component', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n      doEmit(\n        component.spec.providesApis,\n        { defaultKind: 'API', defaultNamespace: selfRef.namespace },\n        RELATION_PROVIDES_API,\n        RELATION_API_PROVIDED_BY,\n      );\n      doEmit(\n        component.spec.consumesApis,\n        { defaultKind: 'API', defaultNamespace: selfRef.namespace },\n        RELATION_CONSUMES_API,\n        RELATION_API_CONSUMED_BY,\n      );\n      doEmit(\n        component.spec.dependsOn,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDS_ON,\n        RELATION_DEPENDENCY_OF,\n      );\n      doEmit(\n        component.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the API kind\n     */\n\n    if (entity.kind === 'API') {\n      const api = entity as ApiEntity;\n      doEmit(\n        api.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        api.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the Resource kind\n     */\n\n    if (entity.kind === 'Resource') {\n      const resource = entity as ResourceEntity;\n      doEmit(\n        resource.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        resource.spec.dependsOn,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDS_ON,\n        RELATION_DEPENDENCY_OF,\n      );\n      doEmit(\n        resource.spec.dependencyOf,\n        { defaultNamespace: selfRef.namespace },\n        RELATION_DEPENDENCY_OF,\n        RELATION_DEPENDS_ON,\n      );\n      doEmit(\n        resource.spec.system,\n        { defaultKind: 'System', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the User kind\n     */\n\n    if (entity.kind === 'User') {\n      const user = entity as UserEntity;\n      doEmit(\n        user.spec.memberOf,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_MEMBER_OF,\n        RELATION_HAS_MEMBER,\n      );\n    }\n\n    /*\n     * Emit relations for the Group kind\n     */\n\n    if (entity.kind === 'Group') {\n      const group = entity as GroupEntity;\n      doEmit(\n        group.spec.parent,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_CHILD_OF,\n        RELATION_PARENT_OF,\n      );\n      doEmit(\n        group.spec.children,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_PARENT_OF,\n        RELATION_CHILD_OF,\n      );\n      doEmit(\n        group.spec.members,\n        { defaultKind: 'User', defaultNamespace: selfRef.namespace },\n        RELATION_HAS_MEMBER,\n        RELATION_MEMBER_OF,\n      );\n    }\n\n    /*\n     * Emit relations for the System kind\n     */\n\n    if (entity.kind === 'System') {\n      const system = entity as SystemEntity;\n      doEmit(\n        system.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n      doEmit(\n        system.spec.domain,\n        { defaultKind: 'Domain', defaultNamespace: selfRef.namespace },\n        RELATION_PART_OF,\n        RELATION_HAS_PART,\n      );\n    }\n\n    /*\n     * Emit relations for the Domain kind\n     */\n\n    if (entity.kind === 'Domain') {\n      const domain = entity as DomainEntity;\n      doEmit(\n        domain.spec.owner,\n        { defaultKind: 'Group', defaultNamespace: selfRef.namespace },\n        RELATION_OWNED_BY,\n        RELATION_OWNER_OF,\n      );\n    }\n\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport g from 'glob';\nimport path from 'path';\nimport { promisify } from 'util';\nimport {\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  CatalogProcessorParser,\n  LocationSpec,\n  processingResult,\n} from '../../api';\n\nconst glob = promisify(g);\n\n/** @public */\nexport class FileReaderProcessor implements CatalogProcessor {\n  getProcessorName(): string {\n    return 'FileReaderProcessor';\n  }\n\n  async readLocation(\n    location: LocationSpec,\n    optional: boolean,\n    emit: CatalogProcessorEmit,\n    parser: CatalogProcessorParser,\n  ): Promise<boolean> {\n    if (location.type !== 'file') {\n      return false;\n    }\n\n    try {\n      const fileMatches = await glob(location.target);\n\n      if (fileMatches.length > 0) {\n        for (const fileMatch of fileMatches) {\n          const data = await fs.readFile(fileMatch);\n\n          // The normalize converts to native slashes; the glob library returns\n          // forward slashes even on windows\n          for await (const parseResult of parser({\n            data: data,\n            location: {\n              type: 'file',\n              target: path.normalize(fileMatch),\n            },\n          })) {\n            emit(parseResult);\n          }\n        }\n      } else if (!optional) {\n        const message = `${location.type} ${location.target} does not exist`;\n        emit(processingResult.notFoundError(location, message));\n      }\n    } catch (e) {\n      const message = `${location.type} ${location.target} could not be read, ${e}`;\n      emit(processingResult.generalError(location, message));\n    }\n\n    return true;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, LocationEntity } from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport path from 'path';\nimport {\n  processingResult,\n  CatalogProcessor,\n  CatalogProcessorEmit,\n  LocationSpec,\n} from '../../api';\n\nexport function toAbsoluteUrl(\n  integrations: ScmIntegrationRegistry,\n  base: LocationSpec,\n  target: string,\n): string {\n  try {\n    if (base.type === 'file') {\n      if (target.startsWith('.')) {\n        return path.join(path.dirname(base.target), target);\n      }\n      return target;\n    }\n    return integrations.resolveUrl({ url: target, base: base.target });\n  } catch (e) {\n    return target;\n  }\n}\n\n/** @public */\nexport type LocationEntityProcessorOptions = {\n  integrations: ScmIntegrationRegistry;\n};\n\n/** @public */\nexport class LocationEntityProcessor implements CatalogProcessor {\n  constructor(private readonly options: LocationEntityProcessorOptions) {}\n\n  getProcessorName(): string {\n    return 'LocationEntityProcessor';\n  }\n\n  async postProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n    emit: CatalogProcessorEmit,\n  ): Promise<Entity> {\n    if (entity.kind === 'Location') {\n      const locationEntity = entity as LocationEntity;\n\n      const type = locationEntity.spec.type || location.type;\n      if (type === 'file' && location.target.endsWith(path.sep)) {\n        emit(\n          processingResult.inputError(\n            location,\n            `LocationEntityProcessor cannot handle ${type} type location with target ${location.target} that ends with a path separator`,\n          ),\n        );\n      }\n\n      const targets = new Array<string>();\n      if (locationEntity.spec.target) {\n        targets.push(locationEntity.spec.target);\n      }\n      if (locationEntity.spec.targets) {\n        targets.push(...locationEntity.spec.targets);\n      }\n\n      for (const maybeRelativeTarget of targets) {\n        const target = toAbsoluteUrl(\n          this.options.integrations,\n          location,\n          maybeRelativeTarget,\n        );\n        emit(processingResult.location({ type, target }));\n      }\n    }\n\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { Entity } from '@backstage/catalog-model';\nimport { JsonValue } from '@backstage/types';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport yaml from 'yaml';\nimport { CatalogProcessor, LocationSpec } from '../../api';\n\n/** @public */\nexport type PlaceholderResolverRead = (url: string) => Promise<Buffer>;\n\n/** @public */\nexport type PlaceholderResolverResolveUrl = (\n  url: string,\n  base: string,\n) => string;\n\n/** @public */\nexport type PlaceholderResolverParams = {\n  key: string;\n  value: JsonValue;\n  baseUrl: string;\n  read: PlaceholderResolverRead;\n  resolveUrl: PlaceholderResolverResolveUrl;\n};\n\n/** @public */\nexport type PlaceholderResolver = (\n  params: PlaceholderResolverParams,\n) => Promise<JsonValue>;\n\n/** @public */\nexport type PlaceholderProcessorOptions = {\n  resolvers: Record<string, PlaceholderResolver>;\n  reader: UrlReader;\n  integrations: ScmIntegrationRegistry;\n};\n\n/**\n * Traverses raw entity JSON looking for occurrences of $-prefixed placeholders\n * that it then fills in with actual data.\n * @public\n */\nexport class PlaceholderProcessor implements CatalogProcessor {\n  constructor(private readonly options: PlaceholderProcessorOptions) {}\n\n  getProcessorName(): string {\n    return 'PlaceholderProcessor';\n  }\n\n  async preProcessEntity(\n    entity: Entity,\n    location: LocationSpec,\n  ): Promise<Entity> {\n    const process = async (data: any): Promise<[any, boolean]> => {\n      if (!data || !(data instanceof Object)) {\n        // Scalars can't have placeholders\n        return [data, false];\n      }\n\n      if (Array.isArray(data)) {\n        // We're an array - process all entries recursively\n        const items = await Promise.all(data.map(item => process(item)));\n        return items.every(([, changed]) => !changed)\n          ? [data, false]\n          : [items.map(([item]) => item), true];\n      }\n\n      const keys = Object.keys(data);\n      if (!keys.some(k => k.startsWith('$'))) {\n        // We're an object but no placeholders at this level - process all\n        // entries recursively\n        const entries = await Promise.all(\n          Object.entries(data).map(([k, v]) =>\n            process(v).then(vp => [k, vp] as const),\n          ),\n        );\n        return entries.every(([, [, changed]]) => !changed)\n          ? [data, false]\n          : [Object.fromEntries(entries.map(([k, [v]]) => [k, v])), true];\n      } else if (keys.length !== 1) {\n        // This was an object that had more than one key, some of which were\n        // dollar prefixed. We only handle the case where there is exactly one\n        // such key; anything else is left alone.\n        return [data, false];\n      }\n\n      const resolverKey = keys[0].substr(1);\n      const resolverValue = data[keys[0]];\n      const resolver = this.options.resolvers[resolverKey];\n      if (!resolver || typeof resolverValue !== 'string') {\n        // If there was no such placeholder resolver or if the value was not a\n        // string, we err on the side of safety and assume that this is\n        // something that's best left alone. For example, if the input contains\n        // JSONSchema, there may be \"$ref\": \"#/definitions/node\" nodes in the\n        // document.\n        return [data, false];\n      }\n\n      const read = async (url: string): Promise<Buffer> => {\n        if (this.options.reader.readUrl) {\n          const response = await this.options.reader.readUrl(url);\n          const buffer = await response.buffer();\n          return buffer;\n        }\n        return this.options.reader.read(url);\n      };\n\n      const resolveUrl = (url: string, base: string): string =>\n        this.options.integrations.resolveUrl({\n          url,\n          base,\n        });\n\n      return [\n        await resolver({\n          key: resolverKey,\n          value: resolverValue,\n          baseUrl: location.target,\n          read,\n          resolveUrl,\n        }),\n        true,\n      ];\n    };\n\n    const [result] = await process(entity);\n    return result;\n  }\n}\n\n/*\n * Resolvers\n */\n\nexport async function yamlPlaceholderResolver(\n  params: PlaceholderResolverParams,\n): Promise<JsonValue> {\n  const text = await readTextLocation(params);\n\n  let documents: yaml.Document.Parsed[];\n  try {\n    documents = yaml.parseAllDocuments(text).filter(d => d);\n  } catch (e) {\n    throw new Error(\n      `Placeholder \\$${params.key} failed to parse YAML data at ${params.value}, ${e}`,\n    );\n  }\n\n  if (documents.length !== 1) {\n    throw new Error(\n      `Placeholder \\$${params.key} expected to find exactly one document of data at ${params.value}, found ${documents.length}`,\n    );\n  }\n\n  const document = documents[0];\n\n  if (document.errors?.length) {\n    throw new Error(\n      `Placeholder \\$${params.key} found an error in the data at ${params.value}, ${document.errors[0]}`,\n    );\n  }\n\n  return document.toJSON();\n}\n\nexport async function jsonPlaceholderResolver(\n  params: PlaceholderResolverParams,\n): Promise<JsonValue> {\n  const text = await readTextLocation(params);\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    throw new Error(\n      `Placeholder \\$${params.key} failed to parse JSON data at ${params.value}, ${e}`,\n    );\n  }\n}\n\nexport async function textPlaceholderResolver(\n  params: PlaceholderResolverParams,\n): Promise<JsonValue> {\n  return await readTextLocation(params);\n}\n\n/*\n * Helpers\n */\n\nasync function readTextLocation(\n  params: PlaceholderResolverParams,\n): Promise<string> {\n  const newUrl = relativeUrl(params);\n\n  try {\n    const data = await params.read(newUrl);\n    return data.toString('utf-8');\n  } catch (e) {\n    throw new Error(\n      `Placeholder \\$${params.key} could not read location ${params.value}, ${e}`,\n    );\n  }\n}\n\nfunction relativeUrl({\n  key,\n  value,\n  baseUrl,\n  resolveUrl,\n}: PlaceholderResolverParams): string {\n  if (typeof value !== 'string') {\n    throw new Error(\n      `Placeholder \\$${key} expected a string value parameter, in the form of an absolute URL or a relative path`,\n    );\n  }\n\n  try {\n    return resolveUrl(value, baseUrl);\n  } catch (e) {\n    // The only remaining case that isn't support is a relative file path that should be\n    // resolved using a relative file location. Accessing local file paths can lead to\n    // path traversal attacks and access to any file on the host system. Implementing this\n    // would require additional security measures.\n    throw new Error(\n      `Placeholder \\$${key} could not form a URL out of ${baseUrl} and ${value}, ${e}`,\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { Entity } from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\nimport parseGitUrl from 'git-url-parse';\nimport limiterFactory from 'p-limit';\nimport { Logger } from 'winston';\nimport {\n  CatalogProcessor,\n  CatalogProcessorCache,\n  CatalogProcessorEmit,\n  CatalogProcessorEntityResult,\n  CatalogProcessorParser,\n  CatalogProcessorResult,\n  LocationSpec,\n  processingResult,\n} from '../../api';\n\nconst CACHE_KEY = 'v1';\n\n// WARNING: If you change this type, you likely need to bump the CACHE_KEY as well\ntype CacheItem = {\n  etag: string;\n  value: {\n    type: 'entity';\n    entity: Entity;\n    location: LocationSpec;\n  }[];\n};\n\n/** @public */\nexport class UrlReaderProcessor implements CatalogProcessor {\n  constructor(\n    private readonly options: {\n      reader: UrlReader;\n      logger: Logger;\n    },\n  ) {}\n\n  getProcessorName() {\n    return 'url-reader';\n  }\n\n  async readLocation(\n    location: LocationSpec,\n    optional: boolean,\n    emit: CatalogProcessorEmit,\n    parser: CatalogProcessorParser,\n    cache: CatalogProcessorCache,\n  ): Promise<boolean> {\n    if (location.type !== 'url') {\n      return false;\n    }\n\n    const cacheItem = await cache.get<CacheItem>(CACHE_KEY);\n\n    try {\n      const { response, etag: newEtag } = await this.doRead(\n        location.target,\n        cacheItem?.etag,\n      );\n\n      const parseResults: CatalogProcessorResult[] = [];\n      for (const item of response) {\n        for await (const parseResult of parser({\n          data: item.data,\n          location: { type: location.type, target: item.url },\n        })) {\n          parseResults.push(parseResult);\n          emit(parseResult);\n        }\n      }\n\n      const isOnlyEntities = parseResults.every(r => r.type === 'entity');\n      if (newEtag && isOnlyEntities) {\n        await cache.set<CacheItem>(CACHE_KEY, {\n          etag: newEtag,\n          value: parseResults as CatalogProcessorEntityResult[],\n        });\n      }\n    } catch (error) {\n      assertError(error);\n      const message = `Unable to read ${location.type}, ${error}`;\n      if (error.name === 'NotModifiedError' && cacheItem) {\n        for (const parseResult of cacheItem.value) {\n          emit(parseResult);\n        }\n      } else if (error.name === 'NotFoundError') {\n        if (!optional) {\n          emit(processingResult.notFoundError(location, message));\n        }\n      } else {\n        emit(processingResult.generalError(location, message));\n      }\n    }\n\n    return true;\n  }\n\n  private async doRead(\n    location: string,\n    etag?: string,\n  ): Promise<{ response: { data: Buffer; url: string }[]; etag?: string }> {\n    // Does it contain globs? I.e. does it contain asterisks or question marks\n    // (no curly braces for now)\n    const { filepath } = parseGitUrl(location);\n    if (filepath?.match(/[*?]/)) {\n      const limiter = limiterFactory(5);\n      const response = await this.options.reader.search(location, { etag });\n      const output = response.files.map(async file => ({\n        url: file.url,\n        data: await limiter(file.content),\n      }));\n      return { response: await Promise.all(output), etag: response.etag };\n    }\n\n    // Otherwise do a plain read, prioritizing readUrl if available\n    if (this.options.reader.readUrl) {\n      const data = await this.options.reader.readUrl(location, { etag });\n      return {\n        response: [{ url: location, data: await data.buffer() }],\n        etag: data.etag,\n      };\n    }\n\n    const data = await this.options.reader.read(location);\n    return { response: [{ url: location, data }] };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, stringifyLocationRef } from '@backstage/catalog-model';\nimport lodash from 'lodash';\nimport yaml from 'yaml';\nimport {\n  CatalogProcessorParser,\n  CatalogProcessorResult,\n  LocationSpec,\n  processingResult,\n} from '../../api';\n\n/** @public */\nexport function* parseEntityYaml(\n  data: Buffer,\n  location: LocationSpec,\n): Iterable<CatalogProcessorResult> {\n  let documents: yaml.Document.Parsed[];\n  try {\n    documents = yaml.parseAllDocuments(data.toString('utf8')).filter(d => d);\n  } catch (e) {\n    const loc = stringifyLocationRef(location);\n    const message = `Failed to parse YAML at ${loc}, ${e}`;\n    yield processingResult.generalError(location, message);\n    return;\n  }\n\n  for (const document of documents) {\n    if (document.errors?.length) {\n      const loc = stringifyLocationRef(location);\n      const message = `YAML error at ${loc}, ${document.errors[0]}`;\n      yield processingResult.generalError(location, message);\n    } else {\n      const json = document.toJSON();\n      if (lodash.isPlainObject(json)) {\n        yield processingResult.entity(location, json as Entity);\n      } else if (json === null) {\n        // Ignore null values, these happen if there is an empty document in the\n        // YAML file, for example if --- is added to the end of the file.\n      } else {\n        const message = `Expected object at root, got ${typeof json}`;\n        yield processingResult.generalError(location, message);\n      }\n    }\n  }\n}\n\nexport const defaultEntityDataParser: CatalogProcessorParser =\n  async function* defaultEntityDataParser({ data, location }) {\n    for (const e of parseEntityYaml(data, location)) {\n      yield e;\n    }\n  };\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport {\n  makeCreatePermissionRule,\n  PermissionRule,\n} from '@backstage/plugin-permission-node';\nimport { EntitiesSearchFilter } from '../../catalog/types';\n\n/**\n * Convenience type for {@link @backstage/plugin-permission-node#PermissionRule}\n * instances with the correct resource type, resource, and filter to work with\n * the catalog.\n *\n * @alpha\n */\nexport type CatalogPermissionRule<TParams extends unknown[] = unknown[]> =\n  PermissionRule<Entity, EntitiesSearchFilter, 'catalog-entity', TParams>;\n\n/**\n * Helper function for creating correctly-typed\n * {@link @backstage/plugin-permission-node#PermissionRule}s for the\n * catalog-backend.\n *\n * @alpha\n */\nexport const createCatalogPermissionRule = makeCreatePermissionRule<\n  Entity,\n  EntitiesSearchFilter,\n  typeof RESOURCE_TYPE_CATALOG_ENTITY\n>();\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { createCatalogPermissionRule } from './util';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for the presence of an annotation on a given entity.\n *\n * @alpha\n */\nexport const hasAnnotation = createCatalogPermissionRule({\n  name: 'HAS_ANNOTATION',\n  description:\n    'Allow entities which are annotated with the specified annotation',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  apply: (resource: Entity, annotation: string) =>\n    !!resource.metadata.annotations?.hasOwnProperty(annotation),\n  toQuery: (annotation: string) => ({\n    key: `metadata.annotations.${annotation}`,\n  }),\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { EntitiesSearchFilter } from '../../catalog/types';\nimport { createCatalogPermissionRule } from './util';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for entities with a specified kind.\n * @alpha\n */\nexport const isEntityKind = createCatalogPermissionRule({\n  name: 'IS_ENTITY_KIND',\n  description: 'Allow entities with the specified kind',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  apply(resource: Entity, kinds: string[]) {\n    const resourceKind = resource.kind.toLocaleLowerCase('en-US');\n    return kinds.some(kind => kind.toLocaleLowerCase('en-US') === resourceKind);\n  },\n  toQuery(kinds: string[]): EntitiesSearchFilter {\n    return {\n      key: 'kind',\n      values: kinds.map(kind => kind.toLocaleLowerCase('en-US')),\n    };\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { createCatalogPermissionRule } from './util';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for entities with a specified owner.\n *\n * @alpha\n */\nexport const isEntityOwner = createCatalogPermissionRule({\n  name: 'IS_ENTITY_OWNER',\n  description: 'Allow entities owned by the current user',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  apply: (resource: Entity, claims: string[]) => {\n    if (!resource.relations) {\n      return false;\n    }\n\n    return resource.relations\n      .filter(relation => relation.type === RELATION_OWNED_BY)\n      .some(relation => claims.includes(relation.targetRef));\n  },\n  toQuery: (claims: string[]) => ({\n    key: 'relations.ownedBy',\n    values: claims,\n  }),\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { createCatalogPermissionRule } from './util';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for entities with a specified label in its metadata.\n * @alpha\n */\nexport const hasLabel = createCatalogPermissionRule({\n  name: 'HAS_LABEL',\n  description: 'Allow entities which have the specified label metadata.',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  apply: (resource: Entity, label: string) =>\n    !!resource.metadata.labels?.hasOwnProperty(label),\n  toQuery: (label: string) => ({\n    key: `metadata.labels.${label}`,\n  }),\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { get } from 'lodash';\nimport { Entity } from '@backstage/catalog-model';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { createCatalogPermissionRule } from './util';\n\nexport const createPropertyRule = (propertyType: 'metadata' | 'spec') =>\n  createCatalogPermissionRule({\n    name: `HAS_${propertyType.toUpperCase()}`,\n    description: `Allow entities which have the specified ${propertyType} subfield.`,\n    resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n    apply: (resource: Entity, key: string, value?: string) => {\n      const foundValue = get(resource[propertyType], key);\n      if (value !== undefined) {\n        return value === foundValue;\n      }\n      return !!foundValue;\n    },\n    toQuery: (key: string, value?: string) => ({\n      key: `${propertyType}.${key}`,\n      ...(value !== undefined && { values: [value] }),\n    }),\n  });\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPropertyRule } from './createPropertyRule';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for entities with the specified metadata subfield. Also matches on\n * values if value is provided.\n *\n * The key argument to the `apply` and `toQuery` methods can be nested, such as\n * 'field.nestedfield'.\n * @alpha\n */\nexport const hasMetadata = createPropertyRule('metadata');\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPropertyRule } from './createPropertyRule';\n\n/**\n * A catalog {@link @backstage/plugin-permission-node#PermissionRule} which\n * filters for entities with the specified spec subfield. Also matches on values\n * if value is provided.\n *\n * The key argument to the `apply` and `toQuery` methods can be nested, such as\n * 'field.nestedfield'.\n * @alpha\n */\nexport const hasSpec = createPropertyRule('spec');\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hasAnnotation } from './hasAnnotation';\nimport { isEntityKind } from './isEntityKind';\nimport { isEntityOwner } from './isEntityOwner';\nimport { hasLabel } from './hasLabel';\nimport { hasMetadata } from './hasMetadata';\nimport { hasSpec } from './hasSpec';\n\n/**\n * These permission rules can be used to conditionally filter catalog entities\n * or describe a user's access to the entities.\n *\n * @alpha\n */\nexport const permissionRules = {\n  hasAnnotation,\n  hasLabel,\n  hasMetadata,\n  hasSpec,\n  isEntityKind,\n  isEntityOwner,\n};\n\nexport type { CatalogPermissionRule } from './util';\nexport { createCatalogPermissionRule } from './util';\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { createConditionExports } from '@backstage/plugin-permission-node';\nimport { permissionRules } from './rules';\n\nconst { conditions, createConditionalDecision } = createConditionExports({\n  pluginId: 'catalog',\n  resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n  rules: permissionRules,\n});\n\n/**\n * These conditions are used when creating conditional decisions for catalog\n * entities that are returned by authorization policies.\n *\n * @alpha\n */\nexport const catalogConditions = conditions;\n\n/**\n * `createCatalogConditionalDecision` can be used when authoring policies to\n * create conditional decisions. It requires a permission of type\n * `ResourcePermission<'catalog-entity'>` to be passed as the first parameter.\n * It's recommended that you use the provided `isResourcePermission` and\n * `isPermission` helper methods to narrow the type of the permission passed to\n * the handle method as shown below.\n *\n * ```\n * // MyAuthorizationPolicy.ts\n * ...\n * import { createCatalogPolicyDecision } from '@backstage/plugin-catalog-backend';\n * import { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\n *\n * class MyAuthorizationPolicy implements PermissionPolicy {\n *   async handle(request, user) {\n *     ...\n *\n *     if (isResourcePermission(request.permission, RESOURCE_TYPE_CATALOG_ENTITY)) {\n *       return createCatalogConditionalDecision(\n *         request.permission,\n *         { anyOf: [...insert conditions here...] }\n *       );\n *     }\n *\n *     ...\n * }\n * ```\n *\n * @alpha\n */\nexport const createCatalogConditionalDecision = createConditionalDecision;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Function that returns the catalog processing interval in seconds.\n * @public\n */\nexport type ProcessingIntervalFunction = () => number;\n\n/**\n * Creates a function that returns a random processing interval between minSeconds and maxSeconds.\n * @returns A {@link ProcessingIntervalFunction} that provides the next processing interval\n * @public\n */\nexport function createRandomProcessingInterval(options: {\n  minSeconds: number;\n  maxSeconds: number;\n}): ProcessingIntervalFunction {\n  const { minSeconds, maxSeconds } = options;\n  return () => {\n    return Math.random() * (maxSeconds - minSeconds) + minSeconds;\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, UserEntity, GroupEntity } from '@backstage/catalog-model';\n\nfunction isUserEntity(entity: Entity): entity is UserEntity {\n  return entity.kind.toLocaleUpperCase('en-US') === 'USER';\n}\n\nfunction isGroupEntity(entity: Entity): entity is GroupEntity {\n  return entity.kind.toLocaleUpperCase('en-US') === 'GROUP';\n}\n\nexport function getDocumentText(entity: Entity): string {\n  const documentTexts: string[] = [];\n  documentTexts.push(entity.metadata.description || '');\n\n  if (isUserEntity(entity) || isGroupEntity(entity)) {\n    if (entity.spec?.profile?.displayName) {\n      documentTexts.push(entity.spec.profile.displayName);\n    }\n  }\n  return documentTexts.join(' : ');\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PluginEndpointDiscovery,\n  TokenManager,\n} from '@backstage/backend-common';\nimport {\n  CatalogApi,\n  CatalogClient,\n  GetEntitiesRequest,\n} from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport {\n  catalogEntityReadPermission,\n  CatalogEntityDocument,\n} from '@backstage/plugin-catalog-common';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport { Readable } from 'stream';\nimport { getDocumentText } from './util';\n\n/** @public */\nexport type DefaultCatalogCollatorFactoryOptions = {\n  discovery: PluginEndpointDiscovery;\n  tokenManager: TokenManager;\n  locationTemplate?: string;\n  filter?: GetEntitiesRequest['filter'];\n  batchSize?: number;\n  catalogClient?: CatalogApi;\n};\n\n/** @public */\nexport class DefaultCatalogCollatorFactory implements DocumentCollatorFactory {\n  public readonly type: string = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private locationTemplate: string;\n  private filter?: GetEntitiesRequest['filter'];\n  private batchSize: number;\n  private readonly catalogClient: CatalogApi;\n  private tokenManager: TokenManager;\n\n  static fromConfig(\n    _config: Config,\n    options: DefaultCatalogCollatorFactoryOptions,\n  ) {\n    return new DefaultCatalogCollatorFactory(options);\n  }\n\n  private constructor(options: DefaultCatalogCollatorFactoryOptions) {\n    const {\n      batchSize,\n      discovery,\n      locationTemplate,\n      filter,\n      catalogClient,\n      tokenManager,\n    } = options;\n\n    this.locationTemplate =\n      locationTemplate || '/catalog/:namespace/:kind/:name';\n    this.filter = filter;\n    this.batchSize = batchSize || 500;\n    this.catalogClient =\n      catalogClient || new CatalogClient({ discoveryApi: discovery });\n    this.tokenManager = tokenManager;\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n    return formatted.toLowerCase();\n  }\n\n  private async *execute(): AsyncGenerator<CatalogEntityDocument> {\n    const { token } = await this.tokenManager.getToken();\n    let entitiesRetrieved = 0;\n    let moreEntitiesToGet = true;\n\n    // Offset/limit pagination is used on the Catalog Client in order to\n    // limit (and allow some control over) memory used by the search backend\n    // at index-time.\n    while (moreEntitiesToGet) {\n      const entities = (\n        await this.catalogClient.getEntities(\n          {\n            filter: this.filter,\n            limit: this.batchSize,\n            offset: entitiesRetrieved,\n          },\n          { token },\n        )\n      ).items;\n\n      // Control looping through entity batches.\n      moreEntitiesToGet = entities.length === this.batchSize;\n      entitiesRetrieved += entities.length;\n\n      for (const entity of entities) {\n        yield {\n          title: entity.metadata.title ?? entity.metadata.name,\n          location: this.applyArgsToFormat(this.locationTemplate, {\n            namespace: entity.metadata.namespace || 'default',\n            kind: entity.kind,\n            name: entity.metadata.name,\n          }),\n          text: getDocumentText(entity),\n          componentType: entity.spec?.type?.toString() || 'other',\n          type: entity.spec?.type?.toString() || 'other',\n          namespace: entity.metadata.namespace || 'default',\n          kind: entity.kind,\n          lifecycle: (entity.spec?.lifecycle as string) || '',\n          owner: (entity.spec?.owner as string) || '',\n          authorization: {\n            resourceRef: stringifyEntityRef(entity),\n          },\n        };\n      }\n    }\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PluginEndpointDiscovery,\n  TokenManager,\n} from '@backstage/backend-common';\nimport {\n  Entity,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport {\n  CatalogApi,\n  CatalogClient,\n  GetEntitiesRequest,\n} from '@backstage/catalog-client';\nimport {\n  catalogEntityReadPermission,\n  CatalogEntityDocument,\n} from '@backstage/plugin-catalog-common';\nimport { Permission } from '@backstage/plugin-permission-common';\n\n/**\n * @public\n * @deprecated Upgrade to a more recent `@backstage/plugin-search-backend-node` and\n * use `DefaultCatalogCollatorFactory` instead.\n */\nexport class DefaultCatalogCollator {\n  protected discovery: PluginEndpointDiscovery;\n  protected locationTemplate: string;\n  protected filter?: GetEntitiesRequest['filter'];\n  protected readonly catalogClient: CatalogApi;\n  public readonly type: string = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n  protected tokenManager: TokenManager;\n\n  static fromConfig(\n    _config: Config,\n    options: {\n      discovery: PluginEndpointDiscovery;\n      tokenManager: TokenManager;\n      filter?: GetEntitiesRequest['filter'];\n    },\n  ) {\n    return new DefaultCatalogCollator({\n      ...options,\n    });\n  }\n\n  constructor(options: {\n    discovery: PluginEndpointDiscovery;\n    tokenManager: TokenManager;\n    locationTemplate?: string;\n    filter?: GetEntitiesRequest['filter'];\n    catalogClient?: CatalogApi;\n  }) {\n    const { discovery, locationTemplate, filter, catalogClient, tokenManager } =\n      options;\n\n    this.discovery = discovery;\n    this.locationTemplate =\n      locationTemplate || '/catalog/:namespace/:kind/:name';\n    this.filter = filter;\n    this.catalogClient =\n      catalogClient || new CatalogClient({ discoveryApi: discovery });\n    this.tokenManager = tokenManager;\n  }\n\n  protected applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n    return formatted.toLowerCase();\n  }\n\n  private isUserEntity(entity: Entity): entity is UserEntity {\n    return entity.kind.toLocaleUpperCase('en-US') === 'USER';\n  }\n\n  private getDocumentText(entity: Entity): string {\n    let documentText = entity.metadata.description || '';\n    if (this.isUserEntity(entity)) {\n      if (entity.spec?.profile?.displayName && documentText) {\n        // combine displayName and description\n        const displayName = entity.spec?.profile?.displayName;\n        documentText = displayName.concat(' : ', documentText);\n      } else {\n        documentText = entity.spec?.profile?.displayName || documentText;\n      }\n    }\n    return documentText;\n  }\n\n  async execute() {\n    const { token } = await this.tokenManager.getToken();\n    const response = await this.catalogClient.getEntities(\n      {\n        filter: this.filter,\n      },\n      { token },\n    );\n    return response.items.map((entity: Entity): CatalogEntityDocument => {\n      return {\n        title: entity.metadata.title ?? entity.metadata.name,\n        location: this.applyArgsToFormat(this.locationTemplate, {\n          namespace: entity.metadata.namespace || 'default',\n          kind: entity.kind,\n          name: entity.metadata.name,\n        }),\n        text: this.getDocumentText(entity),\n        componentType: entity.spec?.type?.toString() || 'other',\n        type: entity.spec?.type?.toString() || 'other',\n        namespace: entity.metadata.namespace || 'default',\n        kind: entity.kind,\n        lifecycle: (entity.spec?.lifecycle as string) || '',\n        owner: (entity.spec?.owner as string) || '',\n        authorization: {\n          resourceRef: stringifyEntityRef(entity),\n        },\n      };\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  entityEnvelopeSchemaValidator,\n  entitySchemaValidator,\n  LocationEntity,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport path from 'path';\nimport { LocationSpec } from '../api';\n\nexport function isLocationEntity(entity: Entity): entity is LocationEntity {\n  return entity.kind === 'Location';\n}\n\nexport function getEntityLocationRef(entity: Entity): string {\n  const ref = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n  if (!ref) {\n    const entityRef = stringifyEntityRef(entity);\n    throw new InputError(\n      `Entity '${entityRef}' does not have the annotation ${ANNOTATION_LOCATION}`,\n    );\n  }\n  return ref;\n}\n\nexport function getEntityOriginLocationRef(entity: Entity): string {\n  const ref = entity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n  if (!ref) {\n    const entityRef = stringifyEntityRef(entity);\n    throw new InputError(\n      `Entity '${entityRef}' does not have the annotation ${ANNOTATION_ORIGIN_LOCATION}`,\n    );\n  }\n  return ref;\n}\n\nexport function toAbsoluteUrl(\n  integrations: ScmIntegrationRegistry,\n  base: LocationSpec,\n  type: string,\n  target: string,\n): string {\n  if (base.type !== type) {\n    return target;\n  }\n  try {\n    if (type === 'file') {\n      if (target.startsWith('.')) {\n        return path.join(path.dirname(base.target), target);\n      }\n      return target;\n    } else if (type === 'url') {\n      return integrations.resolveUrl({ url: target, base: base.target });\n    }\n    return target;\n  } catch (e) {\n    return target;\n  }\n}\n\nexport function isObject(value: JsonValue | undefined): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nexport const validateEntity = entitySchemaValidator();\n\nexport const validateEntityEnvelope = entityEnvelopeSchemaValidator();\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  LocationEntityV1alpha1,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyEntityRef,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport { createHash } from 'crypto';\nimport { LocationSpec } from '../api';\n\nexport function locationSpecToMetadataName(location: LocationSpec) {\n  const hash = createHash('sha1')\n    .update(`${location.type}:${location.target}`)\n    .digest('hex');\n  return `generated-${hash}`;\n}\n\n/** @public */\nexport function locationSpecToLocationEntity(opts: {\n  location: LocationSpec;\n  parentEntity?: Entity;\n}): LocationEntityV1alpha1 {\n  const location = opts.location;\n  const parentEntity = opts.parentEntity;\n\n  let ownLocation: string;\n  let originLocation: string;\n  if (parentEntity) {\n    const maybeOwnLocation =\n      parentEntity.metadata.annotations?.[ANNOTATION_LOCATION];\n    if (!maybeOwnLocation) {\n      throw new Error(\n        `Parent entity '${stringifyEntityRef(\n          parentEntity,\n        )}' of location '${stringifyLocationRef(\n          location,\n        )}' does not have a location annotation`,\n      );\n    }\n    ownLocation = maybeOwnLocation;\n    const maybeOriginLocation =\n      parentEntity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n    if (!maybeOriginLocation) {\n      throw new Error(\n        `Parent entity '${stringifyEntityRef(\n          parentEntity,\n        )}' of location '${stringifyLocationRef(\n          location,\n        )}' does not have an origin location annotation`,\n      );\n    }\n    originLocation = maybeOriginLocation;\n  } else {\n    ownLocation = stringifyLocationRef(location);\n    originLocation = ownLocation;\n  }\n\n  const result: LocationEntityV1alpha1 = {\n    apiVersion: 'backstage.io/v1alpha1',\n    kind: 'Location',\n    metadata: {\n      name: locationSpecToMetadataName(location),\n      annotations: {\n        [ANNOTATION_LOCATION]: ownLocation,\n        [ANNOTATION_ORIGIN_LOCATION]: originLocation,\n      },\n    },\n    spec: {\n      type: location.type,\n      target: location.target,\n      presence: location.presence,\n    },\n  };\n\n  return result;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport path from 'path';\nimport { getEntityLocationRef } from '../../processing/util';\nimport { EntityProvider, EntityProviderConnection } from '../../api';\nimport { locationSpecToLocationEntity } from '../../util/conversion';\n\nexport class ConfigLocationEntityProvider implements EntityProvider {\n  constructor(private readonly config: Config) {}\n\n  getProviderName(): string {\n    return 'ConfigLocationProvider';\n  }\n\n  async connect(connection: EntityProviderConnection): Promise<void> {\n    const entities = this.getEntitiesFromConfig();\n    await connection.applyMutation({\n      type: 'full',\n      entities,\n    });\n\n    if (this.config.subscribe) {\n      let currentKey = JSON.stringify(entities);\n\n      this.config.subscribe(() => {\n        const newEntities = this.getEntitiesFromConfig();\n        const newKey = JSON.stringify(newEntities);\n\n        if (currentKey !== newKey) {\n          currentKey = newKey;\n          connection.applyMutation({\n            type: 'full',\n            entities: newEntities,\n          });\n        }\n      });\n    }\n  }\n\n  private getEntitiesFromConfig() {\n    const locationConfigs =\n      this.config.getOptionalConfigArray('catalog.locations') ?? [];\n\n    return locationConfigs.map(location => {\n      const type = location.getString('type');\n      const target = location.getString('target');\n      const entity = locationSpecToLocationEntity({\n        location: {\n          type,\n          target: type === 'file' ? path.resolve(target) : target,\n        },\n      });\n      const locationKey = getEntityLocationRef(entity);\n      return { entity, locationKey };\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@backstage/catalog-client';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { v4 as uuid } from 'uuid';\nimport { DbLocationsRow } from '../../database/tables';\nimport { getEntityLocationRef } from '../../processing/util';\nimport { EntityProvider, EntityProviderConnection } from '../../api';\nimport { locationSpecToLocationEntity } from '../../util/conversion';\nimport { LocationInput, LocationStore } from '../../service/types';\n\nexport class DefaultLocationStore implements LocationStore, EntityProvider {\n  private _connection: EntityProviderConnection | undefined;\n\n  constructor(private readonly db: Knex) {}\n\n  getProviderName(): string {\n    return 'DefaultLocationStore';\n  }\n\n  async createLocation(input: LocationInput): Promise<Location> {\n    const location = await this.db.transaction(async tx => {\n      // Attempt to find a previous location matching the input\n      const previousLocations = await this.locations(tx);\n      // TODO: when location id's are a compilation of input target we can remove this full\n      // lookup of locations first and just grab the by that instead.\n      const previousLocation = previousLocations.some(\n        l => input.type === l.type && input.target === l.target,\n      );\n      if (previousLocation) {\n        throw new ConflictError(\n          `Location ${input.type}:${input.target} already exists`,\n        );\n      }\n\n      const inner: DbLocationsRow = {\n        id: uuid(),\n        type: input.type,\n        target: input.target,\n      };\n\n      await tx<DbLocationsRow>('locations').insert(inner);\n\n      return inner;\n    });\n    const entity = locationSpecToLocationEntity({ location });\n    await this.connection.applyMutation({\n      type: 'delta',\n      added: [{ entity, locationKey: getEntityLocationRef(entity) }],\n      removed: [],\n    });\n\n    return location;\n  }\n\n  async listLocations(): Promise<Location[]> {\n    return await this.locations();\n  }\n\n  async getLocation(id: string): Promise<Location> {\n    const items = await this.db<DbLocationsRow>('locations')\n      .where({ id })\n      .select();\n\n    if (!items.length) {\n      throw new NotFoundError(`Found no location with ID ${id}`);\n    }\n    return items[0];\n  }\n\n  async deleteLocation(id: string): Promise<void> {\n    if (!this.connection) {\n      throw new Error('location store is not initialized');\n    }\n\n    const deleted = await this.db.transaction(async tx => {\n      const [location] = await tx<DbLocationsRow>('locations')\n        .where({ id })\n        .select();\n\n      if (!location) {\n        throw new NotFoundError(`Found no location with ID ${id}`);\n      }\n\n      await tx<DbLocationsRow>('locations').where({ id }).del();\n      return location;\n    });\n    const entity = locationSpecToLocationEntity({ location: deleted });\n    await this.connection.applyMutation({\n      type: 'delta',\n      added: [],\n      removed: [{ entity, locationKey: getEntityLocationRef(entity) }],\n    });\n  }\n\n  private get connection(): EntityProviderConnection {\n    if (!this._connection) {\n      throw new Error('location store is not initialized');\n    }\n\n    return this._connection;\n  }\n\n  async connect(connection: EntityProviderConnection): Promise<void> {\n    this._connection = connection;\n\n    const locations = await this.locations();\n\n    const entities = locations.map(location => {\n      const entity = locationSpecToLocationEntity({ location });\n      return { entity, locationKey: getEntityLocationRef(entity) };\n    });\n\n    await this.connection.applyMutation({\n      type: 'full',\n      entities,\n    });\n  }\n\n  private async locations(dbOrTx: Knex.Transaction | Knex = this.db) {\n    const locations = await dbOrTx<DbLocationsRow>('locations').select();\n    return (\n      locations\n        // TODO(blam): We should create a mutation to remove this location for everyone\n        // eventually when it's all done and dusted\n        .filter(({ type }) => type !== 'bootstrap')\n        .map(item => ({\n          id: item.id,\n          target: item.target,\n          type: item.type,\n        }))\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport parseGitUrl from 'git-url-parse';\nimport { Entity } from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport {\n  AnalyzeLocationRequest,\n  AnalyzeLocationResponse,\n  LocationAnalyzer,\n} from './types';\n\nexport class RepoLocationAnalyzer implements LocationAnalyzer {\n  private readonly logger: Logger;\n  private readonly scmIntegrations: ScmIntegrationRegistry;\n\n  constructor(logger: Logger, scmIntegrations: ScmIntegrationRegistry) {\n    this.logger = logger;\n    this.scmIntegrations = scmIntegrations;\n  }\n  async analyzeLocation(\n    request: AnalyzeLocationRequest,\n  ): Promise<AnalyzeLocationResponse> {\n    const { owner, name } = parseGitUrl(request.location.target);\n    const entity: Entity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Component',\n      metadata: {\n        name: name,\n      },\n      spec: { type: 'other', lifecycle: 'unknown' },\n    };\n\n    const integration = this.scmIntegrations.byUrl(request.location.target);\n    let annotationPrefix;\n    switch (integration?.type) {\n      case 'azure':\n        annotationPrefix = 'dev.azure.com';\n        break;\n      case 'bitbucket':\n        annotationPrefix = 'bitbucket.org';\n        break;\n      case 'github':\n        annotationPrefix = 'github.com';\n        break;\n      case 'gitlab':\n        annotationPrefix = 'gitlab.com';\n        break;\n      default:\n        break;\n    }\n\n    if (annotationPrefix) {\n      entity.metadata.annotations = {\n        [`${annotationPrefix}/project-slug`]: `${owner}/${name}`,\n      };\n    }\n\n    this.logger.debug(`entity created for ${request.location.target}`);\n    return {\n      existingEntityFiles: [],\n      generateEntities: [{ entity, fields: [] }],\n    };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isDatabaseConflictError } from '@backstage/backend-common';\nimport { ConflictError, InputError } from '@backstage/errors';\nimport { DateTime } from 'luxon';\n\n/**\n * Takes a TIMESTAMP type column and converts it to a DateTime.\n *\n * Some engines return the SQL string form (e.g. 'YYYY-MM-DD hh:mm:ss'), some\n * return ISO string form (e.g. 'YYYY-MM-DDThh:mm:ss.SSSZ'), some return a js\n * Date object.\n */\nexport function timestampToDateTime(input: Date | string): DateTime {\n  try {\n    if (typeof input === 'object') {\n      return DateTime.fromJSDate(input).toUTC();\n    }\n\n    const result = input.includes(' ')\n      ? DateTime.fromSQL(input, { zone: 'utc' })\n      : DateTime.fromISO(input, { zone: 'utc' });\n    if (!result.isValid) {\n      throw new TypeError('Not valid');\n    }\n\n    return result;\n  } catch (e) {\n    throw new InputError(`Failed to parse database timestamp ${input}`, e);\n  }\n}\n\n/**\n * Rethrows an error, possibly translating it to a more precise error type.\n */\nexport function rethrowError(e: any): never {\n  if (isDatabaseConflictError(e)) {\n    throw new ConflictError(`Rejected due to a conflicting entity`, e);\n  }\n\n  throw e;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Counter,\n  CounterConfiguration,\n  Gauge,\n  GaugeConfiguration,\n  Histogram,\n  HistogramConfiguration,\n  register,\n  Summary,\n  SummaryConfiguration,\n} from 'prom-client';\n\nexport function createCounterMetric<T extends string>(\n  config: CounterConfiguration<T>,\n): Counter<T> {\n  const existing = register.getSingleMetric(config.name) as Counter<T>;\n  return existing || new Counter<T>(config);\n}\n\nexport function createGaugeMetric<T extends string>(\n  config: GaugeConfiguration<T>,\n): Gauge<T> {\n  const existing = register.getSingleMetric(config.name) as Gauge<T>;\n  return existing || new Gauge<T>(config);\n}\n\nexport function createSummaryMetric<T extends string>(\n  config: SummaryConfiguration<T>,\n): Summary<T> {\n  const existing = register.getSingleMetric(config.name) as Summary<T>;\n  return existing || new Summary<T>(config);\n}\n\nexport function createHistogramMetric<T extends string>(\n  config: HistogramConfiguration<T>,\n): Histogram<T> {\n  const existing = register.getSingleMetric(config.name) as Histogram<T>;\n  return existing || new Histogram<T>(config);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Knex } from 'knex';\nimport { createGaugeMetric } from '../util/metrics';\nimport { DbRefreshStateRow, DbRelationsRow, DbLocationsRow } from './tables';\n\nexport function initDatabaseMetrics(knex: Knex) {\n  const seen = new Set<string>();\n  return {\n    entities_count: createGaugeMetric({\n      name: 'catalog_entities_count',\n      help: 'Total amount of entities in the catalog',\n      labelNames: ['kind'],\n      async collect() {\n        const result = await knex<DbRefreshStateRow>('refresh_state').select(\n          'entity_ref',\n        );\n        const results = result\n          .map(row => row.entity_ref.split(':')[0])\n          .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map());\n\n        results.forEach((value, key) => {\n          seen.add(key);\n          this.set({ kind: key }, value);\n        });\n\n        // Set all the entities that were not seen to 0 and delete them from the seen set.\n        seen.forEach(key => {\n          if (!results.has(key)) {\n            this.set({ kind: key }, 0);\n            seen.delete(key);\n          }\n        });\n      },\n    }),\n    registered_locations: createGaugeMetric({\n      name: 'catalog_registered_locations_count',\n      help: 'Total amount of registered locations in the catalog',\n      async collect() {\n        const total = await knex<DbLocationsRow>('locations').count({\n          count: '*',\n        });\n        this.set(Number(total[0].count));\n      },\n    }),\n    relations: createGaugeMetric({\n      name: 'catalog_relations_count',\n      help: 'Total amount of relations between entities',\n      async collect() {\n        const total = await knex<DbRelationsRow>('relations').count({\n          count: '*',\n        });\n        this.set(Number(total[0].count));\n      },\n    }),\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { createHash } from 'crypto';\nimport stableStringify from 'fast-json-stable-stringify';\n\nexport function generateStableHash(entity: Entity) {\n  return createHash('sha1')\n    .update(stableStringify({ ...entity }))\n    .digest('hex');\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { ConflictError, isError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport lodash from 'lodash';\nimport { v4 as uuid } from 'uuid';\nimport type { Logger } from 'winston';\nimport {\n  Transaction,\n  GetProcessableEntitiesResult,\n  ProcessingDatabase,\n  RefreshStateItem,\n  RefreshOptions,\n  ReplaceUnprocessedEntitiesOptions,\n  UpdateProcessedEntityOptions,\n  ListAncestorsOptions,\n  ListAncestorsResult,\n  UpdateEntityCacheOptions,\n  ListParentsOptions,\n  ListParentsResult,\n} from './types';\nimport { DeferredEntity } from '../processing/types';\nimport { ProcessingIntervalFunction } from '../processing/refresh';\nimport { rethrowError, timestampToDateTime } from './conversion';\nimport { initDatabaseMetrics } from './metrics';\nimport {\n  DbRefreshStateReferencesRow,\n  DbRefreshStateRow,\n  DbRelationsRow,\n} from './tables';\n\nimport { generateStableHash } from './util';\nimport { isDatabaseConflictError } from '@backstage/backend-common';\n\n// The number of items that are sent per batch to the database layer, when\n// doing .batchInsert calls to knex. This needs to be low enough to not cause\n// errors in the underlying engine due to exceeding query limits, but large\n// enough to get the speed benefits.\nconst BATCH_SIZE = 50;\nconst MAX_ANCESTOR_DEPTH = 32;\n\nexport class DefaultProcessingDatabase implements ProcessingDatabase {\n  constructor(\n    private readonly options: {\n      database: Knex;\n      logger: Logger;\n      refreshInterval: ProcessingIntervalFunction;\n    },\n  ) {\n    initDatabaseMetrics(options.database);\n  }\n\n  async updateProcessedEntity(\n    txOpaque: Transaction,\n    options: UpdateProcessedEntityOptions,\n  ): Promise<{ previous: { relations: DbRelationsRow[] } }> {\n    const tx = txOpaque as Knex.Transaction;\n    const {\n      id,\n      processedEntity,\n      resultHash,\n      errors,\n      relations,\n      deferredEntities,\n      locationKey,\n    } = options;\n    const refreshResult = await tx<DbRefreshStateRow>('refresh_state')\n      .update({\n        processed_entity: JSON.stringify(processedEntity),\n        result_hash: resultHash,\n        errors,\n        location_key: locationKey,\n      })\n      .where('entity_id', id)\n      .andWhere(inner => {\n        if (!locationKey) {\n          return inner.whereNull('location_key');\n        }\n        return inner\n          .where('location_key', locationKey)\n          .orWhereNull('location_key');\n      });\n    if (refreshResult === 0) {\n      throw new ConflictError(\n        `Conflicting write of processing result for ${id} with location key '${locationKey}'`,\n      );\n    }\n\n    // Schedule all deferred entities for future processing.\n    await this.addUnprocessedEntities(tx, {\n      entities: deferredEntities,\n      sourceEntityRef: stringifyEntityRef(processedEntity),\n    });\n\n    // Delete old relations\n    let previousRelationRows: DbRelationsRow[];\n    if (tx.client.config.client.includes('sqlite3')) {\n      previousRelationRows = await tx<DbRelationsRow>('relations')\n        .select('*')\n        .where({ originating_entity_id: id });\n      await tx<DbRelationsRow>('relations')\n        .where({ originating_entity_id: id })\n        .delete();\n    } else {\n      previousRelationRows = await tx<DbRelationsRow>('relations')\n        .where({ originating_entity_id: id })\n        .delete()\n        .returning('*');\n    }\n\n    // Batch insert new relations\n    const relationRows: DbRelationsRow[] = relations.map(\n      ({ source, target, type }) => ({\n        originating_entity_id: id,\n        source_entity_ref: stringifyEntityRef(source),\n        target_entity_ref: stringifyEntityRef(target),\n        type,\n      }),\n    );\n    await tx.batchInsert(\n      'relations',\n      this.deduplicateRelations(relationRows),\n      BATCH_SIZE,\n    );\n\n    return {\n      previous: {\n        relations: previousRelationRows,\n      },\n    };\n  }\n\n  async updateProcessedEntityErrors(\n    txOpaque: Transaction,\n    options: UpdateProcessedEntityOptions,\n  ): Promise<void> {\n    const tx = txOpaque as Knex.Transaction;\n    const { id, errors, resultHash } = options;\n\n    await tx<DbRefreshStateRow>('refresh_state')\n      .update({\n        errors,\n        result_hash: resultHash,\n      })\n      .where('entity_id', id);\n  }\n\n  async updateEntityCache(\n    txOpaque: Transaction,\n    options: UpdateEntityCacheOptions,\n  ): Promise<void> {\n    const tx = txOpaque as Knex.Transaction;\n    const { id, state } = options;\n\n    await tx<DbRefreshStateRow>('refresh_state')\n      .update({ cache: JSON.stringify(state ?? {}) })\n      .where('entity_id', id);\n  }\n\n  async replaceUnprocessedEntities(\n    txOpaque: Transaction,\n    options: ReplaceUnprocessedEntitiesOptions,\n  ): Promise<void> {\n    const tx = txOpaque as Knex.Transaction;\n\n    const { toAdd, toUpsert, toRemove } = await this.createDelta(tx, options);\n\n    if (toRemove.length) {\n      let removedCount = 0;\n      for (const refs of lodash.chunk(toRemove, 1000)) {\n        /*\n      WITH RECURSIVE\n        -- All the nodes that can be reached downwards from our root\n        descendants(root_id, entity_ref) AS (\n          SELECT id, target_entity_ref\n          FROM refresh_state_references\n          WHERE source_key = \"R1\" AND target_entity_ref = \"A\"\n          UNION\n          SELECT descendants.root_id, target_entity_ref\n          FROM descendants\n          JOIN refresh_state_references ON source_entity_ref = descendants.entity_ref\n        ),\n        -- All the nodes that can be reached upwards from the descendants\n        ancestors(root_id, via_entity_ref, to_entity_ref) AS (\n          SELECT CAST(NULL as INT), entity_ref, entity_ref\n          FROM descendants\n          UNION\n          SELECT\n            CASE WHEN source_key IS NOT NULL THEN id ELSE NULL END,\n            source_entity_ref,\n            ancestors.to_entity_ref\n          FROM ancestors\n          JOIN refresh_state_references ON target_entity_ref = ancestors.via_entity_ref\n        )\n      -- Start out with all of the descendants\n      SELECT descendants.entity_ref\n      FROM descendants\n      -- Expand with all ancestors that point to those, but aren't the current root\n      LEFT OUTER JOIN ancestors\n        ON ancestors.to_entity_ref = descendants.entity_ref\n        AND ancestors.root_id IS NOT NULL\n        AND ancestors.root_id != descendants.root_id\n      -- Exclude all lines that had such a foreign ancestor\n      WHERE ancestors.root_id IS NULL;\n      */\n        removedCount += await tx<DbRefreshStateRow>('refresh_state')\n          .whereIn('entity_ref', function orphanedEntityRefs(orphans) {\n            return (\n              orphans\n                // All the nodes that can be reached downwards from our root\n                .withRecursive('descendants', function descendants(outer) {\n                  return outer\n                    .select({ root_id: 'id', entity_ref: 'target_entity_ref' })\n                    .from('refresh_state_references')\n                    .where('source_key', options.sourceKey)\n                    .whereIn('target_entity_ref', refs)\n                    .union(function recursive(inner) {\n                      return inner\n                        .select({\n                          root_id: 'descendants.root_id',\n                          entity_ref:\n                            'refresh_state_references.target_entity_ref',\n                        })\n                        .from('descendants')\n                        .join('refresh_state_references', {\n                          'descendants.entity_ref':\n                            'refresh_state_references.source_entity_ref',\n                        });\n                    });\n                })\n                // All the nodes that can be reached upwards from the descendants\n                .withRecursive('ancestors', function ancestors(outer) {\n                  return outer\n                    .select({\n                      root_id: tx.raw('CAST(NULL as INT)', []),\n                      via_entity_ref: 'entity_ref',\n                      to_entity_ref: 'entity_ref',\n                    })\n                    .from('descendants')\n                    .union(function recursive(inner) {\n                      return inner\n                        .select({\n                          root_id: tx.raw(\n                            'CASE WHEN source_key IS NOT NULL THEN id ELSE NULL END',\n                            [],\n                          ),\n                          via_entity_ref: 'source_entity_ref',\n                          to_entity_ref: 'ancestors.to_entity_ref',\n                        })\n                        .from('ancestors')\n                        .join('refresh_state_references', {\n                          target_entity_ref: 'ancestors.via_entity_ref',\n                        });\n                    });\n                })\n                // Start out with all of the descendants\n                .select('descendants.entity_ref')\n                .from('descendants')\n                // Expand with all ancestors that point to those, but aren't the current root\n                .leftOuterJoin('ancestors', function keepaliveRoots() {\n                  this.on(\n                    'ancestors.to_entity_ref',\n                    '=',\n                    'descendants.entity_ref',\n                  );\n                  this.andOnNotNull('ancestors.root_id');\n                  this.andOn('ancestors.root_id', '!=', 'descendants.root_id');\n                })\n                .whereNull('ancestors.root_id')\n            );\n          })\n          .delete();\n\n        await tx<DbRefreshStateReferencesRow>('refresh_state_references')\n          .where('source_key', '=', options.sourceKey)\n          .whereIn('target_entity_ref', refs)\n          .delete();\n      }\n\n      this.options.logger.debug(\n        `removed, ${removedCount} entities: ${JSON.stringify(toRemove)}`,\n      );\n    }\n\n    if (toAdd.length) {\n      // The reason for this chunking, rather than just massively batch\n      // inserting the entire payload, is that we fall back to the individual\n      // upsert mechanism below on conflicts. That path is massively slower than\n      // the fast batch path, so we don't want to end up accidentally having to\n      // for example item-by-item upsert tens of thousands of entities in a\n      // large initial delivery dump. The implication is that the size of these\n      // chunks needs to weigh the benefit of fast successful inserts, against\n      // the drawback of super slow but more rare fallbacks. There's quickly\n      // diminishing returns though with turning up this value way high.\n      for (const chunk of lodash.chunk(toAdd, 50)) {\n        try {\n          await tx.batchInsert(\n            'refresh_state',\n            chunk.map(item => ({\n              entity_id: uuid(),\n              entity_ref: stringifyEntityRef(item.deferred.entity),\n              unprocessed_entity: JSON.stringify(item.deferred.entity),\n              unprocessed_hash: item.hash,\n              errors: '',\n              location_key: item.deferred.locationKey,\n              next_update_at: tx.fn.now(),\n              last_discovery_at: tx.fn.now(),\n            })),\n            BATCH_SIZE,\n          );\n          await tx.batchInsert(\n            'refresh_state_references',\n            chunk.map(item => ({\n              source_key: options.sourceKey,\n              target_entity_ref: stringifyEntityRef(item.deferred.entity),\n            })),\n            BATCH_SIZE,\n          );\n        } catch (error) {\n          if (!isDatabaseConflictError(error)) {\n            throw error;\n          } else {\n            this.options.logger.debug(\n              `Fast insert path failed, falling back to slow path, ${error}`,\n            );\n            toUpsert.push(...chunk);\n          }\n        }\n      }\n    }\n\n    if (toUpsert.length) {\n      for (const {\n        deferred: { entity, locationKey },\n        hash,\n      } of toUpsert) {\n        const entityRef = stringifyEntityRef(entity);\n\n        try {\n          let ok = await this.updateUnprocessedEntity(\n            tx,\n            entity,\n            hash,\n            locationKey,\n          );\n          if (!ok) {\n            ok = await this.insertUnprocessedEntity(\n              tx,\n              entity,\n              hash,\n              locationKey,\n            );\n          }\n\n          if (ok) {\n            await tx<DbRefreshStateReferencesRow>(\n              'refresh_state_references',\n            ).insert({\n              source_key: options.sourceKey,\n              target_entity_ref: entityRef,\n            });\n          } else {\n            const conflictingKey = await this.checkLocationKeyConflict(\n              tx,\n              entityRef,\n              locationKey,\n            );\n            if (conflictingKey) {\n              this.options.logger.warn(\n                `Source ${options.sourceKey} detected conflicting entityRef ${entityRef} already referenced by ${conflictingKey} and now also ${locationKey}`,\n              );\n            }\n          }\n        } catch (error) {\n          this.options.logger.error(\n            `Failed to add '${entityRef}' from source '${options.sourceKey}', ${error}`,\n          );\n        }\n      }\n    }\n  }\n\n  async getProcessableEntities(\n    txOpaque: Transaction,\n    request: { processBatchSize: number },\n  ): Promise<GetProcessableEntitiesResult> {\n    const tx = txOpaque as Knex.Transaction;\n\n    let itemsQuery = tx<DbRefreshStateRow>('refresh_state').select();\n\n    // This avoids duplication of work because of race conditions and is\n    // also fast because locked rows are ignored rather than blocking.\n    // It's only available in MySQL and PostgreSQL\n    if (['mysql', 'mysql2', 'pg'].includes(tx.client.config.client)) {\n      itemsQuery = itemsQuery.forUpdate().skipLocked();\n    }\n\n    const items = await itemsQuery\n      .where('next_update_at', '<=', tx.fn.now())\n      .limit(request.processBatchSize)\n      .orderBy('next_update_at', 'asc');\n\n    const interval = this.options.refreshInterval();\n    await tx<DbRefreshStateRow>('refresh_state')\n      .whereIn(\n        'entity_ref',\n        items.map(i => i.entity_ref),\n      )\n      .update({\n        next_update_at: tx.client.config.client.includes('sqlite3')\n          ? tx.raw(`datetime('now', ?)`, [`${interval} seconds`])\n          : tx.raw(`now() + interval '${interval} seconds'`),\n      });\n\n    return {\n      items: items.map(\n        i =>\n          ({\n            id: i.entity_id,\n            entityRef: i.entity_ref,\n            unprocessedEntity: JSON.parse(i.unprocessed_entity) as Entity,\n            processedEntity: i.processed_entity\n              ? (JSON.parse(i.processed_entity) as Entity)\n              : undefined,\n            resultHash: i.result_hash || '',\n            nextUpdateAt: timestampToDateTime(i.next_update_at),\n            lastDiscoveryAt: timestampToDateTime(i.last_discovery_at),\n            state: i.cache ? JSON.parse(i.cache) : undefined,\n            errors: i.errors,\n            locationKey: i.location_key,\n          } as RefreshStateItem),\n      ),\n    };\n  }\n\n  async listAncestors(\n    txOpaque: Transaction,\n    options: ListAncestorsOptions,\n  ): Promise<ListAncestorsResult> {\n    const tx = txOpaque as Knex.Transaction;\n    const { entityRef } = options;\n    const entityRefs = new Array<string>();\n\n    let currentRef = entityRef.toLocaleLowerCase('en-US');\n    for (let depth = 1; depth <= MAX_ANCESTOR_DEPTH; depth += 1) {\n      const rows = await tx<DbRefreshStateReferencesRow>(\n        'refresh_state_references',\n      )\n        .where({ target_entity_ref: currentRef })\n        .select();\n\n      if (rows.length === 0) {\n        if (depth === 1) {\n          throw new NotFoundError(`Entity ${currentRef} not found`);\n        }\n        throw new NotFoundError(\n          `Entity ${entityRef} has a broken parent reference chain at ${currentRef}`,\n        );\n      }\n\n      const parentRef = rows.find(r => r.source_entity_ref)?.source_entity_ref;\n      if (!parentRef) {\n        // We've reached the top of the tree which is the entityProvider.\n        // In this case we refresh the entity itself.\n        return { entityRefs };\n      }\n      entityRefs.push(parentRef);\n      currentRef = parentRef;\n    }\n    throw new Error(\n      `Unable receive ancestors for ${entityRef}, reached maximum depth of ${MAX_ANCESTOR_DEPTH}`,\n    );\n  }\n\n  async listParents(\n    txOpaque: Transaction,\n    options: ListParentsOptions,\n  ): Promise<ListParentsResult> {\n    const tx = txOpaque as Knex.Transaction;\n\n    const rows = await tx<DbRefreshStateReferencesRow>(\n      'refresh_state_references',\n    )\n      .where({ target_entity_ref: options.entityRef })\n      .select();\n\n    const entityRefs = rows.map(r => r.source_entity_ref!).filter(Boolean);\n\n    return { entityRefs };\n  }\n\n  async refresh(txOpaque: Transaction, options: RefreshOptions): Promise<void> {\n    const tx = txOpaque as Knex.Transaction;\n    const { entityRef } = options;\n\n    const updateResult = await tx<DbRefreshStateRow>('refresh_state')\n      .where({ entity_ref: entityRef.toLocaleLowerCase('en-US') })\n      .update({ next_update_at: tx.fn.now() });\n    if (updateResult === 0) {\n      throw new NotFoundError(`Failed to schedule ${entityRef} for refresh`);\n    }\n  }\n\n  async transaction<T>(fn: (tx: Transaction) => Promise<T>): Promise<T> {\n    try {\n      let result: T | undefined = undefined;\n\n      await this.options.database.transaction(\n        async tx => {\n          // We can't return here, as knex swallows the return type in case the transaction is rolled back:\n          // https://github.com/knex/knex/blob/e37aeaa31c8ef9c1b07d2e4d3ec6607e557d800d/lib/transaction.js#L136\n          result = await fn(tx);\n        },\n        {\n          // If we explicitly trigger a rollback, don't fail.\n          doNotRejectOnRollback: true,\n        },\n      );\n\n      return result!;\n    } catch (e) {\n      this.options.logger.debug(`Error during transaction, ${e}`);\n      throw rethrowError(e);\n    }\n  }\n\n  /**\n   * Attempts to update an existing refresh state row, returning true if it was\n   * updated and false if there was no entity with a matching ref and location key.\n   *\n   * Updating the entity will also cause it to be scheduled for immediate processing.\n   */\n  private async updateUnprocessedEntity(\n    tx: Knex.Transaction,\n    entity: Entity,\n    hash: string,\n    locationKey?: string,\n  ): Promise<boolean> {\n    const entityRef = stringifyEntityRef(entity);\n    const serializedEntity = JSON.stringify(entity);\n\n    const refreshResult = await tx<DbRefreshStateRow>('refresh_state')\n      .update({\n        unprocessed_entity: serializedEntity,\n        unprocessed_hash: hash,\n        location_key: locationKey,\n        last_discovery_at: tx.fn.now(),\n        // We only get to this point if a processed entity actually had any changes, or\n        // if an entity provider requested this mutation, meaning that we can safely\n        // bump the deferred entities to the front of the queue for immediate processing.\n        next_update_at: tx.fn.now(),\n      })\n      .where('entity_ref', entityRef)\n      .andWhere(inner => {\n        if (!locationKey) {\n          return inner.whereNull('location_key');\n        }\n        return inner\n          .where('location_key', locationKey)\n          .orWhereNull('location_key');\n      });\n\n    return refreshResult === 1;\n  }\n\n  /**\n   * Attempts to insert a new refresh state row for the given entity, returning\n   * true if successful and false if there was a conflict.\n   */\n  private async insertUnprocessedEntity(\n    tx: Knex.Transaction,\n    entity: Entity,\n    hash: string,\n    locationKey?: string,\n  ): Promise<boolean> {\n    const entityRef = stringifyEntityRef(entity);\n    const serializedEntity = JSON.stringify(entity);\n\n    try {\n      let query = tx<DbRefreshStateRow>('refresh_state').insert({\n        entity_id: uuid(),\n        entity_ref: entityRef,\n        unprocessed_entity: serializedEntity,\n        unprocessed_hash: hash,\n        errors: '',\n        location_key: locationKey,\n        next_update_at: tx.fn.now(),\n        last_discovery_at: tx.fn.now(),\n      });\n\n      // TODO(Rugvip): only tested towards Postgres and SQLite\n      // We have to do this because the only way to detect if there was a conflict with\n      // SQLite is to catch the error, while Postgres needs to ignore the conflict to not\n      // break the ongoing transaction.\n      if (!tx.client.config.client.includes('sqlite3')) {\n        query = query.onConflict('entity_ref').ignore() as any; // type here does not match runtime\n      }\n\n      // Postgres gives as an object with rowCount, SQLite gives us an array\n      const result: { rowCount?: number; length?: number } = await query;\n      return result.rowCount === 1 || result.length === 1;\n    } catch (error) {\n      // SQLite reached this rather than the rowCount check above\n      if (\n        isError(error) &&\n        error.message.includes('UNIQUE constraint failed')\n      ) {\n        return false;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Checks whether a refresh state exists for the given entity that has a\n   * location key that does not match the provided location key.\n   *\n   * @returns The conflicting key if there is one.\n   */\n  private async checkLocationKeyConflict(\n    tx: Knex.Transaction,\n    entityRef: string,\n    locationKey?: string,\n  ): Promise<string | undefined> {\n    const row = await tx<DbRefreshStateRow>('refresh_state')\n      .select('location_key')\n      .where('entity_ref', entityRef)\n      .first();\n\n    const conflictingKey = row?.location_key;\n\n    // If there's no existing key we can't have a conflict\n    if (!conflictingKey) {\n      return undefined;\n    }\n\n    if (conflictingKey !== locationKey) {\n      return conflictingKey;\n    }\n    return undefined;\n  }\n\n  private deduplicateRelations(rows: DbRelationsRow[]): DbRelationsRow[] {\n    return lodash.uniqBy(\n      rows,\n      r => `${r.source_entity_ref}:${r.target_entity_ref}:${r.type}`,\n    );\n  }\n\n  private async createDelta(\n    tx: Knex.Transaction,\n    options: ReplaceUnprocessedEntitiesOptions,\n  ): Promise<{\n    toAdd: { deferred: DeferredEntity; hash: string }[];\n    toUpsert: { deferred: DeferredEntity; hash: string }[];\n    toRemove: string[];\n  }> {\n    if (options.type === 'delta') {\n      return {\n        toAdd: [],\n        toUpsert: options.added.map(e => ({\n          deferred: e,\n          hash: generateStableHash(e.entity),\n        })),\n        toRemove: options.removed.map(e => stringifyEntityRef(e.entity)),\n      };\n    }\n\n    // Grab all of the existing references from the same source, and their locationKeys as well\n    const oldRefs = await tx<DbRefreshStateReferencesRow>(\n      'refresh_state_references',\n    )\n      .leftJoin<DbRefreshStateRow>('refresh_state', {\n        target_entity_ref: 'entity_ref',\n      })\n      .where({ source_key: options.sourceKey })\n      .select({\n        target_entity_ref: 'refresh_state_references.target_entity_ref',\n        location_key: 'refresh_state.location_key',\n        unprocessed_hash: 'refresh_state.unprocessed_hash',\n      });\n\n    const items = options.items.map(deferred => ({\n      deferred,\n      ref: stringifyEntityRef(deferred.entity),\n      hash: generateStableHash(deferred.entity),\n    }));\n\n    const oldRefsSet = new Map(\n      oldRefs.map(r => [\n        r.target_entity_ref,\n        {\n          locationKey: r.location_key,\n          oldEntityHash: r.unprocessed_hash,\n        },\n      ]),\n    );\n    const newRefsSet = new Set(items.map(item => item.ref));\n\n    const toAdd = new Array<{ deferred: DeferredEntity; hash: string }>();\n    const toUpsert = new Array<{ deferred: DeferredEntity; hash: string }>();\n    const toRemove = oldRefs\n      .map(row => row.target_entity_ref)\n      .filter(ref => !newRefsSet.has(ref));\n\n    for (const item of items) {\n      const oldRef = oldRefsSet.get(item.ref);\n      const upsertItem = { deferred: item.deferred, hash: item.hash };\n      if (!oldRef) {\n        // Add any entity that does not exist in the database\n        toAdd.push(upsertItem);\n      } else if (oldRef.locationKey !== item.deferred.locationKey) {\n        // Remove and then re-add any entity that exists, but with a different location key\n        toRemove.push(item.ref);\n        toAdd.push(upsertItem);\n      } else if (oldRef.oldEntityHash !== item.hash) {\n        // Entities with modifications should be pushed through too\n        toUpsert.push(upsertItem);\n      }\n    }\n\n    return { toAdd, toUpsert, toRemove };\n  }\n\n  /**\n   * Add a set of deferred entities for processing.\n   * The entities will be added at the front of the processing queue.\n   */\n  private async addUnprocessedEntities(\n    txOpaque: Transaction,\n    options: {\n      sourceEntityRef: string;\n      entities: DeferredEntity[];\n    },\n  ): Promise<void> {\n    const tx = txOpaque as Knex.Transaction;\n\n    // Keeps track of the entities that we end up inserting to update refresh_state_references afterwards\n    const stateReferences = new Array<string>();\n    const conflictingStateReferences = new Array<string>();\n\n    // Upsert all of the unprocessed entities into the refresh_state table, by\n    // their entity ref.\n    for (const { entity, locationKey } of options.entities) {\n      const entityRef = stringifyEntityRef(entity);\n      const hash = generateStableHash(entity);\n\n      const updated = await this.updateUnprocessedEntity(\n        tx,\n        entity,\n        hash,\n        locationKey,\n      );\n      if (updated) {\n        stateReferences.push(entityRef);\n        continue;\n      }\n\n      const inserted = await this.insertUnprocessedEntity(\n        tx,\n        entity,\n        hash,\n        locationKey,\n      );\n      if (inserted) {\n        stateReferences.push(entityRef);\n        continue;\n      }\n\n      // If the row can't be inserted, we have a conflict, but it could be either\n      // because of a conflicting locationKey or a race with another instance, so check\n      // whether the conflicting entity has the same entityRef but a different locationKey\n      const conflictingKey = await this.checkLocationKeyConflict(\n        tx,\n        entityRef,\n        locationKey,\n      );\n      if (conflictingKey) {\n        this.options.logger.warn(\n          `Detected conflicting entityRef ${entityRef} already referenced by ${conflictingKey} and now also ${locationKey}`,\n        );\n        conflictingStateReferences.push(entityRef);\n      }\n    }\n\n    // Replace all references for the originating entity or source and then create new ones\n    await tx<DbRefreshStateReferencesRow>('refresh_state_references')\n      .whereNotIn('target_entity_ref', conflictingStateReferences)\n      .andWhere({ source_entity_ref: options.sourceEntityRef })\n      .delete();\n    await tx.batchInsert(\n      'refresh_state_references',\n      stateReferences.map(entityRef => ({\n        source_entity_ref: options.sourceEntityRef,\n        target_entity_ref: entityRef,\n      })),\n      BATCH_SIZE,\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport { Knex } from 'knex';\n\nexport async function applyDatabaseMigrations(knex: Knex): Promise<void> {\n  const migrationsDir = resolvePackagePath(\n    '@backstage/plugin-catalog-backend',\n    'migrations',\n  );\n\n  await knex.migrate.latest({\n    directory: migrationsDir,\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_POLLING_INTERVAL_MS = 1000;\n\ntype Options<T> = {\n  /**\n   * The callback used to load in new tasks. The number of items returned\n   * in the array must be at most `count` number of items, but may be lower.\n   *\n   * Any error thrown from this method fill be treated as an unhandled rejection.\n   */\n  loadTasks: (count: number) => Promise<Array<T>>;\n\n  /**\n   * The callback used to process a single item.\n   *\n   * Any error thrown from this method fill be treated as an unhandled rejection.\n   */\n  processTask: (item: T) => Promise<void>;\n\n  /**\n   * The target minimum number of items to process in parallel. Once the number\n   * of in-flight tasks reaches this count, more tasks will be loaded in.\n   */\n  lowWatermark: number;\n\n  /**\n   * The maximum number of items to process in parallel.\n   */\n  highWatermark: number;\n\n  /**\n   * The interval at which tasks are polled for in the background when\n   * there aren't enough tasks to load to satisfy the low watermark.\n   *\n   * @default 1000\n   */\n  pollingIntervalMs?: number;\n};\n\n/**\n * Creates a task processing pipeline which continuously loads in tasks to\n * keep the number of parallel in-flight tasks between a low and high watermark.\n *\n * @param options - The options for the pipeline.\n * @returns A stop function which when called halts all processing.\n */\nexport function startTaskPipeline<T>(options: Options<T>) {\n  const {\n    loadTasks,\n    processTask,\n    lowWatermark,\n    highWatermark,\n    pollingIntervalMs = DEFAULT_POLLING_INTERVAL_MS,\n  } = options;\n\n  if (lowWatermark >= highWatermark) {\n    throw new Error('lowWatermark must be lower than highWatermark');\n  }\n\n  let loading = false;\n  let stopped = false;\n  let inFlightCount = 0;\n\n  async function maybeLoadMore() {\n    if (stopped || loading || inFlightCount > lowWatermark) {\n      return;\n    }\n\n    // Once we hit the low watermark we load in enough items to reach the high watermark\n    loading = true;\n    const loadCount = highWatermark - inFlightCount;\n    const loadedItems = await loadTasks(loadCount);\n    loading = false;\n\n    // We might not reach the high watermark here, in case there weren't enough items to load\n    inFlightCount += loadedItems.length;\n    loadedItems.forEach(item => {\n      processTask(item).finally(() => {\n        if (stopped) {\n          return;\n        }\n\n        // For each item we complete we check if it's time to load more\n        inFlightCount -= 1;\n        maybeLoadMore();\n      });\n    });\n\n    // We might have processed some tasks while we where loading, so check if we can load more\n    if (loadedItems.length > 1) {\n      maybeLoadMore();\n    }\n  }\n\n  // This interval makes sure that we load in new items if the loop runs\n  // dry because of the lack of available tasks. As long as there are\n  // enough items to process this will be a noop.\n  const intervalId = setInterval(() => {\n    maybeLoadMore();\n  }, pollingIntervalMs);\n\n  return () => {\n    stopped = true;\n    clearInterval(intervalId);\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { assertError, serializeError } from '@backstage/errors';\nimport { Hash } from 'crypto';\nimport stableStringify from 'fast-json-stable-stringify';\nimport { Logger } from 'winston';\nimport { ProcessingDatabase, RefreshStateItem } from '../database/types';\nimport { createCounterMetric, createSummaryMetric } from '../util/metrics';\nimport {\n  CatalogProcessingEngine,\n  CatalogProcessingOrchestrator,\n  EntityProcessingResult,\n} from '../processing/types';\nimport { Stitcher } from '../stitching/Stitcher';\nimport { startTaskPipeline } from './TaskPipeline';\n\nconst CACHE_TTL = 5;\n\nexport class DefaultCatalogProcessingEngine implements CatalogProcessingEngine {\n  private readonly tracker = progressTracker();\n  private stopFunc?: () => void;\n\n  constructor(\n    private readonly logger: Logger,\n    private readonly processingDatabase: ProcessingDatabase,\n    private readonly orchestrator: CatalogProcessingOrchestrator,\n    private readonly stitcher: Stitcher,\n    private readonly createHash: () => Hash,\n    private readonly pollingIntervalMs: number = 1000,\n  ) {}\n\n  async start() {\n    if (this.stopFunc) {\n      throw new Error('Processing engine is already started');\n    }\n\n    this.stopFunc = startTaskPipeline<RefreshStateItem>({\n      lowWatermark: 5,\n      highWatermark: 10,\n      pollingIntervalMs: this.pollingIntervalMs,\n      loadTasks: async count => {\n        try {\n          const { items } = await this.processingDatabase.transaction(\n            async tx => {\n              return this.processingDatabase.getProcessableEntities(tx, {\n                processBatchSize: count,\n              });\n            },\n          );\n          return items;\n        } catch (error) {\n          this.logger.warn('Failed to load processing items', error);\n          return [];\n        }\n      },\n      processTask: async item => {\n        const track = this.tracker.processStart(item, this.logger);\n\n        try {\n          const {\n            id,\n            state,\n            unprocessedEntity,\n            entityRef,\n            locationKey,\n            resultHash: previousResultHash,\n          } = item;\n          const result = await this.orchestrator.process({\n            entity: unprocessedEntity,\n            state,\n          });\n\n          track.markProcessorsCompleted(result);\n\n          if (result.ok) {\n            if (stableStringify(state) !== stableStringify(result.state)) {\n              await this.processingDatabase.transaction(async tx => {\n                await this.processingDatabase.updateEntityCache(tx, {\n                  id,\n                  state: {\n                    ttl: CACHE_TTL,\n                    ...result.state,\n                  },\n                });\n              });\n            }\n          } else {\n            const maybeTtl = state?.ttl;\n            const ttl = Number.isInteger(maybeTtl) ? (maybeTtl as number) : 0;\n            await this.processingDatabase.transaction(async tx => {\n              await this.processingDatabase.updateEntityCache(tx, {\n                id,\n                state: ttl > 0 ? { ...state, ttl: ttl - 1 } : {},\n              });\n            });\n          }\n\n          for (const error of result.errors) {\n            // TODO(freben): Try to extract the location out of the unprocessed\n            // entity and add as meta to the log lines\n            this.logger.warn(error.message, {\n              entity: entityRef,\n            });\n          }\n          const errorsString = JSON.stringify(\n            result.errors.map(e => serializeError(e)),\n          );\n\n          let hashBuilder = this.createHash().update(errorsString);\n          if (result.ok) {\n            const { entityRefs: parents } =\n              await this.processingDatabase.transaction(tx =>\n                this.processingDatabase.listParents(tx, {\n                  entityRef,\n                }),\n              );\n\n            hashBuilder = hashBuilder\n              .update(stableStringify({ ...result.completedEntity }))\n              .update(stableStringify([...result.deferredEntities]))\n              .update(stableStringify([...result.relations]))\n              .update(stableStringify([...parents]));\n          }\n\n          const resultHash = hashBuilder.digest('hex');\n          if (resultHash === previousResultHash) {\n            // If nothing changed in our produced outputs, we cannot have any\n            // significant effect on our surroundings; therefore, we just abort\n            // without any updates / stitching.\n            track.markSuccessfulWithNoChanges();\n            return;\n          }\n\n          // If the result was marked as not OK, it signals that some part of the\n          // processing pipeline threw an exception. This can happen both as part of\n          // non-catastrophic things such as due to validation errors, as well as if\n          // something fatal happens inside the processing for other reasons. In any\n          // case, this means we can't trust that anything in the output is okay. So\n          // just store the errors and trigger a stich so that they become visible to\n          // the outside.\n          if (!result.ok) {\n            await this.processingDatabase.transaction(async tx => {\n              await this.processingDatabase.updateProcessedEntityErrors(tx, {\n                id,\n                errors: errorsString,\n                resultHash,\n              });\n            });\n            await this.stitcher.stitch(\n              new Set([stringifyEntityRef(unprocessedEntity)]),\n            );\n            track.markSuccessfulWithErrors();\n            return;\n          }\n\n          result.completedEntity.metadata.uid = id;\n          let oldRelationSources: Set<string>;\n          await this.processingDatabase.transaction(async tx => {\n            const { previous } =\n              await this.processingDatabase.updateProcessedEntity(tx, {\n                id,\n                processedEntity: result.completedEntity,\n                resultHash,\n                errors: errorsString,\n                relations: result.relations,\n                deferredEntities: result.deferredEntities,\n                locationKey,\n              });\n            oldRelationSources = new Set(\n              previous.relations.map(r => r.source_entity_ref),\n            );\n          });\n\n          const newRelationSources = new Set<string>(\n            result.relations.map(relation =>\n              stringifyEntityRef(relation.source),\n            ),\n          );\n\n          const setOfThingsToStitch = new Set<string>([\n            stringifyEntityRef(result.completedEntity),\n          ]);\n          newRelationSources.forEach(r => {\n            if (!oldRelationSources.has(r)) {\n              setOfThingsToStitch.add(r);\n            }\n          });\n          oldRelationSources!.forEach(r => {\n            if (!newRelationSources.has(r)) {\n              setOfThingsToStitch.add(r);\n            }\n          });\n\n          await this.stitcher.stitch(setOfThingsToStitch);\n\n          track.markSuccessfulWithChanges(setOfThingsToStitch.size);\n        } catch (error) {\n          assertError(error);\n          track.markFailed(error);\n        }\n      },\n    });\n  }\n\n  async stop() {\n    if (this.stopFunc) {\n      this.stopFunc();\n      this.stopFunc = undefined;\n    }\n  }\n}\n\n// Helps wrap the timing and logging behaviors\nfunction progressTracker() {\n  const stitchedEntities = createCounterMetric({\n    name: 'catalog_stitched_entities_count',\n    help: 'Amount of entities stitched',\n  });\n  const processedEntities = createCounterMetric({\n    name: 'catalog_processed_entities_count',\n    help: 'Amount of entities processed',\n    labelNames: ['result'],\n  });\n  const processingDuration = createSummaryMetric({\n    name: 'catalog_processing_duration_seconds',\n    help: 'Time spent executing the full processing flow',\n    labelNames: ['result'],\n  });\n  const processorsDuration = createSummaryMetric({\n    name: 'catalog_processors_duration_seconds',\n    help: 'Time spent executing catalog processors',\n    labelNames: ['result'],\n  });\n  const processingQueueDelay = createSummaryMetric({\n    name: 'catalog_processing_queue_delay_seconds',\n    help: 'The amount of delay between being scheduled for processing, and the start of actually being processed',\n  });\n\n  function processStart(item: RefreshStateItem, logger: Logger) {\n    logger.debug(`Processing ${item.entityRef}`);\n\n    if (item.nextUpdateAt) {\n      processingQueueDelay.observe(-item.nextUpdateAt.diffNow().as('seconds'));\n    }\n\n    const endOverallTimer = processingDuration.startTimer();\n    const endProcessorsTimer = processorsDuration.startTimer();\n\n    function markProcessorsCompleted(result: EntityProcessingResult) {\n      endProcessorsTimer({ result: result.ok ? 'ok' : 'failed' });\n    }\n\n    function markSuccessfulWithNoChanges() {\n      endOverallTimer({ result: 'unchanged' });\n      processedEntities.inc({ result: 'unchanged' }, 1);\n    }\n\n    function markSuccessfulWithErrors() {\n      endOverallTimer({ result: 'errors' });\n      processedEntities.inc({ result: 'errors' }, 1);\n    }\n\n    function markSuccessfulWithChanges(stitchedCount: number) {\n      endOverallTimer({ result: 'changed' });\n      stitchedEntities.inc(stitchedCount);\n      processedEntities.inc({ result: 'changed' }, 1);\n    }\n\n    function markFailed(error: Error) {\n      processedEntities.inc({ result: 'failed' }, 1);\n      logger.warn(`Processing of ${item.entityRef} failed`, error);\n    }\n\n    return {\n      markProcessorsCompleted,\n      markSuccessfulWithNoChanges,\n      markSuccessfulWithErrors,\n      markSuccessfulWithChanges,\n      markFailed,\n    };\n  }\n\n  return { processStart };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Location } from '@backstage/catalog-client';\nimport {\n  CatalogProcessingOrchestrator,\n  DeferredEntity,\n} from '../processing/types';\nimport { LocationInput, LocationService, LocationStore } from './types';\nimport { locationSpecToMetadataName } from '../util/conversion';\n\nexport class DefaultLocationService implements LocationService {\n  constructor(\n    private readonly store: LocationStore,\n    private readonly orchestrator: CatalogProcessingOrchestrator,\n  ) {}\n\n  async createLocation(\n    input: LocationInput,\n    dryRun: boolean,\n  ): Promise<{ location: Location; entities: Entity[]; exists?: boolean }> {\n    if (dryRun) {\n      return this.dryRunCreateLocation(input);\n    }\n    const location = await this.store.createLocation(input);\n    return { location, entities: [] };\n  }\n\n  listLocations(): Promise<Location[]> {\n    return this.store.listLocations();\n  }\n  getLocation(id: string): Promise<Location> {\n    return this.store.getLocation(id);\n  }\n  deleteLocation(id: string): Promise<void> {\n    return this.store.deleteLocation(id);\n  }\n\n  private async processEntities(\n    unprocessedEntities: DeferredEntity[],\n  ): Promise<Entity[]> {\n    const entities: Entity[] = [];\n    while (unprocessedEntities.length) {\n      const currentEntity = unprocessedEntities.pop();\n      if (!currentEntity) {\n        continue;\n      }\n      const processed = await this.orchestrator.process({\n        entity: currentEntity.entity,\n        state: {}, // we process without the existing cache\n      });\n\n      if (processed.ok) {\n        if (\n          entities.some(\n            e =>\n              stringifyEntityRef(e) ===\n              stringifyEntityRef(processed.completedEntity),\n          )\n        ) {\n          throw new Error(\n            `Duplicate nested entity: ${stringifyEntityRef(\n              processed.completedEntity,\n            )}`,\n          );\n        }\n        unprocessedEntities.push(...processed.deferredEntities);\n        entities.push(processed.completedEntity);\n      } else {\n        throw Error(processed.errors.map(String).join(', '));\n      }\n    }\n    return entities;\n  }\n\n  private async dryRunCreateLocation(\n    spec: LocationInput,\n  ): Promise<{ location: Location; entities: Entity[]; exists?: boolean }> {\n    // Run the existence check in parallel with the processing\n    const existsPromise = this.store\n      .listLocations()\n      .then(locations =>\n        locations.some(l => l.type === spec.type && l.target === spec.target),\n      );\n\n    const entity = {\n      apiVersion: 'backstage.io/v1alpha1',\n      kind: 'Location',\n      metadata: {\n        name: locationSpecToMetadataName({\n          type: spec.type,\n          target: spec.target,\n        }),\n        namespace: 'default',\n        annotations: {\n          [ANNOTATION_LOCATION]: `${spec.type}:${spec.target}`,\n          [ANNOTATION_ORIGIN_LOCATION]: `${spec.type}:${spec.target}`,\n        },\n      },\n      spec: {\n        type: spec.type,\n        target: spec.target,\n      },\n    };\n    const unprocessedEntities: DeferredEntity[] = [\n      { entity, locationKey: `${spec.type}:${spec.target}` },\n    ];\n    const entities: Entity[] = await this.processEntities(unprocessedEntities);\n\n    return {\n      exists: await existsPromise,\n      location: { ...spec, id: `${spec.type}:${spec.target}` },\n      entities,\n    };\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { InputError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport lodash from 'lodash';\nimport {\n  EntitiesCatalog,\n  EntitiesRequest,\n  EntitiesResponse,\n  EntitiesSearchFilter,\n  EntityAncestryResponse,\n  EntityFacetsRequest,\n  EntityFacetsResponse,\n  EntityFilter,\n  EntityPagination,\n} from '../catalog/types';\nimport {\n  DbFinalEntitiesRow,\n  DbPageInfo,\n  DbRefreshStateReferencesRow,\n  DbRefreshStateRow,\n  DbSearchRow,\n} from '../database/tables';\n\nfunction parsePagination(input?: EntityPagination): {\n  limit?: number;\n  offset?: number;\n} {\n  if (!input) {\n    return {};\n  }\n\n  let { limit, offset } = input;\n\n  if (input.after !== undefined) {\n    let cursor;\n    try {\n      const json = Buffer.from(input.after, 'base64').toString('utf8');\n      cursor = JSON.parse(json);\n    } catch {\n      throw new InputError('Malformed after cursor, could not be parsed');\n    }\n    if (cursor.limit !== undefined) {\n      if (!Number.isInteger(cursor.limit)) {\n        throw new InputError('Malformed after cursor, limit was not an number');\n      }\n      limit = cursor.limit;\n    }\n    if (cursor.offset !== undefined) {\n      if (!Number.isInteger(cursor.offset)) {\n        throw new InputError('Malformed after cursor, offset was not a number');\n      }\n      offset = cursor.offset;\n    }\n  }\n\n  return { limit, offset };\n}\n\nfunction stringifyPagination(input: { limit: number; offset: number }) {\n  const json = JSON.stringify({ limit: input.limit, offset: input.offset });\n  const base64 = Buffer.from(json, 'utf8').toString('base64');\n  return base64;\n}\n\nfunction addCondition(\n  queryBuilder: Knex.QueryBuilder,\n  db: Knex,\n  filter: EntitiesSearchFilter,\n  negate: boolean = false,\n) {\n  // NOTE(freben): This used to be a set of OUTER JOIN, which may seem to\n  // make a lot of sense. However, it had abysmal performance on sqlite\n  // when datasets grew large, so we're using IN instead.\n  const matchQuery = db<DbSearchRow>('search')\n    .select('entity_id')\n    .where({ key: filter.key.toLowerCase() })\n    .andWhere(function keyFilter() {\n      if (filter.values) {\n        if (filter.values.length === 1) {\n          this.where({ value: filter.values[0].toLowerCase() });\n        } else {\n          this.andWhere(\n            'value',\n            'in',\n            filter.values.map(v => v.toLowerCase()),\n          );\n        }\n      }\n    });\n  queryBuilder.andWhere('entity_id', negate ? 'not in' : 'in', matchQuery);\n}\n\nfunction isEntitiesSearchFilter(\n  filter: EntitiesSearchFilter | EntityFilter,\n): filter is EntitiesSearchFilter {\n  return filter.hasOwnProperty('key');\n}\n\nfunction isOrEntityFilter(\n  filter: { anyOf: EntityFilter[] } | EntityFilter,\n): filter is { anyOf: EntityFilter[] } {\n  return filter.hasOwnProperty('anyOf');\n}\n\nfunction isNegationEntityFilter(\n  filter: { not: EntityFilter } | EntityFilter,\n): filter is { not: EntityFilter } {\n  return filter.hasOwnProperty('not');\n}\n\nfunction parseFilter(\n  filter: EntityFilter,\n  query: Knex.QueryBuilder,\n  db: Knex,\n  negate: boolean = false,\n): Knex.QueryBuilder {\n  if (isEntitiesSearchFilter(filter)) {\n    return query.andWhere(function filterFunction() {\n      addCondition(this, db, filter, negate);\n    });\n  }\n\n  if (isNegationEntityFilter(filter)) {\n    return parseFilter(filter.not, query, db, !negate);\n  }\n\n  return query[negate ? 'andWhereNot' : 'andWhere'](function filterFunction() {\n    if (isOrEntityFilter(filter)) {\n      for (const subFilter of filter.anyOf ?? []) {\n        this.orWhere(subQuery => parseFilter(subFilter, subQuery, db));\n      }\n    } else {\n      for (const subFilter of filter.allOf ?? []) {\n        this.andWhere(subQuery => parseFilter(subFilter, subQuery, db));\n      }\n    }\n  });\n}\n\nexport class DefaultEntitiesCatalog implements EntitiesCatalog {\n  constructor(private readonly database: Knex) {}\n\n  async entities(request?: EntitiesRequest): Promise<EntitiesResponse> {\n    const db = this.database;\n\n    let entitiesQuery =\n      db<DbFinalEntitiesRow>('final_entities').select('final_entities.*');\n    if (request?.filter) {\n      entitiesQuery = parseFilter(request.filter, entitiesQuery, db);\n    }\n\n    // TODO: move final_entities to use entity_ref\n    entitiesQuery = entitiesQuery\n      .whereNotNull('final_entities.final_entity')\n      .orderBy('entity_id', 'asc');\n\n    const { limit, offset } = parsePagination(request?.pagination);\n    if (limit !== undefined) {\n      entitiesQuery = entitiesQuery.limit(limit + 1);\n    }\n    if (offset !== undefined) {\n      entitiesQuery = entitiesQuery.offset(offset);\n    }\n\n    let rows = await entitiesQuery;\n\n    let pageInfo: DbPageInfo;\n    if (limit === undefined || rows.length <= limit) {\n      pageInfo = { hasNextPage: false };\n    } else {\n      rows = rows.slice(0, -1);\n      pageInfo = {\n        hasNextPage: true,\n        endCursor: stringifyPagination({\n          limit,\n          offset: (offset ?? 0) + limit,\n        }),\n      };\n    }\n\n    let entities: Entity[] = rows.map(e => JSON.parse(e.final_entity!));\n\n    if (request?.fields) {\n      entities = entities.map(e => request.fields!(e));\n    }\n\n    // TODO(freben): This is added as a compatibility guarantee, until we can be\n    // sure that all adopters have re-stitched their entities so that the new\n    // targetRef field is present on them, and that they have stopped consuming\n    // the now-removed old field\n    // TODO(jhaals): Remove this in April 2022\n    for (const entity of entities) {\n      if (entity.relations) {\n        for (const relation of entity.relations as any) {\n          if (!relation.targetRef && relation.target) {\n            // This is the case where an old-form entity, not yet stitched with\n            // the updated code, was in the database\n            relation.targetRef = stringifyEntityRef(relation.target);\n          } else if (!relation.target && relation.targetRef) {\n            // This is the case where a new-form entity, stitched with the\n            // updated code, was in the database but we still want to produce\n            // the old data shape as well for compatibility reasons\n            relation.target = parseEntityRef(relation.targetRef);\n          }\n        }\n      }\n    }\n\n    return {\n      entities,\n      pageInfo,\n    };\n  }\n\n  async removeEntityByUid(uid: string): Promise<void> {\n    // Clear the hashed state of the immediate parents of the deleted entity.\n    // This makes sure that when they get reprocessed, their output is written\n    // down again. The reason for wanting to do this, is that if the user\n    // deletes entities that ARE still emitted by the parent, the parent\n    // processing will still generate the same output hash as always, which\n    // means it'll never try to write down the children again (it assumes that\n    // they already exist). This means that without the code below, the database\n    // never \"heals\" from accidental deletes.\n    await this.database<DbRefreshStateRow>('refresh_state')\n      .update({\n        result_hash: 'child-was-deleted',\n      })\n      .whereIn('entity_ref', function parents(builder) {\n        return builder\n          .from<DbRefreshStateRow>('refresh_state')\n          .innerJoin<DbRefreshStateReferencesRow>('refresh_state_references', {\n            'refresh_state_references.target_entity_ref':\n              'refresh_state.entity_ref',\n          })\n          .where('refresh_state.entity_id', '=', uid)\n          .select('refresh_state_references.source_entity_ref');\n      });\n\n    await this.database<DbRefreshStateRow>('refresh_state')\n      .where('entity_id', uid)\n      .delete();\n  }\n\n  async entityAncestry(rootRef: string): Promise<EntityAncestryResponse> {\n    const [rootRow] = await this.database<DbRefreshStateRow>('refresh_state')\n      .leftJoin<DbFinalEntitiesRow>('final_entities', {\n        'refresh_state.entity_id': 'final_entities.entity_id',\n      })\n      .where('refresh_state.entity_ref', '=', rootRef)\n      .select({\n        entityJson: 'final_entities.final_entity',\n      });\n\n    if (!rootRow) {\n      throw new NotFoundError(`No such entity ${rootRef}`);\n    }\n\n    const rootEntity = JSON.parse(rootRow.entityJson) as Entity;\n    const seenEntityRefs = new Set<string>();\n    const todo = new Array<Entity>();\n    const items = new Array<{ entity: Entity; parentEntityRefs: string[] }>();\n\n    for (\n      let current: Entity | undefined = rootEntity;\n      current;\n      current = todo.pop()\n    ) {\n      const currentRef = stringifyEntityRef(current);\n      seenEntityRefs.add(currentRef);\n\n      const parentRows = await this.database<DbRefreshStateReferencesRow>(\n        'refresh_state_references',\n      )\n        .innerJoin<DbRefreshStateRow>('refresh_state', {\n          'refresh_state_references.source_entity_ref':\n            'refresh_state.entity_ref',\n        })\n        .innerJoin<DbFinalEntitiesRow>('final_entities', {\n          'refresh_state.entity_id': 'final_entities.entity_id',\n        })\n        .where('refresh_state_references.target_entity_ref', '=', currentRef)\n        .select({\n          parentEntityRef: 'refresh_state.entity_ref',\n          parentEntityJson: 'final_entities.final_entity',\n        });\n\n      const parentRefs: string[] = [];\n      for (const { parentEntityRef, parentEntityJson } of parentRows) {\n        parentRefs.push(parentEntityRef);\n        if (!seenEntityRefs.has(parentEntityRef)) {\n          seenEntityRefs.add(parentEntityRef);\n          todo.push(JSON.parse(parentEntityJson));\n        }\n      }\n\n      items.push({\n        entity: current,\n        parentEntityRefs: parentRefs,\n      });\n    }\n\n    return {\n      rootEntityRef: stringifyEntityRef(rootEntity),\n      items,\n    };\n  }\n\n  async facets(request: EntityFacetsRequest): Promise<EntityFacetsResponse> {\n    const { entities } = await this.entities({\n      filter: request.filter,\n      authorizationToken: request.authorizationToken,\n    });\n\n    const facets: EntityFacetsResponse['facets'] = {};\n\n    for (const facet of request.facets) {\n      const values = entities\n        .map(entity => {\n          // TODO(freben): Generalize this code to handle any field that may\n          // have dots in its key?\n          if (facet.startsWith('metadata.annotations.')) {\n            return entity.metadata.annotations?.[\n              facet.substring('metadata.annotations.'.length)\n            ];\n          } else if (facet.startsWith('metadata.labels.')) {\n            return entity.metadata.labels?.[\n              facet.substring('metadata.labels.'.length)\n            ];\n          }\n          return lodash.get(entity, facet);\n        })\n        .flatMap(field => {\n          if (typeof field === 'string') {\n            return [field];\n          } else if (Array.isArray(field)) {\n            return field.filter(i => typeof i === 'string');\n          }\n          return [];\n        })\n        .sort();\n\n      const counts = lodash.countBy(values, lodash.identity);\n\n      facets[facet] = Object.entries(counts).map(([value, count]) => ({\n        value,\n        count,\n      }));\n    }\n\n    return { facets };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\nimport { Logger } from 'winston';\nimport { CatalogProcessorResult, EntityRelationSpec } from '../api';\nimport { locationSpecToLocationEntity } from '../util/conversion';\nimport { DeferredEntity } from './types';\nimport {\n  getEntityLocationRef,\n  getEntityOriginLocationRef,\n  validateEntityEnvelope,\n} from './util';\n\n/**\n * Helper class for aggregating all of the emitted data from processors.\n */\nexport class ProcessorOutputCollector {\n  private readonly errors = new Array<Error>();\n  private readonly relations = new Array<EntityRelationSpec>();\n  private readonly deferredEntities = new Array<DeferredEntity>();\n  private done = false;\n\n  constructor(\n    private readonly logger: Logger,\n    private readonly parentEntity: Entity,\n  ) {}\n\n  get onEmit(): (i: CatalogProcessorResult) => void {\n    return i => this.receive(i);\n  }\n\n  results() {\n    this.done = true;\n    return {\n      errors: this.errors,\n      relations: this.relations,\n      deferredEntities: this.deferredEntities,\n    };\n  }\n\n  private receive(i: CatalogProcessorResult) {\n    if (this.done) {\n      this.logger.warn(\n        `Item of type \"${\n          i.type\n        }\" was emitted after processing had completed. Stack trace: ${\n          new Error().stack\n        }`,\n      );\n      return;\n    }\n\n    if (i.type === 'entity') {\n      let entity: Entity;\n      const location = stringifyLocationRef(i.location);\n\n      try {\n        entity = validateEntityEnvelope(i.entity);\n      } catch (e) {\n        assertError(e);\n        this.logger.debug(`Envelope validation failed at ${location}, ${e}`);\n        this.errors.push(e);\n        return;\n      }\n\n      // Note that at this point, we have only validated the envelope part of\n      // the entity data. Annotations are not part of that, so we have to be\n      // defensive. If the annotations were malformed (e.g. were not a valid\n      // object), we just skip over this step and let the full entity\n      // validation at the next step of processing catch that.\n      const annotations = entity.metadata.annotations || {};\n      if (typeof annotations === 'object' && !Array.isArray(annotations)) {\n        const originLocation = getEntityOriginLocationRef(this.parentEntity);\n        entity = {\n          ...entity,\n          metadata: {\n            ...entity.metadata,\n            annotations: {\n              ...annotations,\n              [ANNOTATION_ORIGIN_LOCATION]: originLocation,\n              [ANNOTATION_LOCATION]: location,\n            },\n          },\n        };\n      }\n\n      this.deferredEntities.push({ entity, locationKey: location });\n    } else if (i.type === 'location') {\n      const entity = locationSpecToLocationEntity({\n        location: i.location,\n        parentEntity: this.parentEntity,\n      });\n      const locationKey = getEntityLocationRef(entity);\n      this.deferredEntities.push({ entity, locationKey });\n    } else if (i.type === 'relation') {\n      this.relations.push(i.relation);\n    } else if (i.type === 'error') {\n      this.errors.push(i.error);\n    }\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { CatalogProcessor, CatalogProcessorCache } from '../api';\nimport { isObject } from './util';\n\nclass SingleProcessorSubCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  collect(): JsonObject | undefined {\n    return this.newState ?? this.existingState;\n  }\n}\n\nclass SingleProcessorCache implements CatalogProcessorCache {\n  private newState?: JsonObject;\n  private subCaches: Map<string, SingleProcessorSubCache> = new Map();\n\n  constructor(private readonly existingState?: JsonObject) {}\n\n  async get<ItemType extends JsonValue>(\n    key: string,\n  ): Promise<ItemType | undefined> {\n    return this.existingState?.[key] as ItemType | undefined;\n  }\n\n  async set<ItemType extends JsonValue>(\n    key: string,\n    value: ItemType,\n  ): Promise<void> {\n    if (!this.newState) {\n      this.newState = {};\n    }\n\n    this.newState[key] = value;\n  }\n\n  withKey(key: string) {\n    const existingSubCache = this.subCaches.get(key);\n    if (existingSubCache) {\n      return existingSubCache;\n    }\n    const existing = this.existingState?.[key];\n    const subCache = new SingleProcessorSubCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.subCaches.set(key, subCache);\n    return subCache;\n  }\n\n  collect(): JsonObject | undefined {\n    let obj = this.newState ?? this.existingState;\n    for (const [key, subCache] of this.subCaches) {\n      const subCacheValue = subCache.collect();\n      if (subCacheValue) {\n        obj = { ...obj, [key]: subCacheValue };\n      }\n    }\n    return obj;\n  }\n}\n\nexport class ProcessorCacheManager {\n  private caches = new Map<string, SingleProcessorCache>();\n\n  constructor(private readonly existingState: JsonObject) {}\n\n  forProcessor(\n    processor: CatalogProcessor,\n    key?: string,\n  ): CatalogProcessorCache {\n    // constructor name will be deprecated in the future when we make `getProcessorName` required in the implementation\n    const name = processor.getProcessorName();\n    const cache = this.caches.get(name);\n    if (cache) {\n      return key ? cache.withKey(key) : cache;\n    }\n\n    const existing = this.existingState[name];\n\n    const newCache = new SingleProcessorCache(\n      isObject(existing) ? existing : undefined,\n    );\n    this.caches.set(name, newCache);\n    return key ? newCache.withKey(key) : newCache;\n  }\n\n  collect(): JsonObject {\n    const result: JsonObject = {};\n    for (const [key, value] of this.caches.entries()) {\n      result[key] = value.collect();\n    }\n\n    return result;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  EntityPolicy,\n  LocationEntity,\n  parseLocationRef,\n  stringifyEntityRef,\n  stringifyLocationRef,\n} from '@backstage/catalog-model';\nimport {\n  assertError,\n  ConflictError,\n  InputError,\n  NotAllowedError,\n} from '@backstage/errors';\nimport { JsonValue } from '@backstage/types';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport path from 'path';\nimport { Logger } from 'winston';\nimport {\n  CatalogProcessor,\n  CatalogProcessorParser,\n  LocationSpec,\n  processingResult,\n} from '../api';\nimport {\n  CatalogProcessingOrchestrator,\n  EntityProcessingRequest,\n  EntityProcessingResult,\n} from './types';\nimport { ProcessorOutputCollector } from './ProcessorOutputCollector';\nimport {\n  getEntityLocationRef,\n  getEntityOriginLocationRef,\n  isLocationEntity,\n  toAbsoluteUrl,\n  validateEntity,\n  validateEntityEnvelope,\n  isObject,\n} from './util';\nimport { CatalogRulesEnforcer } from '../ingestion/CatalogRules';\nimport { ProcessorCacheManager } from './ProcessorCacheManager';\n\ntype Context = {\n  entityRef: string;\n  location: LocationSpec;\n  originLocation: LocationSpec;\n  collector: ProcessorOutputCollector;\n  cache: ProcessorCacheManager;\n};\n\n/** @public */\nexport class DefaultCatalogProcessingOrchestrator\n  implements CatalogProcessingOrchestrator\n{\n  constructor(\n    private readonly options: {\n      processors: CatalogProcessor[];\n      integrations: ScmIntegrationRegistry;\n      logger: Logger;\n      parser: CatalogProcessorParser;\n      policy: EntityPolicy;\n      rulesEnforcer: CatalogRulesEnforcer;\n    },\n  ) {}\n\n  async process(\n    request: EntityProcessingRequest,\n  ): Promise<EntityProcessingResult> {\n    return this.processSingleEntity(request.entity, request.state);\n  }\n\n  private async processSingleEntity(\n    unprocessedEntity: Entity,\n    state: JsonValue | undefined,\n  ): Promise<EntityProcessingResult> {\n    const collector = new ProcessorOutputCollector(\n      this.options.logger,\n      unprocessedEntity,\n    );\n\n    // Cache that is scoped to the entity and processor\n    const cache = new ProcessorCacheManager(\n      isObject(state) && isObject(state.cache) ? state.cache : {},\n    );\n\n    try {\n      // This will be checked and mutated step by step below\n      let entity: Entity = unprocessedEntity;\n\n      // NOTE: At this early point, we can only rely on the envelope having to\n      // be valid; full entity + kind validation happens after the (potentially\n      // mutative) pre-steps. This means that the code below can't make a lot\n      // of assumptions about the data despite it using the Entity type.\n      try {\n        validateEntityEnvelope(entity);\n      } catch (e) {\n        throw new InputError(\n          `Entity envelope failed validation before processing`,\n          e,\n        );\n      }\n\n      // TODO: which one do we actually use for the location?\n      // source-location? - maybe probably doesn't exist yet?\n      const context: Context = {\n        entityRef: stringifyEntityRef(entity),\n        location: parseLocationRef(getEntityLocationRef(entity)),\n        originLocation: parseLocationRef(getEntityOriginLocationRef(entity)),\n        cache,\n        collector,\n      };\n\n      // Run the steps\n      entity = await this.runPreProcessStep(entity, context);\n      entity = await this.runPolicyStep(entity);\n      await this.runValidateStep(entity, context);\n      if (isLocationEntity(entity)) {\n        await this.runSpecialLocationStep(entity, context);\n      }\n      entity = await this.runPostProcessStep(entity, context);\n\n      // Check that any emitted entities are permitted to originate from that\n      // particular location according to the catalog rules\n      const collectorResults = context.collector.results();\n      for (const deferredEntity of collectorResults.deferredEntities) {\n        if (\n          !this.options.rulesEnforcer.isAllowed(\n            deferredEntity.entity,\n            context.originLocation,\n          )\n        ) {\n          throw new NotAllowedError(\n            `Entity ${stringifyEntityRef(\n              deferredEntity.entity,\n            )} at ${stringifyLocationRef(\n              context.location,\n            )}, originated at ${stringifyLocationRef(\n              context.originLocation,\n            )}, is not of an allowed kind for that location`,\n          );\n        }\n      }\n\n      return {\n        ...collectorResults,\n        completedEntity: entity,\n        state: { cache: cache.collect() },\n        ok: collectorResults.errors.length === 0,\n      };\n    } catch (error) {\n      assertError(error);\n      return {\n        ok: false,\n        errors: collector.results().errors.concat(error),\n      };\n    }\n  }\n\n  // Pre-process phase, used to populate entities with data that is required\n  // during the main processing step\n  private async runPreProcessStep(\n    entity: Entity,\n    context: Context,\n  ): Promise<Entity> {\n    let res = entity;\n\n    for (const processor of this.options.processors) {\n      if (processor.preProcessEntity) {\n        try {\n          res = await processor.preProcessEntity(\n            res,\n            context.location,\n            context.collector.onEmit,\n            context.originLocation,\n            context.cache.forProcessor(processor),\n          );\n        } catch (e) {\n          throw new InputError(\n            `Processor ${processor.constructor.name} threw an error while preprocessing`,\n            e,\n          );\n        }\n      }\n    }\n\n    return res;\n  }\n\n  /**\n   * Enforce entity policies making sure that entities conform to a general schema\n   */\n  private async runPolicyStep(entity: Entity): Promise<Entity> {\n    let policyEnforcedEntity: Entity | undefined;\n\n    try {\n      policyEnforcedEntity = await this.options.policy.enforce(entity);\n    } catch (e) {\n      throw new InputError('Policy check failed', e);\n    }\n\n    if (!policyEnforcedEntity) {\n      throw new Error('Policy unexpectedly returned no data');\n    }\n\n    return policyEnforcedEntity;\n  }\n\n  /**\n   * Validate the given entity\n   */\n  private async runValidateStep(\n    entity: Entity,\n    context: Context,\n  ): Promise<void> {\n    // Double check that none of the previous steps tried to change something\n    // related to the entity ref, which would break downstream\n    if (stringifyEntityRef(entity) !== context.entityRef) {\n      throw new ConflictError(\n        'Fatal: The entity kind, namespace, or name changed during processing',\n      );\n    }\n\n    // Validate that the end result is a valid Entity at all\n    try {\n      validateEntity(entity);\n    } catch (e) {\n      throw new ConflictError(\n        `Entity envelope for ${context.entityRef} failed validation after preprocessing`,\n        e,\n      );\n    }\n\n    let foundKind = false;\n\n    for (const processor of this.options.processors) {\n      if (processor.validateEntityKind) {\n        try {\n          foundKind = await processor.validateEntityKind(entity);\n          if (foundKind) {\n            // TODO(freben): It would make sense to keep running, so that\n            // multiple processors could have a go at making checks. For\n            // example, an org may want to add additional rules on top of the\n            // provided ones. But that would be a breaking change, so we'll\n            // postpone that to a future processors rewrite.\n            break;\n          }\n        } catch (e) {\n          throw new InputError(\n            `Processor ${processor.constructor.name} threw an error while validating the entity ${context.entityRef}`,\n            e,\n          );\n        }\n      }\n    }\n\n    if (!foundKind) {\n      throw new InputError(\n        `No processor recognized the entity ${context.entityRef} as valid, possibly caused by a foreign kind or apiVersion`,\n      );\n    }\n  }\n\n  /**\n   * Backwards compatible processing of location entities\n   */\n  private async runSpecialLocationStep(\n    entity: LocationEntity,\n    context: Context,\n  ): Promise<void> {\n    const { type = context.location.type, presence = 'required' } = entity.spec;\n    const targets = new Array<string>();\n    if (entity.spec.target) {\n      targets.push(entity.spec.target);\n    }\n    if (entity.spec.targets) {\n      targets.push(...entity.spec.targets);\n    }\n\n    for (const maybeRelativeTarget of targets) {\n      if (type === 'file' && maybeRelativeTarget.endsWith(path.sep)) {\n        context.collector.onEmit(\n          processingResult.inputError(\n            context.location,\n            `LocationEntityProcessor cannot handle ${type} type location with target ${context.location.target} that ends with a path separator`,\n          ),\n        );\n        continue;\n      }\n      const target = toAbsoluteUrl(\n        this.options.integrations,\n        context.location,\n        type,\n        maybeRelativeTarget,\n      );\n\n      let didRead = false;\n      for (const processor of this.options.processors) {\n        if (processor.readLocation) {\n          try {\n            const read = await processor.readLocation(\n              {\n                type,\n                target,\n                presence,\n              },\n              presence === 'optional',\n              context.collector.onEmit,\n              this.options.parser,\n              context.cache.forProcessor(processor, target),\n            );\n            if (read) {\n              didRead = true;\n              break;\n            }\n          } catch (e) {\n            throw new InputError(\n              `Processor ${processor.constructor.name} threw an error while reading ${type}:${target}`,\n              e,\n            );\n          }\n        }\n      }\n      if (!didRead) {\n        throw new InputError(\n          `No processor was able to handle reading of ${type}:${target}`,\n        );\n      }\n    }\n  }\n\n  /**\n   * Main processing step of the entity\n   */\n  private async runPostProcessStep(\n    entity: Entity,\n    context: Context,\n  ): Promise<Entity> {\n    let res = entity;\n\n    for (const processor of this.options.processors) {\n      if (processor.postProcessEntity) {\n        try {\n          res = await processor.postProcessEntity(\n            res,\n            context.location,\n            context.collector.onEmit,\n            context.cache.forProcessor(processor),\n          );\n        } catch (e) {\n          throw new InputError(\n            `Processor ${processor.constructor.name} threw an error while postprocessing`,\n            e,\n          );\n        }\n      }\n    }\n\n    return res;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { InputError } from '@backstage/errors';\nimport { DbSearchRow } from '../database/tables';\n\n// These are excluded in the generic loop, either because they do not make sense\n// to index, or because they are special-case always inserted whether they are\n// null or not\nconst SPECIAL_KEYS = [\n  'attachments',\n  'relations',\n  'status',\n  'metadata.name',\n  'metadata.namespace',\n  'metadata.uid',\n  'metadata.etag',\n];\n\n// The maximum length allowed for search values. These columns are indexed, and\n// database engines do not like to index on massive values. For example,\n// postgres will balk after 8191 byte line sizes.\nconst MAX_KEY_LENGTH = 200;\nconst MAX_VALUE_LENGTH = 200;\n\ntype Kv = {\n  key: string;\n  value: unknown;\n};\n\n// Helper for traversing through a nested structure and outputting a list of\n// path->value entries of the leaves.\n//\n// For example, this yaml structure\n//\n// a: 1\n// b:\n//   c: null\n//   e: [f, g]\n// h:\n//  - i: 1\n//    j: k\n//  - i: 2\n//    j: l\n//\n// will result in\n//\n// \"a\", 1\n// \"b.c\", null\n// \"b.e\": \"f\"\n// \"b.e.f\": true\n// \"b.e\": \"g\"\n// \"b.e.g\": true\n// \"h.i\": 1\n// \"h.j\": \"k\"\n// \"h.i\": 2\n// \"h.j\": \"l\"\nexport function traverse(root: unknown): Kv[] {\n  const output: Kv[] = [];\n\n  function visit(path: string, current: unknown) {\n    if (SPECIAL_KEYS.includes(path)) {\n      return;\n    }\n\n    // empty or scalar\n    if (\n      current === undefined ||\n      current === null ||\n      ['string', 'number', 'boolean'].includes(typeof current)\n    ) {\n      output.push({ key: path, value: current });\n      return;\n    }\n\n    // unknown\n    if (typeof current !== 'object') {\n      return;\n    }\n\n    // array\n    if (Array.isArray(current)) {\n      for (const item of current) {\n        // NOTE(freben): The reason that these are output in two different ways,\n        // is to support use cases where you want to express that MORE than one\n        // tag is present in a list. Since the EntityFilters structure is a\n        // record, you can't have several entries of the same key. Therefore\n        // you will have to match on\n        //\n        // { \"a.b\": [\"true\"], \"a.c\": [\"true\"] }\n        //\n        // rather than\n        //\n        // { \"a\": [\"b\", \"c\"] }\n        //\n        // because the latter means EITHER b or c has to be present.\n        visit(path, item);\n        if (typeof item === 'string') {\n          output.push({ key: `${path}.${item}`, value: true });\n        }\n      }\n      return;\n    }\n\n    // object\n    for (const [key, value] of Object.entries(current!)) {\n      visit(path ? `${path}.${key}` : key, value);\n    }\n  }\n\n  visit('', root);\n\n  return output;\n}\n\n// Translates a number of raw data rows to search table rows\nexport function mapToRows(input: Kv[], entityId: string): DbSearchRow[] {\n  const result: DbSearchRow[] = [];\n\n  for (const { key: rawKey, value: rawValue } of input) {\n    const key = rawKey.toLocaleLowerCase('en-US');\n    if (rawValue === undefined || rawValue === null) {\n      result.push({ entity_id: entityId, key, value: null });\n    } else {\n      const value = String(rawValue).toLocaleLowerCase('en-US');\n      if (key.length <= MAX_KEY_LENGTH && value.length <= MAX_VALUE_LENGTH) {\n        result.push({ entity_id: entityId, key, value });\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Generates all of the search rows that are relevant for this entity.\n *\n * @param entityId - The uid of the entity\n * @param entity - The entity\n * @returns A list of entity search rows\n */\nexport function buildEntitySearch(\n  entityId: string,\n  entity: Entity,\n): DbSearchRow[] {\n  // Visit the base structure recursively\n  const raw = traverse(entity);\n\n  // Start with some special keys that are always present because you want to\n  // be able to easily search for null specifically\n  raw.push({ key: 'metadata.name', value: entity.metadata.name });\n  raw.push({ key: 'metadata.namespace', value: entity.metadata.namespace });\n  raw.push({ key: 'metadata.uid', value: entity.metadata.uid });\n\n  // Namespace not specified has the default value \"default\", so we want to\n  // match on that as well\n  if (!entity.metadata.namespace) {\n    raw.push({ key: 'metadata.namespace', value: DEFAULT_NAMESPACE });\n  }\n\n  // Visit relations\n  for (const relation of entity.relations ?? []) {\n    raw.push({\n      key: `relations.${relation.type}`,\n      value: relation.targetRef,\n    });\n  }\n\n  // This validates that there are no keys that vary only in casing, such\n  // as `spec.foo` and `spec.Foo`.\n  const keys = new Set(raw.map(r => r.key));\n  const lowerKeys = new Set(raw.map(r => r.key.toLocaleLowerCase('en-US')));\n  if (keys.size !== lowerKeys.size) {\n    const difference = [];\n    for (const key of keys) {\n      const lower = key.toLocaleLowerCase('en-US');\n      if (!lowerKeys.delete(lower)) {\n        difference.push(lower);\n      }\n    }\n    const badKeys = `'${difference.join(\"', '\")}'`;\n    throw new InputError(\n      `Entity has duplicate keys that vary only in casing, ${badKeys}`,\n    );\n  }\n\n  return mapToRows(raw, entityId);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { createHash } from 'crypto';\nimport stableStringify from 'fast-json-stable-stringify';\n\n// The number of items that are sent per batch to the database layer, when\n// doing .batchInsert calls to knex. This needs to be low enough to not cause\n// errors in the underlying engine due to exceeding query limits, but large\n// enough to get the speed benefits.\nexport const BATCH_SIZE = 50;\n\nexport function generateStableHash(entity: Entity) {\n  return createHash('sha1')\n    .update(stableStringify({ ...entity }))\n    .digest('hex');\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ENTITY_STATUS_CATALOG_PROCESSING_TYPE } from '@backstage/catalog-client';\nimport {\n  AlphaEntity,\n  EntityRelation,\n  EntityStatusItem,\n} from '@backstage/catalog-model';\nimport { SerializedError, stringifyError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { uniqBy } from 'lodash';\nimport { v4 as uuid } from 'uuid';\nimport { Logger } from 'winston';\nimport {\n  DbFinalEntitiesRow,\n  DbRefreshStateRow,\n  DbSearchRow,\n} from '../database/tables';\nimport { buildEntitySearch } from './buildEntitySearch';\nimport { BATCH_SIZE, generateStableHash } from './util';\n\n/**\n * Performs the act of stitching - to take all of the various outputs from the\n * ingestion process, and stitching them together into the final entity JSON\n * shape.\n */\nexport class Stitcher {\n  constructor(\n    private readonly database: Knex,\n    private readonly logger: Logger,\n  ) {}\n\n  async stitch(entityRefs: Set<string>) {\n    for (const entityRef of entityRefs) {\n      try {\n        await this.stitchOne(entityRef);\n      } catch (error) {\n        this.logger.error(\n          `Failed to stitch ${entityRef}, ${stringifyError(error)}`,\n        );\n      }\n    }\n  }\n\n  private async stitchOne(entityRef: string): Promise<void> {\n    const entityResult = await this.database<DbRefreshStateRow>('refresh_state')\n      .where({ entity_ref: entityRef })\n      .limit(1)\n      .select('entity_id');\n    if (!entityResult.length) {\n      // Entity does no exist in refresh state table, no stitching required.\n      return;\n    }\n\n    // Insert stitching ticket that will be compared before inserting the final entity.\n    const ticket = uuid();\n    await this.database<DbFinalEntitiesRow>('final_entities')\n      .insert({\n        entity_id: entityResult[0].entity_id,\n        hash: '',\n        stitch_ticket: ticket,\n      })\n      .onConflict('entity_id')\n      .merge(['stitch_ticket']);\n\n    // Selecting from refresh_state and final_entities should yield exactly\n    // one row (except in abnormal cases where the stitch was invoked for\n    // something that didn't exist at all, in which case it's zero rows).\n    // The join with the temporary incoming_references still gives one row.\n    // The only result set \"expanding\" join is the one with relations, so\n    // the output should be at least one row (if zero or one relations were\n    // found), or at most the same number of rows as relations.\n    const result: Array<{\n      entityId: string;\n      processedEntity?: string;\n      errors: string;\n      incomingReferenceCount: string | number;\n      previousHash?: string;\n      relationType?: string;\n      relationTarget?: string;\n    }> = await this.database\n      .with('incoming_references', function incomingReferences(builder) {\n        return builder\n          .from('refresh_state_references')\n          .where({ target_entity_ref: entityRef })\n          .count({ count: '*' });\n      })\n      .select({\n        entityId: 'refresh_state.entity_id',\n        processedEntity: 'refresh_state.processed_entity',\n        errors: 'refresh_state.errors',\n        incomingReferenceCount: 'incoming_references.count',\n        previousHash: 'final_entities.hash',\n        relationType: 'relations.type',\n        relationTarget: 'relations.target_entity_ref',\n      })\n      .from('refresh_state')\n      .where({ 'refresh_state.entity_ref': entityRef })\n      .crossJoin(this.database.raw('incoming_references'))\n      .leftOuterJoin('final_entities', {\n        'final_entities.entity_id': 'refresh_state.entity_id',\n      })\n      .leftOuterJoin('relations', {\n        'relations.source_entity_ref': 'refresh_state.entity_ref',\n      })\n      .orderBy('relationType', 'asc')\n      .orderBy('relationTarget', 'asc');\n\n    // If there were no rows returned, it would mean that there was no\n    // matching row even in the refresh_state. This can happen for example\n    // if we emit a relation to something that hasn't been ingested yet.\n    // It's safe to ignore this stitch attempt in that case.\n    if (!result.length) {\n      this.logger.error(\n        `Unable to stitch ${entityRef}, item does not exist in refresh state table`,\n      );\n      return;\n    }\n\n    const {\n      entityId,\n      processedEntity,\n      errors,\n      incomingReferenceCount,\n      previousHash,\n    } = result[0];\n\n    // If there was no processed entity in place, the target hasn't been\n    // through the processing steps yet. It's safe to ignore this stitch\n    // attempt in that case, since another stitch will be triggered when\n    // that processing has finished.\n    if (!processedEntity) {\n      this.logger.debug(\n        `Unable to stitch ${entityRef}, the entity has not yet been processed`,\n      );\n      return;\n    }\n\n    // Grab the processed entity and stitch all of the relevant data into\n    // it\n    const entity = JSON.parse(processedEntity) as AlphaEntity;\n    const isOrphan = Number(incomingReferenceCount) === 0;\n    let statusItems: EntityStatusItem[] = [];\n\n    if (isOrphan) {\n      this.logger.debug(`${entityRef} is an orphan`);\n      entity.metadata.annotations = {\n        ...entity.metadata.annotations,\n        ['backstage.io/orphan']: 'true',\n      };\n    }\n    if (errors) {\n      const parsedErrors = JSON.parse(errors) as SerializedError[];\n      if (Array.isArray(parsedErrors) && parsedErrors.length) {\n        statusItems = parsedErrors.map(e => ({\n          type: ENTITY_STATUS_CATALOG_PROCESSING_TYPE,\n          level: 'error',\n          message: `${e.name}: ${e.message}`,\n          error: e,\n        }));\n      }\n    }\n\n    // TODO: entityRef is lower case and should be uppercase in the final\n    // result\n    const uniqueRelationRows = uniqBy(\n      result,\n      r => `${r.relationType}:${r.relationTarget}`,\n    );\n    entity.relations = uniqueRelationRows\n      .filter(row => row.relationType /* exclude null row, if relevant */)\n      .map<EntityRelation>(row => ({\n        type: row.relationType!,\n        targetRef: row.relationTarget!,\n      }));\n    if (statusItems.length) {\n      entity.status = {\n        ...entity.status,\n        items: [...(entity.status?.items ?? []), ...statusItems],\n      };\n    }\n\n    // If the output entity was actually not changed, just abort\n    const hash = generateStableHash(entity);\n    if (hash === previousHash) {\n      this.logger.debug(`Skipped stitching of ${entityRef}, no changes`);\n      return;\n    }\n\n    entity.metadata.uid = entityId;\n    if (!entity.metadata.etag) {\n      // If the original data source did not have its own etag handling,\n      // use the hash as a good-quality etag\n      entity.metadata.etag = hash;\n    }\n\n    // This may throw if the entity is invalid, so we call it before\n    // the final_entities write, even though we may end up not needing\n    // to write the search index.\n    const searchEntries = buildEntitySearch(entityId, entity);\n\n    const amountOfRowsChanged = await this.database<DbFinalEntitiesRow>(\n      'final_entities',\n    )\n      .update({\n        final_entity: JSON.stringify(entity),\n        hash,\n      })\n      .where('entity_id', entityId)\n      .where('stitch_ticket', ticket)\n      .onConflict('entity_id')\n      .merge(['final_entity', 'hash']);\n\n    if (amountOfRowsChanged === 0) {\n      this.logger.debug(\n        `Entity ${entityRef} is already processed, skipping write.`,\n      );\n      return;\n    }\n\n    // TODO(freben): Search will probably need a similar safeguard against\n    // race conditions like the final_entities ticket handling above.\n    // Otherwise, it can be the case that:\n    // A writes the entity ->\n    // B writes the entity ->\n    // B writes search ->\n    // A writes search\n    await this.database<DbSearchRow>('search')\n      .where({ entity_id: entityId })\n      .delete();\n    await this.database.batchInsert('search', searchEntries, BATCH_SIZE);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntitiesSearchFilter, EntityFilter } from '../../catalog';\n\n/**\n * Forms a full EntityFilter based on a single key-value(s) object.\n */\nexport function basicEntityFilter(\n  items: Record<string, string | string[]>,\n): EntityFilter {\n  const filtersByKey: Record<string, EntitiesSearchFilter> = {};\n\n  for (const [key, value] of Object.entries(items)) {\n    const values = [value].flat();\n\n    const f =\n      key in filtersByKey\n        ? filtersByKey[key]\n        : (filtersByKey[key] = { key, values: [] });\n\n    f.values!.push(...values);\n  }\n\n  return { anyOf: [{ allOf: Object.values(filtersByKey) }] };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\n\n/**\n * Takes a single unknown parameter and makes sure that it's a string that can\n * be parsed as an integer.\n */\nexport function parseIntegerParam(\n  param: unknown,\n  ctx: string,\n): number | undefined {\n  if (param === undefined) {\n    return undefined;\n  }\n\n  if (typeof param !== 'string') {\n    throw new InputError(`Invalid ${ctx}, not an integer on string form`);\n  }\n\n  const parsed = parseInt(param, 10);\n  if (!Number.isInteger(parsed) || String(parsed) !== param) {\n    throw new InputError(`Invalid ${ctx}, not an integer`);\n  }\n\n  return parsed;\n}\n\n/**\n * Takes a single unknown parameter and makes sure that it's a string.\n */\nexport function parseStringParam(\n  param: unknown,\n  ctx: string,\n): string | undefined {\n  if (param === undefined) {\n    return undefined;\n  }\n\n  if (typeof param !== 'string') {\n    throw new InputError(`Invalid ${ctx}, not a string`);\n  }\n\n  return param;\n}\n\n/**\n * Takes a single unknown parameter and makes sure that it's a single string or\n * an array of strings, and returns as an array.\n */\nexport function parseStringsParam(\n  param: unknown,\n  ctx: string,\n): string[] | undefined {\n  if (param === undefined) {\n    return undefined;\n  }\n\n  const array = [param].flat();\n  if (array.some(p => typeof p !== 'string')) {\n    throw new InputError(`Invalid ${ctx}, not a string`);\n  }\n\n  return array as string[];\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { EntitiesSearchFilter, EntityFilter } from '../../catalog';\nimport { parseStringsParam } from './common';\n\n/**\n * Parses the filtering part of a query, like\n * /entities?filter=metadata.namespace=default,kind=Component\n */\nexport function parseEntityFilterParams(\n  params: Record<string, unknown>,\n): EntityFilter | undefined {\n  // Each filter string is on the form a=b,c=d\n  const filterStrings = parseStringsParam(params.filter, 'filter');\n  if (!filterStrings) {\n    return undefined;\n  }\n\n  // Outer array: \"any of the inner ones\"\n  // Inner arrays: \"all of these must match\"\n  const filters = filterStrings.map(parseEntityFilterString).filter(Boolean);\n  if (!filters.length) {\n    return undefined;\n  }\n\n  return { anyOf: filters.map(f => ({ allOf: f! })) };\n}\n\n/**\n * Parses a single filter string as seen in a filter query, for example\n * metadata.namespace=default,kind=Component\n */\nexport function parseEntityFilterString(\n  filterString: string,\n): EntitiesSearchFilter[] | undefined {\n  const statements = filterString\n    .split(',')\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  if (!statements.length) {\n    return undefined;\n  }\n\n  const filtersByKey: Record<string, EntitiesSearchFilter> = {};\n\n  for (const statement of statements) {\n    const equalsIndex = statement.indexOf('=');\n\n    const key =\n      equalsIndex === -1 ? statement : statement.substr(0, equalsIndex).trim();\n    const value =\n      equalsIndex === -1 ? undefined : statement.substr(equalsIndex + 1).trim();\n    if (!key) {\n      throw new InputError(\n        `Invalid filter, '${statement}' is not a valid statement (expected a string on the form a=b or a= or a)`,\n      );\n    }\n\n    const f =\n      key in filtersByKey ? filtersByKey[key] : (filtersByKey[key] = { key });\n\n    if (value !== undefined) {\n      f.values = f.values || [];\n      f.values.push(value);\n    }\n  }\n\n  return Object.values(filtersByKey);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { EntityPagination } from '../../catalog/types';\nimport { parseIntegerParam, parseStringParam } from './common';\n\n/**\n * Parses the pagination related parameters out of a query, e.g.\n * /entities?offset=100&limit=10\n */\nexport function parseEntityPaginationParams(\n  params: Record<string, unknown>,\n): EntityPagination | undefined {\n  const offset = parseIntegerParam(params.offset, 'offset');\n  const limit = parseIntegerParam(params.limit, 'limit');\n  const after = parseStringParam(params.after, 'after');\n\n  if (offset === undefined && limit === undefined && after === undefined) {\n    return undefined;\n  }\n\n  if (offset !== undefined && offset < 0) {\n    throw new InputError(`Invalid offset, must be zero or greater`);\n  }\n  if (limit !== undefined && limit <= 0) {\n    throw new InputError(`Invalid limit, must be greater than zero`);\n  }\n  if (after !== undefined && !after) {\n    throw new InputError(`Invalid after, must not be empty`);\n  }\n\n  return {\n    ...(offset !== undefined ? { offset } : {}),\n    ...(limit !== undefined ? { limit } : {}),\n    ...(after !== undefined ? { after } : {}),\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { InputError } from '@backstage/errors';\nimport lodash from 'lodash';\nimport { RecursivePartial } from '../../util/RecursivePartial';\nimport { parseStringsParam } from './common';\n\nfunction getPathArrayAndValue(input: Entity, field: string) {\n  return field.split('.').reduce(\n    ([pathArray, inputSubset], pathPart, index, fieldParts) => {\n      if (lodash.hasIn(inputSubset, pathPart)) {\n        return [pathArray.concat(pathPart), inputSubset[pathPart]];\n      } else if (fieldParts[index + 1] !== undefined) {\n        fieldParts[index + 1] = `${pathPart}.${fieldParts[index + 1]}`;\n        return [pathArray, inputSubset];\n      }\n\n      return [pathArray, undefined];\n    },\n    [[] as string[], input as any],\n  );\n}\n\nexport function parseEntityTransformParams(\n  params: Record<string, unknown>,\n): ((entity: Entity) => Entity) | undefined {\n  const fieldsStrings = parseStringsParam(params.fields, 'fields');\n  if (!fieldsStrings) {\n    return undefined;\n  }\n\n  const fields = fieldsStrings\n    .map(s => s.split(','))\n    .flat()\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  if (!fields.length) {\n    return undefined;\n  }\n\n  if (fields.some(f => f.includes('['))) {\n    throw new InputError('invalid fields, array type fields are not supported');\n  }\n\n  return input => {\n    const output: RecursivePartial<Entity> = {};\n\n    for (const field of fields) {\n      const [pathArray, value] = getPathArrayAndValue(input, field);\n\n      if (value !== undefined) {\n        lodash.set(output, pathArray, value);\n      }\n    }\n\n    return output as Entity;\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError, NotAllowedError } from '@backstage/errors';\nimport { Request } from 'express';\nimport lodash from 'lodash';\nimport { z } from 'zod';\n\nexport async function requireRequestBody(req: Request): Promise<unknown> {\n  const contentType = req.header('content-type');\n  if (!contentType) {\n    throw new InputError('Content-Type missing');\n  } else if (!contentType.match(/^application\\/json($|;)/)) {\n    throw new InputError('Illegal Content-Type');\n  }\n\n  const body = req.body;\n  if (!body) {\n    throw new InputError('Missing request body');\n  } else if (!lodash.isPlainObject(body)) {\n    throw new InputError('Expected body to be a JSON object');\n  } else if (Object.keys(body).length === 0) {\n    // Because of how express.json() translates the empty body to {}\n    throw new InputError('Empty request body');\n  }\n\n  return body;\n}\n\nexport const locationInput = z\n  .object({\n    type: z.string(),\n    target: z.string(),\n    presence: z.literal('required').or(z.literal('optional')).optional(),\n  })\n  .strict(); // no unknown keys;\n\nexport async function validateRequestBody<T>(\n  req: Request,\n  schema: z.Schema<T>,\n): Promise<T> {\n  const body = await requireRequestBody(req);\n  try {\n    return await schema.parse(body);\n  } catch (e) {\n    throw new InputError(`Malformed request: ${e}`);\n  }\n}\n\nexport function disallowReadonlyMode(readonly: boolean) {\n  if (readonly) {\n    throw new NotAllowedError('This operation not allowed in readonly mode');\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { parseStringsParam } from './common';\n\n/**\n * Parses the facets part of a facet query, like\n * /entity-facets?filter=metadata.namespace=default,kind=Component&facet=metadata.namespace\n */\nexport function parseEntityFacetParams(\n  params: Record<string, unknown>,\n): string[] {\n  // Each facet string is on the form a.b.c\n  const facetStrings = parseStringsParam(params.facet, 'facet');\n  if (facetStrings) {\n    const filtered = facetStrings.filter(Boolean);\n    if (filtered.length) {\n      return filtered;\n    }\n  }\n\n  throw new InputError('Missing facet parameter');\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorHandler } from '@backstage/backend-common';\nimport {\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  Entity,\n  parseLocationRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { NotFoundError, serializeError } from '@backstage/errors';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\nimport yn from 'yn';\nimport { EntitiesCatalog } from '../catalog/types';\nimport { LocationAnalyzer } from '../ingestion/types';\nimport {\n  basicEntityFilter,\n  parseEntityFilterParams,\n  parseEntityPaginationParams,\n  parseEntityTransformParams,\n} from './request';\nimport {\n  disallowReadonlyMode,\n  locationInput,\n  validateRequestBody,\n} from './util';\nimport { z } from 'zod';\nimport { parseEntityFacetParams } from './request/parseEntityFacetParams';\nimport { RefreshOptions, LocationService, RefreshService } from './types';\nimport { CatalogProcessingOrchestrator } from '../processing/types';\nimport { validateEntityEnvelope } from '../processing/util';\n\n/**\n * Options used by {@link createRouter}.\n *\n * @public\n */\nexport interface RouterOptions {\n  entitiesCatalog?: EntitiesCatalog;\n  locationAnalyzer?: LocationAnalyzer;\n  locationService: LocationService;\n  orchestrator?: CatalogProcessingOrchestrator;\n  refreshService?: RefreshService;\n  logger: Logger;\n  config: Config;\n  permissionIntegrationRouter?: express.Router;\n}\n\n/**\n * Creates a catalog router.\n *\n * @public\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const {\n    entitiesCatalog,\n    locationAnalyzer,\n    locationService,\n    orchestrator,\n    refreshService,\n    config,\n    logger,\n    permissionIntegrationRouter,\n  } = options;\n  const router = Router();\n  router.use(express.json());\n\n  const readonlyEnabled =\n    config.getOptionalBoolean('catalog.readonly') || false;\n  if (readonlyEnabled) {\n    logger.info('Catalog is running in readonly mode');\n  }\n\n  if (refreshService) {\n    router.post('/refresh', async (req, res) => {\n      const refreshOptions: RefreshOptions = req.body;\n      refreshOptions.authorizationToken = getBearerToken(\n        req.header('authorization'),\n      );\n\n      await refreshService.refresh(refreshOptions);\n      res.status(200).send();\n    });\n  }\n\n  if (permissionIntegrationRouter) {\n    router.use(permissionIntegrationRouter);\n  }\n\n  if (entitiesCatalog) {\n    router\n      .get('/entities', async (req, res) => {\n        const { entities, pageInfo } = await entitiesCatalog.entities({\n          filter: parseEntityFilterParams(req.query),\n          fields: parseEntityTransformParams(req.query),\n          pagination: parseEntityPaginationParams(req.query),\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n\n        // Add a Link header to the next page\n        if (pageInfo.hasNextPage) {\n          const url = new URL(`http://ignored${req.url}`);\n          url.searchParams.delete('offset');\n          url.searchParams.set('after', pageInfo.endCursor);\n          res.setHeader('link', `<${url.pathname}${url.search}>; rel=\"next\"`);\n        }\n\n        // TODO(freben): encode the pageInfo in the response\n        res.json(entities);\n      })\n      .get('/entities/by-uid/:uid', async (req, res) => {\n        const { uid } = req.params;\n        const { entities } = await entitiesCatalog.entities({\n          filter: basicEntityFilter({ 'metadata.uid': uid }),\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        if (!entities.length) {\n          throw new NotFoundError(`No entity with uid ${uid}`);\n        }\n        res.status(200).json(entities[0]);\n      })\n      .delete('/entities/by-uid/:uid', async (req, res) => {\n        const { uid } = req.params;\n        await entitiesCatalog.removeEntityByUid(uid, {\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(204).end();\n      })\n      .get('/entities/by-name/:kind/:namespace/:name', async (req, res) => {\n        const { kind, namespace, name } = req.params;\n        const { entities } = await entitiesCatalog.entities({\n          filter: basicEntityFilter({\n            kind: kind,\n            'metadata.namespace': namespace,\n            'metadata.name': name,\n          }),\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        if (!entities.length) {\n          throw new NotFoundError(\n            `No entity named '${name}' found, with kind '${kind}' in namespace '${namespace}'`,\n          );\n        }\n        res.status(200).json(entities[0]);\n      })\n      .get(\n        '/entities/by-name/:kind/:namespace/:name/ancestry',\n        async (req, res) => {\n          const { kind, namespace, name } = req.params;\n          const entityRef = stringifyEntityRef({ kind, namespace, name });\n          const response = await entitiesCatalog.entityAncestry(entityRef, {\n            authorizationToken: getBearerToken(req.header('authorization')),\n          });\n          res.status(200).json(response);\n        },\n      )\n      .get('/entity-facets', async (req, res) => {\n        const response = await entitiesCatalog.facets({\n          filter: parseEntityFilterParams(req.query),\n          facets: parseEntityFacetParams(req.query),\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(200).json(response);\n      });\n  }\n\n  if (locationService) {\n    router\n      .post('/locations', async (req, res) => {\n        const location = await validateRequestBody(req, locationInput);\n        const dryRun = yn(req.query.dryRun, { default: false });\n\n        // when in dryRun addLocation is effectively a read operation so we don't\n        // need to disallow readonly\n        if (!dryRun) {\n          disallowReadonlyMode(readonlyEnabled);\n        }\n\n        const output = await locationService.createLocation(location, dryRun, {\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(201).json(output);\n      })\n      .get('/locations', async (req, res) => {\n        const locations = await locationService.listLocations({\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(200).json(locations.map(l => ({ data: l })));\n      })\n\n      .get('/locations/:id', async (req, res) => {\n        const { id } = req.params;\n        const output = await locationService.getLocation(id, {\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(200).json(output);\n      })\n      .delete('/locations/:id', async (req, res) => {\n        disallowReadonlyMode(readonlyEnabled);\n\n        const { id } = req.params;\n        await locationService.deleteLocation(id, {\n          authorizationToken: getBearerToken(req.header('authorization')),\n        });\n        res.status(204).end();\n      });\n  }\n\n  if (locationAnalyzer) {\n    router.post('/analyze-location', async (req, res) => {\n      const body = await validateRequestBody(\n        req,\n        z.object({ location: locationInput }),\n      );\n      const schema = z.object({ location: locationInput });\n      const output = await locationAnalyzer.analyzeLocation(schema.parse(body));\n      res.status(200).json(output);\n    });\n  }\n\n  if (orchestrator) {\n    router.post('/validate-entity', async (req, res) => {\n      const bodySchema = z.object({\n        entity: z.unknown(),\n        location: z.string(),\n      });\n\n      let body: z.infer<typeof bodySchema>;\n      let entity: Entity;\n      let location: { type: string; target: string };\n      try {\n        body = await validateRequestBody(req, bodySchema);\n        entity = validateEntityEnvelope(body.entity);\n        location = parseLocationRef(body.location);\n        if (location.type !== 'url')\n          throw new TypeError(\n            `Invalid location ref ${body.location}, only 'url:<target>' is supported, e.g. url:https://host/path`,\n          );\n      } catch (err) {\n        return res.status(400).json({\n          errors: [serializeError(err)],\n        });\n      }\n\n      const processingResult = await orchestrator.process({\n        entity: {\n          ...entity,\n          metadata: {\n            ...entity.metadata,\n            annotations: {\n              [ANNOTATION_LOCATION]: body.location,\n              [ANNOTATION_ORIGIN_LOCATION]: body.location,\n              ...entity.metadata.annotations,\n            },\n          },\n        },\n      });\n\n      if (!processingResult.ok)\n        res.status(400).json({\n          errors: processingResult.errors.map(e => serializeError(e)),\n        });\n      return res.status(200).end();\n    });\n  }\n\n  router.use(errorHandler());\n  return router;\n}\n\nfunction getBearerToken(\n  authorizationHeader: string | undefined,\n): string | undefined {\n  if (typeof authorizationHeader !== 'string') {\n    return undefined;\n  }\n  const matches = authorizationHeader.match(/Bearer\\s+(\\S+)/i);\n  return matches?.[1];\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DefaultProcessingDatabase } from '../database/DefaultProcessingDatabase';\nimport { RefreshOptions, RefreshService } from './types';\n\nexport class DefaultRefreshService implements RefreshService {\n  private database: DefaultProcessingDatabase;\n\n  constructor(options: { database: DefaultProcessingDatabase }) {\n    this.database = options.database;\n  }\n\n  async refresh(options: RefreshOptions) {\n    await this.database.transaction(async tx => {\n      const { entityRefs } = await this.database.listAncestors(tx, {\n        entityRef: options.entityRef,\n      });\n      const locationAncestor = entityRefs.find(ref =>\n        ref.startsWith('location:'),\n      );\n\n      // TODO: Refreshes are currently scheduled(as soon as possible) for execution and will therefore happen in the future.\n      // There's room for improvements here where the refresh could potentially hang or return an ID so that the user can check progress.\n      if (locationAncestor) {\n        await this.database.refresh(tx, {\n          entityRef: locationAncestor,\n        });\n      }\n      await this.database.refresh(tx, {\n        entityRef: options.entityRef,\n      });\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotAllowedError } from '@backstage/errors';\nimport { catalogEntityRefreshPermission } from '@backstage/plugin-catalog-common';\nimport {\n  AuthorizeResult,\n  PermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport { RefreshOptions, RefreshService } from './types';\n\nexport class AuthorizedRefreshService implements RefreshService {\n  constructor(\n    private readonly service: RefreshService,\n    private readonly permissionApi: PermissionEvaluator,\n  ) {}\n\n  async refresh(options: RefreshOptions) {\n    const authorizeDecision = (\n      await this.permissionApi.authorize(\n        [\n          {\n            permission: catalogEntityRefreshPermission,\n            resourceRef: options.entityRef,\n          },\n        ],\n        { token: options.authorizationToken },\n      )\n    )[0];\n    if (authorizeDecision.result !== AuthorizeResult.ALLOW) {\n      throw new NotAllowedError();\n    }\n    await this.service.refresh(options);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { Entity } from '@backstage/catalog-model';\nimport path from 'path';\nimport { LocationSpec } from '../api';\n\n/**\n * Rules to apply to catalog entities.\n *\n * An undefined list of matchers means match all, an empty list of matchers means match none.\n */\nexport type CatalogRule = {\n  allow: Array<{\n    kind: string;\n  }>;\n  locations?: Array<{\n    target?: string;\n    type: string;\n  }>;\n};\n\n/**\n * Decides whether an entity from a given location is allowed to enter the\n * catalog, according to some rule set.\n */\nexport type CatalogRulesEnforcer = {\n  isAllowed(entity: Entity, location: LocationSpec): boolean;\n};\n\n/**\n * Implements the default catalog rule set, consuming the config keys\n * `catalog.rules` and `catalog.locations.[].rules`.\n */\nexport class DefaultCatalogRulesEnforcer implements CatalogRulesEnforcer {\n  /**\n   * Default rules used by the catalog.\n   *\n   * Denies any location from specifying user or group entities.\n   */\n  static readonly defaultRules: CatalogRule[] = [\n    {\n      allow: ['Component', 'API', 'Location'].map(kind => ({ kind })),\n    },\n  ];\n\n  /**\n   * Loads catalog rules from config.\n   *\n   * This reads `catalog.rules` and defaults to the default rules if no value is present.\n   * The value of the config should be a list of config objects, each with a single `allow`\n   * field which in turn is a list of entity kinds to allow.\n   *\n   * If there is no matching rule to allow an ingested entity, it will be rejected by the catalog.\n   *\n   * It also reads in rules from `catalog.locations`, where each location can have a list\n   * of rules for that specific location, specified in a `rules` field.\n   *\n   * For example:\n   *\n   * ```yaml\n   * catalog:\n   *   rules:\n   *   - allow: [Component, API]\n   *\n   *   locations:\n   *   - type: url\n   *     target: https://github.com/org/repo/blob/master/users.yaml\n   *     rules:\n   *       - allow: [User, Group]\n   *   - type: url\n   *     target: https://github.com/org/repo/blob/master/systems.yaml\n   *     rules:\n   *       - allow: [System]\n   * ```\n   */\n  static fromConfig(config: Config) {\n    const rules = new Array<CatalogRule>();\n\n    if (config.has('catalog.rules')) {\n      const globalRules = config.getConfigArray('catalog.rules').map(sub => ({\n        allow: sub.getStringArray('allow').map(kind => ({ kind })),\n      }));\n      rules.push(...globalRules);\n    } else {\n      rules.push(...DefaultCatalogRulesEnforcer.defaultRules);\n    }\n\n    if (config.has('catalog.locations')) {\n      const locationRules = config\n        .getConfigArray('catalog.locations')\n        .flatMap(locConf => {\n          if (!locConf.has('rules')) {\n            return [];\n          }\n          const type = locConf.getString('type');\n          const target = resolveTarget(type, locConf.getString('target'));\n\n          return locConf.getConfigArray('rules').map(ruleConf => ({\n            allow: ruleConf.getStringArray('allow').map(kind => ({ kind })),\n            locations: [{ type, target }],\n          }));\n        });\n\n      rules.push(...locationRules);\n    }\n\n    return new DefaultCatalogRulesEnforcer(rules);\n  }\n\n  constructor(private readonly rules: CatalogRule[]) {}\n\n  /**\n   * Checks whether a specific entity/location combination is allowed\n   * according to the configured rules.\n   */\n  isAllowed(entity: Entity, location: LocationSpec) {\n    for (const rule of this.rules) {\n      if (!this.matchLocation(location, rule.locations)) {\n        continue;\n      }\n\n      if (this.matchEntity(entity, rule.allow)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private matchLocation(\n    location: LocationSpec,\n    matchers?: { target?: string; type: string }[],\n  ): boolean {\n    if (!matchers) {\n      return true;\n    }\n\n    for (const matcher of matchers) {\n      if (matcher.type !== location?.type) {\n        continue;\n      }\n      if (matcher.target && matcher.target !== location?.target) {\n        continue;\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  private matchEntity(entity: Entity, matchers?: { kind: string }[]): boolean {\n    if (!matchers) {\n      return true;\n    }\n\n    for (const matcher of matchers) {\n      if (entity?.kind?.toLowerCase() !== matcher.kind.toLowerCase()) {\n        continue;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n}\n\nfunction resolveTarget(type: string, target: string): string {\n  if (type !== 'file') {\n    return target;\n  }\n\n  return path.resolve(target);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  entityEnvelopeSchemaValidator,\n} from '@backstage/catalog-model';\nimport { ProcessingDatabase } from '../database/types';\nimport {\n  EntityProvider,\n  EntityProviderConnection,\n  EntityProviderMutation,\n} from '../api';\n\nclass Connection implements EntityProviderConnection {\n  readonly validateEntityEnvelope = entityEnvelopeSchemaValidator();\n\n  constructor(\n    private readonly config: {\n      id: string;\n      processingDatabase: ProcessingDatabase;\n    },\n  ) {}\n\n  async applyMutation(mutation: EntityProviderMutation): Promise<void> {\n    const db = this.config.processingDatabase;\n\n    if (mutation.type === 'full') {\n      this.check(mutation.entities.map(e => e.entity));\n      await db.transaction(async tx => {\n        await db.replaceUnprocessedEntities(tx, {\n          sourceKey: this.config.id,\n          type: 'full',\n          items: mutation.entities,\n        });\n      });\n    } else if (mutation.type === 'delta') {\n      this.check(mutation.added.map(e => e.entity));\n      this.check(mutation.removed.map(e => e.entity));\n      await db.transaction(async tx => {\n        await db.replaceUnprocessedEntities(tx, {\n          sourceKey: this.config.id,\n          type: 'delta',\n          added: mutation.added,\n          removed: mutation.removed,\n        });\n      });\n    }\n  }\n\n  private check(entities: Entity[]) {\n    for (const entity of entities) {\n      try {\n        this.validateEntityEnvelope(entity);\n      } catch (e) {\n        throw new TypeError(`Malformed entity envelope, ${e}`);\n      }\n    }\n  }\n}\n\nexport async function connectEntityProviders(\n  db: ProcessingDatabase,\n  providers: EntityProvider[],\n) {\n  await Promise.all(\n    providers.map(async provider => {\n      const connection = new Connection({\n        id: provider.getProviderName(),\n        processingDatabase: db,\n      });\n      return provider.connect(connection);\n    }),\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotAllowedError } from '@backstage/errors';\nimport {\n  catalogEntityDeletePermission,\n  catalogEntityReadPermission,\n} from '@backstage/plugin-catalog-common';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  AuthorizeResult,\n  PermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport { ConditionTransformer } from '@backstage/plugin-permission-node';\nimport {\n  EntitiesCatalog,\n  EntitiesRequest,\n  EntitiesResponse,\n  EntityAncestryResponse,\n  EntityFacetsRequest,\n  EntityFacetsResponse,\n  EntityFilter,\n} from '../catalog/types';\nimport { basicEntityFilter } from './request/basicEntityFilter';\n\nexport class AuthorizedEntitiesCatalog implements EntitiesCatalog {\n  constructor(\n    private readonly entitiesCatalog: EntitiesCatalog,\n    private readonly permissionApi: PermissionEvaluator,\n    private readonly transformConditions: ConditionTransformer<EntityFilter>,\n  ) {}\n\n  async entities(request?: EntitiesRequest): Promise<EntitiesResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { token: request?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        entities: [],\n        pageInfo: { hasNextPage: false },\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.entities({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.entities(request);\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options?: { authorizationToken?: string },\n  ): Promise<void> {\n    const authorizeResponse = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityDeletePermission }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n    if (authorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n    if (authorizeResponse.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeResponse.conditions,\n      );\n      const { entities } = await this.entitiesCatalog.entities({\n        filter: {\n          allOf: [permissionFilter, basicEntityFilter({ 'metadata.uid': uid })],\n        },\n      });\n      if (entities.length === 0) {\n        throw new NotAllowedError();\n      }\n    }\n    return this.entitiesCatalog.removeEntityByUid(uid);\n  }\n\n  async entityAncestry(\n    entityRef: string,\n    options?: { authorizationToken?: string },\n  ): Promise<EntityAncestryResponse> {\n    const rootEntityAuthorizeResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogEntityReadPermission, resourceRef: entityRef }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n    if (rootEntityAuthorizeResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n\n    const ancestryResult = await this.entitiesCatalog.entityAncestry(entityRef);\n    const authorizeResponse = await this.permissionApi.authorize(\n      ancestryResult.items.map(item => ({\n        permission: catalogEntityReadPermission,\n        resourceRef: stringifyEntityRef(item.entity),\n      })),\n      { token: options?.authorizationToken },\n    );\n    const unauthorizedAncestryItems = ancestryResult.items.filter(\n      (_, index) => authorizeResponse[index].result === AuthorizeResult.DENY,\n    );\n    if (unauthorizedAncestryItems.length === 0) {\n      return ancestryResult;\n    }\n    const rootUnauthorizedEntityRefs = unauthorizedAncestryItems.map(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity),\n    );\n    const allUnauthorizedEntityRefs = new Set(\n      rootUnauthorizedEntityRefs.flatMap(rootEntityRef =>\n        this.findParents(\n          rootEntityRef,\n          ancestryResult.items,\n          new Set(rootUnauthorizedEntityRefs),\n        ),\n      ),\n    );\n    return {\n      rootEntityRef: ancestryResult.rootEntityRef,\n      items: ancestryResult.items.filter(\n        ancestryItem =>\n          !allUnauthorizedEntityRefs.has(\n            stringifyEntityRef(ancestryItem.entity),\n          ),\n      ),\n    };\n  }\n\n  async facets(request: EntityFacetsRequest): Promise<EntityFacetsResponse> {\n    const authorizeDecision = (\n      await this.permissionApi.authorizeConditional(\n        [{ permission: catalogEntityReadPermission }],\n        { token: request?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizeDecision.result === AuthorizeResult.DENY) {\n      return {\n        facets: Object.fromEntries(request.facets.map(f => [f, []])),\n      };\n    }\n\n    if (authorizeDecision.result === AuthorizeResult.CONDITIONAL) {\n      const permissionFilter: EntityFilter = this.transformConditions(\n        authorizeDecision.conditions,\n      );\n      return this.entitiesCatalog.facets({\n        ...request,\n        filter: request?.filter\n          ? { allOf: [permissionFilter, request.filter] }\n          : permissionFilter,\n      });\n    }\n\n    return this.entitiesCatalog.facets(request);\n  }\n\n  private findParents(\n    entityRef: string,\n    allAncestryItems: { entity: Entity; parentEntityRefs: string[] }[],\n    seenEntityRefs: Set<string>,\n  ): string[] {\n    const entity = allAncestryItems.find(\n      ancestryItem => stringifyEntityRef(ancestryItem.entity) === entityRef,\n    );\n    if (!entity) return [];\n\n    const newSeenEntityRefs = new Set(seenEntityRefs);\n    entity.parentEntityRefs.forEach(parentRef =>\n      newSeenEntityRefs.add(parentRef),\n    );\n\n    return [\n      entityRef,\n      ...entity.parentEntityRefs.flatMap(parentRef =>\n        seenEntityRefs.has(parentRef)\n          ? []\n          : this.findParents(parentRef, allAncestryItems, newSeenEntityRefs),\n      ),\n    ];\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@backstage/catalog-client';\nimport { Entity } from '@backstage/catalog-model';\nimport { NotAllowedError, NotFoundError } from '@backstage/errors';\nimport {\n  catalogLocationCreatePermission,\n  catalogLocationDeletePermission,\n  catalogLocationReadPermission,\n} from '@backstage/plugin-catalog-common';\nimport {\n  AuthorizeResult,\n  PermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport { LocationInput, LocationService } from './types';\n\nexport class AuthorizedLocationService implements LocationService {\n  constructor(\n    private readonly locationService: LocationService,\n    private readonly permissionApi: PermissionEvaluator,\n  ) {}\n\n  async createLocation(\n    spec: LocationInput,\n    dryRun: boolean,\n    options?: {\n      authorizationToken?: string;\n    },\n  ): Promise<{\n    location: Location;\n    entities: Entity[];\n    exists?: boolean | undefined;\n  }> {\n    const authorizationResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogLocationCreatePermission }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizationResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n\n    return this.locationService.createLocation(spec, dryRun);\n  }\n\n  async listLocations(options?: {\n    authorizationToken?: string;\n  }): Promise<Location[]> {\n    const authorizationResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogLocationReadPermission }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizationResponse.result === AuthorizeResult.DENY) {\n      return [];\n    }\n\n    return this.locationService.listLocations();\n  }\n\n  async getLocation(\n    id: string,\n    options?: { authorizationToken?: string },\n  ): Promise<Location> {\n    const authorizationResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogLocationReadPermission }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizationResponse.result === AuthorizeResult.DENY) {\n      throw new NotFoundError(`Found no location with ID ${id}`);\n    }\n\n    return this.locationService.getLocation(id);\n  }\n\n  async deleteLocation(\n    id: string,\n    options?: { authorizationToken?: string },\n  ): Promise<void> {\n    const authorizationResponse = (\n      await this.permissionApi.authorize(\n        [{ permission: catalogLocationDeletePermission }],\n        { token: options?.authorizationToken },\n      )\n    )[0];\n\n    if (authorizationResponse.result === AuthorizeResult.DENY) {\n      throw new NotAllowedError();\n    }\n\n    return this.locationService.deleteLocation(id);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PluginDatabaseManager, UrlReader } from '@backstage/backend-common';\nimport {\n  DefaultNamespaceEntityPolicy,\n  EntityPolicies,\n  EntityPolicy,\n  FieldFormatEntityPolicy,\n  makeValidator,\n  NoForeignRootFieldsEntityPolicy,\n  parseEntityRef,\n  SchemaValidEntityPolicy,\n  stringifyEntityRef,\n  Validators,\n} from '@backstage/catalog-model';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { createHash } from 'crypto';\nimport { Router } from 'express';\nimport lodash, { keyBy } from 'lodash';\n\nimport {\n  CatalogProcessor,\n  CatalogProcessorParser,\n  EntityProvider,\n} from '../api';\nimport {\n  AnnotateLocationEntityProcessor,\n  BuiltinKindsEntityProcessor,\n  CodeOwnersProcessor,\n  FileReaderProcessor,\n  PlaceholderProcessor,\n  PlaceholderResolver,\n  UrlReaderProcessor,\n} from '../modules';\nimport { ConfigLocationEntityProvider } from '../modules/core/ConfigLocationEntityProvider';\nimport { DefaultLocationStore } from '../modules/core/DefaultLocationStore';\nimport { RepoLocationAnalyzer } from '../ingestion/LocationAnalyzer';\nimport {\n  jsonPlaceholderResolver,\n  textPlaceholderResolver,\n  yamlPlaceholderResolver,\n} from '../modules/core/PlaceholderProcessor';\nimport { defaultEntityDataParser } from '../modules/util/parse';\nimport { LocationAnalyzer } from '../ingestion/types';\nimport { CatalogProcessingEngine } from '../processing/types';\nimport { DefaultProcessingDatabase } from '../database/DefaultProcessingDatabase';\nimport { applyDatabaseMigrations } from '../database/migrations';\nimport { DefaultCatalogProcessingEngine } from '../processing/DefaultCatalogProcessingEngine';\nimport { DefaultLocationService } from './DefaultLocationService';\nimport { DefaultEntitiesCatalog } from './DefaultEntitiesCatalog';\nimport { DefaultCatalogProcessingOrchestrator } from '../processing/DefaultCatalogProcessingOrchestrator';\nimport { Stitcher } from '../stitching/Stitcher';\nimport {\n  createRandomProcessingInterval,\n  ProcessingIntervalFunction,\n} from '../processing/refresh';\nimport { createRouter } from './createRouter';\nimport { DefaultRefreshService } from './DefaultRefreshService';\nimport { AuthorizedRefreshService } from './AuthorizedRefreshService';\nimport { DefaultCatalogRulesEnforcer } from '../ingestion/CatalogRules';\nimport { Config } from '@backstage/config';\nimport { Logger } from 'winston';\nimport { connectEntityProviders } from '../processing/connectEntityProviders';\nimport {\n  CatalogPermissionRule,\n  permissionRules as catalogPermissionRules,\n} from '../permissions/rules';\nimport {\n  PermissionAuthorizer,\n  PermissionEvaluator,\n  toPermissionEvaluator,\n} from '@backstage/plugin-permission-common';\nimport {\n  createConditionTransformer,\n  createPermissionIntegrationRouter,\n} from '@backstage/plugin-permission-node';\nimport { AuthorizedEntitiesCatalog } from './AuthorizedEntitiesCatalog';\nimport { basicEntityFilter } from './request/basicEntityFilter';\nimport { RESOURCE_TYPE_CATALOG_ENTITY } from '@backstage/plugin-catalog-common';\nimport { AuthorizedLocationService } from './AuthorizedLocationService';\n\n/** @public */\nexport type CatalogEnvironment = {\n  logger: Logger;\n  database: PluginDatabaseManager;\n  config: Config;\n  reader: UrlReader;\n  permissions: PermissionEvaluator | PermissionAuthorizer;\n};\n\n/**\n * A builder that helps wire up all of the component parts of the catalog.\n *\n * The touch points where you can replace or extend behavior are as follows:\n *\n * - Entity policies can be added or replaced. These are automatically run\n *   after the processors' pre-processing steps. All policies are given the\n *   chance to inspect the entity, and all of them have to pass in order for\n *   the entity to be considered valid from an overall point of view.\n * - Placeholder resolvers can be replaced or added. These run on the raw\n *   structured data between the parsing and pre-processing steps, to replace\n *   dollar-prefixed entries with their actual values (like $file).\n * - Field format validators can be replaced. These check the format of\n *   individual core fields such as metadata.name, to ensure that they adhere\n *   to certain rules.\n * - Processors can be added or replaced. These implement the functionality of\n *   reading, parsing, validating, and processing the entity data before it is\n *   persisted in the catalog.\n *\n * @public\n */\nexport class CatalogBuilder {\n  private readonly env: CatalogEnvironment;\n  private entityPolicies: EntityPolicy[];\n  private entityPoliciesReplace: boolean;\n  private placeholderResolvers: Record<string, PlaceholderResolver>;\n  private fieldFormatValidators: Partial<Validators>;\n  private entityProviders: EntityProvider[];\n  private processors: CatalogProcessor[];\n  private processorsReplace: boolean;\n  private parser: CatalogProcessorParser | undefined;\n  private processingInterval: ProcessingIntervalFunction =\n    createRandomProcessingInterval({\n      minSeconds: 100,\n      maxSeconds: 150,\n    });\n  private locationAnalyzer: LocationAnalyzer | undefined = undefined;\n  private permissionRules: CatalogPermissionRule[];\n\n  /**\n   * Creates a catalog builder.\n   */\n  static create(env: CatalogEnvironment): CatalogBuilder {\n    return new CatalogBuilder(env);\n  }\n\n  private constructor(env: CatalogEnvironment) {\n    this.env = env;\n    this.entityPolicies = [];\n    this.entityPoliciesReplace = false;\n    this.placeholderResolvers = {};\n    this.fieldFormatValidators = {};\n    this.entityProviders = [];\n    this.processors = [];\n    this.processorsReplace = false;\n    this.parser = undefined;\n    this.permissionRules = Object.values(catalogPermissionRules);\n  }\n\n  /**\n   * Adds policies that are used to validate entities between the pre-\n   * processing and post-processing stages. All such policies must pass for the\n   * entity to be considered valid.\n   *\n   * If what you want to do is to replace the rules for what format is allowed\n   * in various core entity fields (such as metadata.name), you may want to use\n   * {@link CatalogBuilder#setFieldFormatValidators} instead.\n   *\n   * @param policies - One or more policies\n   */\n  addEntityPolicy(\n    ...policies: Array<EntityPolicy | Array<EntityPolicy>>\n  ): CatalogBuilder {\n    this.entityPolicies.push(...policies.flat());\n    return this;\n  }\n\n  /**\n   * Processing interval determines how often entities should be processed.\n   * Seconds provided will be multiplied by 1.5\n   * The default processing interval is 100-150 seconds.\n   * setting this too low will potentially deplete request quotas to upstream services.\n   */\n  setProcessingIntervalSeconds(seconds: number): CatalogBuilder {\n    this.processingInterval = createRandomProcessingInterval({\n      minSeconds: seconds,\n      maxSeconds: seconds * 1.5,\n    });\n    return this;\n  }\n\n  /**\n   * Overwrites the default processing interval function used to spread\n   * entity updates in the catalog.\n   */\n  setProcessingInterval(\n    processingInterval: ProcessingIntervalFunction,\n  ): CatalogBuilder {\n    this.processingInterval = processingInterval;\n    return this;\n  }\n\n  /**\n   * Overwrites the default location analyzer.\n   */\n  setLocationAnalyzer(locationAnalyzer: LocationAnalyzer): CatalogBuilder {\n    this.locationAnalyzer = locationAnalyzer;\n    return this;\n  }\n\n  /**\n   * Sets what policies to use for validation of entities between the pre-\n   * processing and post-processing stages. All such policies must pass for the\n   * entity to be considered valid.\n   *\n   * If what you want to do is to replace the rules for what format is allowed\n   * in various core entity fields (such as metadata.name), you may want to use\n   * {@link CatalogBuilder#setFieldFormatValidators} instead.\n   *\n   * This function replaces the default set of policies; use with care.\n   *\n   * @param policies - One or more policies\n   */\n  replaceEntityPolicies(policies: EntityPolicy[]): CatalogBuilder {\n    this.entityPolicies = [...policies];\n    this.entityPoliciesReplace = true;\n    return this;\n  }\n\n  /**\n   * Adds, or overwrites, a handler for placeholders (e.g. $file) in entity\n   * definition files.\n   *\n   * @param key - The key that identifies the placeholder, e.g. \"file\"\n   * @param resolver - The resolver that gets values for this placeholder\n   */\n  setPlaceholderResolver(\n    key: string,\n    resolver: PlaceholderResolver,\n  ): CatalogBuilder {\n    this.placeholderResolvers[key] = resolver;\n    return this;\n  }\n\n  /**\n   * Sets the validator function to use for one or more special fields of an\n   * entity. This is useful if the default rules for formatting of fields are\n   * not sufficient.\n   *\n   * This function has no effect if used together with\n   * {@link CatalogBuilder#replaceEntityPolicies}.\n   *\n   * @param validators - The (subset of) validators to set\n   */\n  setFieldFormatValidators(validators: Partial<Validators>): CatalogBuilder {\n    lodash.merge(this.fieldFormatValidators, validators);\n    return this;\n  }\n\n  /**\n   * Adds or replaces entity providers. These are responsible for bootstrapping\n   * the list of entities out of original data sources. For example, there is\n   * one entity source for the config locations, and one for the database\n   * stored locations. If you ingest entities out of a third party system, you\n   * may want to implement that in terms of an entity provider as well.\n   *\n   * @param providers - One or more entity providers\n   */\n  addEntityProvider(\n    ...providers: Array<EntityProvider | Array<EntityProvider>>\n  ): CatalogBuilder {\n    this.entityProviders.push(...providers.flat());\n    return this;\n  }\n\n  /**\n   * Adds entity processors. These are responsible for reading, parsing, and\n   * processing entities before they are persisted in the catalog.\n   *\n   * @param processors - One or more processors\n   */\n  addProcessor(\n    ...processors: Array<CatalogProcessor | Array<CatalogProcessor>>\n  ): CatalogBuilder {\n    this.processors.push(...processors.flat());\n    return this;\n  }\n\n  /**\n   * Sets what entity processors to use. These are responsible for reading,\n   * parsing, and processing entities before they are persisted in the catalog.\n   *\n   * This function replaces the default set of processors, consider using with\n   * {@link CatalogBuilder#getDefaultProcessors}; use with care.\n   *\n   * @param processors - One or more processors\n   */\n  replaceProcessors(processors: CatalogProcessor[]): CatalogBuilder {\n    this.processors = [...processors];\n    this.processorsReplace = true;\n    return this;\n  }\n\n  /**\n   * Returns the default list of entity processors. These are responsible for reading,\n   * parsing, and processing entities before they are persisted in the catalog. Changing\n   * the order of processing can give more control to custom processors.\n   *\n   * Consider using with {@link CatalogBuilder#replaceProcessors}\n   *\n   */\n  getDefaultProcessors(): CatalogProcessor[] {\n    const { config, logger, reader } = this.env;\n    const integrations = ScmIntegrations.fromConfig(config);\n\n    return [\n      new FileReaderProcessor(),\n      new UrlReaderProcessor({ reader, logger }),\n      CodeOwnersProcessor.fromConfig(config, { logger, reader }),\n      new AnnotateLocationEntityProcessor({ integrations }),\n    ];\n  }\n\n  /**\n   * Sets up the catalog to use a custom parser for entity data.\n   *\n   * This is the function that gets called immediately after some raw entity\n   * specification data has been read from a remote source, and needs to be\n   * parsed and emitted as structured data.\n   *\n   * @param parser - The custom parser\n   */\n  setEntityDataParser(parser: CatalogProcessorParser): CatalogBuilder {\n    this.parser = parser;\n    return this;\n  }\n\n  /**\n   * Adds additional permission rules. Permission rules are used to evaluate\n   * catalog resources against queries. See\n   * {@link @backstage/plugin-permission-node#PermissionRule}.\n   *\n   * @param permissionRules - Additional permission rules\n   * @alpha\n   */\n  addPermissionRules(\n    ...permissionRules: Array<\n      CatalogPermissionRule | Array<CatalogPermissionRule>\n    >\n  ) {\n    this.permissionRules.push(...permissionRules.flat());\n  }\n\n  /**\n   * Wires up and returns all of the component parts of the catalog\n   */\n  async build(): Promise<{\n    processingEngine: CatalogProcessingEngine;\n    router: Router;\n  }> {\n    const { config, database, logger, permissions } = this.env;\n\n    const policy = this.buildEntityPolicy();\n    const processors = this.buildProcessors();\n    const parser = this.parser || defaultEntityDataParser;\n\n    const dbClient = await database.getClient();\n    if (!database.migrations?.skip) {\n      logger.info('Performing database migration');\n      await applyDatabaseMigrations(dbClient);\n    }\n\n    const processingDatabase = new DefaultProcessingDatabase({\n      database: dbClient,\n      logger,\n      refreshInterval: this.processingInterval,\n    });\n    const integrations = ScmIntegrations.fromConfig(config);\n    const rulesEnforcer = DefaultCatalogRulesEnforcer.fromConfig(config);\n    const orchestrator = new DefaultCatalogProcessingOrchestrator({\n      processors,\n      integrations,\n      rulesEnforcer,\n      logger,\n      parser,\n      policy,\n    });\n    const unauthorizedEntitiesCatalog = new DefaultEntitiesCatalog(dbClient);\n\n    let permissionEvaluator: PermissionEvaluator;\n    if ('authorizeConditional' in permissions) {\n      permissionEvaluator = permissions as PermissionEvaluator;\n    } else {\n      logger.warn(\n        'PermissionAuthorizer is deprecated. Please use an instance of PermissionEvaluator instead of PermissionAuthorizer in PluginEnvironment#permissions',\n      );\n      permissionEvaluator = toPermissionEvaluator(permissions);\n    }\n\n    const entitiesCatalog = new AuthorizedEntitiesCatalog(\n      unauthorizedEntitiesCatalog,\n      permissionEvaluator,\n      createConditionTransformer(this.permissionRules),\n    );\n    const permissionIntegrationRouter = createPermissionIntegrationRouter({\n      resourceType: RESOURCE_TYPE_CATALOG_ENTITY,\n      getResources: async (resourceRefs: string[]) => {\n        const { entities } = await unauthorizedEntitiesCatalog.entities({\n          filter: {\n            anyOf: resourceRefs.map(resourceRef => {\n              const { kind, namespace, name } = parseEntityRef(resourceRef);\n\n              return basicEntityFilter({\n                kind,\n                'metadata.namespace': namespace,\n                'metadata.name': name,\n              });\n            }),\n          },\n        });\n\n        const entitiesByRef = keyBy(entities, stringifyEntityRef);\n\n        return resourceRefs.map(\n          resourceRef =>\n            entitiesByRef[stringifyEntityRef(parseEntityRef(resourceRef))],\n        );\n      },\n      rules: this.permissionRules,\n    });\n    const stitcher = new Stitcher(dbClient, logger);\n\n    const locationStore = new DefaultLocationStore(dbClient);\n    const configLocationProvider = new ConfigLocationEntityProvider(config);\n    const entityProviders = lodash.uniqBy(\n      [...this.entityProviders, locationStore, configLocationProvider],\n      provider => provider.getProviderName(),\n    );\n\n    const processingEngine = new DefaultCatalogProcessingEngine(\n      logger,\n      processingDatabase,\n      orchestrator,\n      stitcher,\n      () => createHash('sha1'),\n    );\n\n    const locationAnalyzer =\n      this.locationAnalyzer ?? new RepoLocationAnalyzer(logger, integrations);\n    const locationService = new AuthorizedLocationService(\n      new DefaultLocationService(locationStore, orchestrator),\n      permissionEvaluator,\n    );\n    const refreshService = new AuthorizedRefreshService(\n      new DefaultRefreshService({ database: processingDatabase }),\n      permissionEvaluator,\n    );\n    const router = await createRouter({\n      entitiesCatalog,\n      locationAnalyzer,\n      locationService,\n      orchestrator,\n      refreshService,\n      logger,\n      config,\n      permissionIntegrationRouter,\n    });\n\n    await connectEntityProviders(processingDatabase, entityProviders);\n\n    return {\n      processingEngine,\n      router,\n    };\n  }\n\n  private buildEntityPolicy(): EntityPolicy {\n    const entityPolicies: EntityPolicy[] = this.entityPoliciesReplace\n      ? [new SchemaValidEntityPolicy(), ...this.entityPolicies]\n      : [\n          new SchemaValidEntityPolicy(),\n          new DefaultNamespaceEntityPolicy(),\n          new NoForeignRootFieldsEntityPolicy(),\n          new FieldFormatEntityPolicy(\n            makeValidator(this.fieldFormatValidators),\n          ),\n          ...this.entityPolicies,\n        ];\n\n    return EntityPolicies.allOf(entityPolicies);\n  }\n\n  private buildProcessors(): CatalogProcessor[] {\n    const { config, reader } = this.env;\n    const integrations = ScmIntegrations.fromConfig(config);\n\n    this.checkDeprecatedReaderProcessors();\n\n    const placeholderResolvers: Record<string, PlaceholderResolver> = {\n      json: jsonPlaceholderResolver,\n      yaml: yamlPlaceholderResolver,\n      text: textPlaceholderResolver,\n      ...this.placeholderResolvers,\n    };\n\n    // These are always there no matter what\n    const processors: CatalogProcessor[] = [\n      new PlaceholderProcessor({\n        resolvers: placeholderResolvers,\n        reader,\n        integrations,\n      }),\n      new BuiltinKindsEntityProcessor(),\n    ];\n\n    // These are only added unless the user replaced them all\n    if (!this.processorsReplace) {\n      processors.push(...this.getDefaultProcessors());\n    }\n\n    // Add the ones (if any) that the user added\n    processors.push(...this.processors);\n\n    this.checkMissingExternalProcessors(processors);\n\n    return processors;\n  }\n\n  // TODO(Rugvip): These old processors are removed, for a while we'll be throwing\n  //               errors here to make sure people know where to move the config\n  private checkDeprecatedReaderProcessors() {\n    const pc = this.env.config.getOptionalConfig('catalog.processors');\n    if (pc?.has('github')) {\n      throw new Error(\n        `Using deprecated configuration for catalog.processors.github, move to using integrations.github instead`,\n      );\n    }\n    if (pc?.has('gitlabApi')) {\n      throw new Error(\n        `Using deprecated configuration for catalog.processors.gitlabApi, move to using integrations.gitlab instead`,\n      );\n    }\n    if (pc?.has('bitbucketApi')) {\n      throw new Error(\n        `Using deprecated configuration for catalog.processors.bitbucketApi, move to using integrations.bitbucket instead`,\n      );\n    }\n    if (pc?.has('azureApi')) {\n      throw new Error(\n        `Using deprecated configuration for catalog.processors.azureApi, move to using integrations.azure instead`,\n      );\n    }\n  }\n\n  // TODO(freben): This can be removed no sooner than June 2022, after adopters have had some time to adapt to the new package structure\n  private checkMissingExternalProcessors(processors: CatalogProcessor[]) {\n    const skipCheckVarName = 'BACKSTAGE_CATALOG_SKIP_MISSING_PROCESSORS_CHECK';\n    if (process.env[skipCheckVarName]) {\n      return;\n    }\n\n    const locationTypes = new Set(\n      this.env.config\n        .getOptionalConfigArray('catalog.locations')\n        ?.map(l => l.getString('type')) ?? [],\n    );\n    const processorNames = new Set(processors.map(p => p.getProcessorName()));\n\n    function check(\n      locationType: string,\n      processorName: string,\n      installationUrl: string,\n    ) {\n      if (\n        locationTypes.has(locationType) &&\n        !processorNames.has(processorName)\n      ) {\n        throw new Error(\n          [\n            `Your config contains a \"catalog.locations\" entry of type ${locationType},`,\n            `but does not have the corresponding catalog processor ${processorName} installed.`,\n            `This processor used to be built into the catalog itself, but is now moved to an`,\n            `external module that has to be installed manually. Please follow the installation`,\n            `instructions at ${installationUrl} if you are using this ability, or remove the`,\n            `location from your app config if you do not. You can also silence this check entirely`,\n            `by setting the environment variable ${skipCheckVarName} to 'true'.`,\n          ].join(' '),\n        );\n      }\n    }\n\n    check(\n      'aws-cloud-accounts',\n      'AwsOrganizationCloudAccountProcessor',\n      'https://backstage.io/docs/integrations',\n    );\n    check(\n      's3-discovery',\n      'AwsS3DiscoveryProcessor',\n      'https://backstage.io/docs/integrations/aws-s3/discovery',\n    );\n    check(\n      'azure-discovery',\n      'AzureDevOpsDiscoveryProcessor',\n      'https://backstage.io/docs/integrations/azure/discovery',\n    );\n    check(\n      'bitbucket-discovery',\n      'BitbucketDiscoveryProcessor',\n      'https://backstage.io/docs/integrations/bitbucket/discovery',\n    );\n    check(\n      'github-discovery',\n      'GithubDiscoveryProcessor',\n      'https://backstage.io/docs/integrations/github/discovery',\n    );\n    check(\n      'github-org',\n      'GithubOrgReaderProcessor',\n      'https://backstage.io/docs/integrations/github/org',\n    );\n    check(\n      'gitlab-discovery',\n      'GitLabDiscoveryProcessor',\n      'https://backstage.io/docs/integrations/gitlab/discovery',\n    );\n    check(\n      'ldap-org',\n      'LdapOrgReaderProcessor',\n      'https://backstage.io/docs/integrations/ldap/org',\n    );\n    check(\n      'microsoft-graph-org',\n      'MicrosoftGraphOrgReaderProcessor',\n      'https://backstage.io/docs/integrations/azure/org',\n    );\n  }\n}\n"],"names":["NotFoundError","InputError","codeowners","pipe","filter","reverse","head","get","ScmIntegrations","stringifyLocationRef","merge","pickBy","ANNOTATION_LOCATION","ANNOTATION_ORIGIN_LOCATION","ANNOTATION_VIEW_URL","ANNOTATION_EDIT_URL","ANNOTATION_SOURCE_LOCATION","identity","parseGitUrl","apiEntityV1alpha1Validator","componentEntityV1alpha1Validator","resourceEntityV1alpha1Validator","groupEntityV1alpha1Validator","locationEntityV1alpha1Validator","userEntityV1alpha1Validator","systemEntityV1alpha1Validator","domainEntityV1alpha1Validator","getCompoundEntityRef","parseEntityRef","RELATION_OWNED_BY","RELATION_OWNER_OF","RELATION_PART_OF","RELATION_HAS_PART","RELATION_PROVIDES_API","RELATION_API_PROVIDED_BY","RELATION_CONSUMES_API","RELATION_API_CONSUMED_BY","RELATION_DEPENDS_ON","RELATION_DEPENDENCY_OF","RELATION_MEMBER_OF","RELATION_HAS_MEMBER","RELATION_CHILD_OF","RELATION_PARENT_OF","promisify","g","fs","path","toAbsoluteUrl","yaml","assertError","limiterFactory","lodash","makeCreatePermissionRule","RESOURCE_TYPE_CATALOG_ENTITY","createConditionExports","catalogEntityReadPermission","catalogClient","CatalogClient","Readable","stringifyEntityRef","entitySchemaValidator","entityEnvelopeSchemaValidator","createHash","ConflictError","uuid","DateTime","isDatabaseConflictError","register","Counter","Gauge","Summary","generateStableHash","stableStringify","BATCH_SIZE","errors","isError","resolvePackagePath","serializeError","parseLocationRef","NotAllowedError","DEFAULT_NAMESPACE","stringifyError","ENTITY_STATUS_CATALOG_PROCESSING_TYPE","uniqBy","z","Router","express","yn","errorHandler","catalogEntityRefreshPermission","AuthorizeResult","catalogEntityDeletePermission","catalogLocationCreatePermission","catalogLocationReadPermission","catalogLocationDeletePermission","catalogPermissionRules","toPermissionEvaluator","createConditionTransformer","createPermissionIntegrationRouter","keyBy","SchemaValidEntityPolicy","DefaultNamespaceEntityPolicy","NoForeignRootFieldsEntityPolicy","FieldFormatEntityPolicy","makeValidator","EntityPolicies"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACY,MAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC;AAC9C,EAAE,aAAa,CAAC,UAAU,EAAE,OAAO,EAAE;AACrC,IAAI,OAAO;AACX,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,UAAU;AAC1B,MAAM,KAAK,EAAE,IAAIA,oBAAa,CAAC,OAAO,CAAC;AACvC,KAAK,CAAC;AACN,GAAG;AACH,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,EAAE;AAClC,IAAI,OAAO;AACX,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,UAAU;AAC1B,MAAM,KAAK,EAAE,IAAIC,iBAAU,CAAC,OAAO,CAAC;AACpC,KAAK,CAAC;AACN,GAAG;AACH,EAAE,YAAY,CAAC,UAAU,EAAE,OAAO,EAAE;AACpC,IAAI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;AAC9E,GAAG;AACH,EAAE,QAAQ,CAAC,WAAW,EAAE;AACxB,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;AACvD,GAAG;AACH,EAAE,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;AAChC,IAAI,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;AACvE,GAAG;AACH,EAAE,QAAQ,CAAC,IAAI,EAAE;AACjB,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAChD,GAAG;AACH,CAAC;;AC1BD,MAAM,YAAY,GAAG,MAAM,CAAC;AAC5B,MAAM,aAAa,GAAG,UAAU,CAAC;AACjC,MAAM,aAAa,GAAG,aAAa,CAAC;AAC7B,SAAS,gBAAgB,CAAC,QAAQ,EAAE,OAAO,GAAG,GAAG,EAAE;AAC1D,EAAE,MAAM,MAAM,GAAGC,qBAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC5C,EAAE,OAAOC,OAAI,CAACC,SAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,EAAEC,UAAO,EAAEC,OAAI,EAAEC,MAAG,CAAC,QAAQ,CAAC,EAAED,OAAI,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC;AACpH,CAAC;AACM,SAAS,kBAAkB,CAAC,KAAK,EAAE;AAC1C,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;AAClC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,GAAG,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;AACxC,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,GAAG,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;AACzC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf;;AClBA,MAAM,UAAU,GAAG,YAAY,CAAC;AACzB,MAAM,kBAAkB,GAAG;AAClC,EAAE,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;AACrD,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AACrE,EAAE,MAAM,EAAE,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AACrE,CAAC;;ACDM,eAAe,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE;AACzE,EAAE,MAAM,iBAAiB,GAAG,OAAO,IAAI,KAAK;AAC5C,IAAI,MAAM,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACtC,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,MAAM,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9C,MAAM,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM,EAAE,CAAC;AAC1C,MAAM,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC/B,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC3B,GAAG,CAAC;AACJ,EAAE,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC5D,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,KAAK;AAC3D,IAAI,MAAM,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,KAAK,YAAYN,oBAAa,CAAC,CAAC,CAAC;AAC/F,IAAI,IAAI,SAAS,EAAE;AACnB,MAAM,MAAM,SAAS,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG,CAAC,CAAC;AACL,CAAC;AACM,eAAe,qBAAqB,CAAC,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE;AAC/E,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,eAAe,GAAG,kBAAkB,CAAC,CAAC,EAAE,GAAG,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7H,EAAE,MAAM,SAAS,GAAG,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC;AAChF,IAAI,GAAG,EAAE,GAAG;AACZ,IAAI,IAAI,EAAE,SAAS;AACnB,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,eAAe,EAAE;AACtC,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,QAAQ,GAAG,MAAM,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAC5E,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC3C,EAAE,OAAO,KAAK,CAAC;AACf;;ACpCA,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC3E,MAAM,sBAAsB,GAAG,CAAC,KAAK,CAAC,CAAC;AAChC,MAAM,mBAAmB,CAAC;AACjC,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE;AACrC,IAAI,MAAM,YAAY,GAAGQ,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,IAAI,OAAO,IAAI,mBAAmB,CAAC;AACnC,MAAM,GAAG,OAAO;AAChB,MAAM,YAAY;AAClB,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC7C,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACjC,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACjC,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,qBAAqB,CAAC;AACjC,GAAG;AACH,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC3C,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;AAChJ,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACpE,IAAI,IAAI,CAAC,cAAc,EAAE;AACzB,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,MAAM,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;AAC5F,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,+CAA+C,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7F,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,OAAO;AACX,MAAM,GAAG,MAAM;AACf,MAAM,IAAI,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;AACrC,KAAK,CAAC;AACN,GAAG;AACH;;AC/BO,MAAM,+BAA+B,CAAC;AAC7C,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,iCAAiC,CAAC;AAC7C,GAAG;AACH,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,cAAc,EAAE;AAC9D,IAAI,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,cAAc,CAAC;AACvB,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;AACjC,MAAM,MAAM,cAAc,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACjE,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;AAChC,MAAM,OAAO,GAAG,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACjG,MAAM,MAAM,SAAS,GAAG,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC;AACpF,QAAQ,GAAG,EAAE,IAAI;AACjB,QAAQ,IAAI,EAAE,QAAQ,CAAC,MAAM;AAC7B,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,SAAS,EAAE;AACrB,QAAQ,cAAc,GAAGC,iCAAoB,CAAC;AAC9C,UAAU,IAAI,EAAE,KAAK;AACrB,UAAU,MAAM,EAAE,SAAS;AAC3B,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL,IAAI,OAAOC,YAAK,CAAC;AACjB,MAAM,QAAQ,EAAE;AAChB,QAAQ,WAAW,EAAEC,aAAM,CAAC;AAC5B,UAAU,CAACC,gCAAmB,GAAGH,iCAAoB,CAAC,QAAQ,CAAC;AAC/D,UAAU,CAACI,uCAA0B,GAAGJ,iCAAoB,CAAC,cAAc,CAAC;AAC5E,UAAU,CAACK,gCAAmB,GAAG,OAAO;AACxC,UAAU,CAACC,gCAAmB,GAAG,OAAO;AACxC,UAAU,CAACC,uCAA0B,GAAG,cAAc;AACtD,SAAS,EAAEC,eAAQ,CAAC;AACpB,OAAO;AACP,KAAK,EAAE,MAAM,CAAC,CAAC;AACf,GAAG;AACH;;AC3CA,MAAM,yBAAyB,GAAG,yBAAyB,CAAC;AAC5D,MAAM,yBAAyB,GAAG,yBAAyB,CAAC;AACrD,MAAM,8BAA8B,CAAC;AAC5C,EAAE,WAAW,CAAC,IAAI,EAAE;AACpB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,gCAAgC,CAAC;AAC5C,GAAG;AACH,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE;AAC5B,IAAI,OAAO,IAAI,8BAA8B,CAAC;AAC9C,MAAM,sBAAsB,EAAET,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC;AAChE,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC3C,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnF,IAAI,IAAI,CAAC,cAAc,EAAE;AACzB,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,IAAI,UAAU,CAAC;AACnB,IAAI,QAAQ,cAAc,CAAC,IAAI;AAC/B,MAAM,KAAK,QAAQ;AACnB,QAAQ,UAAU,GAAG,yBAAyB,CAAC;AAC/C,QAAQ,MAAM;AACd,MAAM,KAAK,QAAQ;AACnB,QAAQ,UAAU,GAAG,yBAAyB,CAAC;AAC/C,QAAQ,MAAM;AACd,MAAM;AACN,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,IAAI,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;AAC3F,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,MAAM,MAAM,MAAM,GAAGU,+BAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAClD,MAAM,WAAW,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,OAAOR,YAAK,CAAC;AACjB,MAAM,QAAQ,EAAE;AAChB,QAAQ,WAAW,EAAEC,aAAM,CAAC;AAC5B,UAAU,CAAC,UAAU,GAAG,WAAW;AACnC,SAAS,EAAEM,eAAQ,CAAC;AACpB,OAAO;AACP,KAAK,EAAE,MAAM,CAAC,CAAC;AACf,GAAG;AACH;;ACvBO,MAAM,2BAA2B,CAAC;AACzC,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,UAAU,GAAG;AACtB,MAAME,uCAA0B;AAChC,MAAMC,6CAAgC;AACtC,MAAMC,4CAA+B;AACrC,MAAMC,yCAA4B;AAClC,MAAMC,4CAA+B;AACrC,MAAMC,wCAA2B;AACjC,MAAMC,0CAA6B;AACnC,MAAMC,0CAA6B;AACnC,KAAK,CAAC;AACN,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,6BAA6B,CAAC;AACzC,GAAG;AACH,EAAE,MAAM,kBAAkB,CAAC,MAAM,EAAE;AACnC,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7C,MAAM,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpD,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE;AACnD,IAAI,MAAM,OAAO,GAAGC,iCAAoB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE;AAC1E,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,KAAK,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;AAC7C,QAAQ,MAAM,SAAS,GAAGC,2BAAc,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC1D,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACvC,UAAU,MAAM,EAAE,OAAO;AACzB,UAAU,IAAI,EAAE,gBAAgB;AAChC,UAAU,MAAM,EAAE;AAClB,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,YAAY,SAAS,EAAE,SAAS,CAAC,SAAS;AAC1C,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,WAAW;AACX,SAAS,CAAC,CAAC,CAAC;AACZ,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACvC,UAAU,MAAM,EAAE;AAClB,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,YAAY,SAAS,EAAE,SAAS,CAAC,SAAS;AAC1C,YAAY,IAAI,EAAE,SAAS,CAAC,IAAI;AAChC,WAAW;AACX,UAAU,IAAI,EAAE,gBAAgB;AAChC,UAAU,MAAM,EAAE,OAAO;AACzB,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO;AACP,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;AACrC,MAAM,MAAM,SAAS,GAAG,MAAM,CAAC;AAC/B,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,8BAAiB,EAAEC,8BAAiB,CAAC,CAAC;AACxI,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,6BAAgB,EAAEC,8BAAiB,CAAC,CAAC;AACpJ,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,kCAAqB,EAAEC,qCAAwB,CAAC,CAAC;AACxJ,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,kCAAqB,EAAEC,qCAAwB,CAAC,CAAC;AACxJ,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,gCAAmB,EAAEC,mCAAsB,CAAC,CAAC;AAC7H,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEP,6BAAgB,EAAEC,8BAAiB,CAAC,CAAC;AACzI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAE;AAC/B,MAAM,MAAM,GAAG,GAAG,MAAM,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEH,8BAAiB,EAAEC,8BAAiB,CAAC,CAAC;AAClI,MAAM,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,6BAAgB,EAAEC,8BAAiB,CAAC,CAAC;AACnI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACpC,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAC;AAC9B,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEH,8BAAiB,EAAEC,8BAAiB,CAAC,CAAC;AACvI,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEO,gCAAmB,EAAEC,mCAAsB,CAAC,CAAC;AAC5H,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEA,mCAAsB,EAAED,gCAAmB,CAAC,CAAC;AAC/H,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEN,6BAAgB,EAAEC,8BAAiB,CAAC,CAAC;AACxI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;AAChC,MAAM,MAAM,IAAI,GAAG,MAAM,CAAC;AAC1B,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEO,+BAAkB,EAAEC,gCAAmB,CAAC,CAAC;AACzI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC;AAC3B,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,8BAAiB,EAAEC,+BAAkB,CAAC,CAAC;AACtI,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEA,+BAAkB,EAAED,8BAAiB,CAAC,CAAC;AACxI,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAED,gCAAmB,EAAED,+BAAkB,CAAC,CAAC;AACxI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAClC,MAAM,MAAM,MAAM,GAAG,MAAM,CAAC;AAC5B,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEV,8BAAiB,EAAEC,8BAAiB,CAAC,CAAC;AACrI,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEC,6BAAgB,EAAEC,8BAAiB,CAAC,CAAC;AACtI,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAClC,MAAM,MAAM,MAAM,GAAG,MAAM,CAAC;AAC5B,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,EAAE,EAAEH,8BAAiB,EAAEC,8BAAiB,CAAC,CAAC;AACrI,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;;ACrHA,MAAM,IAAI,GAAGa,cAAS,CAACC,qBAAC,CAAC,CAAC;AACnB,MAAM,mBAAmB,CAAC;AACjC,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,qBAAqB,CAAC;AACjC,GAAG;AACH,EAAE,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE;AACvD,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;AAClC,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,IAAI,IAAI;AACR,MAAM,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACtD,MAAM,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,QAAQ,KAAK,MAAM,SAAS,IAAI,WAAW,EAAE;AAC7C,UAAU,MAAM,IAAI,GAAG,MAAMC,sBAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACpD,UAAU,WAAW,MAAM,WAAW,IAAI,MAAM,CAAC;AACjD,YAAY,IAAI;AAChB,YAAY,QAAQ,EAAE;AACtB,cAAc,IAAI,EAAE,MAAM;AAC1B,cAAc,MAAM,EAAEC,wBAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AAC/C,aAAa;AACb,WAAW,CAAC,EAAE;AACd,YAAY,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9B,WAAW;AACX,SAAS;AACT,OAAO,MAAM,IAAI,CAAC,QAAQ,EAAE;AAC5B,QAAQ,MAAM,OAAO,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AAC7E,QAAQ,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAChE,OAAO;AACP,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,MAAM,OAAO,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;AACpF,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;;ACrCO,SAASC,eAAa,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE;AAC1D,EAAE,IAAI;AACN,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;AAC9B,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAClC,QAAQ,OAAOD,wBAAI,CAAC,IAAI,CAACA,wBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5D,OAAO;AACP,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACvE,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,CAAC;AACM,MAAM,uBAAuB,CAAC;AACrC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,yBAAyB,CAAC;AACrC,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;AAClD,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACpC,MAAM,MAAM,cAAc,GAAG,MAAM,CAAC;AACpC,MAAM,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC;AAC7D,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAACA,wBAAI,CAAC,GAAG,CAAC,EAAE;AACjE,QAAQ,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,sCAAsC,EAAE,IAAI,CAAC,2BAA2B,EAAE,QAAQ,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;AAClL,OAAO;AACP,MAAM,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;AAClC,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE;AACtC,QAAQ,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,OAAO;AACP,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE;AACvC,QAAQ,OAAO,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrD,OAAO;AACP,MAAM,KAAK,MAAM,mBAAmB,IAAI,OAAO,EAAE;AACjD,QAAQ,MAAM,MAAM,GAAGC,eAAa,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;AAC/F,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAC1D,OAAO;AACP,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;;AC5CO,MAAM,oBAAoB,CAAC;AAClC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,sBAAsB,CAAC;AAClC,GAAG;AACH,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC3C,IAAI,MAAM,OAAO,GAAG,OAAO,IAAI,KAAK;AACpC,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,YAAY,MAAM,CAAC,EAAE;AAC9C,QAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7B,OAAO;AACP,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAC/B,QAAQ,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3E,QAAQ,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5G,OAAO;AACP,MAAM,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;AAChD,QAAQ,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClH,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5I,OAAO,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,QAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7B,OAAO;AACP,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5C,MAAM,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAC3D,MAAM,IAAI,CAAC,QAAQ,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AAC1D,QAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7B,OAAO;AACP,MAAM,MAAM,IAAI,GAAG,OAAO,GAAG,KAAK;AAClC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;AACzC,UAAU,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE,UAAU,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;AACjD,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,OAAO,CAAC;AACR,MAAM,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC;AAC7E,QAAQ,GAAG;AACX,QAAQ,IAAI;AACZ,OAAO,CAAC,CAAC;AACT,MAAM,OAAO;AACb,QAAQ,MAAM,QAAQ,CAAC;AACvB,UAAU,GAAG,EAAE,WAAW;AAC1B,UAAU,KAAK,EAAE,aAAa;AAC9B,UAAU,OAAO,EAAE,QAAQ,CAAC,MAAM;AAClC,UAAU,IAAI;AACd,UAAU,UAAU;AACpB,SAAS,CAAC;AACV,QAAQ,IAAI;AACZ,OAAO,CAAC;AACR,KAAK,CAAC;AACN,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3C,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,CAAC;AACM,eAAe,uBAAuB,CAAC,MAAM,EAAE;AACtD,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,IAAI,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC9C,EAAE,IAAI,SAAS,CAAC;AAChB,EAAE,IAAI;AACN,IAAI,SAAS,GAAGC,wBAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9D,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrG,GAAG;AACH,EAAE,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9B,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,kDAAkD,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9I,GAAG;AACH,EAAE,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAChC,EAAE,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE;AAC3D,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvH,GAAG;AACH,EAAE,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC3B,CAAC;AACM,eAAe,uBAAuB,CAAC,MAAM,EAAE;AACtD,EAAE,MAAM,IAAI,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC9C,EAAE,IAAI;AACN,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrG,GAAG;AACH,CAAC;AACM,eAAe,uBAAuB,CAAC,MAAM,EAAE;AACtD,EAAE,OAAO,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACxC,CAAC;AACD,eAAe,gBAAgB,CAAC,MAAM,EAAE;AACxC,EAAE,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;AACrC,EAAE,IAAI;AACN,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClC,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,GAAG;AACH,CAAC;AACD,SAAS,WAAW,CAAC;AACrB,EAAE,GAAG;AACL,EAAE,KAAK;AACP,EAAE,OAAO;AACT,EAAE,UAAU;AACZ,CAAC,EAAE;AACH,EAAE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACjC,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,qFAAqF,CAAC,CAAC,CAAC;AAChI,GAAG;AACH,EAAE,IAAI;AACN,IAAI,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACtC,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,6BAA6B,EAAE,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrG,GAAG;AACH;;ACvGA,MAAM,SAAS,GAAG,IAAI,CAAC;AAChB,MAAM,kBAAkB,CAAC;AAChC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,gBAAgB,GAAG;AACrB,IAAI,OAAO,YAAY,CAAC;AACxB,GAAG;AACH,EAAE,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;AAC9D,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;AACjC,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACjD,IAAI,IAAI;AACR,MAAM,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1H,MAAM,MAAM,YAAY,GAAG,EAAE,CAAC;AAC9B,MAAM,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;AACnC,QAAQ,WAAW,MAAM,WAAW,IAAI,MAAM,CAAC;AAC/C,UAAU,IAAI,EAAE,IAAI,CAAC,IAAI;AACzB,UAAU,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;AAC7D,SAAS,CAAC,EAAE;AACZ,UAAU,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACzC,UAAU,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5B,SAAS;AACT,OAAO;AACP,MAAM,MAAM,cAAc,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;AAC5E,MAAM,IAAI,OAAO,IAAI,cAAc,EAAE;AACrC,QAAQ,MAAM,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE;AACnC,UAAU,IAAI,EAAE,OAAO;AACvB,UAAU,KAAK,EAAE,YAAY;AAC7B,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAMC,kBAAW,CAAC,KAAK,CAAC,CAAC;AACzB,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AAClE,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,kBAAkB,IAAI,SAAS,EAAE;AAC1D,QAAQ,KAAK,MAAM,WAAW,IAAI,SAAS,CAAC,KAAK,EAAE;AACnD,UAAU,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5B,SAAS;AACT,OAAO,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE;AACjD,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,UAAU,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAClE,SAAS;AACT,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAC/D,OAAO;AACP,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE;AAC/B,IAAI,MAAM,EAAE,QAAQ,EAAE,GAAG/B,+BAAW,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAI,IAAI,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC5D,MAAM,MAAM,OAAO,GAAGgC,kCAAc,CAAC,CAAC,CAAC,CAAC;AACxC,MAAM,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5E,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,MAAM;AACzD,QAAQ,GAAG,EAAE,IAAI,CAAC,GAAG;AACrB,QAAQ,IAAI,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;AACzC,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC1E,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE;AACrC,MAAM,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1E,MAAM,OAAO;AACb,QAAQ,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;AACjE,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI;AACxB,OAAO,CAAC;AACR,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1D,IAAI,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;AACnD,GAAG;AACH;;ACtEO,UAAU,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE;AACjD,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,IAAI,SAAS,CAAC;AAChB,EAAE,IAAI;AACN,IAAI,SAAS,GAAGF,wBAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/E,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,GAAG,GAAGvC,iCAAoB,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAI,MAAM,OAAO,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D,IAAI,MAAM,gBAAgB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC3D,IAAI,OAAO;AACX,GAAG;AACH,EAAE,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;AACpC,IAAI,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE;AAC7D,MAAM,MAAM,GAAG,GAAGA,iCAAoB,CAAC,QAAQ,CAAC,CAAC;AACjD,MAAM,MAAM,OAAO,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,MAAM,MAAM,gBAAgB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC7D,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AACrC,MAAM,IAAI0C,0BAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;AACtC,QAAQ,MAAM,gBAAgB,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtD,OAAO,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE,CACzB,MAAM;AACb,QAAQ,MAAM,OAAO,GAAG,CAAC,6BAA6B,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC;AACtE,QAAQ,MAAM,gBAAgB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC/D,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;AACM,MAAM,uBAAuB,GAAG,gBAAgB,wBAAwB,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpG,EAAE,KAAK,MAAM,CAAC,IAAI,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;AACnD,IAAI,MAAM,CAAC,CAAC;AACZ,GAAG;AACH,CAAC;;ACnCW,MAAC,2BAA2B,GAAGC,6CAAwB;;ACD5D,MAAM,aAAa,GAAG,2BAA2B,CAAC;AACzD,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,WAAW,EAAE,kEAAkE;AACjF,EAAE,YAAY,EAAEC,gDAA4B;AAC5C,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,UAAU,KAAK;AACnC,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;AACrG,GAAG;AACH,EAAE,OAAO,EAAE,CAAC,UAAU,MAAM;AAC5B,IAAI,GAAG,EAAE,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;AAC7C,GAAG,CAAC;AACJ,CAAC,CAAC;;ACXK,MAAM,YAAY,GAAG,2BAA2B,CAAC;AACxD,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,WAAW,EAAE,wCAAwC;AACvD,EAAE,YAAY,EAAEA,gDAA4B;AAC5C,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE;AACzB,IAAI,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAClE,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,YAAY,CAAC,CAAC;AAClF,GAAG;AACH,EAAE,OAAO,CAAC,KAAK,EAAE;AACjB,IAAI,OAAO;AACX,MAAM,GAAG,EAAE,MAAM;AACjB,MAAM,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAClE,KAAK,CAAC;AACN,GAAG;AACH,CAAC,CAAC;;ACbK,MAAM,aAAa,GAAG,2BAA2B,CAAC;AACzD,EAAE,IAAI,EAAE,iBAAiB;AACzB,EAAE,WAAW,EAAE,0CAA0C;AACzD,EAAE,YAAY,EAAEA,gDAA4B;AAC5C,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,KAAK;AAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;AAC7B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,KAAKxB,8BAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;AAChJ,GAAG;AACH,EAAE,OAAO,EAAE,CAAC,MAAM,MAAM;AACxB,IAAI,GAAG,EAAE,mBAAmB;AAC5B,IAAI,MAAM,EAAE,MAAM;AAClB,GAAG,CAAC;AACJ,CAAC,CAAC;;ACfK,MAAM,QAAQ,GAAG,2BAA2B,CAAC;AACpD,EAAE,IAAI,EAAE,WAAW;AACnB,EAAE,WAAW,EAAE,yDAAyD;AACxE,EAAE,YAAY,EAAEwB,gDAA4B;AAC5C,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,KAAK,KAAK;AAC9B,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3F,GAAG;AACH,EAAE,OAAO,EAAE,CAAC,KAAK,MAAM;AACvB,IAAI,GAAG,EAAE,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACnC,GAAG,CAAC;AACJ,CAAC,CAAC;;ACVK,MAAM,kBAAkB,GAAG,CAAC,YAAY,KAAK,2BAA2B,CAAC;AAChF,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3C,EAAE,WAAW,EAAE,CAAC,wCAAwC,EAAE,YAAY,CAAC,UAAU,CAAC;AAClF,EAAE,YAAY,EAAEA,gDAA4B;AAC5C,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,KAAK;AACnC,IAAI,MAAM,UAAU,GAAG9C,UAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC;AACxD,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,MAAM,OAAO,KAAK,KAAK,UAAU,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,CAAC,CAAC,UAAU,CAAC;AACxB,GAAG;AACH,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK,MAAM;AAC5B,IAAI,GAAG,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACjC,IAAI,GAAG,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE;AAC9C,GAAG,CAAC;AACJ,CAAC,CAAC;;ACjBK,MAAM,WAAW,GAAG,kBAAkB,CAAC,UAAU,CAAC;;ACAlD,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC;;ACKrC,MAAC,eAAe,GAAG;AAC/B,EAAE,aAAa;AACf,EAAE,QAAQ;AACV,EAAE,WAAW;AACb,EAAE,OAAO;AACT,EAAE,YAAY;AACd,EAAE,aAAa;AACf;;ACVA,MAAM,EAAE,UAAU,EAAE,yBAAyB,EAAE,GAAG+C,2CAAsB,CAAC;AACzE,EAAE,QAAQ,EAAE,SAAS;AACrB,EAAE,YAAY,EAAED,gDAA4B;AAC5C,EAAE,KAAK,EAAE,eAAe;AACxB,CAAC,CAAC,CAAC;AACS,MAAC,iBAAiB,GAAG,WAAW;AAChC,MAAC,gCAAgC,GAAG;;ACTzC,SAAS,8BAA8B,CAAC,OAAO,EAAE;AACxD,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;AAC7C,EAAE,OAAO,MAAM;AACf,IAAI,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,UAAU,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;AAClE,GAAG,CAAC;AACJ;;ACLA,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC;AAC3D,CAAC;AACD,SAAS,aAAa,CAAC,MAAM,EAAE;AAC/B,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,OAAO,CAAC;AAC5D,CAAC;AACM,SAAS,eAAe,CAAC,MAAM,EAAE;AACxC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,MAAM,aAAa,GAAG,EAAE,CAAC;AAC3B,EAAE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACxD,EAAE,IAAI,YAAY,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;AACrD,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE;AACnG,MAAM,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC1D,KAAK;AACL,GAAG;AACH,EAAE,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC;;ACPO,MAAM,6BAA6B,CAAC;AAC3C,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;AACnC,IAAI,IAAI,CAAC,oBAAoB,GAAGE,+CAA2B,CAAC;AAC5D,IAAI,MAAM;AACV,MAAM,SAAS;AACf,MAAM,SAAS;AACf,MAAM,gBAAgB;AACtB,MAAM,MAAM;AACZ,qBAAMC,eAAa;AACnB,MAAM,YAAY;AAClB,KAAK,GAAG,OAAO,CAAC;AAChB,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,IAAI,iCAAiC,CAAC;AAClF,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,GAAG,CAAC;AACtC,IAAI,IAAI,CAAC,aAAa,GAAGA,eAAa,IAAI,IAAIC,2BAAa,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;AACzF,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,GAAG;AACH,EAAE,OAAO,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;AACtC,IAAI,OAAO,IAAI,6BAA6B,CAAC,OAAO,CAAC,CAAC;AACtD,GAAG;AACH,EAAE,MAAM,WAAW,GAAG;AACtB,IAAI,OAAOC,eAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACzC,GAAG;AACH,EAAE,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC;AAC3B,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrD,MAAM,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACtD,KAAK;AACL,IAAI,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC;AACnC,GAAG;AACH,EAAE,OAAO,OAAO,GAAG;AACnB,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnC,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AACzD,IAAI,IAAI,iBAAiB,GAAG,CAAC,CAAC;AAC9B,IAAI,IAAI,iBAAiB,GAAG,IAAI,CAAC;AACjC,IAAI,OAAO,iBAAiB,EAAE;AAC9B,MAAM,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;AAC7D,QAAQ,MAAM,EAAE,IAAI,CAAC,MAAM;AAC3B,QAAQ,KAAK,EAAE,IAAI,CAAC,SAAS;AAC7B,QAAQ,MAAM,EAAE,iBAAiB;AACjC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;AAC3B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC;AAC7D,MAAM,iBAAiB,IAAI,QAAQ,CAAC,MAAM,CAAC;AAC3C,MAAM,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;AACrC,QAAQ,MAAM;AACd,UAAU,KAAK,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI;AACjF,UAAU,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAClE,YAAY,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,IAAI,SAAS;AAC7D,YAAY,IAAI,EAAE,MAAM,CAAC,IAAI;AAC7B,YAAY,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;AACtC,WAAW,CAAC;AACZ,UAAU,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC;AACvC,UAAU,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,KAAK,OAAO;AAC3H,UAAU,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,KAAK,OAAO;AAClH,UAAU,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,IAAI,SAAS;AAC3D,UAAU,IAAI,EAAE,MAAM,CAAC,IAAI;AAC3B,UAAU,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,KAAK,EAAE;AAC/E,UAAU,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE;AACvE,UAAU,aAAa,EAAE;AACzB,YAAY,WAAW,EAAEC,+BAAkB,CAAC,MAAM,CAAC;AACnD,WAAW;AACX,SAAS,CAAC;AACV,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AClEO,MAAM,sBAAsB,CAAC;AACpC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;AACnC,IAAI,IAAI,CAAC,oBAAoB,GAAGJ,+CAA2B,CAAC;AAC5D,IAAI,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,iBAAEC,eAAa,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;AACzF,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,IAAI,iCAAiC,CAAC;AAClF,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,aAAa,GAAGA,eAAa,IAAI,IAAIC,2BAAa,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;AACzF,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,GAAG;AACH,EAAE,OAAO,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;AACtC,IAAI,OAAO,IAAI,sBAAsB,CAAC;AACtC,MAAM,GAAG,OAAO;AAChB,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC;AAC3B,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrD,MAAM,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACtD,KAAK;AACL,IAAI,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC;AACnC,GAAG;AACH,EAAE,YAAY,CAAC,MAAM,EAAE;AACvB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC;AAC7D,GAAG;AACH,EAAE,eAAe,CAAC,MAAM,EAAE;AAC1B,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC/B,IAAI,IAAI,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;AACzD,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACnC,MAAM,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,KAAK,YAAY,EAAE;AACvH,QAAQ,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AACtH,QAAQ,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC/D,OAAO,MAAM;AACb,QAAQ,YAAY,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,KAAK,YAAY,CAAC;AACnI,OAAO;AACP,KAAK;AACL,IAAI,OAAO,YAAY,CAAC;AACxB,GAAG;AACH,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AACzD,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;AAC1D,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AAClB,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC1C,MAAM,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACrC,MAAM,OAAO;AACb,QAAQ,KAAK,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI;AAC/E,QAAQ,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAChE,UAAU,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,IAAI,SAAS;AAC3D,UAAU,IAAI,EAAE,MAAM,CAAC,IAAI;AAC3B,UAAU,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;AACpC,SAAS,CAAC;AACV,QAAQ,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AAC1C,QAAQ,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,KAAK,OAAO;AACzH,QAAQ,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,KAAK,OAAO;AAChH,QAAQ,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,IAAI,SAAS;AACzD,QAAQ,IAAI,EAAE,MAAM,CAAC,IAAI;AACzB,QAAQ,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,KAAK,EAAE;AAC7E,QAAQ,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE;AACrE,QAAQ,aAAa,EAAE;AACvB,UAAU,WAAW,EAAEE,+BAAkB,CAAC,MAAM,CAAC;AACjD,SAAS;AACT,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;AClEO,SAAS,gBAAgB,CAAC,MAAM,EAAE;AACzC,EAAE,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC;AACpC,CAAC;AACM,SAAS,oBAAoB,CAAC,MAAM,EAAE;AAC7C,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC/C,gCAAmB,CAAC,CAAC;AAC5F,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,MAAM,SAAS,GAAG+C,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,MAAM,IAAI1D,iBAAU,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,+BAA+B,EAAEW,gCAAmB,CAAC,CAAC,CAAC,CAAC;AACtG,GAAG;AACH,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACM,SAAS,0BAA0B,CAAC,MAAM,EAAE;AACnD,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAACC,uCAA0B,CAAC,CAAC;AACnG,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,MAAM,SAAS,GAAG8C,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,MAAM,IAAI1D,iBAAU,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,+BAA+B,EAAEY,uCAA0B,CAAC,CAAC,CAAC,CAAC;AAC7G,GAAG;AACH,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACM,SAAS,aAAa,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;AAChE,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AAC1B,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,IAAI;AACN,IAAI,IAAI,IAAI,KAAK,MAAM,EAAE;AACzB,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAClC,QAAQ,OAAOiC,wBAAI,CAAC,IAAI,CAACA,wBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5D,OAAO;AACP,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC/B,MAAM,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACzE,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,CAAC;AACM,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,EAAE,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9E,CAAC;AACM,MAAM,cAAc,GAAGc,kCAAqB,EAAE,CAAC;AAC/C,MAAM,sBAAsB,GAAGC,0CAA6B,EAAE;;AC7C9D,SAAS,0BAA0B,CAAC,QAAQ,EAAE;AACrD,EAAE,MAAM,IAAI,GAAGC,iBAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9F,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7B,CAAC;AACM,SAAS,4BAA4B,CAAC,IAAI,EAAE;AACnD,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACb,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACjC,EAAE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACzC,EAAE,IAAI,WAAW,CAAC;AAClB,EAAE,IAAI,cAAc,CAAC;AACrB,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,MAAM,gBAAgB,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAClD,gCAAmB,CAAC,CAAC;AACjH,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC3B,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,eAAe,EAAE+C,+BAAkB,CAAC,YAAY,CAAC,CAAC,eAAe,EAAElD,iCAAoB,CAAC,QAAQ,CAAC,CAAC,qCAAqC,CAAC,CAAC,CAAC;AACjK,KAAK;AACL,IAAI,WAAW,GAAG,gBAAgB,CAAC;AACnC,IAAI,MAAM,mBAAmB,GAAG,CAAC,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAACI,uCAA0B,CAAC,CAAC;AAC3H,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,eAAe,EAAE8C,+BAAkB,CAAC,YAAY,CAAC,CAAC,eAAe,EAAElD,iCAAoB,CAAC,QAAQ,CAAC,CAAC,6CAA6C,CAAC,CAAC,CAAC;AACzK,KAAK;AACL,IAAI,cAAc,GAAG,mBAAmB,CAAC;AACzC,GAAG,MAAM;AACT,IAAI,WAAW,GAAGA,iCAAoB,CAAC,QAAQ,CAAC,CAAC;AACjD,IAAI,cAAc,GAAG,WAAW,CAAC;AACjC,GAAG;AACH,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,UAAU,EAAE,uBAAuB;AACvC,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,QAAQ,EAAE;AACd,MAAM,IAAI,EAAE,0BAA0B,CAAC,QAAQ,CAAC;AAChD,MAAM,WAAW,EAAE;AACnB,QAAQ,CAACG,gCAAmB,GAAG,WAAW;AAC1C,QAAQ,CAACC,uCAA0B,GAAG,cAAc;AACpD,OAAO;AACP,KAAK;AACL,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,QAAQ,CAAC,IAAI;AACzB,MAAM,MAAM,EAAE,QAAQ,CAAC,MAAM;AAC7B,MAAM,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AACjC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,OAAO,MAAM,CAAC;AAChB;;AC9CO,MAAM,4BAA4B,CAAC;AAC1C,EAAE,WAAW,CAAC,MAAM,EAAE;AACtB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,GAAG;AACH,EAAE,eAAe,GAAG;AACpB,IAAI,OAAO,wBAAwB,CAAC;AACpC,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;AAC5B,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAClD,IAAI,MAAM,UAAU,CAAC,aAAa,CAAC;AACnC,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ;AACd,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AAC/B,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAChD,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;AAClC,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACzD,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACnD,QAAQ,IAAI,UAAU,KAAK,MAAM,EAAE;AACnC,UAAU,UAAU,GAAG,MAAM,CAAC;AAC9B,UAAU,UAAU,CAAC,aAAa,CAAC;AACnC,YAAY,IAAI,EAAE,MAAM;AACxB,YAAY,QAAQ,EAAE,WAAW;AACjC,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AACH,EAAE,qBAAqB,GAAG;AAC1B,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,eAAe,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7G,IAAI,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK;AAC7C,MAAM,MAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC9C,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAClD,MAAM,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAClD,QAAQ,QAAQ,EAAE;AAClB,UAAU,IAAI;AACd,UAAU,MAAM,EAAE,IAAI,KAAK,MAAM,GAAGiC,wBAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM;AACjE,SAAS;AACT,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACvD,MAAM,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC;AACrC,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;AC3CO,MAAM,oBAAoB,CAAC;AAClC,EAAE,WAAW,CAAC,EAAE,EAAE;AAClB,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACjB,GAAG;AACH,EAAE,eAAe,GAAG;AACpB,IAAI,OAAO,sBAAsB,CAAC;AAClC,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,KAAK,EAAE;AAC9B,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAC7D,MAAM,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACzD,MAAM,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;AACjH,MAAM,IAAI,gBAAgB,EAAE;AAC5B,QAAQ,MAAM,IAAIiB,oBAAa,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;AACzF,OAAO;AACP,MAAM,MAAM,KAAK,GAAG;AACpB,QAAQ,EAAE,EAAEC,OAAI,EAAE;AAClB,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI;AACxB,QAAQ,MAAM,EAAE,KAAK,CAAC,MAAM;AAC5B,OAAO,CAAC;AACR,MAAM,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1C,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,MAAM,GAAG,4BAA4B,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AACxC,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;AACpE,MAAM,OAAO,EAAE,EAAE;AACjB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG;AACH,EAAE,MAAM,aAAa,GAAG;AACxB,IAAI,OAAO,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AAClC,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,EAAE,EAAE;AACxB,IAAI,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AACpE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACvB,MAAM,MAAM,IAAIhE,oBAAa,CAAC,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,EAAE,EAAE;AAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC1B,MAAM,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAC5D,MAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AACtE,MAAM,IAAI,CAAC,QAAQ,EAAE;AACrB,QAAQ,MAAM,IAAIA,oBAAa,CAAC,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACnE,OAAO;AACP,MAAM,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAChD,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,MAAM,GAAG,4BAA4B,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;AACvE,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AACxC,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,KAAK,EAAE,EAAE;AACf,MAAM,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;AACtE,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,UAAU,GAAG;AACnB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC3B,MAAM,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;AAC5B,IAAI,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,IAAI,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AAC7C,IAAI,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK;AACjD,MAAM,MAAM,MAAM,GAAG,4BAA4B,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;AAChE,MAAM,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;AACnE,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;AACxC,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ;AACd,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,EAAE;AACpC,IAAI,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;AACzD,IAAI,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,KAAK,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AAC/E,MAAM,EAAE,EAAE,IAAI,CAAC,EAAE;AACjB,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,KAAK,CAAC,CAAC,CAAC;AACR,GAAG;AACH;;ACxFO,MAAM,oBAAoB,CAAC;AAClC,EAAE,WAAW,CAAC,MAAM,EAAE,eAAe,EAAE;AACvC,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AAC3C,GAAG;AACH,EAAE,MAAM,eAAe,CAAC,OAAO,EAAE;AACjC,IAAI,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAGkB,+BAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACjE,IAAI,MAAM,MAAM,GAAG;AACnB,MAAM,UAAU,EAAE,uBAAuB;AACzC,MAAM,IAAI,EAAE,WAAW;AACvB,MAAM,QAAQ,EAAE;AAChB,QAAQ,IAAI;AACZ,OAAO;AACP,MAAM,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE;AACnD,KAAK,CAAC;AACN,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5E,IAAI,IAAI,gBAAgB,CAAC;AACzB,IAAI,QAAQ,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,IAAI;AAC3D,MAAM,KAAK,OAAO;AAClB,QAAQ,gBAAgB,GAAG,eAAe,CAAC;AAC3C,QAAQ,MAAM;AACd,MAAM,KAAK,WAAW;AACtB,QAAQ,gBAAgB,GAAG,eAAe,CAAC;AAC3C,QAAQ,MAAM;AACd,MAAM,KAAK,QAAQ;AACnB,QAAQ,gBAAgB,GAAG,YAAY,CAAC;AACxC,QAAQ,MAAM;AACd,MAAM,KAAK,QAAQ;AACnB,QAAQ,gBAAgB,GAAG,YAAY,CAAC;AACxC,QAAQ,MAAM;AAGd,KAAK;AACL,IAAI,IAAI,gBAAgB,EAAE;AAC1B,MAAM,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG;AACpC,QAAQ,CAAC,CAAC,EAAE,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAChE,OAAO,CAAC;AACR,KAAK;AACL,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvE,IAAI,OAAO;AACX,MAAM,mBAAmB,EAAE,EAAE;AAC7B,MAAM,gBAAgB,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;AAChD,KAAK,CAAC;AACN,GAAG;AACH;;AC1CO,SAAS,mBAAmB,CAAC,KAAK,EAAE;AAC3C,EAAE,IAAI;AACN,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,MAAM,OAAO+C,cAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;AAChD,KAAK;AACL,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAGA,cAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAGA,cAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7H,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AACzB,MAAM,MAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAIhE,iBAAU,CAAC,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3E,GAAG;AACH,CAAC;AACM,SAAS,YAAY,CAAC,CAAC,EAAE;AAChC,EAAE,IAAIiE,qCAAuB,CAAC,CAAC,CAAC,EAAE;AAClC,IAAI,MAAM,IAAIH,oBAAa,CAAC,CAAC,oCAAoC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,GAAG;AACH,EAAE,MAAM,CAAC,CAAC;AACV;;ACfO,SAAS,mBAAmB,CAAC,MAAM,EAAE;AAC5C,EAAE,MAAM,QAAQ,GAAGI,mBAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzD,EAAE,OAAO,QAAQ,IAAI,IAAIC,kBAAO,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC;AACM,SAAS,iBAAiB,CAAC,MAAM,EAAE;AAC1C,EAAE,MAAM,QAAQ,GAAGD,mBAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzD,EAAE,OAAO,QAAQ,IAAI,IAAIE,gBAAK,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC;AACM,SAAS,mBAAmB,CAAC,MAAM,EAAE;AAC5C,EAAE,MAAM,QAAQ,GAAGF,mBAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzD,EAAE,OAAO,QAAQ,IAAI,IAAIG,kBAAO,CAAC,MAAM,CAAC,CAAC;AACzC;;ACjBO,SAAS,mBAAmB,CAAC,IAAI,EAAE;AAC1C,EAAE,MAAM,IAAI,mBAAmB,IAAI,GAAG,EAAE,CAAC;AACzC,EAAE,OAAO;AACT,IAAI,cAAc,EAAE,iBAAiB,CAAC;AACtC,MAAM,IAAI,EAAE,wBAAwB;AACpC,MAAM,IAAI,EAAE,yCAAyC;AACrD,MAAM,UAAU,EAAE,CAAC,MAAM,CAAC;AAC1B,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACxE,QAAQ,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAkB,IAAI,GAAG,EAAE,CAAC,CAAC;AAC3J,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;AACxC,UAAU,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB,UAAU,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;AACzC,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AAC9B,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACjC,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,WAAW;AACX,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK,CAAC;AACN,IAAI,oBAAoB,EAAE,iBAAiB,CAAC;AAC5C,MAAM,IAAI,EAAE,oCAAoC;AAChD,MAAM,IAAI,EAAE,qDAAqD;AACjE,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;AACpD,UAAU,KAAK,EAAE,GAAG;AACpB,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC,OAAO;AACP,KAAK,CAAC;AACN,IAAI,SAAS,EAAE,iBAAiB,CAAC;AACjC,MAAM,IAAI,EAAE,yBAAyB;AACrC,MAAM,IAAI,EAAE,4CAA4C;AACxD,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;AACpD,UAAU,KAAK,EAAE,GAAG;AACpB,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC,OAAO;AACP,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;;AC1CO,SAASC,oBAAkB,CAAC,MAAM,EAAE;AAC3C,EAAE,OAAOT,iBAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAACU,mCAAe,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACjF;;ACIA,MAAMC,YAAU,GAAG,EAAE,CAAC;AACtB,MAAM,kBAAkB,GAAG,EAAE,CAAC;AACvB,MAAM,yBAAyB,CAAC;AACvC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1C,GAAG;AACH,EAAE,MAAM,qBAAqB,CAAC,QAAQ,EAAE,OAAO,EAAE;AACjD,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM;AACV,MAAM,EAAE;AACR,MAAM,eAAe;AACrB,MAAM,UAAU;AAChB,cAAMC,QAAM;AACZ,MAAM,SAAS;AACf,MAAM,gBAAgB;AACtB,MAAM,WAAW;AACjB,KAAK,GAAG,OAAO,CAAC;AAChB,IAAI,MAAM,aAAa,GAAG,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;AAC3D,MAAM,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AACvD,MAAM,WAAW,EAAE,UAAU;AAC7B,cAAMA,QAAM;AACZ,MAAM,YAAY,EAAE,WAAW;AAC/B,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK;AAClD,MAAM,IAAI,CAAC,WAAW,EAAE;AACxB,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;AAC/C,OAAO;AACP,MAAM,OAAO,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AAClF,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,aAAa,KAAK,CAAC,EAAE;AAC7B,MAAM,MAAM,IAAIX,oBAAa,CAAC,CAAC,2CAA2C,EAAE,EAAE,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACrH,KAAK;AACL,IAAI,MAAM,IAAI,CAAC,sBAAsB,CAAC,EAAE,EAAE;AAC1C,MAAM,QAAQ,EAAE,gBAAgB;AAChC,MAAM,eAAe,EAAEJ,+BAAkB,CAAC,eAAe,CAAC;AAC1D,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,oBAAoB,CAAC;AAC7B,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACrD,MAAM,oBAAoB,GAAG,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,qBAAqB,EAAE,EAAE,EAAE,CAAC,CAAC;AACpG,MAAM,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,qBAAqB,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC1E,KAAK,MAAM;AACX,MAAM,oBAAoB,GAAG,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,qBAAqB,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChH,KAAK;AACL,IAAI,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM;AACtE,MAAM,qBAAqB,EAAE,EAAE;AAC/B,MAAM,iBAAiB,EAAEA,+BAAkB,CAAC,MAAM,CAAC;AACnD,MAAM,iBAAiB,EAAEA,+BAAkB,CAAC,MAAM,CAAC;AACnD,MAAM,IAAI;AACV,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,MAAM,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAEc,YAAU,CAAC,CAAC;AAC3F,IAAI,OAAO;AACX,MAAM,QAAQ,EAAE;AAChB,QAAQ,SAAS,EAAE,oBAAoB;AACvC,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,2BAA2B,CAAC,QAAQ,EAAE,OAAO,EAAE;AACvD,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;AAC/C,IAAI,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;AACrC,MAAM,MAAM;AACZ,MAAM,WAAW,EAAE,UAAU;AAC7B,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC9B,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAC7C,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAClC,IAAI,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACnH,GAAG;AACH,EAAE,MAAM,0BAA0B,CAAC,QAAQ,EAAE,OAAO,EAAE;AACtD,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AAC9E,IAAI,IAAI,QAAQ,CAAC,MAAM,EAAE;AACzB,MAAM,IAAI,YAAY,GAAG,CAAC,CAAC;AAC3B,MAAM,KAAK,MAAM,IAAI,IAAItB,0BAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;AACtD,QAAQ,YAAY,IAAI,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,kBAAkB,CAAC,OAAO,EAAE;AAC7G,UAAU,OAAO,OAAO,CAAC,aAAa,CAAC,aAAa,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;AAClF,YAAY,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,SAAS,CAAC,KAAK,EAAE;AAC/N,cAAc,OAAO,KAAK,CAAC,MAAM,CAAC;AAClC,gBAAgB,OAAO,EAAE,qBAAqB;AAC9C,gBAAgB,UAAU,EAAE,4CAA4C;AACxE,eAAe,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE;AACtE,gBAAgB,wBAAwB,EAAE,4CAA4C;AACtF,eAAe,CAAC,CAAC;AACjB,aAAa,CAAC,CAAC;AACf,WAAW,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,SAAS,SAAS,CAAC,KAAK,EAAE;AAClE,YAAY,OAAO,KAAK,CAAC,MAAM,CAAC;AAChC,cAAc,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC;AACtD,cAAc,cAAc,EAAE,YAAY;AAC1C,cAAc,aAAa,EAAE,YAAY;AACzC,aAAa,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,SAAS,SAAS,CAAC,KAAK,EAAE;AACnE,cAAc,OAAO,KAAK,CAAC,MAAM,CAAC;AAClC,gBAAgB,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,wDAAwD,EAAE,EAAE,CAAC;AAC7F,gBAAgB,cAAc,EAAE,mBAAmB;AACnD,gBAAgB,aAAa,EAAE,yBAAyB;AACxD,eAAe,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE;AACpE,gBAAgB,iBAAiB,EAAE,0BAA0B;AAC7D,eAAe,CAAC,CAAC;AACjB,aAAa,CAAC,CAAC;AACf,WAAW,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,SAAS,cAAc,GAAG;AACvH,YAAY,IAAI,CAAC,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE,wBAAwB,CAAC,CAAC;AAC9E,YAAY,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,IAAI,EAAE,qBAAqB,CAAC,CAAC;AACzE,WAAW,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;AAC5C,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;AACpB,QAAQ,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AACrI,OAAO;AACP,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AACtB,MAAM,KAAK,MAAM,KAAK,IAAIA,0BAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;AACnD,QAAQ,IAAI;AACZ,UAAU,MAAM,EAAE,CAAC,WAAW,CAAC,eAAe,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AACrE,YAAY,SAAS,EAAEa,OAAI,EAAE;AAC7B,YAAY,UAAU,EAAEL,+BAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AAChE,YAAY,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACpE,YAAY,gBAAgB,EAAE,IAAI,CAAC,IAAI;AACvC,YAAY,MAAM,EAAE,EAAE;AACtB,YAAY,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;AACnD,YAAY,cAAc,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACvC,YAAY,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AAC1C,WAAW,CAAC,CAAC,EAAEc,YAAU,CAAC,CAAC;AAC3B,UAAU,MAAM,EAAE,CAAC,WAAW,CAAC,0BAA0B,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AAChF,YAAY,UAAU,EAAE,OAAO,CAAC,SAAS;AACzC,YAAY,iBAAiB,EAAEd,+BAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACvE,WAAW,CAAC,CAAC,EAAEc,YAAU,CAAC,CAAC;AAC3B,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,UAAU,IAAI,CAACP,qCAAuB,CAAC,KAAK,CAAC,EAAE;AAC/C,YAAY,MAAM,KAAK,CAAC;AACxB,WAAW,MAAM;AACjB,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,oDAAoD,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACtG,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;AACpC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,MAAM,EAAE;AACzB,MAAM,KAAK,MAAM;AACjB,QAAQ,QAAQ,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE;AACzC,QAAQ,IAAI;AACZ,OAAO,IAAI,QAAQ,EAAE;AACrB,QAAQ,MAAM,SAAS,GAAGP,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACrD,QAAQ,IAAI;AACZ,UAAU,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AACrF,UAAU,IAAI,CAAC,EAAE,EAAE;AACnB,YAAY,EAAE,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AACnF,WAAW;AACX,UAAU,IAAI,EAAE,EAAE;AAClB,YAAY,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,MAAM,CAAC;AACxD,cAAc,UAAU,EAAE,OAAO,CAAC,SAAS;AAC3C,cAAc,iBAAiB,EAAE,SAAS;AAC1C,aAAa,CAAC,CAAC;AACf,WAAW,MAAM;AACjB,YAAY,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;AACnG,YAAY,IAAI,cAAc,EAAE;AAChC,cAAc,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,gCAAgC,EAAE,SAAS,CAAC,uBAAuB,EAAE,cAAc,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AACtL,aAAa;AACb,WAAW;AACX,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,UAAU,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE,SAAS,CAAC,eAAe,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACjH,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,sBAAsB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC;AAClD,IAAI,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACrE,MAAM,UAAU,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,CAAC;AACvD,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC/I,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;AACpD,IAAI,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;AAC3F,MAAM,cAAc,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC5K,KAAK,CAAC,CAAC;AACP,IAAI,OAAO;AACX,MAAM,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AAC/B,QAAQ,EAAE,EAAE,CAAC,CAAC,SAAS;AACvB,QAAQ,SAAS,EAAE,CAAC,CAAC,UAAU;AAC/B,QAAQ,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC;AAC3D,QAAQ,eAAe,EAAE,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;AACrF,QAAQ,UAAU,EAAE,CAAC,CAAC,WAAW,IAAI,EAAE;AACvC,QAAQ,YAAY,EAAE,mBAAmB,CAAC,CAAC,CAAC,cAAc,CAAC;AAC3D,QAAQ,eAAe,EAAE,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,CAAC;AACjE,QAAQ,KAAK,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AACrD,QAAQ,MAAM,EAAE,CAAC,CAAC,MAAM;AACxB,QAAQ,WAAW,EAAE,CAAC,CAAC,YAAY;AACnC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE;AACzC,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;AAClC,IAAI,MAAM,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;AACnC,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC1D,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,kBAAkB,EAAE,KAAK,IAAI,CAAC,EAAE;AACjE,MAAM,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC1G,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,QAAQ,IAAI,KAAK,KAAK,CAAC,EAAE;AACzB,UAAU,MAAM,IAAI3D,oBAAa,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AACpE,SAAS;AACT,QAAQ,MAAM,IAAIA,oBAAa,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC,wCAAwC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5G,OAAO;AACP,MAAM,MAAM,SAAS,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;AAC7G,MAAM,IAAI,CAAC,SAAS,EAAE;AACtB,QAAQ,OAAO,EAAE,UAAU,EAAE,CAAC;AAC9B,OAAO;AACP,MAAM,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjC,MAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,KAAK;AACL,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,SAAS,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;AACjH,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE;AACvC,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC/G,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC5E,IAAI,OAAO,EAAE,UAAU,EAAE,CAAC;AAC1B,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE;AACnC,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;AAClC,IAAI,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AACvJ,IAAI,IAAI,YAAY,KAAK,CAAC,EAAE;AAC5B,MAAM,MAAM,IAAIA,oBAAa,CAAC,CAAC,mBAAmB,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;AAC7E,KAAK;AACL,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,EAAE,EAAE;AACxB,IAAI,IAAI;AACR,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AAC1B,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAC5D,QAAQ,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,OAAO,EAAE;AACT,QAAQ,qBAAqB,EAAE,IAAI;AACnC,OAAO,CAAC,CAAC;AACT,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,MAAM,MAAM,YAAY,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,MAAM,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE;AAC/D,IAAI,MAAM,SAAS,GAAG2D,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACpD,IAAI,MAAM,aAAa,GAAG,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;AAC3D,MAAM,kBAAkB,EAAE,gBAAgB;AAC1C,MAAM,gBAAgB,EAAE,IAAI;AAC5B,MAAM,YAAY,EAAE,WAAW;AAC/B,MAAM,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACpC,MAAM,cAAc,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACjC,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK;AAC1D,MAAM,IAAI,CAAC,WAAW,EAAE;AACxB,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;AAC/C,OAAO;AACP,MAAM,OAAO,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AAClF,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,aAAa,KAAK,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE,MAAM,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE;AAC/D,IAAI,MAAM,SAAS,GAAGA,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACpD,IAAI,IAAI;AACR,MAAM,IAAI,KAAK,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;AAC7C,QAAQ,SAAS,EAAEK,OAAI,EAAE;AACzB,QAAQ,UAAU,EAAE,SAAS;AAC7B,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,gBAAgB,EAAE,IAAI;AAC9B,QAAQ,MAAM,EAAE,EAAE;AAClB,QAAQ,YAAY,EAAE,WAAW;AACjC,QAAQ,cAAc,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACnC,QAAQ,iBAAiB,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE;AACtC,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACxD,QAAQ,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;AACxD,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC;AACjC,MAAM,OAAO,MAAM,CAAC,QAAQ,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;AAC1D,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,IAAIW,cAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AAChF,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP,MAAM,MAAM,KAAK,CAAC;AAClB,KAAK;AACL,GAAG;AACH,EAAE,MAAM,wBAAwB,CAAC,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE;AAC7D,IAAI,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC;AACxG,IAAI,MAAM,cAAc,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,YAAY,CAAC;AACnE,IAAI,IAAI,CAAC,cAAc,EAAE;AACzB,MAAM,OAAO,KAAK,CAAC,CAAC;AACpB,KAAK;AACL,IAAI,IAAI,cAAc,KAAK,WAAW,EAAE;AACxC,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,oBAAoB,CAAC,IAAI,EAAE;AAC7B,IAAI,OAAOxB,0BAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjG,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE;AACjC,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAAE;AAClC,MAAM,OAAO;AACb,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AAC5C,UAAU,QAAQ,EAAE,CAAC;AACrB,UAAU,IAAI,EAAEoB,oBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5C,SAAS,CAAC,CAAC;AACX,QAAQ,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAKZ,+BAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1E,OAAO,CAAC;AACR,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE;AACnF,MAAM,iBAAiB,EAAE,YAAY;AACrC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC;AACvD,MAAM,iBAAiB,EAAE,4CAA4C;AACrE,MAAM,YAAY,EAAE,4BAA4B;AAChD,MAAM,gBAAgB,EAAE,gCAAgC;AACxD,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM;AACnD,MAAM,QAAQ;AACd,MAAM,GAAG,EAAEA,+BAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC9C,MAAM,IAAI,EAAEY,oBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC/C,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK;AAClD,MAAM,CAAC,CAAC,iBAAiB;AACzB,MAAM;AACN,QAAQ,WAAW,EAAE,CAAC,CAAC,YAAY;AACnC,QAAQ,aAAa,EAAE,CAAC,CAAC,gBAAgB;AACzC,OAAO;AACP,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9D,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,IAAI,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;AACjC,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACvG,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,MAAM,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C,MAAM,MAAM,UAAU,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;AACtE,MAAM,IAAI,CAAC,MAAM,EAAE;AACnB,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AACnE,QAAQ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC,IAAI,EAAE;AACrD,QAAQ,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClC,OAAO;AACP,KAAK;AACL,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;AACzC,GAAG;AACH,EAAE,MAAM,sBAAsB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,MAAM,EAAE,GAAG,QAAQ,CAAC;AACxB,IAAI,MAAM,eAAe,GAAG,IAAI,KAAK,EAAE,CAAC;AACxC,IAAI,MAAM,0BAA0B,GAAG,IAAI,KAAK,EAAE,CAAC;AACnD,IAAI,KAAK,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE;AAC5D,MAAM,MAAM,SAAS,GAAGZ,+BAAkB,CAAC,MAAM,CAAC,CAAC;AACnD,MAAM,MAAM,IAAI,GAAGY,oBAAkB,CAAC,MAAM,CAAC,CAAC;AAC9C,MAAM,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AACxF,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxC,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AACzF,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxC,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;AAC7F,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,+BAA+B,EAAE,SAAS,CAAC,uBAAuB,EAAE,cAAc,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AACpJ,QAAQ,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,OAAO;AACP,KAAK;AACL,IAAI,MAAM,EAAE,CAAC,0BAA0B,CAAC,CAAC,UAAU,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AACvK,IAAI,MAAM,EAAE,CAAC,WAAW,CAAC,0BAA0B,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,MAAM;AACzF,MAAM,iBAAiB,EAAE,OAAO,CAAC,eAAe;AAChD,MAAM,iBAAiB,EAAE,SAAS;AAClC,KAAK,CAAC,CAAC,EAAEE,YAAU,CAAC,CAAC;AACrB,GAAG;AACH;;AC9XO,eAAe,uBAAuB,CAAC,IAAI,EAAE;AACpD,EAAE,MAAM,aAAa,GAAGG,gCAAkB,CAAC,mCAAmC,EAAE,YAAY,CAAC,CAAC;AAC9F,EAAE,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAI,SAAS,EAAE,aAAa;AAC5B,GAAG,CAAC,CAAC;AACL;;ACNA,MAAM,2BAA2B,GAAG,GAAG,CAAC;AACjC,SAAS,iBAAiB,CAAC,OAAO,EAAE;AAC3C,EAAE,MAAM;AACR,IAAI,SAAS;AACb,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,aAAa;AACjB,IAAI,iBAAiB,GAAG,2BAA2B;AACnD,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,IAAI,YAAY,IAAI,aAAa,EAAE;AACrC,IAAI,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;AACrE,GAAG;AACH,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC;AACtB,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC;AACtB,EAAE,IAAI,aAAa,GAAG,CAAC,CAAC;AACxB,EAAE,eAAe,aAAa,GAAG;AACjC,IAAI,IAAI,OAAO,IAAI,OAAO,IAAI,aAAa,GAAG,YAAY,EAAE;AAC5D,MAAM,OAAO;AACb,KAAK;AACL,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,MAAM,SAAS,GAAG,aAAa,GAAG,aAAa,CAAC;AACpD,IAAI,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,CAAC;AACnD,IAAI,OAAO,GAAG,KAAK,CAAC;AACpB,IAAI,aAAa,IAAI,WAAW,CAAC,MAAM,CAAC;AACxC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAClC,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM;AACtC,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,OAAO;AACjB,SAAS;AACT,QAAQ,aAAa,IAAI,CAAC,CAAC;AAC3B,QAAQ,aAAa,EAAE,CAAC;AACxB,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,MAAM,aAAa,EAAE,CAAC;AACtB,KAAK;AACL,GAAG;AACH,EAAE,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM;AACvC,IAAI,aAAa,EAAE,CAAC;AACpB,GAAG,EAAE,iBAAiB,CAAC,CAAC;AACxB,EAAE,OAAO,MAAM;AACf,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC;AAC9B,GAAG,CAAC;AACJ;;ACvCA,MAAM,SAAS,GAAG,CAAC,CAAC;AACb,MAAM,8BAA8B,CAAC;AAC5C,EAAE,WAAW,CAAC,MAAM,EAAE,kBAAkB,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,iBAAiB,GAAG,GAAG,EAAE;AACvG,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACjD,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC/C,IAAI,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,CAAC;AACrC,GAAG;AACH,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,MAAM,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;AAC9D,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;AACtC,MAAM,YAAY,EAAE,CAAC;AACrB,MAAM,aAAa,EAAE,EAAE;AACvB,MAAM,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;AAC/C,MAAM,SAAS,EAAE,OAAO,KAAK,KAAK;AAClC,QAAQ,IAAI;AACZ,UAAU,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACpF,YAAY,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,EAAE,EAAE;AACtE,cAAc,gBAAgB,EAAE,KAAK;AACrC,aAAa,CAAC,CAAC;AACf,WAAW,CAAC,CAAC;AACb,UAAU,OAAO,KAAK,CAAC;AACvB,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,UAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AACrE,UAAU,OAAO,EAAE,CAAC;AACpB,SAAS;AACT,OAAO;AACP,MAAM,WAAW,EAAE,OAAO,IAAI,KAAK;AACnC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACnE,QAAQ,IAAI;AACZ,UAAU,MAAM;AAChB,YAAY,EAAE;AACd,YAAY,KAAK;AACjB,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB,YAAY,UAAU,EAAE,kBAAkB;AAC1C,WAAW,GAAG,IAAI,CAAC;AACnB,UAAU,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACzD,YAAY,MAAM,EAAE,iBAAiB;AACrC,YAAY,KAAK;AACjB,WAAW,CAAC,CAAC;AACb,UAAU,KAAK,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;AAChD,UAAU,IAAI,MAAM,CAAC,EAAE,EAAE;AACzB,YAAY,IAAIJ,mCAAe,CAAC,KAAK,CAAC,KAAKA,mCAAe,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAC1E,cAAc,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACtE,gBAAgB,MAAM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,EAAE,EAAE;AACpE,kBAAkB,EAAE;AACpB,kBAAkB,KAAK,EAAE;AACzB,oBAAoB,GAAG,EAAE,SAAS;AAClC,oBAAoB,GAAG,MAAM,CAAC,KAAK;AACnC,mBAAmB;AACnB,iBAAiB,CAAC,CAAC;AACnB,eAAe,CAAC,CAAC;AACjB,aAAa;AACb,WAAW,MAAM;AACjB,YAAY,MAAM,QAAQ,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;AAChE,YAAY,MAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;AAClE,YAAY,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACpE,cAAc,MAAM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,EAAE,EAAE;AAClE,gBAAgB,EAAE;AAClB,gBAAgB,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE;AAChE,eAAe,CAAC,CAAC;AACjB,aAAa,CAAC,CAAC;AACf,WAAW;AACX,UAAU,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE;AAC7C,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAC5C,cAAc,MAAM,EAAE,SAAS;AAC/B,aAAa,CAAC,CAAC;AACf,WAAW;AACX,UAAU,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAKK,qBAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,UAAU,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACnE,UAAU,IAAI,MAAM,CAAC,EAAE,EAAE;AACzB,YAAY,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,EAAE;AACtI,cAAc,SAAS;AACvB,aAAa,CAAC,CAAC,CAAC;AAChB,YAAY,WAAW,GAAG,WAAW,CAAC,MAAM,CAACL,mCAAe,CAAC,EAAE,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,MAAM,CAACA,mCAAe,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,mCAAe,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,mCAAe,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACxO,WAAW;AACX,UAAU,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvD,UAAU,IAAI,UAAU,KAAK,kBAAkB,EAAE;AACjD,YAAY,KAAK,CAAC,2BAA2B,EAAE,CAAC;AAChD,YAAY,OAAO;AACnB,WAAW;AACX,UAAU,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;AAC1B,YAAY,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACpE,cAAc,MAAM,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,EAAE,EAAE;AAC5E,gBAAgB,EAAE;AAClB,gBAAgB,MAAM,EAAE,YAAY;AACpC,gBAAgB,UAAU;AAC1B,eAAe,CAAC,CAAC;AACjB,aAAa,CAAC,CAAC;AACf,YAAY,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,iBAAiB,IAAI,GAAG,CAAC,CAACb,+BAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,YAAY,KAAK,CAAC,wBAAwB,EAAE,CAAC;AAC7C,YAAY,OAAO;AACnB,WAAW;AACX,UAAU,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC;AACnD,UAAU,IAAI,kBAAkB,CAAC;AACjC,UAAU,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAClE,YAAY,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE,EAAE;AACzF,cAAc,EAAE;AAChB,cAAc,eAAe,EAAE,MAAM,CAAC,eAAe;AACrD,cAAc,UAAU;AACxB,cAAc,MAAM,EAAE,YAAY;AAClC,cAAc,SAAS,EAAE,MAAM,CAAC,SAAS;AACzC,cAAc,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;AACvD,cAAc,WAAW;AACzB,aAAa,CAAC,CAAC;AACf,YAAY,kBAAkB,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC7F,WAAW,CAAC,CAAC;AACb,UAAU,MAAM,kBAAkB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAKA,+BAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtH,UAAU,MAAM,mBAAmB,mBAAmB,IAAI,GAAG,CAAC;AAC9D,YAAYA,+BAAkB,CAAC,MAAM,CAAC,eAAe,CAAC;AACtD,WAAW,CAAC,CAAC;AACb,UAAU,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC5C,YAAY,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC5C,cAAc,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,aAAa;AACb,WAAW,CAAC,CAAC;AACb,UAAU,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC5C,YAAY,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC5C,cAAc,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,aAAa;AACb,WAAW,CAAC,CAAC;AACb,UAAU,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAC1D,UAAU,KAAK,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACpE,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,UAAUV,kBAAW,CAAC,KAAK,CAAC,CAAC;AAC7B,UAAU,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,IAAI,GAAG;AACf,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,MAAM,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;AAC7B,KAAK;AACL,GAAG;AACH,CAAC;AACD,SAAS,eAAe,GAAG;AAC3B,EAAE,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAC/C,IAAI,IAAI,EAAE,iCAAiC;AAC3C,IAAI,IAAI,EAAE,6BAA6B;AACvC,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAChD,IAAI,IAAI,EAAE,kCAAkC;AAC5C,IAAI,IAAI,EAAE,8BAA8B;AACxC,IAAI,UAAU,EAAE,CAAC,QAAQ,CAAC;AAC1B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,kBAAkB,GAAG,mBAAmB,CAAC;AACjD,IAAI,IAAI,EAAE,qCAAqC;AAC/C,IAAI,IAAI,EAAE,+CAA+C;AACzD,IAAI,UAAU,EAAE,CAAC,QAAQ,CAAC;AAC1B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,kBAAkB,GAAG,mBAAmB,CAAC;AACjD,IAAI,IAAI,EAAE,qCAAqC;AAC/C,IAAI,IAAI,EAAE,yCAAyC;AACnD,IAAI,UAAU,EAAE,CAAC,QAAQ,CAAC;AAC1B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,oBAAoB,GAAG,mBAAmB,CAAC;AACnD,IAAI,IAAI,EAAE,wCAAwC;AAClD,IAAI,IAAI,EAAE,uGAAuG;AACjH,GAAG,CAAC,CAAC;AACL,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;AACtC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACjD,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,MAAM,oBAAoB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/E,KAAK;AACL,IAAI,MAAM,eAAe,GAAG,kBAAkB,CAAC,UAAU,EAAE,CAAC;AAC5D,IAAI,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,UAAU,EAAE,CAAC;AAC/D,IAAI,SAAS,uBAAuB,CAAC,MAAM,EAAE;AAC7C,MAAM,kBAAkB,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,QAAQ,EAAE,CAAC,CAAC;AAClE,KAAK;AACL,IAAI,SAAS,2BAA2B,GAAG;AAC3C,MAAM,eAAe,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;AAC/C,MAAM,iBAAiB,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;AACxD,KAAK;AACL,IAAI,SAAS,wBAAwB,GAAG;AACxC,MAAM,eAAe,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5C,MAAM,iBAAiB,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,SAAS,yBAAyB,CAAC,aAAa,EAAE;AACtD,MAAM,eAAe,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AAC7C,MAAM,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAM,iBAAiB,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;AACtD,KAAK;AACL,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE;AAC/B,MAAM,iBAAiB,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AACrD,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;AACnE,KAAK;AACL,IAAI,OAAO;AACX,MAAM,uBAAuB;AAC7B,MAAM,2BAA2B;AACjC,MAAM,wBAAwB;AAC9B,MAAM,yBAAyB;AAC/B,MAAM,UAAU;AAChB,KAAK,CAAC;AACN,GAAG;AACH,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;AAC1B;;AC3MO,MAAM,sBAAsB,CAAC;AACpC,EAAE,WAAW,CAAC,KAAK,EAAE,YAAY,EAAE;AACnC,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE;AACtC,IAAI,IAAI,MAAM,EAAE;AAChB,MAAM,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC5D,IAAI,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;AACtC,GAAG;AACH,EAAE,aAAa,GAAG;AAClB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;AACtC,GAAG;AACH,EAAE,WAAW,CAAC,EAAE,EAAE;AAClB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACtC,GAAG;AACH,EAAE,cAAc,CAAC,EAAE,EAAE;AACrB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AACzC,GAAG;AACH,EAAE,MAAM,eAAe,CAAC,mBAAmB,EAAE;AAC7C,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;AACxB,IAAI,OAAO,mBAAmB,CAAC,MAAM,EAAE;AACvC,MAAM,MAAM,aAAa,GAAG,mBAAmB,CAAC,GAAG,EAAE,CAAC;AACtD,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACxD,QAAQ,MAAM,EAAE,aAAa,CAAC,MAAM;AACpC,QAAQ,KAAK,EAAE,EAAE;AACjB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,SAAS,CAAC,EAAE,EAAE;AACxB,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAKU,+BAAkB,CAAC,CAAC,CAAC,KAAKA,+BAAkB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,EAAE;AAC3G,UAAU,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAEA,+BAAkB,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,SAAS;AACT,QAAQ,mBAAmB,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAChE,QAAQ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AACjD,OAAO,MAAM;AACb,QAAQ,MAAM,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,OAAO;AACP,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG;AACH,EAAE,MAAM,oBAAoB,CAAC,IAAI,EAAE;AACnC,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAClJ,IAAI,MAAM,MAAM,GAAG;AACnB,MAAM,UAAU,EAAE,uBAAuB;AACzC,MAAM,IAAI,EAAE,UAAU;AACtB,MAAM,QAAQ,EAAE;AAChB,QAAQ,IAAI,EAAE,0BAA0B,CAAC;AACzC,UAAU,IAAI,EAAE,IAAI,CAAC,IAAI;AACzB,UAAU,MAAM,EAAE,IAAI,CAAC,MAAM;AAC7B,SAAS,CAAC;AACV,QAAQ,SAAS,EAAE,SAAS;AAC5B,QAAQ,WAAW,EAAE;AACrB,UAAU,CAAC/C,gCAAmB,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9D,UAAU,CAACC,uCAA0B,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrE,SAAS;AACT,OAAO;AACP,MAAM,IAAI,EAAE;AACZ,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI;AACvB,QAAQ,MAAM,EAAE,IAAI,CAAC,MAAM;AAC3B,OAAO;AACP,KAAK,CAAC;AACN,IAAI,MAAM,mBAAmB,GAAG;AAChC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;AAC5D,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;AACrE,IAAI,OAAO;AACX,MAAM,MAAM,EAAE,MAAM,aAAa;AACjC,MAAM,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;AAC9D,MAAM,QAAQ;AACd,KAAK,CAAC;AACN,GAAG;AACH;;AC3EA,SAAS,eAAe,CAAC,KAAK,EAAE;AAChC,EAAE,IAAI,CAAC,KAAK,EAAE;AACd,IAAI,OAAO,EAAE,CAAC;AACd,GAAG;AACH,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;AAChC,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE;AAC9B,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,IAAI;AACR,MAAM,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACvE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAChC,KAAK,CAAC,MAAM;AACZ,MAAM,MAAM,IAAIZ,iBAAU,CAAC,6CAA6C,CAAC,CAAC;AAC1E,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE;AACjC,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAC3C,QAAQ,MAAM,IAAIA,iBAAU,CAAC,iDAAiD,CAAC,CAAC;AAChF,OAAO;AACP,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE;AAClC,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC5C,QAAQ,MAAM,IAAIA,iBAAU,CAAC,iDAAiD,CAAC,CAAC;AAChF,OAAO;AACP,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC7B,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AAC3B,CAAC;AACD,SAAS,mBAAmB,CAAC,KAAK,EAAE;AACpC,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AAC5E,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC9D,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD,SAAS,YAAY,CAAC,YAAY,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,GAAG,KAAK,EAAE;AAChE,EAAE,MAAM,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,SAAS,GAAG;AAC7H,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACtC,QAAQ,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC9D,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAChF,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,YAAY,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,GAAG,QAAQ,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC;AAC3E,CAAC;AACD,SAAS,sBAAsB,CAAC,MAAM,EAAE;AACxC,EAAE,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AACD,SAAS,gBAAgB,CAAC,MAAM,EAAE;AAClC,EAAE,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AACD,SAAS,sBAAsB,CAAC,MAAM,EAAE;AACxC,EAAE,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AACD,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,GAAG,KAAK,EAAE;AACxD,EAAE,IAAI,sBAAsB,CAAC,MAAM,CAAC,EAAE;AACtC,IAAI,OAAO,KAAK,CAAC,QAAQ,CAAC,SAAS,cAAc,GAAG;AACpD,MAAM,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC7C,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,sBAAsB,CAAC,MAAM,CAAC,EAAE;AACtC,IAAI,OAAO,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;AACvD,GAAG;AACH,EAAE,OAAO,KAAK,CAAC,MAAM,GAAG,aAAa,GAAG,UAAU,CAAC,CAAC,SAAS,cAAc,GAAG;AAC9E,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE;AAClC,MAAM,KAAK,MAAM,SAAS,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE;AACrE,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AACzE,OAAO;AACP,KAAK,MAAM;AACX,MAAM,KAAK,MAAM,SAAS,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE;AACrE,QAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAAK,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1E,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL,CAAC;AACM,MAAM,sBAAsB,CAAC;AACpC,EAAE,WAAW,CAAC,QAAQ,EAAE;AACxB,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,GAAG;AACH,EAAE,MAAM,QAAQ,CAAC,OAAO,EAAE;AAC1B,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC7B,IAAI,IAAI,aAAa,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACxE,IAAI,IAAI,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;AACnD,MAAM,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;AACrE,KAAK;AACL,IAAI,aAAa,GAAG,aAAa,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1G,IAAI,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,eAAe,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7F,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,MAAM,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;AAC3B,MAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,IAAI,IAAI,GAAG,MAAM,aAAa,CAAC;AACnC,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;AAClD,MAAM,QAAQ,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;AACxC,KAAK,MAAM;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/B,MAAM,QAAQ,GAAG;AACjB,QAAQ,WAAW,EAAE,IAAI;AACzB,QAAQ,SAAS,EAAE,mBAAmB,CAAC;AACvC,UAAU,KAAK;AACf,UAAU,MAAM,EAAE,CAAC,MAAM,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,KAAK;AACvD,SAAS,CAAC;AACV,OAAO,CAAC;AACR,KAAK;AACL,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AAC/D,IAAI,IAAI,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;AACnD,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,KAAK;AACL,IAAI,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;AACnC,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;AAC5B,QAAQ,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;AACjD,UAAU,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,EAAE;AACtD,YAAY,QAAQ,CAAC,SAAS,GAAG0D,+BAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrE,WAAW,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,SAAS,EAAE;AAC7D,YAAY,QAAQ,CAAC,MAAM,GAAG/B,2BAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACjE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,OAAO;AACX,MAAM,QAAQ;AACd,MAAM,QAAQ;AACd,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;AAChD,MAAM,WAAW,EAAE,mBAAmB;AACtC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,OAAO,CAAC,OAAO,EAAE;AACvD,MAAM,OAAO,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,0BAA0B,EAAE;AACjF,QAAQ,4CAA4C,EAAE,0BAA0B;AAChF,OAAO,CAAC,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,4CAA4C,CAAC,CAAC;AACzG,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AAC1E,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,OAAO,EAAE;AAChC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE;AACtF,MAAM,yBAAyB,EAAE,0BAA0B;AAC3D,KAAK,CAAC,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC;AAC9D,MAAM,UAAU,EAAE,6BAA6B;AAC/C,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,MAAM,MAAM,IAAI5B,oBAAa,CAAC,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACtD,IAAI,MAAM,cAAc,mBAAmB,IAAI,GAAG,EAAE,CAAC;AACrD,IAAI,MAAM,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,IAAI,KAAK,IAAI,OAAO,GAAG,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAClE,MAAM,MAAM,UAAU,GAAG2D,+BAAkB,CAAC,OAAO,CAAC,CAAC;AACrD,MAAM,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,eAAe,EAAE;AACpG,QAAQ,4CAA4C,EAAE,0BAA0B;AAChF,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAgB,EAAE;AACrC,QAAQ,yBAAyB,EAAE,0BAA0B;AAC7D,OAAO,CAAC,CAAC,KAAK,CAAC,4CAA4C,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC;AACrF,QAAQ,eAAe,EAAE,0BAA0B;AACnD,QAAQ,gBAAgB,EAAE,6BAA6B;AACvD,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,UAAU,GAAG,EAAE,CAAC;AAC5B,MAAM,KAAK,MAAM,EAAE,eAAe,EAAE,gBAAgB,EAAE,IAAI,UAAU,EAAE;AACtE,QAAQ,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AAClD,UAAU,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC9C,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAClD,SAAS;AACT,OAAO;AACP,MAAM,KAAK,CAAC,IAAI,CAAC;AACjB,QAAQ,MAAM,EAAE,OAAO;AACvB,QAAQ,gBAAgB,EAAE,UAAU;AACpC,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,OAAO;AACX,MAAM,aAAa,EAAEA,+BAAkB,CAAC,UAAU,CAAC;AACnD,MAAM,KAAK;AACX,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,OAAO,EAAE;AACxB,IAAI,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC;AAC7C,MAAM,MAAM,EAAE,OAAO,CAAC,MAAM;AAC5B,MAAM,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;AACpD,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;AACtB,IAAI,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,EAAE;AACxC,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC9C,QAAQ,IAAI,EAAE,EAAE,EAAE,CAAC;AACnB,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE;AACvD,UAAU,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3H,SAAS,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE;AACzD,UAAU,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;AACjH,SAAS;AACT,QAAQ,OAAOR,0BAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC5B,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,UAAU,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,SAAS,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACzC,UAAU,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC;AAC5D,SAAS;AACT,QAAQ,OAAO,EAAE,CAAC;AAClB,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;AAChB,MAAM,MAAM,MAAM,GAAGA,0BAAM,CAAC,OAAO,CAAC,MAAM,EAAEA,0BAAM,CAAC,QAAQ,CAAC,CAAC;AAC7D,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM;AACtE,QAAQ,KAAK;AACb,QAAQ,KAAK;AACb,OAAO,CAAC,CAAC,CAAC;AACV,KAAK;AACL,IAAI,OAAO,EAAE,MAAM,EAAE,CAAC;AACtB,GAAG;AACH;;AC7MO,MAAM,wBAAwB,CAAC;AACtC,EAAE,WAAW,CAAC,MAAM,EAAE,YAAY,EAAE;AACpC,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;AACjC,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC;AACxC,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACtB,GAAG;AACH,EAAE,IAAI,MAAM,GAAG;AACf,IAAI,OAAO,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAClC,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,OAAO;AACX,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AAC7C,KAAK,CAAC;AACN,GAAG;AACH,EAAE,OAAO,CAAC,CAAC,EAAE;AACb,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,2DAA2D,EAAE,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjI,MAAM,OAAO;AACb,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC7B,MAAM,IAAI,MAAM,CAAC;AACjB,MAAM,MAAM,QAAQ,GAAG1C,iCAAoB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACxD,MAAM,IAAI;AACV,QAAQ,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAClD,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQwC,kBAAW,CAAC,CAAC,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,8BAA8B,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;AAC5D,MAAM,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;AAC1E,QAAQ,MAAM,cAAc,GAAG,0BAA0B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7E,QAAQ,MAAM,GAAG;AACjB,UAAU,GAAG,MAAM;AACnB,UAAU,QAAQ,EAAE;AACpB,YAAY,GAAG,MAAM,CAAC,QAAQ;AAC9B,YAAY,WAAW,EAAE;AACzB,cAAc,GAAG,WAAW;AAC5B,cAAc,CAACpC,uCAA0B,GAAG,cAAc;AAC1D,cAAc,CAACD,gCAAmB,GAAG,QAAQ;AAC7C,aAAa;AACb,WAAW;AACX,SAAS,CAAC;AACV,OAAO;AACP,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC;AACpE,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,MAAM,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAClD,QAAQ,QAAQ,EAAE,CAAC,CAAC,QAAQ;AAC5B,QAAQ,YAAY,EAAE,IAAI,CAAC,YAAY;AACvC,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACvD,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;AAC1D,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACtC,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AACH;;AC5EA,MAAM,uBAAuB,CAAC;AAC9B,EAAE,WAAW,CAAC,aAAa,EAAE;AAC7B,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAChE,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACzB,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC/B,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;AAClE,GAAG;AACH,CAAC;AACD,MAAM,oBAAoB,CAAC;AAC3B,EAAE,WAAW,CAAC,aAAa,EAAE;AAC7B,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,IAAI,IAAI,CAAC,SAAS,mBAAmB,IAAI,GAAG,EAAE,CAAC;AAC/C,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE;AACjB,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAChE,GAAG;AACH,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACzB,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC/B,GAAG;AACH,EAAE,OAAO,CAAC,GAAG,EAAE;AACf,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrD,IAAI,IAAI,gBAAgB,EAAE;AAC1B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAC1E,IAAI,MAAM,QAAQ,GAAG,IAAI,uBAAuB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;AACzF,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACtC,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;AACrE,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClD,MAAM,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;AAC/C,MAAM,IAAI,aAAa,EAAE;AACzB,QAAQ,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,aAAa,EAAE,CAAC;AAC/C,OAAO;AACP,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH,CAAC;AACM,MAAM,qBAAqB,CAAC;AACnC,EAAE,WAAW,CAAC,aAAa,EAAE;AAC7B,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,IAAI,IAAI,CAAC,MAAM,mBAAmB,IAAI,GAAG,EAAE,CAAC;AAC5C,GAAG;AACH,EAAE,YAAY,CAAC,SAAS,EAAE,GAAG,EAAE;AAC/B,IAAI,MAAM,IAAI,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;AAC9C,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,OAAO,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9C,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC9C,IAAI,MAAM,QAAQ,GAAG,IAAI,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;AACtF,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACpC,IAAI,OAAO,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAClD,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;AACtB,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;AACtD,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;;ACvDO,MAAM,oCAAoC,CAAC;AAClD,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,OAAO,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AACnE,GAAG;AACH,EAAE,MAAM,mBAAmB,CAAC,iBAAiB,EAAE,KAAK,EAAE;AACtD,IAAI,MAAM,SAAS,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAC3F,IAAI,MAAM,KAAK,GAAG,IAAI,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACzG,IAAI,IAAI;AACR,MAAM,IAAI,MAAM,GAAG,iBAAiB,CAAC;AACrC,MAAM,IAAI;AACV,QAAQ,sBAAsB,CAAC,MAAM,CAAC,CAAC;AACvC,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAIX,iBAAU,CAAC,CAAC,mDAAmD,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,OAAO;AACP,MAAM,MAAM,OAAO,GAAG;AACtB,QAAQ,SAAS,EAAE0D,+BAAkB,CAAC,MAAM,CAAC;AAC7C,QAAQ,QAAQ,EAAEmB,6BAAgB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAChE,QAAQ,cAAc,EAAEA,6BAAgB,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAC5E,QAAQ,KAAK;AACb,QAAQ,SAAS;AACjB,OAAO,CAAC;AACR,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC7D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAChD,MAAM,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAClD,MAAM,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE;AACpC,QAAQ,MAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC3D,OAAO;AACP,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC9D,MAAM,MAAM,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;AAC3D,MAAM,KAAK,MAAM,cAAc,IAAI,gBAAgB,CAAC,gBAAgB,EAAE;AACtE,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,cAAc,CAAC,EAAE;AAClG,UAAU,MAAM,IAAIC,sBAAe,CAAC,CAAC,OAAO,EAAEpB,+BAAkB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,EAAElD,iCAAoB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAEA,iCAAoB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,6CAA6C,CAAC,CAAC,CAAC;AACpP,SAAS;AACT,OAAO;AACP,MAAM,OAAO;AACb,QAAQ,GAAG,gBAAgB;AAC3B,QAAQ,eAAe,EAAE,MAAM;AAC/B,QAAQ,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE;AACzC,QAAQ,EAAE,EAAE,gBAAgB,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC;AAChD,OAAO,CAAC;AACR,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAMwC,kBAAW,CAAC,KAAK,CAAC,CAAC;AACzB,MAAM,OAAO;AACb,QAAQ,EAAE,EAAE,KAAK;AACjB,QAAQ,MAAM,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;AACxD,OAAO,CAAC;AACR,KAAK;AACL,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,MAAM,EAAE,OAAO,EAAE;AAC3C,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC;AACrB,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACrD,MAAM,IAAI,SAAS,CAAC,gBAAgB,EAAE;AACtC,QAAQ,IAAI;AACZ,UAAU,GAAG,GAAG,MAAM,SAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AACjK,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAU,MAAM,IAAIhD,iBAAU,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChH,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH,EAAE,MAAM,aAAa,CAAC,MAAM,EAAE;AAC9B,IAAI,IAAI,oBAAoB,CAAC;AAC7B,IAAI,IAAI;AACR,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACvE,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,MAAM,IAAIA,iBAAU,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC/B,MAAM,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;AAC9D,KAAK;AACL,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG;AACH,EAAE,MAAM,eAAe,CAAC,MAAM,EAAE,OAAO,EAAE;AACzC,IAAI,IAAI0D,+BAAkB,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,SAAS,EAAE;AAC1D,MAAM,MAAM,IAAII,oBAAa,CAAC,sEAAsE,CAAC,CAAC;AACtG,KAAK;AACL,IAAI,IAAI;AACR,MAAM,cAAc,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,MAAM,IAAIA,oBAAa,CAAC,CAAC,oBAAoB,EAAE,OAAO,CAAC,SAAS,CAAC,sCAAsC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnH,KAAK;AACL,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACrD,MAAM,IAAI,SAAS,CAAC,kBAAkB,EAAE;AACxC,QAAQ,IAAI;AACZ,UAAU,SAAS,GAAG,MAAM,SAAS,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACjE,UAAU,IAAI,SAAS,EAAE;AACzB,YAAY,MAAM;AAClB,WAAW;AACX,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAU,MAAM,IAAI9D,iBAAU,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,4CAA4C,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7I,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,mCAAmC,EAAE,OAAO,CAAC,SAAS,CAAC,0DAA0D,CAAC,CAAC,CAAC;AAChJ,KAAK;AACL,GAAG;AACH,EAAE,MAAM,sBAAsB,CAAC,MAAM,EAAE,OAAO,EAAE;AAChD,IAAI,MAAM,EAAE,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,GAAG,UAAU,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;AAChF,IAAI,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;AAChC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;AAC5B,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;AAC7B,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,KAAK;AACL,IAAI,KAAK,MAAM,mBAAmB,IAAI,OAAO,EAAE;AAC/C,MAAM,IAAI,IAAI,KAAK,MAAM,IAAI,mBAAmB,CAAC,QAAQ,CAAC6C,wBAAI,CAAC,GAAG,CAAC,EAAE;AACrE,QAAQ,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,sCAAsC,EAAE,IAAI,CAAC,2BAA2B,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;AACtN,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;AAC3G,MAAM,IAAI,OAAO,GAAG,KAAK,CAAC;AAC1B,MAAM,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACvD,QAAQ,IAAI,SAAS,CAAC,YAAY,EAAE;AACpC,UAAU,IAAI;AACd,YAAY,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC;AACtD,cAAc,IAAI;AAClB,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB,aAAa,EAAE,QAAQ,KAAK,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AACtI,YAAY,IAAI,IAAI,EAAE;AACtB,cAAc,OAAO,GAAG,IAAI,CAAC;AAC7B,cAAc,MAAM;AACpB,aAAa;AACb,WAAW,CAAC,OAAO,CAAC,EAAE;AACtB,YAAY,MAAM,IAAI7C,iBAAU,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9H,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,MAAM,IAAIA,iBAAU,CAAC,CAAC,2CAA2C,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7F,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,kBAAkB,CAAC,MAAM,EAAE,OAAO,EAAE;AAC5C,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC;AACrB,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACrD,MAAM,IAAI,SAAS,CAAC,iBAAiB,EAAE;AACvC,QAAQ,IAAI;AACZ,UAAU,GAAG,GAAG,MAAM,SAAS,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1I,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,UAAU,MAAM,IAAIA,iBAAU,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,oCAAoC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjH,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH;;ACjLA,MAAM,YAAY,GAAG;AACrB,EAAE,aAAa;AACf,EAAE,WAAW;AACb,EAAE,QAAQ;AACV,EAAE,eAAe;AACjB,EAAE,oBAAoB;AACtB,EAAE,cAAc;AAChB,EAAE,eAAe;AACjB,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B,MAAM,gBAAgB,GAAG,GAAG,CAAC;AACtB,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC/B,EAAE,MAAM,MAAM,GAAG,EAAE,CAAC;AACpB,EAAE,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE;AAChC,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACrC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,OAAO,CAAC,EAAE;AAC5G,MAAM,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;AACjD,MAAM,OAAO;AACb,KAAK;AACL,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACrC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAChC,MAAM,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;AAClC,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1B,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,UAAU,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/D,SAAS;AACT,OAAO;AACP,MAAM,OAAO;AACb,KAAK;AACL,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACxD,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;AAClD,KAAK;AACL,GAAG;AACH,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AAClB,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACM,SAAS,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE;AAC3C,EAAE,MAAM,MAAM,GAAG,EAAE,CAAC;AACpB,EAAE,KAAK,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,KAAK,EAAE;AACxD,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAClD,IAAI,IAAI,QAAQ,KAAK,KAAK,CAAC,IAAI,QAAQ,KAAK,IAAI,EAAE;AAClD,MAAM,MAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC7D,KAAK,MAAM;AACX,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAChE,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,cAAc,IAAI,KAAK,CAAC,MAAM,IAAI,gBAAgB,EAAE;AAC5E,QAAQ,MAAM,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACzD,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACM,SAAS,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE;AACpD,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC/B,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAClE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5E,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE;AAClC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,KAAK,EAAE+E,8BAAiB,EAAE,CAAC,CAAC;AACtE,GAAG;AACH,EAAE,KAAK,MAAM,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE;AACpE,IAAI,GAAG,CAAC,IAAI,CAAC;AACb,MAAM,GAAG,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvC,MAAM,KAAK,EAAE,QAAQ,CAAC,SAAS;AAC/B,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,EAAE,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9E,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE;AACpC,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC;AAC1B,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AAC5B,MAAM,MAAM,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACnD,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACpC,QAAQ,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,OAAO;AACP,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,IAAI,MAAM,IAAI/E,iBAAU,CAAC,CAAC,oDAAoD,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3F,GAAG;AACH,EAAE,OAAO,SAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAClC;;ACpFO,MAAM,UAAU,GAAG,EAAE,CAAC;AACtB,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAC3C,EAAE,OAAO6D,iBAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAACU,mCAAe,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACjF;;ACCO,MAAM,QAAQ,CAAC;AACtB,EAAE,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;AAChC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,UAAU,EAAE;AAC3B,IAAI,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;AACxC,MAAM,IAAI;AACV,QAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACxC,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,EAAE,EAAES,qBAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,SAAS,CAAC,SAAS,EAAE;AAC7B,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC5H,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AAC9B,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,MAAM,GAAGjB,OAAI,EAAE,CAAC;AAC1B,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;AACjD,MAAM,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS;AAC1C,MAAM,IAAI,EAAE,EAAE;AACd,MAAM,aAAa,EAAE,MAAM;AAC3B,KAAK,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;AACxD,IAAI,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,SAAS,kBAAkB,CAAC,OAAO,EAAE;AACxG,MAAM,OAAO,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AACpH,KAAK,CAAC,CAAC,MAAM,CAAC;AACd,MAAM,QAAQ,EAAE,yBAAyB;AACzC,MAAM,eAAe,EAAE,gCAAgC;AACvD,MAAM,MAAM,EAAE,sBAAsB;AACpC,MAAM,sBAAsB,EAAE,2BAA2B;AACzD,MAAM,YAAY,EAAE,qBAAqB;AACzC,MAAM,YAAY,EAAE,gBAAgB;AACpC,MAAM,cAAc,EAAE,6BAA6B;AACnD,KAAK,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,0BAA0B,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,aAAa,CAAC,gBAAgB,EAAE;AAClK,MAAM,0BAA0B,EAAE,yBAAyB;AAC3D,KAAK,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE;AAClC,MAAM,6BAA6B,EAAE,0BAA0B;AAC/D,KAAK,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACvE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACxB,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,4CAA4C,CAAC,CAAC,CAAC;AACrG,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM;AACV,MAAM,QAAQ;AACd,MAAM,eAAe;AACrB,MAAM,MAAM;AACZ,MAAM,sBAAsB;AAC5B,MAAM,YAAY;AAClB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,IAAI,IAAI,CAAC,eAAe,EAAE;AAC1B,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAChG,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC/C,IAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AAC1D,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;AACzB,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;AACrD,MAAM,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG;AACpC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW;AACtC,QAAQ,CAAC,qBAAqB,GAAG,MAAM;AACvC,OAAO,CAAC;AACR,KAAK;AACL,IAAI,IAAI,MAAM,EAAE;AAChB,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9C,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,EAAE;AAC9D,QAAQ,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM;AAC/C,UAAU,IAAI,EAAEkB,mDAAqC;AACrD,UAAU,KAAK,EAAE,OAAO;AACxB,UAAU,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;AAC5C,UAAU,KAAK,EAAE,CAAC;AAClB,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO;AACP,KAAK;AACL,IAAI,MAAM,kBAAkB,GAAGC,aAAM,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AAC9F,IAAI,MAAM,CAAC,SAAS,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AAC1F,MAAM,IAAI,EAAE,GAAG,CAAC,YAAY;AAC5B,MAAM,SAAS,EAAE,GAAG,CAAC,cAAc;AACnC,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,IAAI,WAAW,CAAC,MAAM,EAAE;AAC5B,MAAM,MAAM,CAAC,MAAM,GAAG;AACtB,QAAQ,GAAG,MAAM,CAAC,MAAM;AACxB,QAAQ,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,WAAW,CAAC;AAC7G,OAAO,CAAC;AACR,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,IAAI,IAAI,KAAK,YAAY,EAAE;AAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,qBAAqB,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC;AACnC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;AAC/B,MAAM,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;AAClC,KAAK;AACL,IAAI,MAAM,aAAa,GAAG,iBAAiB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC9D,IAAI,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;AAC7E,MAAM,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AAC1C,MAAM,IAAI;AACV,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;AAC3H,IAAI,IAAI,mBAAmB,KAAK,CAAC,EAAE;AACnC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC,sCAAsC,CAAC,CAAC,CAAC;AACrF,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC1E,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;AACzE,GAAG;AACH;;ACnHO,SAAS,iBAAiB,CAAC,KAAK,EAAE;AACzC,EAAE,MAAM,YAAY,GAAG,EAAE,CAAC;AAC1B,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACpD,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;AAClC,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;AAChG,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC;AAC7B,GAAG;AACH,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC;AAC7D;;ACPO,SAAS,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE;AAC9C,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AACxB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACjC,IAAI,MAAM,IAAIlF,iBAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;AAC1E,GAAG;AACH,EAAE,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE;AAC7D,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3D,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACM,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AACxB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACjC,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACM,SAAS,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE;AAC9C,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AACxB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;AAC/B,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;AAChD,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf;;AC9BO,SAAS,uBAAuB,CAAC,MAAM,EAAE;AAChD,EAAE,MAAM,aAAa,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACnE,EAAE,IAAI,CAAC,aAAa,EAAE;AACtB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7E,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACvB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AACvD,CAAC;AACM,SAAS,uBAAuB,CAAC,YAAY,EAAE;AACtD,EAAE,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAClF,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AAC1B,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,YAAY,GAAG,EAAE,CAAC;AAC1B,EAAE,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;AACtC,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/C,IAAI,MAAM,GAAG,GAAG,WAAW,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;AACzF,IAAI,MAAM,KAAK,GAAG,WAAW,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACzF,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAIA,iBAAU,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,yEAAyE,CAAC,CAAC,CAAC;AACrI,KAAK;AACL,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACpF,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC;AAChC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3B,KAAK;AACL,GAAG;AACH,EAAE,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACrC;;AC/BO,SAAS,2BAA2B,CAAC,MAAM,EAAE;AACpD,EAAE,MAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC5D,EAAE,MAAM,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzD,EAAE,MAAM,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACxD,EAAE,IAAI,MAAM,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AACjE,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,MAAM,KAAK,KAAK,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;AACvC,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,uCAAuC,CAAC,CAAC,CAAC;AACpE,GAAG;AACH,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AACtC,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,wCAAwC,CAAC,CAAC,CAAC;AACrE,GAAG;AACH,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;AAClC,IAAI,MAAM,IAAIA,iBAAU,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;AAC7D,GAAG;AACH,EAAE,OAAO;AACT,IAAI,GAAG,MAAM,KAAK,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE;AAC1C,IAAI,GAAG,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AACxC,IAAI,GAAG,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AACxC,GAAG,CAAC;AACJ;;ACpBA,SAAS,oBAAoB,CAAC,KAAK,EAAE,KAAK,EAAE;AAC5C,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,KAAK;AAC5F,IAAI,IAAIkD,0BAAM,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE;AAC7C,MAAM,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjE,KAAK,MAAM,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;AACjD,MAAM,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,MAAM,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/B,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AAClB,CAAC;AACM,SAAS,0BAA0B,CAAC,MAAM,EAAE;AACnD,EAAE,MAAM,aAAa,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACnE,EAAE,IAAI,CAAC,aAAa,EAAE;AACtB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACpG,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACtB,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3C,IAAI,MAAM,IAAIlD,iBAAU,CAAC,qDAAqD,CAAC,CAAC;AAChF,GAAG;AACH,EAAE,OAAO,CAAC,KAAK,KAAK;AACpB,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;AACtB,IAAI,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAChC,MAAM,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpE,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC5B,QAAQkD,0BAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO;AACP,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;;ACjCO,eAAe,kBAAkB,CAAC,GAAG,EAAE;AAC9C,EAAE,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACjD,EAAE,IAAI,CAAC,WAAW,EAAE;AACpB,IAAI,MAAM,IAAIlD,iBAAU,CAAC,sBAAsB,CAAC,CAAC;AACjD,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE;AAC5D,IAAI,MAAM,IAAIA,iBAAU,CAAC,sBAAsB,CAAC,CAAC;AACjD,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACxB,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,MAAM,IAAIA,iBAAU,CAAC,sBAAsB,CAAC,CAAC;AACjD,GAAG,MAAM,IAAI,CAACkD,0BAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;AAC1C,IAAI,MAAM,IAAIlD,iBAAU,CAAC,mCAAmC,CAAC,CAAC;AAC9D,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7C,IAAI,MAAM,IAAIA,iBAAU,CAAC,oBAAoB,CAAC,CAAC;AAC/C,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACM,MAAM,aAAa,GAAGmF,KAAC,CAAC,MAAM,CAAC;AACtC,EAAE,IAAI,EAAEA,KAAC,CAAC,MAAM,EAAE;AAClB,EAAE,MAAM,EAAEA,KAAC,CAAC,MAAM,EAAE;AACpB,EAAE,QAAQ,EAAEA,KAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAACA,KAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE;AACtE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AACL,eAAe,mBAAmB,CAAC,GAAG,EAAE,MAAM,EAAE;AACvD,EAAE,MAAM,IAAI,GAAG,MAAM,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAC7C,EAAE,IAAI;AACN,IAAI,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACpC,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,IAAInF,iBAAU,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,GAAG;AACH,CAAC;AACM,SAAS,oBAAoB,CAAC,QAAQ,EAAE;AAC/C,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,MAAM,IAAI8E,sBAAe,CAAC,6CAA6C,CAAC,CAAC;AAC7E,GAAG;AACH;;ACnCO,SAAS,sBAAsB,CAAC,MAAM,EAAE;AAC/C,EAAE,MAAM,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAChE,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,MAAM,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAClD,IAAI,IAAI,QAAQ,CAAC,MAAM,EAAE;AACzB,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK;AACL,GAAG;AACH,EAAE,MAAM,IAAI9E,iBAAU,CAAC,yBAAyB,CAAC,CAAC;AAClD;;ACcO,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM;AACR,IAAI,eAAe;AACnB,IAAI,gBAAgB;AACpB,IAAI,eAAe;AACnB,IAAI,YAAY;AAChB,IAAI,cAAc;AAClB,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,2BAA2B;AAC/B,GAAG,GAAG,OAAO,CAAC;AACd,EAAE,MAAM,MAAM,GAAGoF,0BAAM,EAAE,CAAC;AAC1B,EAAE,MAAM,CAAC,GAAG,CAACC,2BAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,EAAE,MAAM,eAAe,GAAG,MAAM,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC;AACjF,EAAE,IAAI,eAAe,EAAE;AACvB,IAAI,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;AACvD,GAAG;AACH,EAAE,IAAI,cAAc,EAAE;AACtB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAChD,MAAM,MAAM,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;AACtC,MAAM,cAAc,CAAC,kBAAkB,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;AACtF,MAAM,MAAM,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACnD,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AAC7B,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,2BAA2B,EAAE;AACnC,IAAI,MAAM,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AAC5C,GAAG;AACH,EAAE,IAAI,eAAe,EAAE;AACvB,IAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAChD,MAAM,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,eAAe,CAAC,QAAQ,CAAC;AACpE,QAAQ,MAAM,EAAE,uBAAuB,CAAC,GAAG,CAAC,KAAK,CAAC;AAClD,QAAQ,MAAM,EAAE,0BAA0B,CAAC,GAAG,CAAC,KAAK,CAAC;AACrD,QAAQ,UAAU,EAAE,2BAA2B,CAAC,GAAG,CAAC,KAAK,CAAC;AAC1D,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,QAAQ,CAAC,WAAW,EAAE;AAChC,QAAQ,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD,QAAQ,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC1C,QAAQ,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC1D,QAAQ,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AAC5E,OAAO;AACP,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzB,KAAK,CAAC,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACxD,MAAM,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,eAAe,CAAC,QAAQ,CAAC;AAC1D,QAAQ,MAAM,EAAE,iBAAiB,CAAC,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC;AAC1D,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,IAAItF,oBAAa,CAAC,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7D,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,KAAK,CAAC,CAAC,MAAM,CAAC,uBAAuB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC3D,MAAM,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACjC,MAAM,MAAM,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE;AACnD,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAC5B,KAAK,CAAC,CAAC,GAAG,CAAC,0CAA0C,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC3E,MAAM,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACnD,MAAM,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,eAAe,CAAC,QAAQ,CAAC;AAC1D,QAAQ,MAAM,EAAE,iBAAiB,CAAC;AAClC,UAAU,IAAI;AACd,UAAU,oBAAoB,EAAE,SAAS;AACzC,UAAU,eAAe,EAAE,IAAI;AAC/B,SAAS,CAAC;AACV,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,IAAIA,oBAAa,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACpH,OAAO;AACP,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,KAAK,CAAC,CAAC,GAAG,CAAC,mDAAmD,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACpF,MAAM,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACnD,MAAM,MAAM,SAAS,GAAG2D,+BAAkB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACtE,MAAM,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE;AACvE,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACjD,MAAM,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC;AACpD,QAAQ,MAAM,EAAE,uBAAuB,CAAC,GAAG,CAAC,KAAK,CAAC;AAClD,QAAQ,MAAM,EAAE,sBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC;AACjD,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,eAAe,EAAE;AACvB,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAClD,MAAM,MAAM,QAAQ,GAAG,MAAM,mBAAmB,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;AACrE,MAAM,MAAM,MAAM,GAAG4B,sBAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9D,MAAM,IAAI,CAAC,MAAM,EAAE;AACnB,QAAQ,oBAAoB,CAAC,eAAe,CAAC,CAAC;AAC9C,OAAO;AACP,MAAM,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE;AAC5E,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AAC7C,MAAM,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,aAAa,CAAC;AAC5D,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChE,KAAK,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACjD,MAAM,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAChC,MAAM,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,WAAW,CAAC,EAAE,EAAE;AAC3D,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK,CAAC,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACpD,MAAM,oBAAoB,CAAC,eAAe,CAAC,CAAC;AAC5C,MAAM,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAChC,MAAM,MAAM,eAAe,CAAC,cAAc,CAAC,EAAE,EAAE;AAC/C,QAAQ,kBAAkB,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACvE,OAAO,CAAC,CAAC;AACT,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,gBAAgB,EAAE;AACxB,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACzD,MAAM,MAAM,IAAI,GAAG,MAAM,mBAAmB,CAAC,GAAG,EAAEH,KAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;AACzF,MAAM,MAAM,MAAM,GAAGA,KAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,CAAC;AAC3D,MAAM,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAChF,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK;AACxD,MAAM,MAAM,UAAU,GAAGA,KAAC,CAAC,MAAM,CAAC;AAClC,QAAQ,MAAM,EAAEA,KAAC,CAAC,OAAO,EAAE;AAC3B,QAAQ,QAAQ,EAAEA,KAAC,CAAC,MAAM,EAAE;AAC5B,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,IAAI,CAAC;AACf,MAAM,IAAI,MAAM,CAAC;AACjB,MAAM,IAAI,QAAQ,CAAC;AACnB,MAAM,IAAI;AACV,QAAQ,IAAI,GAAG,MAAM,mBAAmB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAC1D,QAAQ,MAAM,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,QAAQ,QAAQ,GAAGN,6BAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK;AACnC,UAAU,MAAM,IAAI,SAAS,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,8DAA8D,CAAC,CAAC,CAAC;AACrI,OAAO,CAAC,OAAO,GAAG,EAAE;AACpB,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACpC,UAAU,MAAM,EAAE,CAACD,qBAAc,CAAC,GAAG,CAAC,CAAC;AACvC,SAAS,CAAC,CAAC;AACX,OAAO;AACP,MAAM,MAAM,gBAAgB,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC;AAC1D,QAAQ,MAAM,EAAE;AAChB,UAAU,GAAG,MAAM;AACnB,UAAU,QAAQ,EAAE;AACpB,YAAY,GAAG,MAAM,CAAC,QAAQ;AAC9B,YAAY,WAAW,EAAE;AACzB,cAAc,CAACjE,gCAAmB,GAAG,IAAI,CAAC,QAAQ;AAClD,cAAc,CAACC,uCAA0B,GAAG,IAAI,CAAC,QAAQ;AACzD,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW;AAC5C,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE;AAC9B,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAC7B,UAAU,MAAM,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAKgE,qBAAc,CAAC,CAAC,CAAC,CAAC;AACvE,SAAS,CAAC,CAAC;AACX,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACnC,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,CAAC,GAAG,CAACW,0BAAY,EAAE,CAAC,CAAC;AAC7B,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD,SAAS,cAAc,CAAC,mBAAmB,EAAE;AAC7C,EAAE,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;AAC/C,IAAI,OAAO,KAAK,CAAC,CAAC;AAClB,GAAG;AACH,EAAE,MAAM,OAAO,GAAG,mBAAmB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC/D,EAAE,OAAO,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/C;;AC1MO,MAAM,qBAAqB,CAAC;AACnC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACrC,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,OAAO,EAAE;AACzB,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AAClD,MAAM,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAE;AACnE,QAAQ,SAAS,EAAE,OAAO,CAAC,SAAS;AACpC,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;AACrF,MAAM,IAAI,gBAAgB,EAAE;AAC5B,QAAQ,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE;AACxC,UAAU,SAAS,EAAE,gBAAgB;AACrC,SAAS,CAAC,CAAC;AACX,OAAO;AACP,MAAM,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE;AACtC,QAAQ,SAAS,EAAE,OAAO,CAAC,SAAS;AACpC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;ACfO,MAAM,wBAAwB,CAAC;AACtC,EAAE,WAAW,CAAC,OAAO,EAAE,aAAa,EAAE;AACtC,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,OAAO,EAAE;AACzB,IAAI,MAAM,iBAAiB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;AAClE,MAAM;AACN,QAAQ,UAAU,EAAEC,kDAA8B;AAClD,QAAQ,WAAW,EAAE,OAAO,CAAC,SAAS;AACtC,OAAO;AACP,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClD,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKC,sCAAe,CAAC,KAAK,EAAE;AAC5D,MAAM,MAAM,IAAIX,sBAAe,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,GAAG;AACH;;ACrBA,MAAM,4BAA4B,GAAG,MAAM;AAC3C,EAAE,WAAW,CAAC,KAAK,EAAE;AACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,GAAG;AACH,EAAE,OAAO,UAAU,CAAC,MAAM,EAAE;AAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AACrC,MAAM,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AAC/E,QAAQ,KAAK,EAAE,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACpE,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;AACjC,KAAK,MAAM;AACX,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,4BAA4B,CAAC,YAAY,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;AACzC,MAAM,MAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC5F,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AACnC,UAAU,OAAO,EAAE,CAAC;AACpB,SAAS;AACT,QAAQ,MAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC/C,QAAQ,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxE,QAAQ,OAAO,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM;AAClE,UAAU,KAAK,EAAE,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3E,UAAU,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AACvC,SAAS,CAAC,CAAC,CAAC;AACZ,OAAO,CAAC,CAAC;AACT,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;AACnC,KAAK;AACL,IAAI,OAAO,IAAI,4BAA4B,CAAC,KAAK,CAAC,CAAC;AACnD,GAAG;AACH,EAAE,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC9B,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;AACzD,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AAChD,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,IAAI,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AACpC,MAAM,IAAI,OAAO,CAAC,IAAI,MAAM,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE;AACxE,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,MAAM,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC9F,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAChC,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,IAAI,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AACpC,MAAM,IAAI,CAAC,CAAC,EAAE,GAAG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;AAC7H,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,CAAC,CAAC;AACK,IAAI,2BAA2B,GAAG,4BAA4B,CAAC;AACtE,2BAA2B,CAAC,YAAY,GAAG;AAC3C,EAAE;AACF,IAAI,KAAK,EAAE,CAAC,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACrE,GAAG;AACH,CAAC,CAAC;AACF,SAAS,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE;AACrC,EAAE,IAAI,IAAI,KAAK,MAAM,EAAE;AACvB,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,OAAOjC,wBAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9B;;AC/EA,MAAM,UAAU,CAAC;AACjB,EAAE,WAAW,CAAC,MAAM,EAAE;AACtB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,sBAAsB,GAAGe,0CAA6B,EAAE,CAAC;AAClE,GAAG;AACH,EAAE,MAAM,aAAa,CAAC,QAAQ,EAAE;AAChC,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;AAC9C,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;AAClC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACzD,MAAM,MAAM,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACzC,QAAQ,MAAM,EAAE,CAAC,0BAA0B,CAAC,EAAE,EAAE;AAChD,UAAU,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AACnC,UAAU,IAAI,EAAE,MAAM;AACtB,UAAU,KAAK,EAAE,QAAQ,CAAC,QAAQ;AAClC,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;AAC1C,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACtD,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACxD,MAAM,MAAM,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK;AACzC,QAAQ,MAAM,EAAE,CAAC,0BAA0B,CAAC,EAAE,EAAE;AAChD,UAAU,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AACnC,UAAU,IAAI,EAAE,OAAO;AACvB,UAAU,KAAK,EAAE,QAAQ,CAAC,KAAK;AAC/B,UAAU,OAAO,EAAE,QAAQ,CAAC,OAAO;AACnC,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AACH,EAAE,KAAK,CAAC,QAAQ,EAAE;AAClB,IAAI,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;AACnC,MAAM,IAAI;AACV,QAAQ,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;AAC5C,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAI,SAAS,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;AACM,eAAe,sBAAsB,CAAC,EAAE,EAAE,SAAS,EAAE;AAC5D,EAAE,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,QAAQ,KAAK;AACtD,IAAI,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC;AACtC,MAAM,EAAE,EAAE,QAAQ,CAAC,eAAe,EAAE;AACpC,MAAM,kBAAkB,EAAE,EAAE;AAC5B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACxC,GAAG,CAAC,CAAC,CAAC;AACN;;ACxCO,MAAM,yBAAyB,CAAC;AACvC,EAAE,WAAW,CAAC,eAAe,EAAE,aAAa,EAAE,mBAAmB,EAAE;AACnE,IAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AAC3C,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,IAAI,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AACnD,GAAG;AACH,EAAE,MAAM,QAAQ,CAAC,OAAO,EAAE;AAC1B,IAAI,MAAM,iBAAiB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,EAAE,UAAU,EAAEN,+CAA2B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClM,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKmC,sCAAe,CAAC,IAAI,EAAE;AAC3D,MAAM,OAAO;AACb,QAAQ,QAAQ,EAAE,EAAE;AACpB,QAAQ,QAAQ,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;AACxC,OAAO,CAAC;AACR,KAAK;AACL,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKA,sCAAe,CAAC,WAAW,EAAE;AAClE,MAAM,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;AACtF,MAAM,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;AAC3C,QAAQ,GAAG,OAAO;AAClB,QAAQ,MAAM,EAAE,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,KAAK,EAAE,CAAC,gBAAgB,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,gBAAgB;AAC9H,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClD,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE;AACxC,IAAI,MAAM,iBAAiB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,EAAE,UAAU,EAAEC,iDAA6B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpM,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKD,sCAAe,CAAC,IAAI,EAAE;AAC3D,MAAM,MAAM,IAAIX,sBAAe,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKW,sCAAe,CAAC,WAAW,EAAE;AAClE,MAAM,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;AACtF,MAAM,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;AAC/D,QAAQ,MAAM,EAAE;AAChB,UAAU,KAAK,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,EAAE,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC;AAC/E,SAAS;AACT,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,QAAQ,MAAM,IAAIX,sBAAe,EAAE,CAAC;AACpC,OAAO;AACP,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACvD,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE;AAC3C,IAAI,MAAM,2BAA2B,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAExB,+CAA2B,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzN,IAAI,IAAI,2BAA2B,CAAC,MAAM,KAAKmC,sCAAe,CAAC,IAAI,EAAE;AACrE,MAAM,MAAM,IAAIX,sBAAe,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAChF,IAAI,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;AACrG,MAAM,UAAU,EAAExB,+CAA2B;AAC7C,MAAM,WAAW,EAAEI,+BAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;AAClD,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC3E,IAAI,MAAM,yBAAyB,GAAG,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK+B,sCAAe,CAAC,IAAI,CAAC,CAAC;AAC1I,IAAI,IAAI,yBAAyB,CAAC,MAAM,KAAK,CAAC,EAAE;AAChD,MAAM,OAAO,cAAc,CAAC;AAC5B,KAAK;AACL,IAAI,MAAM,0BAA0B,GAAG,yBAAyB,CAAC,GAAG,CAAC,CAAC,YAAY,KAAK/B,+BAAkB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAChI,IAAI,MAAM,yBAAyB,GAAG,IAAI,GAAG,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC;AACjM,IAAI,OAAO;AACX,MAAM,aAAa,EAAE,cAAc,CAAC,aAAa;AACjD,MAAM,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,YAAY,KAAK,CAAC,yBAAyB,CAAC,GAAG,CAACA,+BAAkB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AACnI,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,MAAM,CAAC,OAAO,EAAE;AACxB,IAAI,MAAM,iBAAiB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,EAAE,UAAU,EAAEJ,+CAA2B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClM,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKmC,sCAAe,CAAC,IAAI,EAAE;AAC3D,MAAM,OAAO;AACb,QAAQ,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACtE,OAAO,CAAC;AACR,KAAK;AACL,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAKA,sCAAe,CAAC,WAAW,EAAE;AAClE,MAAM,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;AACtF,MAAM,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AACzC,QAAQ,GAAG,OAAO;AAClB,QAAQ,MAAM,EAAE,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,KAAK,EAAE,CAAC,gBAAgB,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,gBAAgB;AAC9H,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,WAAW,CAAC,SAAS,EAAE,gBAAgB,EAAE,cAAc,EAAE;AAC3D,IAAI,MAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK/B,+BAAkB,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC;AAClH,IAAI,IAAI,CAAC,MAAM;AACf,MAAM,OAAO,EAAE,CAAC;AAChB,IAAI,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC;AACtD,IAAI,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AACrF,IAAI,OAAO;AACX,MAAM,SAAS;AACf,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;AAC9J,KAAK,CAAC;AACN,GAAG;AACH;;AC1FO,MAAM,yBAAyB,CAAC;AACvC,EAAE,WAAW,CAAC,eAAe,EAAE,aAAa,EAAE;AAC9C,IAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AAC3C,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AAC9C,IAAI,MAAM,qBAAqB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAEiC,mDAA+B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/L,IAAI,IAAI,qBAAqB,CAAC,MAAM,KAAKF,sCAAe,CAAC,IAAI,EAAE;AAC/D,MAAM,MAAM,IAAIX,sBAAe,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7D,GAAG;AACH,EAAE,MAAM,aAAa,CAAC,OAAO,EAAE;AAC/B,IAAI,MAAM,qBAAqB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAEc,iDAA6B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7L,IAAI,IAAI,qBAAqB,CAAC,MAAM,KAAKH,sCAAe,CAAC,IAAI,EAAE;AAC/D,MAAM,OAAO,EAAE,CAAC;AAChB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;AAChD,GAAG;AACH,EAAE,MAAM,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE;AACjC,IAAI,MAAM,qBAAqB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAEG,iDAA6B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7L,IAAI,IAAI,qBAAqB,CAAC,MAAM,KAAKH,sCAAe,CAAC,IAAI,EAAE;AAC/D,MAAM,MAAM,IAAI1F,oBAAa,CAAC,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,EAAE,EAAE,OAAO,EAAE;AACpC,IAAI,MAAM,qBAAqB,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE8F,mDAA+B,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/L,IAAI,IAAI,qBAAqB,CAAC,MAAM,KAAKJ,sCAAe,CAAC,IAAI,EAAE;AAC/D,MAAM,MAAM,IAAIX,sBAAe,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AACnD,GAAG;AACH;;ACiBO,MAAM,cAAc,CAAC;AAC5B,EAAE,WAAW,CAAC,GAAG,EAAE;AACnB,IAAI,IAAI,CAAC,kBAAkB,GAAG,8BAA8B,CAAC;AAC7D,MAAM,UAAU,EAAE,GAAG;AACrB,MAAM,UAAU,EAAE,GAAG;AACrB,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC;AACnC,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAC7B,IAAI,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;AACvC,IAAI,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;AACnC,IAAI,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;AACpC,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,IAAI,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACnC,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AACzB,IAAI,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAACgB,eAAsB,CAAC,CAAC;AACjE,GAAG;AACH,EAAE,OAAO,MAAM,CAAC,GAAG,EAAE;AACrB,IAAI,OAAO,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;AACnC,GAAG;AACH,EAAE,eAAe,CAAC,GAAG,QAAQ,EAAE;AAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AACjD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,4BAA4B,CAAC,OAAO,EAAE;AACxC,IAAI,IAAI,CAAC,kBAAkB,GAAG,8BAA8B,CAAC;AAC7D,MAAM,UAAU,EAAE,OAAO;AACzB,MAAM,UAAU,EAAE,OAAO,GAAG,GAAG;AAC/B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,qBAAqB,CAAC,kBAAkB,EAAE;AAC5C,IAAI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACjD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,mBAAmB,CAAC,gBAAgB,EAAE;AACxC,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC7C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,qBAAqB,CAAC,QAAQ,EAAE;AAClC,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;AACxC,IAAI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AACtC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,sBAAsB,CAAC,GAAG,EAAE,QAAQ,EAAE;AACxC,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC9C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,wBAAwB,CAAC,UAAU,EAAE;AACvC,IAAI5C,0BAAM,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;AACzD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,iBAAiB,CAAC,GAAG,SAAS,EAAE;AAClC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;AACnD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,YAAY,CAAC,GAAG,UAAU,EAAE;AAC9B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,iBAAiB,CAAC,UAAU,EAAE;AAChC,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AACtC,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAClC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,oBAAoB,GAAG;AACzB,IAAI,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAChD,IAAI,MAAM,YAAY,GAAG3C,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,IAAI,OAAO;AACX,MAAM,IAAI,mBAAmB,EAAE;AAC/B,MAAM,IAAI,kBAAkB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAChD,MAAM,mBAAmB,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAChE,MAAM,IAAI,+BAA+B,CAAC,EAAE,YAAY,EAAE,CAAC;AAC3D,KAAK,CAAC;AACN,GAAG;AACH,EAAE,mBAAmB,CAAC,MAAM,EAAE;AAC9B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,kBAAkB,CAAC,GAAG,eAAe,EAAE;AACzC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAC/D,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC5C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC9C,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,uBAAuB,CAAC;AAC1D,IAAI,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;AAChD,IAAI,IAAI,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AAClE,MAAM,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AACnD,MAAM,MAAM,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AAC9C,KAAK;AACL,IAAI,MAAM,kBAAkB,GAAG,IAAI,yBAAyB,CAAC;AAC7D,MAAM,QAAQ,EAAE,QAAQ;AACxB,MAAM,MAAM;AACZ,MAAM,eAAe,EAAE,IAAI,CAAC,kBAAkB;AAC9C,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,YAAY,GAAGA,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,IAAI,MAAM,aAAa,GAAG,2BAA2B,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACzE,IAAI,MAAM,YAAY,GAAG,IAAI,oCAAoC,CAAC;AAClE,MAAM,UAAU;AAChB,MAAM,YAAY;AAClB,MAAM,aAAa;AACnB,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,2BAA2B,GAAG,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AAC7E,IAAI,IAAI,mBAAmB,CAAC;AAC5B,IAAI,IAAI,sBAAsB,IAAI,WAAW,EAAE;AAC/C,MAAM,mBAAmB,GAAG,WAAW,CAAC;AACxC,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,IAAI,CAAC,oJAAoJ,CAAC,CAAC;AACxK,MAAM,mBAAmB,GAAGwF,4CAAqB,CAAC,WAAW,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,MAAM,eAAe,GAAG,IAAI,yBAAyB,CAAC,2BAA2B,EAAE,mBAAmB,EAAEC,+CAA0B,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAC9J,IAAI,MAAM,2BAA2B,GAAGC,sDAAiC,CAAC;AAC1E,MAAM,YAAY,EAAE7C,gDAA4B;AAChD,MAAM,YAAY,EAAE,OAAO,YAAY,KAAK;AAC5C,QAAQ,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,2BAA2B,CAAC,QAAQ,CAAC;AACxE,UAAU,MAAM,EAAE;AAClB,YAAY,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,KAAK;AACrD,cAAc,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAGzB,2BAAc,CAAC,WAAW,CAAC,CAAC;AAC5E,cAAc,OAAO,iBAAiB,CAAC;AACvC,gBAAgB,IAAI;AACpB,gBAAgB,oBAAoB,EAAE,SAAS;AAC/C,gBAAgB,eAAe,EAAE,IAAI;AACrC,eAAe,CAAC,CAAC;AACjB,aAAa,CAAC;AACd,WAAW;AACX,SAAS,CAAC,CAAC;AACX,QAAQ,MAAM,aAAa,GAAGuE,YAAK,CAAC,QAAQ,EAAExC,+BAAkB,CAAC,CAAC;AAClE,QAAQ,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,KAAK,aAAa,CAACA,+BAAkB,CAAC/B,2BAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACjH,OAAO;AACP,MAAM,KAAK,EAAE,IAAI,CAAC,eAAe;AACjC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACpD,IAAI,MAAM,aAAa,GAAG,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAC7D,IAAI,MAAM,sBAAsB,GAAG,IAAI,4BAA4B,CAAC,MAAM,CAAC,CAAC;AAC5E,IAAI,MAAM,eAAe,GAAGuB,0BAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,sBAAsB,CAAC,EAAE,CAAC,QAAQ,KAAK,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;AACtJ,IAAI,MAAM,gBAAgB,GAAG,IAAI,8BAA8B,CAAC,MAAM,EAAE,kBAAkB,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAMW,iBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9I,IAAI,MAAM,gBAAgB,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,oBAAoB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AACxH,IAAI,MAAM,eAAe,GAAG,IAAI,yBAAyB,CAAC,IAAI,sBAAsB,CAAC,aAAa,EAAE,YAAY,CAAC,EAAE,mBAAmB,CAAC,CAAC;AACxI,IAAI,MAAM,cAAc,GAAG,IAAI,wBAAwB,CAAC,IAAI,qBAAqB,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;AAC1I,IAAI,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC;AACtC,MAAM,eAAe;AACrB,MAAM,gBAAgB;AACtB,MAAM,eAAe;AACrB,MAAM,YAAY;AAClB,MAAM,cAAc;AACpB,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,2BAA2B;AACjC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,sBAAsB,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;AACtE,IAAI,OAAO;AACX,MAAM,gBAAgB;AACtB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,GAAG;AACH,EAAE,iBAAiB,GAAG;AACtB,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAIsC,oCAAuB,EAAE,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG;AAClH,MAAM,IAAIA,oCAAuB,EAAE;AACnC,MAAM,IAAIC,yCAA4B,EAAE;AACxC,MAAM,IAAIC,4CAA+B,EAAE;AAC3C,MAAM,IAAIC,oCAAuB,CAACC,0BAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC5E,MAAM,GAAG,IAAI,CAAC,cAAc;AAC5B,KAAK,CAAC;AACN,IAAI,OAAOC,2BAAc,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,eAAe,GAAG;AACpB,IAAI,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AACxC,IAAI,MAAM,YAAY,GAAGjG,2BAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;AAC3C,IAAI,MAAM,oBAAoB,GAAG;AACjC,MAAM,IAAI,EAAE,uBAAuB;AACnC,MAAM,IAAI,EAAE,uBAAuB;AACnC,MAAM,IAAI,EAAE,uBAAuB;AACnC,MAAM,GAAG,IAAI,CAAC,oBAAoB;AAClC,KAAK,CAAC;AACN,IAAI,MAAM,UAAU,GAAG;AACvB,MAAM,IAAI,oBAAoB,CAAC;AAC/B,QAAQ,SAAS,EAAE,oBAAoB;AACvC,QAAQ,MAAM;AACd,QAAQ,YAAY;AACpB,OAAO,CAAC;AACR,MAAM,IAAI,2BAA2B,EAAE;AACvC,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AACjC,MAAM,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACtD,KAAK;AACL,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACxC,IAAI,IAAI,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAAC;AACpD,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH,EAAE,+BAA+B,GAAG;AACpC,IAAI,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;AACvE,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAChD,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,uGAAuG,CAAC,CAAC,CAAC;AACjI,KAAK;AACL,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;AACnD,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,0GAA0G,CAAC,CAAC,CAAC;AACpI,KAAK;AACL,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;AACtD,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,gHAAgH,CAAC,CAAC,CAAC;AAC1I,KAAK;AACL,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAClD,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,wGAAwG,CAAC,CAAC,CAAC;AAClI,KAAK;AACL,GAAG;AACH,EAAE,8BAA8B,CAAC,UAAU,EAAE;AAC7C,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,MAAM,gBAAgB,GAAG,iDAAiD,CAAC;AAC/E,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;AACvC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACrL,IAAI,MAAM,cAAc,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;AAChF,IAAI,SAAS,KAAK,CAAC,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE;AACjE,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;AACjF,QAAQ,MAAM,IAAI,KAAK,CAAC;AACxB,UAAU,CAAC,yDAAyD,EAAE,YAAY,CAAC,CAAC,CAAC;AACrF,UAAU,CAAC,sDAAsD,EAAE,aAAa,CAAC,WAAW,CAAC;AAC7F,UAAU,CAAC,+EAA+E,CAAC;AAC3F,UAAU,CAAC,iFAAiF,CAAC;AAC7F,UAAU,CAAC,gBAAgB,EAAE,eAAe,CAAC,6CAA6C,CAAC;AAC3F,UAAU,CAAC,qFAAqF,CAAC;AACjG,UAAU,CAAC,oCAAoC,EAAE,gBAAgB,CAAC,WAAW,CAAC;AAC9E,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACrB,OAAO;AACP,KAAK;AACL,IAAI,KAAK,CAAC,oBAAoB,EAAE,sCAAsC,EAAE,wCAAwC,CAAC,CAAC;AAClH,IAAI,KAAK,CAAC,cAAc,EAAE,yBAAyB,EAAE,yDAAyD,CAAC,CAAC;AAChH,IAAI,KAAK,CAAC,iBAAiB,EAAE,+BAA+B,EAAE,wDAAwD,CAAC,CAAC;AACxH,IAAI,KAAK,CAAC,qBAAqB,EAAE,6BAA6B,EAAE,4DAA4D,CAAC,CAAC;AAC9H,IAAI,KAAK,CAAC,kBAAkB,EAAE,0BAA0B,EAAE,yDAAyD,CAAC,CAAC;AACrH,IAAI,KAAK,CAAC,YAAY,EAAE,0BAA0B,EAAE,mDAAmD,CAAC,CAAC;AACzG,IAAI,KAAK,CAAC,kBAAkB,EAAE,0BAA0B,EAAE,yDAAyD,CAAC,CAAC;AACrH,IAAI,KAAK,CAAC,UAAU,EAAE,wBAAwB,EAAE,iDAAiD,CAAC,CAAC;AACnG,IAAI,KAAK,CAAC,qBAAqB,EAAE,kCAAkC,EAAE,kDAAkD,CAAC,CAAC;AACzH,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;"}