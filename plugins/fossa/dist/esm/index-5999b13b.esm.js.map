{"version":3,"file":"index-5999b13b.esm.js","sources":["../../src/api/FossaApi.ts","../../src/api/FossaClient.ts","../../src/routes.ts","../../src/plugin.ts","../../src/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport interface FindingSummary {\n  timestamp: string;\n  issueCount: number;\n  dependencyCount: number;\n  projectDefaultBranch: string;\n  projectUrl: string;\n}\n\nexport const fossaApiRef = createApiRef<FossaApi>({\n  id: 'plugin.fossa.service',\n});\n\nexport type FossaApi = {\n  /**\n   * Get the finding summary for a list of projects\n   *\n   * @param projectTitles - a list of project titles in FOSSA\n   */\n  getFindingSummaries(\n    projectTitles: Array<string>,\n  ): Promise<Map<string, FindingSummary>>;\n\n  /**\n   * Get the finding summary of a single project.\n   *\n   * @param projectTitle - the project title in FOSSA\n   */\n  getFindingSummary(projectTitle: string): Promise<FindingSummary | undefined>;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ResponseError } from '@backstage/errors';\nimport fetch from 'cross-fetch';\nimport pLimit from 'p-limit';\nimport { FindingSummary, FossaApi } from './FossaApi';\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\n\ntype FossaProjectsResponse = {\n  title: string;\n  default_branch: string;\n  locator: string;\n  revisions: Array<{\n    updatedAt: string;\n    unresolved_licensing_issue_count: number;\n    unresolved_issue_count: number;\n    dependency_count: number;\n  }>;\n};\n\nexport class FossaClient implements FossaApi {\n  discoveryApi: DiscoveryApi;\n  identityApi: IdentityApi;\n  organizationId?: string;\n  private readonly limit = pLimit(5);\n\n  constructor({\n    discoveryApi,\n    identityApi,\n    organizationId,\n  }: {\n    discoveryApi: DiscoveryApi;\n    identityApi: IdentityApi;\n    organizationId?: string;\n  }) {\n    this.discoveryApi = discoveryApi;\n    this.identityApi = identityApi;\n    this.organizationId = organizationId;\n  }\n\n  private async callApi<T>(\n    path: string,\n    query: Record<string, any>,\n  ): Promise<T> {\n    const apiUrl = `${await this.discoveryApi.getBaseUrl('proxy')}/fossa`;\n    const { token: idToken } = await this.identityApi.getCredentials();\n    const response = await fetch(\n      `${apiUrl}/${path}?${new URLSearchParams(query).toString()}`,\n      {\n        headers: idToken ? { Authorization: `Bearer ${idToken}` } : {},\n      },\n    );\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return (await response.json()) as T;\n  }\n\n  async *getProject(\n    projectTitles: Set<string>,\n  ): AsyncIterable<{ title: string; summary: FindingSummary }> {\n    const pageSize = 1000;\n\n    for (let page = 0; ; page++) {\n      const projects = await this.limit(() =>\n        this.callApi<FossaProjectsResponse[]>('projects', {\n          count: pageSize,\n          page,\n          sort: 'title+',\n          ...(this.organizationId && {\n            organizationId: this.organizationId,\n          }),\n          ...(projectTitles.size === 1 && {\n            title: projectTitles.values().next().value,\n          }),\n        }),\n      );\n\n      for (const project of projects) {\n        if (projectTitles.has(project.title) && project.revisions.length > 0) {\n          const revision = project.revisions[0];\n          yield {\n            title: project.title,\n            summary: {\n              timestamp: revision.updatedAt,\n              issueCount:\n                revision.unresolved_licensing_issue_count ||\n                revision.unresolved_issue_count,\n              dependencyCount: revision.dependency_count,\n              projectDefaultBranch: project.default_branch,\n              projectUrl: `https://app.fossa.com/projects/${encodeURIComponent(\n                project.locator,\n              )}`,\n            },\n          };\n        }\n      }\n\n      if (projects.length < pageSize) {\n        break;\n      }\n    }\n  }\n\n  async getFindingSummaries(\n    projectTitles: string[],\n  ): Promise<Map<string, FindingSummary>> {\n    const map = new Map<string, FindingSummary>();\n\n    if (projectTitles.length === 0) {\n      return map;\n    }\n\n    for await (const { title, summary } of this.getProject(\n      new Set(projectTitles),\n    )) {\n      map.set(title, summary);\n    }\n\n    return map;\n  }\n\n  async getFindingSummary(\n    projectTitle: string,\n  ): Promise<FindingSummary | undefined> {\n    const summaries = await this.getFindingSummaries([projectTitle]);\n    return summaries.get(projectTitle);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRoute = createRouteRef({\n  id: 'fossa-overview',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fossaApiRef, FossaClient } from './api';\nimport { rootRoute } from './routes';\nimport {\n  configApiRef,\n  createApiFactory,\n  createPlugin,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\n\nexport const fossaPlugin = createPlugin({\n  id: 'fossa',\n  apis: [\n    createApiFactory({\n      api: fossaApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ configApi, discoveryApi, identityApi }) =>\n        new FossaClient({\n          discoveryApi,\n          identityApi,\n          organizationId: configApi.getOptionalString('fossa.organizationId'),\n        }),\n    }),\n  ],\n  routes: {\n    fossaOverview: rootRoute,\n  },\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fossaPlugin } from './plugin';\nimport { rootRoute } from './routes';\nimport {\n  createComponentExtension,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\nexport const EntityFossaCard = fossaPlugin.provide(\n  createComponentExtension({\n    name: 'EntityFossaCard',\n    component: {\n      lazy: () => import('./components/FossaCard').then(m => m.FossaCard),\n    },\n  }),\n);\n\nexport const FossaPage = fossaPlugin.provide(\n  createRoutableExtension({\n    name: 'FossaPage',\n    component: () => import('./components/FossaPage').then(m => m.FossaPage),\n    mountPoint: rootRoute,\n  }),\n);\n"],"names":[],"mappings":";;;;;AACY,MAAC,WAAW,GAAG,YAAY,CAAC;AACxC,EAAE,EAAE,EAAE,sBAAsB;AAC5B,CAAC;;ACAM,MAAM,WAAW,CAAC;AACzB,EAAE,WAAW,CAAC;AACd,IAAI,YAAY;AAChB,IAAI,WAAW;AACf,IAAI,cAAc;AAClB,GAAG,EAAE;AACL,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,IAAI,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACnC,IAAI,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACzC,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;AAC7B,IAAI,MAAM,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1E,IAAI,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACvE,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC/F,MAAM,OAAO,EAAE,OAAO,GAAG,EAAE,aAAa,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE;AACpE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACtB,MAAM,MAAM,MAAM,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACvD,KAAK;AACL,IAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,GAAG;AACH,EAAE,OAAO,UAAU,CAAC,aAAa,EAAE;AACnC,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC;AACzB,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE;AACjC,MAAM,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACvE,QAAQ,KAAK,EAAE,QAAQ;AACvB,QAAQ,IAAI;AACZ,QAAQ,IAAI,EAAE,QAAQ;AACtB,QAAQ,GAAG,IAAI,CAAC,cAAc,IAAI;AAClC,UAAU,cAAc,EAAE,IAAI,CAAC,cAAc;AAC7C,SAAS;AACT,QAAQ,GAAG,aAAa,CAAC,IAAI,KAAK,CAAC,IAAI;AACvC,UAAU,KAAK,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AACpD,SAAS;AACT,OAAO,CAAC,CAAC,CAAC;AACV,MAAM,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;AACtC,QAAQ,IAAI,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9E,UAAU,MAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAChD,UAAU,MAAM;AAChB,YAAY,KAAK,EAAE,OAAO,CAAC,KAAK;AAChC,YAAY,OAAO,EAAE;AACrB,cAAc,SAAS,EAAE,QAAQ,CAAC,SAAS;AAC3C,cAAc,UAAU,EAAE,QAAQ,CAAC,gCAAgC,IAAI,QAAQ,CAAC,sBAAsB;AACtG,cAAc,eAAe,EAAE,QAAQ,CAAC,gBAAgB;AACxD,cAAc,oBAAoB,EAAE,OAAO,CAAC,cAAc;AAC1D,cAAc,UAAU,EAAE,CAAC,+BAA+B,EAAE,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AACjG,aAAa;AACb,WAAW,CAAC;AACZ,SAAS;AACT,OAAO;AACP,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,EAAE;AACtC,QAAQ,MAAM;AACd,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,MAAM,mBAAmB,CAAC,aAAa,EAAE;AAC3C,IAAI,MAAM,GAAG,mBAAmB,IAAI,GAAG,EAAE,CAAC;AAC1C,IAAI,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC,MAAM,OAAO,GAAG,CAAC;AACjB,KAAK;AACL,IAAI,WAAW,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE;AACpF,MAAM,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC9B,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH,EAAE,MAAM,iBAAiB,CAAC,YAAY,EAAE;AACxC,IAAI,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACrE,IAAI,OAAO,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACvC,GAAG;AACH;;ACxEO,MAAM,SAAS,GAAG,cAAc,CAAC;AACxC,EAAE,EAAE,EAAE,gBAAgB;AACtB,CAAC,CAAC;;ACMU,MAAC,WAAW,GAAG,YAAY,CAAC;AACxC,EAAE,EAAE,EAAE,OAAO;AACb,EAAE,IAAI,EAAE;AACR,IAAI,gBAAgB,CAAC;AACrB,MAAM,GAAG,EAAE,WAAW;AACtB,MAAM,IAAI,EAAE;AACZ,QAAQ,SAAS,EAAE,YAAY;AAC/B,QAAQ,YAAY,EAAE,eAAe;AACrC,QAAQ,WAAW,EAAE,cAAc;AACnC,OAAO;AACP,MAAM,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,IAAI,WAAW,CAAC;AAC7E,QAAQ,YAAY;AACpB,QAAQ,WAAW;AACnB,QAAQ,cAAc,EAAE,SAAS,CAAC,iBAAiB,CAAC,sBAAsB,CAAC;AAC3E,OAAO,CAAC;AACR,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,EAAE;AACV,IAAI,aAAa,EAAE,SAAS;AAC5B,GAAG;AACH,CAAC;;ACvBW,MAAC,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC,wBAAwB,CAAC;AAC5E,EAAE,IAAI,EAAE,iBAAiB;AACzB,EAAE,SAAS,EAAE;AACb,IAAI,IAAI,EAAE,MAAM,OAAO,yBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;AACzE,GAAG;AACH,CAAC,CAAC,EAAE;AACQ,MAAC,SAAS,GAAG,WAAW,CAAC,OAAO,CAAC,uBAAuB,CAAC;AACrE,EAAE,IAAI,EAAE,WAAW;AACnB,EAAE,SAAS,EAAE,MAAM,OAAO,yBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;AAC5E,EAAE,UAAU,EAAE,SAAS;AACvB,CAAC,CAAC;;;;"}