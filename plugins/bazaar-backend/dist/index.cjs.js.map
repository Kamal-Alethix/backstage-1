{"version":3,"file":"index.cjs.js","sources":["../src/service/DatabaseHandler.ts","../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport { Knex } from 'knex';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-bazaar-backend',\n  'migrations',\n);\n\ntype Options = {\n  database: Knex;\n};\n\nexport class DatabaseHandler {\n  static async create(options: Options): Promise<DatabaseHandler> {\n    const { database } = options;\n\n    await database.migrate.latest({\n      directory: migrationsDir,\n    });\n\n    return new DatabaseHandler(options);\n  }\n\n  private readonly database: Knex;\n\n  private constructor(options: Options) {\n    this.database = options.database;\n  }\n\n  private columns = [\n    'metadata.id',\n    'metadata.entity_ref',\n    'metadata.name',\n    'metadata.description',\n    'metadata.status',\n    'metadata.updated_at',\n    'metadata.community',\n    'metadata.size',\n    'metadata.start_date',\n    'metadata.end_date',\n    'metadata.responsible',\n  ];\n\n  async getMembers(id: string) {\n    return await this.database\n      .select('*')\n      .from('members')\n      .where({ item_id: id });\n  }\n\n  async addMember(id: number, userId: string, picture?: string) {\n    await this.database\n      .insert({\n        item_id: id,\n        user_id: userId,\n        picture: picture,\n      })\n      .into('members');\n  }\n\n  async deleteMember(id: number, userId: string) {\n    return await this.database('members')\n      .where({ item_id: id })\n      .andWhere('user_id', userId)\n      .del();\n  }\n\n  async getMetadataById(id: number) {\n    const coalesce = this.database.raw(\n      'coalesce(count(members.item_id), 0) as members_count',\n    );\n\n    return await this.database('metadata')\n      .select([...this.columns, coalesce])\n      .where({ 'metadata.id': id })\n      .groupBy(this.columns)\n      .leftJoin('members', 'metadata.id', '=', 'members.item_id');\n  }\n\n  async getMetadataByRef(entityRef: string) {\n    const coalesce = this.database.raw(\n      'coalesce(count(members.item_id), 0) as members_count',\n    );\n\n    return await this.database('metadata')\n      .select([...this.columns, coalesce])\n      .where({ 'metadata.entity_ref': entityRef })\n      .groupBy(this.columns)\n      .leftJoin('members', 'metadata.id', '=', 'members.item_id');\n  }\n\n  async insertMetadata(bazaarProject: any) {\n    const {\n      name,\n      entityRef,\n      community,\n      description,\n      status,\n      size,\n      startDate,\n      endDate,\n      responsible,\n    } = bazaarProject;\n\n    await this.database\n      .insert({\n        name,\n        entity_ref: entityRef,\n        community,\n        description,\n        status,\n        updated_at: new Date().toISOString(),\n        size,\n        start_date: startDate,\n        end_date: endDate,\n        responsible,\n      })\n      .into('metadata');\n  }\n\n  async updateMetadata(bazaarProject: any) {\n    const {\n      name,\n      id,\n      entityRef,\n      community,\n      description,\n      status,\n      size,\n      startDate,\n      endDate,\n      responsible,\n    } = bazaarProject;\n\n    return await this.database('metadata').where({ id: id }).update({\n      name,\n      entity_ref: entityRef,\n      description,\n      community,\n      status,\n      updated_at: new Date().toISOString(),\n      size,\n      start_date: startDate,\n      end_date: endDate,\n      responsible,\n    });\n  }\n\n  async deleteMetadata(id: number) {\n    return await this.database('metadata').where({ id: id }).del();\n  }\n\n  async getProjects() {\n    const coalesce = this.database.raw(\n      'coalesce(count(members.item_id), 0) as members_count',\n    );\n\n    return await this.database('metadata')\n      .select([...this.columns, coalesce])\n      .groupBy(this.columns)\n      .leftJoin('members', 'metadata.id', '=', 'members.item_id');\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorHandler, PluginDatabaseManager } from '@backstage/backend-common';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Logger } from 'winston';\nimport { Config } from '@backstage/config';\nimport { DatabaseHandler } from './DatabaseHandler';\n\nexport interface RouterOptions {\n  logger: Logger;\n  database: PluginDatabaseManager;\n  config: Config;\n}\n\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { logger, database } = options;\n  const db = await database.getClient();\n\n  const dbHandler = await DatabaseHandler.create({ database: db });\n\n  logger.info('Initializing Bazaar backend');\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/projects/:id/members', async (request, response) => {\n    const members = await dbHandler.getMembers(request.params.id);\n\n    if (members?.length) {\n      response.json({ status: 'ok', data: members });\n    } else {\n      response.json({ status: 'ok', data: [] });\n    }\n  });\n\n  router.put('/projects/:id/member/:userId', async (request, response) => {\n    const { id, userId } = request.params;\n    await dbHandler.addMember(parseInt(id, 10), userId, request.body?.picture);\n\n    response.json({ status: 'ok' });\n  });\n\n  router.delete('/projects/:id/member/:userId', async (request, response) => {\n    const { id, userId } = request.params;\n\n    const count = await dbHandler.deleteMember(parseInt(id, 10), userId);\n\n    if (count) {\n      response.json({ status: 'ok' });\n    } else {\n      response.status(404).json({ message: 'Record not found' });\n    }\n  });\n\n  router.get('/projects/:idOrRef', async (request, response) => {\n    const idOrRef = decodeURIComponent(request.params.idOrRef);\n    let data;\n\n    if (/^-?\\d+$/.test(idOrRef)) {\n      data = await dbHandler.getMetadataById(parseInt(idOrRef, 10));\n    } else {\n      data = await dbHandler.getMetadataByRef(idOrRef);\n    }\n\n    response.json({ status: 'ok', data: data });\n  });\n\n  router.get('/projects', async (_, response) => {\n    const data = await dbHandler.getProjects();\n\n    response.json({ status: 'ok', data: data });\n  });\n\n  router.put('/projects', async (request, response) => {\n    const bazaarProject = request.body;\n\n    const count = await dbHandler.updateMetadata(bazaarProject);\n\n    if (count) {\n      response.json({ status: 'ok' });\n    }\n  });\n\n  router.post('/projects', async (request, response) => {\n    const bazaarProject = request.body;\n\n    await dbHandler.insertMetadata(bazaarProject);\n    response.json({ status: 'ok' });\n  });\n\n  router.delete('/projects/:id', async (request, response) => {\n    const id = decodeURIComponent(request.params.id);\n\n    const count = await dbHandler.deleteMetadata(parseInt(id, 10));\n\n    if (count) {\n      response.json({ status: 'ok' });\n    } else {\n      response.status(404).json({ message: 'Record not found' });\n    }\n  });\n\n  router.use(errorHandler());\n  return router;\n}\n"],"names":["resolvePackagePath","Router","express","errorHandler"],"mappings":";;;;;;;;;;;;;AACA,MAAM,aAAa,GAAGA,gCAAkB,CAAC,kCAAkC,EAAE,YAAY,CAAC,CAAC;AACpF,MAAM,eAAe,CAAC;AAC7B,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG;AACnB,MAAM,aAAa;AACnB,MAAM,qBAAqB;AAC3B,MAAM,eAAe;AACrB,MAAM,sBAAsB;AAC5B,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAC3B,MAAM,oBAAoB;AAC1B,MAAM,eAAe;AACrB,MAAM,qBAAqB;AAC3B,MAAM,mBAAmB;AACzB,MAAM,sBAAsB;AAC5B,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACrC,GAAG;AACH,EAAE,aAAa,MAAM,CAAC,OAAO,EAAE;AAC/B,IAAI,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;AACjC,IAAI,MAAM,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AAClC,MAAM,SAAS,EAAE,aAAa;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC;AACxC,GAAG;AACH,EAAE,MAAM,UAAU,CAAC,EAAE,EAAE;AACvB,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AAClF,GAAG;AACH,EAAE,MAAM,SAAS,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE;AACvC,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC/B,MAAM,OAAO,EAAE,EAAE;AACjB,MAAM,OAAO,EAAE,MAAM;AACrB,MAAM,OAAO;AACb,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvB,GAAG;AACH,EAAE,MAAM,YAAY,CAAC,EAAE,EAAE,MAAM,EAAE;AACjC,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;AACnG,GAAG;AACH,EAAE,MAAM,eAAe,CAAC,EAAE,EAAE;AAC5B,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;AAC/F,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;AAC7L,GAAG;AACH,EAAE,MAAM,gBAAgB,CAAC,SAAS,EAAE;AACpC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;AAC/F,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,qBAAqB,EAAE,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;AAC5M,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,aAAa,EAAE;AACtC,IAAI,MAAM;AACV,MAAM,IAAI;AACV,MAAM,SAAS;AACf,MAAM,SAAS;AACf,MAAM,WAAW;AACjB,MAAM,MAAM;AACZ,MAAM,IAAI;AACV,MAAM,SAAS;AACf,MAAM,OAAO;AACb,MAAM,WAAW;AACjB,KAAK,GAAG,aAAa,CAAC;AACtB,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC/B,MAAM,IAAI;AACV,MAAM,UAAU,EAAE,SAAS;AAC3B,MAAM,SAAS;AACf,MAAM,WAAW;AACjB,MAAM,MAAM;AACZ,MAAM,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;AAC1C,MAAM,IAAI;AACV,MAAM,UAAU,EAAE,SAAS;AAC3B,MAAM,QAAQ,EAAE,OAAO;AACvB,MAAM,WAAW;AACjB,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxB,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,aAAa,EAAE;AACtC,IAAI,MAAM;AACV,MAAM,IAAI;AACV,MAAM,EAAE;AACR,MAAM,SAAS;AACf,MAAM,SAAS;AACf,MAAM,WAAW;AACjB,MAAM,MAAM;AACZ,MAAM,IAAI;AACV,MAAM,SAAS;AACf,MAAM,OAAO;AACb,MAAM,WAAW;AACjB,KAAK,GAAG,aAAa,CAAC;AACtB,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC;AAChE,MAAM,IAAI;AACV,MAAM,UAAU,EAAE,SAAS;AAC3B,MAAM,WAAW;AACjB,MAAM,SAAS;AACf,MAAM,MAAM;AACZ,MAAM,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;AAC1C,MAAM,IAAI;AACV,MAAM,UAAU,EAAE,SAAS;AAC3B,MAAM,QAAQ,EAAE,OAAO;AACvB,MAAM,WAAW;AACjB,KAAK,CAAC,CAAC;AACP,GAAG;AACH,EAAE,MAAM,cAAc,CAAC,EAAE,EAAE;AAC3B,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAC/D,GAAG;AACH,EAAE,MAAM,WAAW,GAAG;AACtB,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;AAC/F,IAAI,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;AAChK,GAAG;AACH;;ACrGO,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;AACvC,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;AACxC,EAAE,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AACnE,EAAE,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AAC7C,EAAE,MAAM,MAAM,GAAGC,0BAAM,EAAE,CAAC;AAC1B,EAAE,MAAM,CAAC,GAAG,CAACC,2BAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,EAAE,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AACnE,IAAI,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAClE,IAAI,IAAI,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;AACnD,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AACrD,KAAK,MAAM;AACX,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;AAChD,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AAC1E,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;AAC1C,IAAI,MAAM,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;AAC3G,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACpC,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,MAAM,CAAC,8BAA8B,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AAC7E,IAAI,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;AAC1C,IAAI,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AACzE,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACtC,KAAK,MAAM;AACX,MAAM,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;AACjE,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AAChE,IAAI,MAAM,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/D,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AACjC,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACpE,KAAK,MAAM;AACX,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACvD,KAAK;AACL,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1C,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,QAAQ,KAAK;AACjD,IAAI,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC;AAC/C,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1C,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AACvD,IAAI,MAAM,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC;AACvC,IAAI,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;AAChE,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACtC,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AACxD,IAAI,MAAM,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC;AACvC,IAAI,MAAM,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;AAClD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACpC,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK;AAC9D,IAAI,MAAM,EAAE,GAAG,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACrD,IAAI,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACnE,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AACtC,KAAK,MAAM;AACX,MAAM,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;AACjE,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,GAAG,CAACC,0BAAY,EAAE,CAAC,CAAC;AAC7B,EAAE,OAAO,MAAM,CAAC;AAChB;;;;"}