{"version":3,"file":"index.cjs.js","sources":["../src/service/router.ts","../src/service/fact/FactRetrieverEngine.ts","../src/service/fact/FactRetrieverRegistry.ts","../src/service/fact/factRetrievers/utils.ts","../src/service/persistence/TechInsightsDatabase.ts","../src/service/persistence/persistenceContext.ts","../src/service/techInsightsContextBuilder.ts","../src/service/fact/createFactRetriever.ts","../src/service/fact/factRetrievers/entityOwnershipFactRetriever.ts","../src/service/fact/factRetrievers/entityMetadataFactRetriever.ts","../src/service/fact/factRetrievers/techdocsFactRetriever.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { Config } from '@backstage/config';\nimport {\n  FactChecker,\n  TechInsightCheck,\n} from '@backstage/plugin-tech-insights-node';\n\nimport { CheckResult } from '@backstage/plugin-tech-insights-common';\nimport { Logger } from 'winston';\nimport { DateTime } from 'luxon';\nimport { PersistenceContext } from './persistence/persistenceContext';\nimport {\n  CompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { errorHandler } from '@backstage/backend-common';\n\n/**\n * @public\n *\n * RouterOptions to construct TechInsights endpoints\n * @typeParam CheckType - Type of the check for the fact checker this builder returns\n * @typeParam CheckResultType - Type of the check result for the fact checker this builder returns\n */\nexport interface RouterOptions<\n  CheckType extends TechInsightCheck,\n  CheckResultType extends CheckResult,\n> {\n  /**\n   * Optional FactChecker implementation. If omitted, endpoints are not constructed\n   */\n  factChecker?: FactChecker<CheckType, CheckResultType>;\n\n  /**\n   * TechInsights PersistenceContext. Should contain an implementation of TechInsightsStore\n   */\n  persistenceContext: PersistenceContext;\n\n  /**\n   * Backstage config object\n   */\n  config: Config;\n\n  /**\n   * Implementation of Winston logger\n   */\n  logger: Logger;\n}\n\n/**\n * @public\n *\n * Constructs a tech-insights router.\n *\n * Exposes endpoints to handle facts\n * Exposes optional endpoints to handle checks if a FactChecker implementation is passed in\n *\n * @param options - RouterOptions object\n */\nexport async function createRouter<\n  CheckType extends TechInsightCheck,\n  CheckResultType extends CheckResult,\n>(options: RouterOptions<CheckType, CheckResultType>): Promise<express.Router> {\n  const router = Router();\n  router.use(express.json());\n  const { persistenceContext, factChecker, logger } = options;\n  const { techInsightsStore } = persistenceContext;\n\n  if (factChecker) {\n    logger.info('Fact checker configured. Enabling fact checking endpoints.');\n    router.get('/checks', async (_req, res) => {\n      return res.send(await factChecker.getChecks());\n    });\n\n    router.post('/checks/run/:namespace/:kind/:name', async (req, res) => {\n      const { namespace, kind, name } = req.params;\n      const { checks }: { checks: string[] } = req.body;\n      const entityTriplet = stringifyEntityRef({ namespace, kind, name });\n      const checkResult = await factChecker.runChecks(entityTriplet, checks);\n      return res.send(checkResult);\n    });\n\n    router.post('/checks/run', async (req, res) => {\n      const {\n        checks,\n        entities,\n      }: { checks: string[]; entities: CompoundEntityRef[] } = req.body;\n      const tasks = entities.map(async entity => {\n        const entityTriplet =\n          typeof entity === 'string' ? entity : stringifyEntityRef(entity);\n        const results = await factChecker.runChecks(entityTriplet, checks);\n        return {\n          entity: entityTriplet,\n          results,\n        };\n      });\n      const results = await Promise.all(tasks);\n      return res.send(results);\n    });\n  } else {\n    logger.info(\n      'Starting tech insights module without fact checking endpoints.',\n    );\n  }\n\n  router.get('/fact-schemas', async (req, res) => {\n    const ids = req.query.ids as string[];\n    return res.send(await techInsightsStore.getLatestSchemas(ids));\n  });\n\n  /**\n   * /facts/latest?entity=component:default/mycomponent&ids[]=factRetrieverId1&ids[]=factRetrieverId2\n   */\n  router.get('/facts/latest', async (req, res) => {\n    const { entity } = req.query;\n    const { namespace, kind, name } = parseEntityRef(entity as string);\n    const ids = req.query.ids as string[];\n    return res.send(\n      await techInsightsStore.getLatestFactsByIds(\n        ids,\n        stringifyEntityRef({ namespace, kind, name }),\n      ),\n    );\n  });\n\n  /**\n   * /facts/latest?entity=component:default/mycomponent&startDateTime=2021-12-24T01:23:45&endDateTime=2021-12-31T23:59:59&ids[]=factRetrieverId1&ids[]=factRetrieverId2\n   */\n  router.get('/facts/range', async (req, res) => {\n    const { entity } = req.query;\n    const { namespace, kind, name } = parseEntityRef(entity as string);\n\n    const ids = req.query.ids as string[];\n    const startDatetime = DateTime.fromISO(req.query.startDatetime as string);\n    const endDatetime = DateTime.fromISO(req.query.endDatetime as string);\n    if (!startDatetime.isValid || !endDatetime.isValid) {\n      return res.status(422).send({\n        message: 'Failed to parse datetime from request',\n        field: !startDatetime.isValid ? 'startDateTime' : 'endDateTime',\n        value: !startDatetime.isValid ? startDatetime : endDatetime,\n      });\n    }\n    const entityTriplet = stringifyEntityRef({ namespace, kind, name });\n    return res.send(\n      await techInsightsStore.getFactsBetweenTimestampsByIds(\n        ids,\n        entityTriplet,\n        startDatetime,\n        endDatetime,\n      ),\n    );\n  });\n\n  router.use(errorHandler());\n  return router;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactLifecycle,\n  FactRetriever,\n  FactRetrieverContext,\n  FactRetrieverRegistration,\n  TechInsightFact,\n  TechInsightsStore,\n} from '@backstage/plugin-tech-insights-node';\nimport { FactRetrieverRegistry } from './FactRetrieverRegistry';\nimport { Logger } from 'winston';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\nimport { Duration } from 'luxon';\n\nfunction randomDailyCron() {\n  const rand = (min: number, max: number) =>\n    Math.floor(Math.random() * (max - min + 1) + min);\n  return `${rand(0, 59)} ${rand(0, 23)} * * *`;\n}\n\nfunction duration(startTimestamp: [number, number]): string {\n  const delta = process.hrtime(startTimestamp);\n  const seconds = delta[0] + delta[1] / 1e9;\n  return `${seconds.toFixed(1)}s`;\n}\n\nexport class FactRetrieverEngine {\n  private constructor(\n    private readonly repository: TechInsightsStore,\n    private readonly factRetrieverRegistry: FactRetrieverRegistry,\n    private readonly factRetrieverContext: FactRetrieverContext,\n    private readonly logger: Logger,\n    private readonly scheduler: PluginTaskScheduler,\n    private readonly defaultCadence?: string,\n    private readonly defaultTimeout?: Duration,\n  ) {}\n\n  static async create(options: {\n    repository: TechInsightsStore;\n    factRetrieverRegistry: FactRetrieverRegistry;\n    factRetrieverContext: FactRetrieverContext;\n    scheduler: PluginTaskScheduler;\n    defaultCadence?: string;\n    defaultTimeout?: Duration;\n  }) {\n    const {\n      repository,\n      factRetrieverRegistry,\n      factRetrieverContext,\n      scheduler,\n      defaultCadence,\n      defaultTimeout,\n    } = options;\n\n    await Promise.all(\n      factRetrieverRegistry\n        .listRetrievers()\n        .map(it => repository.insertFactSchema(it)),\n    );\n\n    return new FactRetrieverEngine(\n      repository,\n      factRetrieverRegistry,\n      factRetrieverContext,\n      factRetrieverContext.logger,\n      scheduler,\n      defaultCadence,\n      defaultTimeout,\n    );\n  }\n\n  async schedule() {\n    const registrations = this.factRetrieverRegistry.listRegistrations();\n    const newRegs: string[] = [];\n\n    await Promise.all(\n      registrations.map(async registration => {\n        const { factRetriever, cadence, lifecycle, timeout } = registration;\n        const cronExpression =\n          cadence || this.defaultCadence || randomDailyCron();\n        const timeLimit =\n          timeout || this.defaultTimeout || Duration.fromObject({ minutes: 5 });\n        try {\n          await this.scheduler.scheduleTask({\n            id: factRetriever.id,\n            frequency: { cron: cronExpression },\n            fn: this.createFactRetrieverHandler(factRetriever, lifecycle),\n            timeout: timeLimit,\n          });\n          newRegs.push(factRetriever.id);\n        } catch (e) {\n          this.logger.warn(\n            `Failed to schedule fact retriever ${factRetriever.id}, ${e}`,\n          );\n        }\n      }),\n    );\n\n    this.logger.info(\n      `Scheduled ${newRegs.length}/${registrations.length} fact retrievers into the tech-insights engine`,\n    );\n  }\n\n  getJobRegistration(ref: string): FactRetrieverRegistration {\n    return this.factRetrieverRegistry.get(ref);\n  }\n\n  async triggerJob(ref: string): Promise<void> {\n    await this.scheduler.triggerTask(ref);\n  }\n\n  private createFactRetrieverHandler(\n    factRetriever: FactRetriever,\n    lifecycle?: FactLifecycle,\n  ) {\n    return async () => {\n      const startTimestamp = process.hrtime();\n      this.logger.info(\n        `Retrieving facts for fact retriever ${factRetriever.id}`,\n      );\n\n      let facts: TechInsightFact[] = [];\n      try {\n        facts = await factRetriever.handler({\n          ...this.factRetrieverContext,\n          entityFilter: factRetriever.entityFilter,\n        });\n        this.logger.debug(\n          `Retrieved ${facts.length} facts for fact retriever ${\n            factRetriever.id\n          } in ${duration(startTimestamp)}`,\n        );\n      } catch (e) {\n        this.logger.error(\n          `Failed to retrieve facts for retriever ${factRetriever.id}`,\n          e,\n        );\n      }\n\n      try {\n        await this.repository.insertFacts({\n          id: factRetriever.id,\n          facts,\n          lifecycle,\n        });\n        this.logger.info(\n          `Stored ${facts.length} facts for fact retriever ${\n            factRetriever.id\n          } in ${duration(startTimestamp)}`,\n        );\n      } catch (e) {\n        this.logger.warn(\n          `Failed to insert facts for fact retriever ${factRetriever.id}`,\n          e,\n        );\n      }\n    };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactRetriever,\n  FactRetrieverRegistration,\n  FactSchema,\n} from '@backstage/plugin-tech-insights-node';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\n\nexport class FactRetrieverRegistry {\n  private readonly retrievers = new Map<string, FactRetrieverRegistration>();\n\n  constructor(retrievers: FactRetrieverRegistration[]) {\n    retrievers.forEach(it => {\n      this.register(it);\n    });\n  }\n\n  register(registration: FactRetrieverRegistration) {\n    if (this.retrievers.has(registration.factRetriever.id)) {\n      throw new ConflictError(\n        `Tech insight fact retriever with identifier '${registration.factRetriever.id}' has already been registered`,\n      );\n    }\n    this.retrievers.set(registration.factRetriever.id, registration);\n  }\n\n  get(retrieverReference: string): FactRetrieverRegistration {\n    const registration = this.retrievers.get(retrieverReference);\n    if (!registration) {\n      throw new NotFoundError(\n        `Tech insight fact retriever with identifier '${retrieverReference}' is not registered.`,\n      );\n    }\n    return registration;\n  }\n\n  listRetrievers(): FactRetriever[] {\n    return [...this.retrievers.values()].map(it => it.factRetriever);\n  }\n\n  listRegistrations(): FactRetrieverRegistration[] {\n    return [...this.retrievers.values()];\n  }\n\n  getSchemas(): FactSchema[] {\n    return this.listRetrievers().map(it => it.schema);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport camelCase from 'lodash/camelCase';\nimport { Entity } from '@backstage/catalog-model';\nimport { get } from 'lodash';\nimport {\n  FactLifecycle,\n  MaxItems,\n  TTL,\n} from '@backstage/plugin-tech-insights-node';\n\nexport const generateAnnotationFactName = (annotation: string) =>\n  camelCase(`hasAnnotation-${annotation}`);\n\nexport const entityHasAnnotation = (entity: Entity, annotation: string) =>\n  Boolean(get(entity, ['metadata', 'annotations', annotation]));\n\nexport const isTtl = (lifecycle: FactLifecycle): lifecycle is TTL => {\n  return !!(lifecycle as TTL).timeToLive;\n};\n\nexport const isMaxItems = (lifecycle: FactLifecycle): lifecycle is MaxItems => {\n  return !!(lifecycle as MaxItems).maxItems;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Knex } from 'knex';\nimport {\n  FactLifecycle,\n  FactSchema,\n  FactSchemaDefinition,\n  FlatTechInsightFact,\n  TechInsightFact,\n  TechInsightsStore,\n} from '@backstage/plugin-tech-insights-node';\nimport { rsort } from 'semver';\nimport { groupBy, omit } from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Logger } from 'winston';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { isMaxItems, isTtl } from '../fact/factRetrievers/utils';\n\ntype Transaction = Knex.Transaction;\n\nexport type RawDbFactRow = {\n  id: string;\n  version: string;\n  timestamp: Date | string;\n  entity: string;\n  facts: string;\n};\n\ntype RawDbFactSchemaRow = {\n  id: string;\n  version: string;\n  schema: string;\n  entityFilter?: string;\n};\n\nexport class TechInsightsDatabase implements TechInsightsStore {\n  private readonly CHUNK_SIZE = 50;\n\n  constructor(private readonly db: Knex, private readonly logger: Logger) {}\n\n  async getLatestSchemas(ids?: string[]): Promise<FactSchema[]> {\n    const queryBuilder = this.db<RawDbFactSchemaRow>('fact_schemas');\n    if (ids) {\n      queryBuilder.whereIn('id', ids);\n    }\n    const existingSchemas = await queryBuilder.orderBy('id', 'desc').select();\n\n    const groupedSchemas = groupBy(existingSchemas, 'id');\n    return Object.values(groupedSchemas)\n      .map(schemas => {\n        const sorted = rsort(schemas.map(it => it.version));\n        return schemas.find(it => it.version === sorted[0])!;\n      })\n      .map((it: RawDbFactSchemaRow) => ({\n        ...omit(it, 'schema'),\n        ...JSON.parse(it.schema),\n        entityFilter: it.entityFilter ? JSON.parse(it.entityFilter) : null,\n      }));\n  }\n\n  async insertFactSchema(schemaDefinition: FactSchemaDefinition) {\n    const { id, version, schema, entityFilter } = schemaDefinition;\n    const existingSchemas = await this.db<RawDbFactSchemaRow>('fact_schemas')\n      .where({ id })\n      .and.where({ version })\n      .select();\n\n    if (!existingSchemas || existingSchemas.length === 0) {\n      await this.db<RawDbFactSchemaRow>('fact_schemas').insert({\n        id,\n        version,\n        entityFilter: entityFilter ? JSON.stringify(entityFilter) : undefined,\n        schema: JSON.stringify(schema),\n      });\n    }\n  }\n\n  async insertFacts({\n    id,\n    facts,\n    lifecycle,\n  }: {\n    id: string;\n    facts: TechInsightFact[];\n    lifecycle?: FactLifecycle;\n  }): Promise<void> {\n    if (facts.length === 0) return;\n    const currentSchema = await this.getLatestSchema(id);\n    const factRows = facts.map(it => {\n      return {\n        id,\n        version: currentSchema.version,\n        entity: stringifyEntityRef(it.entity),\n        facts: JSON.stringify(it.facts),\n        ...(it.timestamp && { timestamp: it.timestamp.toISO() }),\n      };\n    });\n\n    await this.db.transaction(async tx => {\n      await tx.batchInsert<RawDbFactRow>('facts', factRows, this.CHUNK_SIZE);\n\n      if (lifecycle && isTtl(lifecycle)) {\n        const expiration = DateTime.now().minus(lifecycle.timeToLive);\n        await this.deleteExpiredFactsByDate(tx, factRows, expiration);\n      }\n      if (lifecycle && isMaxItems(lifecycle)) {\n        await this.deleteExpiredFactsByNumber(tx, factRows, lifecycle.maxItems);\n      }\n    });\n  }\n\n  async getLatestFactsByIds(\n    ids: string[],\n    entityTriplet: string,\n  ): Promise<{ [factId: string]: FlatTechInsightFact }> {\n    const results = await this.db<RawDbFactRow>('facts')\n      .where({ entity: entityTriplet })\n      .and.whereIn('id', ids)\n      .join(\n        this.db('facts')\n          .max('timestamp as maxTimestamp')\n          .column('id as subId')\n          .where({ entity: entityTriplet })\n          .and.whereIn('id', ids)\n          .groupBy('id')\n          .as('subQ'),\n        {\n          'facts.id': 'subQ.subId',\n          'facts.timestamp': 'subQ.maxTimestamp',\n        },\n      );\n    return this.dbFactRowsToTechInsightFacts(results);\n  }\n\n  async getFactsBetweenTimestampsByIds(\n    ids: string[],\n    entityTriplet: string,\n    startDateTime: DateTime,\n    endDateTime: DateTime,\n  ): Promise<{\n    [factId: string]: FlatTechInsightFact[];\n  }> {\n    const results = await this.db<RawDbFactRow>('facts')\n      .where({ entity: entityTriplet })\n      .and.whereIn('id', ids)\n      .and.whereBetween('timestamp', [\n        startDateTime.toISO(),\n        endDateTime.toISO(),\n      ]);\n\n    return groupBy(\n      results.map(it => {\n        const { namespace, kind, name } = parseEntityRef(it.entity);\n        const timestamp =\n          typeof it.timestamp === 'string'\n            ? DateTime.fromISO(it.timestamp)\n            : DateTime.fromJSDate(it.timestamp);\n        return {\n          id: it.id,\n          entity: { namespace, kind, name },\n          timestamp,\n          version: it.version,\n          facts: JSON.parse(it.facts),\n        };\n      }),\n      'id',\n    );\n  }\n\n  private async getLatestSchema(id: string): Promise<RawDbFactSchemaRow> {\n    const existingSchemas = await this.db<RawDbFactSchemaRow>('fact_schemas')\n      .where({ id })\n      .orderBy('id', 'desc')\n      .select();\n    if (existingSchemas.length < 1) {\n      this.logger.warn(`No schema found for ${id}. `);\n      throw new Error(`No schema found for ${id}. `);\n    }\n    const sorted = rsort(existingSchemas.map(it => it.version));\n    return existingSchemas.find(it => it.version === sorted[0])!;\n  }\n\n  private async deleteExpiredFactsByDate(\n    tx: Transaction,\n    factRows: { id: string; entity: string }[],\n    timestamp: DateTime,\n  ) {\n    await tx<RawDbFactRow>('facts')\n      .whereIn(\n        ['id', 'entity'],\n        factRows.map(it => [it.id, it.entity]),\n      )\n      .and.where('timestamp', '<', timestamp.toISO())\n      .delete();\n  }\n\n  private async deleteExpiredFactsByNumber(\n    tx: Transaction,\n    factRows: { id: string; entity: string }[],\n    maxItems: number,\n  ) {\n    const deletables = await tx<RawDbFactRow>('facts')\n      .whereIn(\n        ['id', 'entity'],\n        factRows.map(it => [it.id, it.entity]),\n      )\n      .and.leftJoin(\n        joinTable =>\n          joinTable\n            .select('*')\n            .from(\n              this.db('facts')\n                .column(\n                  { fid: 'id' },\n                  { fentity: 'entity' },\n                  { ftimestamp: 'timestamp' },\n                )\n                .column(\n                  this.db.raw(\n                    'row_number() over (partition by id, entity order by timestamp desc) as fact_rank',\n                  ),\n                )\n                .as('ranks'),\n            )\n            .where('fact_rank', '<=', maxItems)\n            .as('filterjoin'),\n        joinClause => {\n          joinClause\n            .on('filterjoin.fid', 'facts.id')\n            .on('filterjoin.fentity', 'facts.entity')\n            .on('filterjoin.ftimestamp', 'facts.timestamp');\n        },\n      )\n      .whereNull('filterjoin.fid');\n    await tx('facts')\n      .whereIn(\n        ['id', 'entity', 'timestamp'],\n        deletables.map(it => [it.id, it.entity, it.timestamp]),\n      )\n      .delete();\n  }\n\n  private dbFactRowsToTechInsightFacts(rows: RawDbFactRow[]) {\n    return rows.reduce((acc, it) => {\n      const { namespace, kind, name } = parseEntityRef(it.entity);\n      const timestamp =\n        typeof it.timestamp === 'string'\n          ? DateTime.fromISO(it.timestamp)\n          : DateTime.fromJSDate(it.timestamp);\n      return {\n        ...acc,\n        [it.id]: {\n          id: it.id,\n          entity: { namespace, kind, name },\n          timestamp,\n          version: it.version,\n          facts: JSON.parse(it.facts),\n        },\n      };\n    }, {});\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getVoidLogger, resolvePackagePath } from '@backstage/backend-common';\nimport { Knex } from 'knex';\nimport { Logger } from 'winston';\nimport { TechInsightsDatabase } from './TechInsightsDatabase';\nimport { TechInsightsStore } from '@backstage/plugin-tech-insights-node';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-tech-insights-backend',\n  'migrations',\n);\n\n/**\n * A Container for persistence related components in TechInsights\n *\n * @public\n */\nexport type PersistenceContext = {\n  techInsightsStore: TechInsightsStore;\n};\n\nexport type CreateDatabaseOptions = {\n  logger: Logger;\n};\n\nconst defaultOptions: CreateDatabaseOptions = {\n  logger: getVoidLogger(),\n};\n\n/**\n * A factory method to construct persistence context for running implementation.\n *\n * @public\n */\nexport const initializePersistenceContext = async (\n  knex: Knex,\n  options: CreateDatabaseOptions = defaultOptions,\n): Promise<PersistenceContext> => {\n  await knex.migrate.latest({\n    directory: migrationsDir,\n  });\n  return {\n    techInsightsStore: new TechInsightsDatabase(knex, options.logger),\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FactRetrieverEngine } from './fact/FactRetrieverEngine';\nimport { Logger } from 'winston';\nimport { FactRetrieverRegistry } from './fact/FactRetrieverRegistry';\nimport { Config } from '@backstage/config';\nimport {\n  PluginDatabaseManager,\n  PluginEndpointDiscovery,\n  TokenManager,\n} from '@backstage/backend-common';\nimport {\n  FactChecker,\n  FactCheckerFactory,\n  FactRetrieverRegistration,\n  TechInsightCheck,\n} from '@backstage/plugin-tech-insights-node';\nimport {\n  initializePersistenceContext,\n  PersistenceContext,\n} from './persistence/persistenceContext';\nimport { CheckResult } from '@backstage/plugin-tech-insights-common';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\n\n/**\n * @public\n * @typeParam CheckType - Type of the check for the fact checker this builder returns\n * @typeParam CheckResultType - Type of the check result for the fact checker this builder returns\n *\n * Configuration options to initialize TechInsightsBuilder. Generic types params are needed if FactCheckerFactory\n * is included for FactChecker creation.\n */\nexport interface TechInsightsOptions<\n  CheckType extends TechInsightCheck,\n  CheckResultType extends CheckResult,\n> {\n  /**\n   * A collection of FactRetrieverRegistrations.\n   * Used to register FactRetrievers and their schemas and schedule an execution loop for them.\n   */\n  factRetrievers: FactRetrieverRegistration[];\n\n  /**\n   * Optional factory exposing a `construct` method to initialize a FactChecker implementation\n   */\n  factCheckerFactory?: FactCheckerFactory<CheckType, CheckResultType>;\n\n  logger: Logger;\n  config: Config;\n  discovery: PluginEndpointDiscovery;\n  database: PluginDatabaseManager;\n  scheduler: PluginTaskScheduler;\n  tokenManager: TokenManager;\n}\n\n/**\n * @public\n * @typeParam CheckType - Type of the check for the fact checker this builder returns\n * @typeParam CheckResultType - Type of the check result for the fact checker this builder returns\n *\n * A container for exported implementations related to TechInsights.\n * FactChecker is present if an optional FactCheckerFactory is included in the build stage.\n */\nexport type TechInsightsContext<\n  CheckType extends TechInsightCheck,\n  CheckResultType extends CheckResult,\n> = {\n  factChecker?: FactChecker<CheckType, CheckResultType>;\n  persistenceContext: PersistenceContext;\n};\n\n/**\n * @public\n *\n * Constructs needed persistence context, fact retriever engine\n * and optionally fact checker implementations to be used in the tech insights module.\n *\n * @param options - Needed options to construct TechInsightsContext\n * @returns TechInsightsContext with persistence implementations and optionally an implementation of a FactChecker\n */\nexport const buildTechInsightsContext = async <\n  CheckType extends TechInsightCheck,\n  CheckResultType extends CheckResult,\n>(\n  options: TechInsightsOptions<CheckType, CheckResultType>,\n): Promise<TechInsightsContext<CheckType, CheckResultType>> => {\n  const {\n    factRetrievers,\n    factCheckerFactory,\n    config,\n    discovery,\n    database,\n    logger,\n    scheduler,\n    tokenManager,\n  } = options;\n\n  const factRetrieverRegistry = new FactRetrieverRegistry(factRetrievers);\n\n  const persistenceContext = await initializePersistenceContext(\n    await database.getClient(),\n    { logger },\n  );\n\n  const factRetrieverEngine = await FactRetrieverEngine.create({\n    scheduler,\n    repository: persistenceContext.techInsightsStore,\n    factRetrieverRegistry,\n    factRetrieverContext: {\n      config,\n      discovery,\n      logger,\n      tokenManager,\n    },\n  });\n\n  await factRetrieverEngine.schedule();\n\n  if (factCheckerFactory) {\n    const factChecker = factCheckerFactory.construct(\n      persistenceContext.techInsightsStore,\n    );\n    return {\n      persistenceContext,\n      factChecker,\n    };\n  }\n\n  return {\n    persistenceContext,\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactLifecycle,\n  FactRetriever,\n  FactRetrieverRegistration,\n} from '@backstage/plugin-tech-insights-node';\n\n/**\n * @public\n *\n * @param cadence - cron expression to indicate when the fact retriever should be triggered\n * @param factRetriever - Implementation of fact retriever consisting of at least id, version, schema and handler\n * @param lifecycle - Optional lifecycle definition indicating the cleanup logic of facts when this retriever is run\n *\n */\nexport type FactRetrieverRegistrationOptions = {\n  cadence: string;\n  factRetriever: FactRetriever;\n  lifecycle?: FactLifecycle;\n};\n\n/**\n * @public\n *\n * A helper function to construct fact retriever registrations.\n *\n * @param cadence - cron expression to indicate when the fact retriever should be triggered\n * @param factRetriever - Implementation of fact retriever consisting of at least id, version, schema and handler\n * @param lifecycle - Optional lifecycle definition indicating the cleanup logic of facts when this retriever is run\n *\n *\n * @remarks\n *\n * Cron expressions help:\n * ┌────────────── second (optional)\n # │ ┌──────────── minute\n # │ │ ┌────────── hour\n # │ │ │ ┌──────── day of month\n # │ │ │ │ ┌────── month\n # │ │ │ │ │ ┌──── day of week\n # │ │ │ │ │ │\n # │ │ │ │ │ │\n # * * * * * *\n *\n * Valid lifecycle values:\n * \\{ ttl: \\{ weeks: 2 \\} \\} -- This fact retriever will remove items that are older than 2 weeks when it is run\n * \\{ maxItems: 7 \\} -- This fact retriever will leave 7 newest items in the database when it is run\n *\n */\nexport function createFactRetrieverRegistration(\n  options: FactRetrieverRegistrationOptions,\n): FactRetrieverRegistration {\n  const { cadence, factRetriever, lifecycle } = options;\n  return {\n    cadence,\n    factRetriever,\n    lifecycle,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactRetriever,\n  FactRetrieverContext,\n} from '@backstage/plugin-tech-insights-node';\nimport { CatalogClient } from '@backstage/catalog-client';\nimport { Entity } from '@backstage/catalog-model';\n\n/**\n * Generates facts which indicate the quality of data in the spec.owner field.\n *\n * @public\n */\nexport const entityOwnershipFactRetriever: FactRetriever = {\n  id: 'entityOwnershipFactRetriever',\n  version: '0.0.1',\n  entityFilter: [\n    { kind: ['component', 'domain', 'system', 'api', 'resource', 'template'] },\n  ],\n  schema: {\n    hasOwner: {\n      type: 'boolean',\n      description: 'The spec.owner field is set',\n    },\n    hasGroupOwner: {\n      type: 'boolean',\n      description: 'The spec.owner field is set and refers to a group',\n    },\n  },\n  handler: async ({\n    discovery,\n    entityFilter,\n    tokenManager,\n  }: FactRetrieverContext) => {\n    const { token } = await tokenManager.getToken();\n    const catalogClient = new CatalogClient({\n      discoveryApi: discovery,\n    });\n    const entities = await catalogClient.getEntities(\n      { filter: entityFilter },\n      { token },\n    );\n\n    return entities.items.map((entity: Entity) => {\n      return {\n        entity: {\n          namespace: entity.metadata.namespace!,\n          kind: entity.kind,\n          name: entity.metadata.name,\n        },\n        facts: {\n          hasOwner: Boolean(entity.spec?.owner),\n          hasGroupOwner: Boolean(\n            entity.spec?.owner &&\n              !(entity.spec?.owner as string).startsWith('user:'),\n          ),\n        },\n      };\n    });\n  },\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactRetriever,\n  FactRetrieverContext,\n} from '@backstage/plugin-tech-insights-node';\nimport { CatalogClient } from '@backstage/catalog-client';\nimport { Entity } from '@backstage/catalog-model';\nimport isEmpty from 'lodash/isEmpty';\n\n/**\n * Generates facts which indicate the completeness of entity metadata.\n *\n * @public\n */\nexport const entityMetadataFactRetriever: FactRetriever = {\n  id: 'entityMetadataFactRetriever',\n  version: '0.0.1',\n  schema: {\n    hasTitle: {\n      type: 'boolean',\n      description: 'The entity has a title in metadata',\n    },\n    hasDescription: {\n      type: 'boolean',\n      description: 'The entity has a description in metadata',\n    },\n    hasTags: {\n      type: 'boolean',\n      description: 'The entity has tags in metadata',\n    },\n  },\n  handler: async ({\n    discovery,\n    entityFilter,\n    tokenManager,\n  }: FactRetrieverContext) => {\n    const { token } = await tokenManager.getToken();\n    const catalogClient = new CatalogClient({\n      discoveryApi: discovery,\n    });\n    const entities = await catalogClient.getEntities(\n      { filter: entityFilter },\n      { token },\n    );\n\n    return entities.items.map((entity: Entity) => {\n      return {\n        entity: {\n          namespace: entity.metadata.namespace!,\n          kind: entity.kind,\n          name: entity.metadata.name,\n        },\n        facts: {\n          hasTitle: Boolean(entity.metadata?.title),\n          hasDescription: Boolean(entity.metadata?.description),\n          hasTags: !isEmpty(entity.metadata?.tags),\n        },\n      };\n    });\n  },\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactRetriever,\n  FactRetrieverContext,\n} from '@backstage/plugin-tech-insights-node';\nimport { CatalogClient } from '@backstage/catalog-client';\nimport { Entity } from '@backstage/catalog-model';\nimport { entityHasAnnotation, generateAnnotationFactName } from './utils';\n\nconst techdocsAnnotation = 'backstage.io/techdocs-ref';\nconst techdocsAnnotationFactName =\n  generateAnnotationFactName(techdocsAnnotation);\n\n/**\n * Generates facts related to the completeness of techdocs configuration for entities.\n *\n * @public\n */\nexport const techdocsFactRetriever: FactRetriever = {\n  id: 'techdocsFactRetriever',\n  version: '0.0.1',\n  schema: {\n    [techdocsAnnotationFactName]: {\n      type: 'boolean',\n      description: 'The entity has a title in metadata',\n    },\n  },\n  handler: async ({\n    discovery,\n    entityFilter,\n    tokenManager,\n  }: FactRetrieverContext) => {\n    const { token } = await tokenManager.getToken();\n    const catalogClient = new CatalogClient({\n      discoveryApi: discovery,\n    });\n    const entities = await catalogClient.getEntities(\n      { filter: entityFilter },\n      { token },\n    );\n\n    return entities.items.map((entity: Entity) => {\n      return {\n        entity: {\n          namespace: entity.metadata.namespace!,\n          kind: entity.kind,\n          name: entity.metadata.name,\n        },\n        facts: {\n          [techdocsAnnotationFactName]: entityHasAnnotation(\n            entity,\n            techdocsAnnotation,\n          ),\n        },\n      };\n    });\n  },\n};\n"],"names":["Router","express","stringifyEntityRef","parseEntityRef","DateTime","errorHandler","Duration","ConflictError","NotFoundError","camelCase","get","groupBy","rsort","omit","resolvePackagePath","getVoidLogger","catalogClient","CatalogClient","isEmpty"],"mappings":"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"}