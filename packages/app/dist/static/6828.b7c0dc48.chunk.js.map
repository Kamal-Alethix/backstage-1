{"version":3,"sources":["webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/explore/src/components/ToolCard/ToolCard.tsx","webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/explore/src/components/ToolExplorerContent/ToolExplorerContent.tsx"],"names":[],"mappings":"0UAkCA,KAAM,GAAY,QAAW,GAAU,EACrC,MAAO,CACL,OAAQ,GACV,EACA,aAAc,CACZ,eAAgB,SAClB,EACA,UAAW,CACT,WAAY,QACZ,MAAO,OACT,EACA,GAAI,CACF,gBAAiB,EAAM,QAAQ,OAAO,EACxC,EACA,MAAO,CACL,gBAAiB,EAAM,QAAQ,OAAO,KACxC,EACA,KAAM,CACJ,gBAAiB,EAAM,QAAQ,OAAO,OACxC,CACF,EAAE,EAOW,EAAW,CAAC,CAAE,OAAM,eAAgB,CAC/C,KAAM,GAAU,EAAU,EAEpB,CAAE,QAAO,cAAa,MAAK,QAAO,YAAW,QAAS,EAE5D,MACE,iBAAoB,IAAM,CAAE,IAAK,CAAM,EACnC,gBAAoB,IAAW,CAC/B,MAAO,EACP,MAAO,EACP,UAAW,IAAW,EAAQ,MAAO,CACnC,CAAC,EAAQ,cAAe,IAAc,SACxC,CAAC,CAAE,CACL,EACE,gBAAoB,IAAa,KAC/B,gBAAoB,IAAY,CAAE,UAAW,GAAM,QAAS,IAAK,EAC/D,EAAO,IACP,GAAa,EAAU,kBAAkB,OAAO,IAAM,MACtD,gBAAoB,IAAM,CACxB,KAAM,QACN,MAAO,EACP,UAAW,IACT,EAAQ,UACR,EAAQ,EAAU,kBAAkB,OAAO,EAC7C,CAAE,CACJ,CAEJ,EACE,gBAAoB,IAAY,KAAM,GAAe,qBAAqB,EAC1E,GACA,gBAAoB,IAAK,CAAE,UAAW,CAAE,EACpC,EAAK,IAAI,CAAC,EAAM,IAChB,gBAAoB,IAAM,CAAE,KAAM,QAAS,IAAK,EAAK,MAAO,CAAK,CAAE,CACpE,CACH,CAEJ,EACE,gBAAoB,IAAa,KAC/B,gBAAoB,SAAQ,CAAE,MAAO,UAAW,GAAI,EAAK,SAAU,CAAC,CAAI,EAAG,SAE7E,CACF,CACF,CAEJ,E,eCxEA,KAAM,GAAO,IAAM,CACjB,KAAM,GAAwB,aAAO,GAAqB,EACpD,CACJ,MAAO,EACP,UACA,SACE,cAAS,SACJ,KAAM,GAAsB,SAAS,EAC3C,CAAC,CAAqB,CAAC,EAE1B,MAAI,GACK,gBAAoB,WAAU,IAAK,EAGxC,EACK,gBAAoB,eAAc,CAAE,MAAO,sBAA0B,CAAE,EAG3E,WAAO,OAWV,gBAAoB,eAAc,KAC9B,EAAM,IAAI,CAAC,EAAM,IACjB,gBAAoB,EAAU,CAAE,IAAK,EAAO,KAAM,CAAK,CAAE,CAC1D,CACH,EAbE,gBAAoB,aAAY,CAC9B,QAAS,OACT,MAAO,sBACP,YAAa,kCAAwC,CACvD,CAWN,EAMa,EAAsB,CAAC,CAAE,WACpC,gBAAoB,UAAS,CAAE,UAAW,EAAK,EAC3C,gBAAoB,gBAAe,CAAE,MAAO,UAAS,OAAQ,EAC3D,gBAAoB,gBAAe,KAAM,uCAA4C,CACzF,EACE,gBAAoB,EAAM,IAAK,CACnC,C","file":"static/6828.b7c0dc48.chunk.js","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport { Button } from '@backstage/core-components';\nimport classNames from 'classnames';\nimport React from 'react';\n\n// TODO: Align styling between Domain and ToolCard\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 128,\n  },\n  mediaContain: {\n    backgroundSize: 'contain',\n  },\n  lifecycle: {\n    lineHeight: '0.8em',\n    color: 'white',\n  },\n  ga: {\n    backgroundColor: theme.palette.status.ok,\n  },\n  alpha: {\n    backgroundColor: theme.palette.status.error,\n  },\n  beta: {\n    backgroundColor: theme.palette.status.warning,\n  },\n}));\n\n\n\n\n\n\nexport const ToolCard = ({ card, objectFit }) => {\n  const classes = useStyles();\n\n  const { title, description, url, image, lifecycle, tags } = card;\n\n  return (\n    React.createElement(Card, { key: title,}\n      , React.createElement(CardMedia, {\n        image: image,\n        title: title,\n        className: classNames(classes.media, {\n          [classes.mediaContain]: objectFit === 'contain',\n        }),}\n      )\n      , React.createElement(CardContent, null\n        , React.createElement(Typography, { paragraph: true, variant: \"h5\",}\n          , title, ' '\n          , lifecycle && lifecycle.toLocaleLowerCase('en-US') !== 'ga' && (\n            React.createElement(Chip, {\n              size: \"small\",\n              label: lifecycle,\n              className: classNames(\n                classes.lifecycle,\n                classes[lifecycle.toLocaleLowerCase('en-US')],\n              ),}\n            )\n          )\n        )\n        , React.createElement(Typography, null, description || 'Description missing')\n        , tags && (\n          React.createElement(Box, { marginTop: 2,}\n            , tags.map((item, idx) => (\n              React.createElement(Chip, { size: \"small\", key: idx, label: item,} )\n            ))\n          )\n        )\n      )\n      , React.createElement(CardActions, null\n        , React.createElement(Button, { color: \"primary\", to: url, disabled: !url,}, \"Explore\"\n\n        )\n      )\n    )\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exploreToolsConfigRef } from '@backstage/plugin-explore-react';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { ToolCard } from '../ToolCard';\n\nimport {\n  Content,\n  ContentHeader,\n  EmptyState,\n  ItemCardGrid,\n  Progress,\n  SupportButton,\n  WarningPanel,\n} from '@backstage/core-components';\n\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst Body = () => {\n  const exploreToolsConfigApi = useApi(exploreToolsConfigRef);\n  const {\n    value: tools,\n    loading,\n    error,\n  } = useAsync(async () => {\n    return await exploreToolsConfigApi.getTools();\n  }, [exploreToolsConfigApi]);\n\n  if (loading) {\n    return React.createElement(Progress, null );\n  }\n\n  if (error) {\n    return React.createElement(WarningPanel, { title: \"Failed to load tools\"   ,} );\n  }\n\n  if (!tools?.length) {\n    return (\n      React.createElement(EmptyState, {\n        missing: \"info\",\n        title: \"No tools to display\"   ,\n        description: \"You haven't added any tools yet.\"     ,}\n      )\n    );\n  }\n\n  return (\n    React.createElement(ItemCardGrid, null\n      , tools.map((tool, index) => (\n        React.createElement(ToolCard, { key: index, card: tool,} )\n      ))\n    )\n  );\n};\n\n\n\n\n\nexport const ToolExplorerContent = ({ title }) => (\n  React.createElement(Content, { noPadding: true,}\n    , React.createElement(ContentHeader, { title: title ?? 'Tools',}\n      , React.createElement(SupportButton, null, \"Discover the tools in your ecosystem.\"     )\n    )\n    , React.createElement(Body, null )\n  )\n);\n"],"sourceRoot":""}