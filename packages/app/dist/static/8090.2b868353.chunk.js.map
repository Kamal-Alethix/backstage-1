{"version":3,"sources":["webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/todo/src/components/TodoList/TodoList.tsx"],"names":[],"mappings":"+NA8BA,KAAM,GAAY,GAEZ,EAAU,CACd,CACE,MAAO,MACP,MAAO,MACP,MAAO,MACP,UAAW,EACb,EACA,CACE,MAAO,OACP,MAAO,OACP,MAAO,MACP,UAAW,GACX,OAAQ,CAAC,CAAE,UAAW,gBAAoB,kBAAiB,CAAE,KAAM,CAAK,CAAE,CAC5E,EACA,CACE,MAAO,OACP,MAAO,eACP,MAAO,MACP,OAAQ,CAAC,CAAE,UAAS,kBAClB,EACE,gBAAoB,OAAM,CAAE,GAAI,EAAS,OAAQ,QAAS,EACtD,gBAAoB,kBAAiB,CAAE,KAAM,CAAa,CAAE,CAChE,EAEA,gBAAoB,kBAAiB,CAAE,KAAM,CAAa,CAAE,CAElE,EACA,CACE,MAAO,SACP,MAAO,SACP,MAAO,MACP,OAAQ,CAAC,CAAE,YAAa,gBAAoB,kBAAiB,CAAE,KAAM,CAAO,CAAE,CAChF,CACF,EAEa,EAAW,IAAM,CAC5B,KAAM,CAAE,UAAW,gBAAU,EACvB,EAAU,aAAO,GAAU,EAC3B,CAAC,EAAO,GAAY,eAAS,EAEnC,MAAI,GACK,gBAAoB,qBAAoB,CAAE,MAAO,CAAM,CAAE,EAIhE,gBAAoB,QAAO,CACzB,MAAO,QACP,QAAS,CACP,OAAQ,GACR,SAAU,EACV,QAAS,QACT,QAAS,GACT,UAAW,GACX,OAAQ,GACR,UAAW,GACX,iBAAkB,IAClB,gBAAiB,CAAE,QAAS,eAAgB,CAC9C,EACA,QAAS,EACT,KAAM,KAAM,IAAS,C,UACnB,GAAI,CACF,KAAM,GAAO,oBAAO,OAAP,OAAe,EACtB,EAAW,oBAAO,WAAP,OAAmB,EAC9B,EAAS,KAAM,GAAQ,UAAU,CACrC,SACA,OAAQ,EAAO,EACf,MAAO,EACP,QACE,kBAAO,UACN,CACC,MAAO,EAAM,QAAQ,MACrB,UAAW,EAAM,cACnB,EACF,QAAS,oBAAO,UAAP,cAAgB,IAAI,GAAW,EACtC,MAAO,EAAO,OAAO,MACrB,MAAO,IAAI,EAAO,QACpB,GACF,CAAC,EACD,MAAO,CACL,KAAM,EAAO,MACb,WAAY,EAAO,WACnB,KAAM,KAAK,MAAM,EAAO,OAAS,EAAO,KAAK,CAC/C,CACF,OAAS,EAAP,CACA,SAAS,CAAY,EACd,CAAE,KAAM,CAAC,EAAG,WAAY,EAAG,KAAM,CAAE,CAC5C,CACF,CAAE,CACJ,CAEJ,C","file":"static/8090.2b868353.chunk.js","sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport React, { useState } from 'react';\nimport { todoApiRef } from '../../api';\n\n\nimport {\n  Table,\n\n  OverflowTooltip,\n  Link,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst PAGE_SIZE = 10;\n\nconst columns = [\n  {\n    title: 'Tag',\n    field: 'tag',\n    width: '10%',\n    filtering: false,\n  },\n  {\n    title: 'Text',\n    field: 'text',\n    width: '55%',\n    highlight: true,\n    render: ({ text }) => React.createElement(OverflowTooltip, { text: text,} ),\n  },\n  {\n    title: 'File',\n    field: 'repoFilePath',\n    width: '25%',\n    render: ({ viewUrl, repoFilePath }) =>\n      viewUrl ? (\n        React.createElement(Link, { to: viewUrl, target: \"_blank\",}\n          , React.createElement(OverflowTooltip, { text: repoFilePath,} )\n        )\n      ) : (\n        React.createElement(OverflowTooltip, { text: repoFilePath,} )\n      ),\n  },\n  {\n    title: 'Author',\n    field: 'author',\n    width: '10%',\n    render: ({ author }) => React.createElement(OverflowTooltip, { text: author,} ),\n  },\n];\n\nexport const TodoList = () => {\n  const { entity } = useEntity();\n  const todoApi = useApi(todoApiRef);\n  const [error, setError] = useState();\n\n  if (error) {\n    return React.createElement(ResponseErrorPanel, { error: error,} );\n  }\n\n  return (\n    React.createElement(Table, {\n      title: \"TODOs\",\n      options: {\n        search: false,\n        pageSize: PAGE_SIZE,\n        padding: 'dense',\n        sorting: true,\n        draggable: false,\n        paging: true,\n        filtering: true,\n        debounceInterval: 500,\n        filterCellStyle: { padding: '0 16px 0 20px' },\n      },\n      columns: columns,\n      data: async query => {\n        try {\n          const page = query?.page ?? 0;\n          const pageSize = query?.pageSize ?? PAGE_SIZE;\n          const result = await todoApi.listTodos({\n            entity,\n            offset: page * pageSize,\n            limit: pageSize,\n            orderBy:\n              query?.orderBy &&\n              ({\n                field: query.orderBy.field,\n                direction: query.orderDirection,\n              } ),\n            filters: query?.filters?.map(filter => ({\n              field: filter.column.field,\n              value: `*${filter.value}*`,\n            })) ,\n          });\n          return {\n            data: result.items,\n            totalCount: result.totalCount,\n            page: Math.floor(result.offset / result.limit),\n          };\n        } catch (loadingError) {\n          setError(loadingError);\n          return { data: [], totalCount: 0, page: 0 };\n        }\n      },}\n    )\n  );\n};\n"],"sourceRoot":""}