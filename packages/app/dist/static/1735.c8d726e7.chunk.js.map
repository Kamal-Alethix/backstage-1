{"version":3,"sources":["webpack://example-app/../node_modules/@graphiql/react/dist/matchbrackets.es.js"],"names":[],"mappings":"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","file":"static/1735.c8d726e7.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar matchbrackets$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);\n    var Pos = CodeMirror.Pos;\n    var matching = { \"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\" };\n    function bracketRegex(config) {\n      return config && config.bracketRegex || /[(){}[\\]]/;\n    }\n    __name(bracketRegex, \"bracketRegex\");\n    function findMatchingBracket(cm, where, config) {\n      var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n      var afterCursor = config && config.afterCursor;\n      if (afterCursor == null)\n        afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);\n      var re = bracketRegex(config);\n      var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n      if (!match)\n        return null;\n      var dir = match.charAt(1) == \">\" ? 1 : -1;\n      if (config && config.strict && dir > 0 != (pos == where.ch))\n        return null;\n      var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n      var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n      if (found == null)\n        return null;\n      return {\n        from: Pos(where.line, pos),\n        to: found && found.pos,\n        match: found && found.ch == match.charAt(0),\n        forward: dir > 0\n      };\n    }\n    __name(findMatchingBracket, \"findMatchingBracket\");\n    function scanForBracket(cm, where, dir, style, config) {\n      var maxScanLen = config && config.maxScanLineLength || 1e4;\n      var maxScanLines = config && config.maxScanLines || 1e3;\n      var stack = [];\n      var re = bracketRegex(config);\n      var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n      for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n        var line = cm.getLine(lineNo);\n        if (!line)\n          continue;\n        var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n        if (line.length > maxScanLen)\n          continue;\n        if (lineNo == where.line)\n          pos = where.ch - (dir < 0 ? 1 : 0);\n        for (; pos != end; pos += dir) {\n          var ch = line.charAt(pos);\n          if (re.test(ch) && (style === void 0 || (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n            var match = matching[ch];\n            if (match && match.charAt(1) == \">\" == dir > 0)\n              stack.push(ch);\n            else if (!stack.length)\n              return { pos: Pos(lineNo, pos), ch };\n            else\n              stack.pop();\n          }\n        }\n      }\n      return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n    }\n    __name(scanForBracket, \"scanForBracket\");\n    function matchBrackets(cm, autoclear, config) {\n      var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1e3, highlightNonMatching = config && config.highlightNonMatching;\n      var marks = [], ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n        if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n          var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n          marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), { className: style }));\n          if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n            marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), { className: style }));\n        }\n      }\n      if (marks.length) {\n        if (ie_lt8 && cm.state.focused)\n          cm.focus();\n        var clear = /* @__PURE__ */ __name(function() {\n          cm.operation(function() {\n            for (var i2 = 0; i2 < marks.length; i2++)\n              marks[i2].clear();\n          });\n        }, \"clear\");\n        if (autoclear)\n          setTimeout(clear, 800);\n        else\n          return clear;\n      }\n    }\n    __name(matchBrackets, \"matchBrackets\");\n    function doMatchBrackets(cm) {\n      cm.operation(function() {\n        if (cm.state.matchBrackets.currentlyHighlighted) {\n          cm.state.matchBrackets.currentlyHighlighted();\n          cm.state.matchBrackets.currentlyHighlighted = null;\n        }\n        cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n      });\n    }\n    __name(doMatchBrackets, \"doMatchBrackets\");\n    function clearHighlighted(cm) {\n      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n    }\n    __name(clearHighlighted, \"clearHighlighted\");\n    CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.off(\"cursorActivity\", doMatchBrackets);\n        cm.off(\"focus\", doMatchBrackets);\n        cm.off(\"blur\", clearHighlighted);\n        clearHighlighted(cm);\n      }\n      if (val) {\n        cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n        cm.on(\"cursorActivity\", doMatchBrackets);\n        cm.on(\"focus\", doMatchBrackets);\n        cm.on(\"blur\", clearHighlighted);\n      }\n    });\n    CodeMirror.defineExtension(\"matchBrackets\", function() {\n      matchBrackets(this, true);\n    });\n    CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig) {\n      if (oldConfig || typeof config == \"boolean\") {\n        if (!oldConfig) {\n          config = config ? { strict: true } : null;\n        } else {\n          oldConfig.strict = config;\n          config = oldConfig;\n        }\n      }\n      return findMatchingBracket(this, pos, config);\n    });\n    CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config) {\n      return scanForBracket(this, pos, dir, style, config);\n    });\n  });\n})();\nvar matchbrackets = matchbrackets$2.exports;\nvar matchbrackets$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": matchbrackets\n}, [matchbrackets$2.exports]));\nexport { matchbrackets$2 as a, matchbrackets$1 as m };\n"],"sourceRoot":""}