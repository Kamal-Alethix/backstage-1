{"version":3,"sources":["webpack://example-app/../node_modules/@graphiql/react/dist/searchcursor.es.js"],"names":[],"mappings":"oMAAI,EAAY,OAAO,eACnB,EAAS,CAAC,EAAQ,IAAU,EAAU,EAAQ,OAAQ,CAAE,QAAO,aAAc,EAAK,CAAC,EAEvF,WAA0B,EAAG,EAAG,CAC9B,SAAE,QAAQ,SAAS,EAAG,CACpB,GAAK,MAAO,IAAM,UAAY,CAAC,MAAM,QAAQ,CAAC,GAAK,OAAO,KAAK,CAAC,EAAE,QAAQ,SAAS,EAAG,CACpF,GAAI,IAAM,WAAa,CAAE,KAAK,IAAI,CAChC,GAAI,GAAI,OAAO,yBAAyB,EAAG,CAAC,EAC5C,OAAO,eAAe,EAAG,EAAG,EAAE,IAAM,EAAI,CACtC,WAAY,GACZ,IAAK,UAAW,CACd,MAAO,GAAE,EACX,CACF,CAAC,CACH,CACF,CAAC,CACH,CAAC,EACM,OAAO,OAAO,CAAC,CACxB,CACA,EAAO,EAAkB,kBAAkB,EAC3C,GAAI,GAAiB,CAAE,QAAS,CAAC,CAAE,EAClC,UAAS,EAAQ,EAAS,CACxB,UAAS,EAAK,CACb,EAAI,WAAkB,CACxB,GAAG,SAAS,EAAY,CACtB,GAAI,GAAM,EAAW,IACrB,WAAqB,EAAQ,CAC3B,GAAI,GAAQ,EAAO,MACnB,MAAO,IAAS,KAAO,EAAS,GAAO,WAAa,IAAM,IAAO,GAAO,OAAS,IAAM,IAAO,GAAO,UAAY,IAAM,GACzH,CACA,EAAO,EAAa,aAAa,EACjC,WAAqB,EAAQ,EAAO,CAElC,OADI,GAAU,EAAY,CAAM,EAAG,EAAS,EACnC,EAAI,EAAG,EAAI,EAAM,OAAQ,IAC5B,EAAO,QAAQ,EAAM,OAAO,CAAC,CAAC,GAAK,IACrC,IAAU,EAAM,OAAO,CAAC,GAC5B,MAAO,IAAW,EAAS,EAAS,GAAI,QAAO,EAAO,OAAQ,CAAM,CACtE,CACA,EAAO,EAAa,aAAa,EACjC,WAAwB,EAAQ,CAC9B,MAAO,0BAA0B,KAAK,EAAO,MAAM,CACrD,CACA,EAAO,EAAgB,gBAAgB,EACvC,WAA6B,EAAK,EAAQ,EAAO,CAC/C,EAAS,EAAY,EAAQ,GAAG,EAChC,OAAS,GAAO,EAAM,KAAM,EAAK,EAAM,GAAI,EAAO,EAAI,SAAS,EAAG,GAAQ,EAAM,IAAQ,EAAK,EAAG,CAC9F,EAAO,UAAY,EACnB,GAAI,GAAS,EAAI,QAAQ,CAAI,EAAG,EAAQ,EAAO,KAAK,CAAM,EAC1D,GAAI,EACF,MAAO,CACL,KAAM,EAAI,EAAM,EAAM,KAAK,EAC3B,GAAI,EAAI,EAAM,EAAM,MAAQ,EAAM,GAAG,MAAM,EAC3C,OACF,CACJ,CACF,CACA,EAAO,EAAqB,qBAAqB,EACjD,WAAsC,EAAK,EAAQ,EAAO,CACxD,GAAI,CAAC,EAAe,CAAM,EACxB,MAAO,GAAoB,EAAK,EAAQ,CAAK,EAC/C,EAAS,EAAY,EAAQ,IAAI,EAEjC,OADI,GAAQ,EAAQ,EACX,EAAO,EAAM,KAAM,EAAO,EAAI,SAAS,EAAG,GAAQ,GAAQ,CACjE,OAAS,GAAI,EAAG,EAAI,GACd,IAAO,GADc,IAAK,CAG9B,GAAI,GAAU,EAAI,QAAQ,GAAM,EAChC,EAAS,GAAU,KAAO,EAAU,EAAS;AAAA,EAAO,CACtD,CACA,EAAQ,EAAQ,EAChB,EAAO,UAAY,EAAM,GACzB,GAAI,GAAQ,EAAO,KAAK,CAAM,EAC9B,GAAI,EAAO,CACT,GAAI,GAAS,EAAO,MAAM,EAAG,EAAM,KAAK,EAAE,MAAM;AAAA,CAAI,EAAG,EAAS,EAAM,GAAG,MAAM;AAAA,CAAI,EAC/E,EAAY,EAAM,KAAO,EAAO,OAAS,EAAG,EAAU,EAAO,EAAO,OAAS,GAAG,OACpF,MAAO,CACL,KAAM,EAAI,EAAW,CAAO,EAC5B,GAAI,EAAI,EAAY,EAAO,OAAS,EAAG,EAAO,QAAU,EAAI,EAAU,EAAO,GAAG,OAAS,EAAO,EAAO,OAAS,GAAG,MAAM,EACzH,OACF,CACF,CACF,CACF,CACA,EAAO,EAA8B,8BAA8B,EACnE,WAAqB,EAAQ,EAAQ,EAAW,CAE9C,OADI,GAAO,EAAO,EACX,GAAQ,EAAO,QAAQ,CAC5B,EAAO,UAAY,EACnB,GAAI,GAAW,EAAO,KAAK,CAAM,EACjC,GAAI,CAAC,EACH,MACF,GAAI,GAAM,EAAS,MAAQ,EAAS,GAAG,OACvC,GAAI,EAAM,EAAO,OAAS,EACxB,MACE,EAAC,GAAS,EAAM,EAAM,MAAQ,EAAM,GAAG,SACzC,GAAQ,GACV,EAAO,EAAS,MAAQ,CAC1B,CACA,MAAO,EACT,CACA,EAAO,EAAa,aAAa,EACjC,WAA8B,EAAK,EAAQ,EAAO,CAChD,EAAS,EAAY,EAAQ,GAAG,EAChC,OAAS,GAAO,EAAM,KAAM,EAAK,EAAM,GAAI,EAAQ,EAAI,UAAU,EAAG,GAAQ,EAAO,IAAQ,EAAK,GAAI,CAClG,GAAI,GAAS,EAAI,QAAQ,CAAI,EACzB,EAAQ,EAAY,EAAQ,EAAQ,EAAK,EAAI,EAAI,EAAO,OAAS,CAAE,EACvE,GAAI,EACF,MAAO,CACL,KAAM,EAAI,EAAM,EAAM,KAAK,EAC3B,GAAI,EAAI,EAAM,EAAM,MAAQ,EAAM,GAAG,MAAM,EAC3C,OACF,CACJ,CACF,CACA,EAAO,EAAsB,sBAAsB,EACnD,WAAuC,EAAK,EAAQ,EAAO,CACzD,GAAI,CAAC,EAAe,CAAM,EACxB,MAAO,GAAqB,EAAK,EAAQ,CAAK,EAChD,EAAS,EAAY,EAAQ,IAAI,EAEjC,OADI,GAAQ,EAAY,EAAG,EAAY,EAAI,QAAQ,EAAM,IAAI,EAAE,OAAS,EAAM,GACrE,EAAO,EAAM,KAAM,EAAQ,EAAI,UAAU,EAAG,GAAQ,GAAS,CACpE,OAAS,GAAI,EAAG,EAAI,GAAa,GAAQ,EAAO,IAAK,CACnD,GAAI,GAAU,EAAI,QAAQ,GAAM,EAChC,EAAS,GAAU,KAAO,EAAU,EAAU;AAAA,EAAO,CACvD,CACA,GAAa,EACb,GAAI,GAAQ,EAAY,EAAQ,EAAQ,CAAS,EACjD,GAAI,EAAO,CACT,GAAI,GAAS,EAAO,MAAM,EAAG,EAAM,KAAK,EAAE,MAAM;AAAA,CAAI,EAAG,EAAS,EAAM,GAAG,MAAM;AAAA,CAAI,EAC/E,EAAY,EAAO,EAAO,OAAQ,EAAU,EAAO,EAAO,OAAS,GAAG,OAC1E,MAAO,CACL,KAAM,EAAI,EAAW,CAAO,EAC5B,GAAI,EAAI,EAAY,EAAO,OAAS,EAAG,EAAO,QAAU,EAAI,EAAU,EAAO,GAAG,OAAS,EAAO,EAAO,OAAS,GAAG,MAAM,EACzH,OACF,CACF,CACF,CACF,CACA,EAAO,EAA+B,+BAA+B,EACrE,GAAI,GAAQ,EACR,OAAO,UAAU,UACnB,GAAyB,EAAO,SAAS,EAAK,CAC5C,MAAO,GAAI,UAAU,KAAK,EAAE,YAAY,CAC1C,EAAG,QAAQ,EACX,EAAyB,EAAO,SAAS,EAAK,CAC5C,MAAO,GAAI,UAAU,KAAK,CAC5B,EAAG,QAAQ,GAEX,GAAyB,EAAO,SAAS,EAAK,CAC5C,MAAO,GAAI,YAAY,CACzB,EAAG,QAAQ,EACX,EAAyB,EAAO,SAAS,EAAK,CAC5C,MAAO,EACT,EAAG,QAAQ,GAEb,WAAmB,EAAM,EAAQ,EAAK,EAAU,CAC9C,GAAI,EAAK,QAAU,EAAO,OACxB,MAAO,GACT,OAAS,GAAM,EAAG,EAAM,EAAM,KAAK,IAAI,EAAG,EAAK,OAAS,EAAO,MAAM,IAAO,CAC1E,GAAI,GAAO,EACT,MAAO,GACT,GAAI,GAAM,EAAM,GAAO,EACnB,EAAM,EAAS,EAAK,MAAM,EAAG,CAAG,CAAC,EAAE,OACvC,GAAI,GAAO,EACT,MAAO,GACA,EAAM,EACb,EAAM,EAEN,EAAM,EAAM,CAChB,CACF,CACA,EAAO,EAAW,WAAW,EAC7B,WAA6B,EAAK,EAAO,EAAO,EAAU,CACxD,GAAI,CAAC,EAAM,OACT,MAAO,MACT,GAAI,GAAO,EAAW,EAAS,EAC3B,EAAQ,EAAK,CAAK,EAAE,MAAM,UAAU,EACxC,EACE,OAAS,GAAO,EAAM,KAAM,EAAK,EAAM,GAAI,EAAO,EAAI,SAAS,EAAI,EAAI,EAAM,OAAQ,GAAQ,EAAM,IAAQ,EAAK,EAAG,CACjH,GAAI,GAAO,EAAI,QAAQ,CAAI,EAAE,MAAM,CAAE,EAAG,EAAS,EAAK,CAAI,EAC1D,GAAI,EAAM,QAAU,EAAG,CACrB,GAAI,GAAQ,EAAO,QAAQ,EAAM,EAAE,EACnC,GAAI,GAAS,GACX,WACF,GAAI,GAAQ,EAAU,EAAM,EAAQ,EAAO,CAAI,EAAI,EACnD,MAAO,CACL,KAAM,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAO,CAAI,EAAI,CAAE,EACzD,GAAI,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAQ,EAAM,GAAG,OAAQ,CAAI,EAAI,CAAE,CAC3E,CACF,KAAO,CACL,GAAI,GAAU,EAAO,OAAS,EAAM,GAAG,OACvC,GAAI,EAAO,MAAM,CAAO,GAAK,EAAM,GACjC,WACF,OAAS,GAAI,EAAG,EAAI,EAAM,OAAS,EAAG,IACpC,GAAI,EAAK,EAAI,QAAQ,EAAO,CAAC,CAAC,GAAK,EAAM,GACvC,WACJ,GAAI,GAAM,EAAI,QAAQ,EAAO,EAAM,OAAS,CAAC,EAAG,EAAY,EAAK,CAAG,EAAG,EAAW,EAAM,EAAM,OAAS,GACvG,GAAI,EAAU,MAAM,EAAG,EAAS,MAAM,GAAK,EACzC,WACF,MAAO,CACL,KAAM,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAS,CAAI,EAAI,CAAE,EAC3D,GAAI,EAAI,EAAO,EAAM,OAAS,EAAG,EAAU,EAAK,EAAW,EAAS,OAAQ,CAAI,CAAC,CACnF,CACF,CACF,CACJ,CACA,EAAO,EAAqB,qBAAqB,EACjD,WAA8B,EAAK,EAAO,EAAO,EAAU,CACzD,GAAI,CAAC,EAAM,OACT,MAAO,MACT,GAAI,GAAO,EAAW,EAAS,EAC3B,EAAQ,EAAK,CAAK,EAAE,MAAM,UAAU,EACxC,EACE,OAAS,GAAO,EAAM,KAAM,EAAK,EAAM,GAAI,EAAQ,EAAI,UAAU,EAAI,EAAI,EAAM,OAAQ,GAAQ,EAAO,IAAQ,EAAK,GAAI,CACrH,GAAI,GAAO,EAAI,QAAQ,CAAI,EACvB,EAAK,IACP,GAAO,EAAK,MAAM,EAAG,CAAE,GACzB,GAAI,GAAS,EAAK,CAAI,EACtB,GAAI,EAAM,QAAU,EAAG,CACrB,GAAI,GAAQ,EAAO,YAAY,EAAM,EAAE,EACvC,GAAI,GAAS,GACX,WACF,MAAO,CACL,KAAM,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAO,CAAI,CAAC,EACpD,GAAI,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAQ,EAAM,GAAG,OAAQ,CAAI,CAAC,CACtE,CACF,KAAO,CACL,GAAI,GAAW,EAAM,EAAM,OAAS,GACpC,GAAI,EAAO,MAAM,EAAG,EAAS,MAAM,GAAK,EACtC,WACF,OAAS,GAAI,EAAG,EAAQ,EAAO,EAAM,OAAS,EAAG,EAAI,EAAM,OAAS,EAAG,IACrE,GAAI,EAAK,EAAI,QAAQ,EAAQ,CAAC,CAAC,GAAK,EAAM,GACxC,WACJ,GAAI,GAAM,EAAI,QAAQ,EAAO,EAAI,EAAM,MAAM,EAAG,EAAY,EAAK,CAAG,EACpE,GAAI,EAAU,MAAM,EAAU,OAAS,EAAM,GAAG,MAAM,GAAK,EAAM,GAC/D,WACF,MAAO,CACL,KAAM,EAAI,EAAO,EAAI,EAAM,OAAQ,EAAU,EAAK,EAAW,EAAI,OAAS,EAAM,GAAG,OAAQ,CAAI,CAAC,EAChG,GAAI,EAAI,EAAM,EAAU,EAAM,EAAQ,EAAS,OAAQ,CAAI,CAAC,CAC9D,CACF,CACF,CACJ,CACA,EAAO,EAAsB,sBAAsB,EACnD,WAAsB,EAAK,EAAO,EAAK,EAAS,CAC9C,KAAK,aAAe,GACpB,KAAK,gBAAkB,GACvB,KAAK,IAAM,EACX,EAAM,EAAM,EAAI,QAAQ,CAAG,EAAI,EAAI,EAAG,CAAC,EACvC,KAAK,IAAM,CAAE,KAAM,EAAK,GAAI,CAAI,EAChC,GAAI,GACA,MAAO,IAAW,SACpB,EAAW,EAAQ,SAEnB,GAAW,EACX,EAAU,MAER,MAAO,IAAS,SACd,IAAY,MACd,GAAW,IACb,KAAK,QAAU,SAAS,EAAS,EAAM,CACrC,MAAQ,GAAU,EAAuB,GAAqB,EAAK,EAAO,EAAM,CAAQ,CAC1F,GAEA,GAAQ,EAAY,EAAO,IAAI,EAC3B,CAAC,GAAW,EAAQ,YAAc,GACpC,KAAK,QAAU,SAAS,EAAS,EAAM,CACrC,MAAQ,GAAU,EAAgC,GAA8B,EAAK,EAAO,CAAI,CAClG,EAEA,KAAK,QAAU,SAAS,EAAS,EAAM,CACrC,MAAQ,GAAU,EAAuB,GAAqB,EAAK,EAAO,CAAI,CAChF,EAEN,CACA,EAAO,EAAc,cAAc,EACnC,EAAa,UAAY,CACvB,SAAU,UAAW,CACnB,MAAO,MAAK,KAAK,EAAK,CACxB,EACA,aAAc,UAAW,CACvB,MAAO,MAAK,KAAK,EAAI,CACvB,EACA,KAAM,SAAS,EAAS,CACtB,GAAI,GAAO,KAAK,IAAI,QAAQ,EAAU,KAAK,IAAI,KAAO,KAAK,IAAI,EAAE,EACjE,GAAI,KAAK,iBAAmB,KAAK,cAC/B,GAAO,EAAI,EAAK,KAAM,EAAK,EAAE,EACzB,EACF,GAAK,KACD,EAAK,GAAK,GACZ,GAAK,OACL,EAAK,GAAM,MAAK,IAAI,QAAQ,EAAK,IAAI,GAAK,IAAI,SAGhD,GAAK,KACD,EAAK,GAAM,MAAK,IAAI,QAAQ,EAAK,IAAI,GAAK,IAAI,QAChD,GAAK,GAAK,EACV,EAAK,SAGL,EAAW,OAAO,EAAM,KAAK,IAAI,QAAQ,CAAI,CAAC,GAAK,GACrD,MAAO,MAAK,aAAe,GAG/B,GAAI,GAAS,KAAK,QAAQ,EAAS,CAAI,EAEvC,GADA,KAAK,gBAAkB,GAAU,EAAW,OAAO,EAAO,KAAM,EAAO,EAAE,GAAK,EAC1E,EACF,YAAK,IAAM,EACX,KAAK,aAAe,GACb,KAAK,IAAI,OAAS,GAEzB,GAAI,GAAM,EAAI,EAAU,KAAK,IAAI,UAAU,EAAI,KAAK,IAAI,SAAS,EAAI,EAAG,CAAC,EACzE,YAAK,IAAM,CAAE,KAAM,EAAK,GAAI,CAAI,EACzB,KAAK,aAAe,EAE/B,EACA,KAAM,UAAW,CACf,GAAI,KAAK,aACP,MAAO,MAAK,IAAI,IACpB,EACA,GAAI,UAAW,CACb,GAAI,KAAK,aACP,MAAO,MAAK,IAAI,EACpB,EACA,QAAS,SAAS,EAAS,EAAQ,CACjC,GAAI,EAAC,KAAK,aAEV,IAAI,GAAQ,EAAW,WAAW,CAAO,EACzC,KAAK,IAAI,aAAa,EAAO,KAAK,IAAI,KAAM,KAAK,IAAI,GAAI,CAAM,EAC/D,KAAK,IAAI,GAAK,EAAI,KAAK,IAAI,KAAK,KAAO,EAAM,OAAS,EAAG,EAAM,EAAM,OAAS,GAAG,OAAU,GAAM,QAAU,EAAI,KAAK,IAAI,KAAK,GAAK,EAAE,EACtI,CACF,EACA,EAAW,gBAAgB,kBAAmB,SAAS,EAAO,EAAK,EAAU,CAC3E,MAAO,IAAI,GAAa,KAAK,IAAK,EAAO,EAAK,CAAQ,CACxD,CAAC,EACD,EAAW,mBAAmB,kBAAmB,SAAS,EAAO,EAAK,EAAU,CAC9E,MAAO,IAAI,GAAa,KAAM,EAAO,EAAK,CAAQ,CACpD,CAAC,EACD,EAAW,gBAAgB,gBAAiB,SAAS,EAAO,EAAU,CAGpE,OAFI,GAAS,CAAC,EACV,EAAM,KAAK,gBAAgB,EAAO,KAAK,UAAU,MAAM,EAAG,CAAQ,EAC/D,EAAI,SAAS,GACd,IAAW,OAAO,EAAI,GAAG,EAAG,KAAK,UAAU,IAAI,CAAC,EAAI,IAExD,EAAO,KAAK,CAAE,OAAQ,EAAI,KAAK,EAAG,KAAM,EAAI,GAAG,CAAE,CAAC,EAEhD,EAAO,QACT,KAAK,cAAc,EAAQ,CAAC,CAChC,CAAC,CACH,CAAC,CACH,GAAG,EACH,GAAI,GAAe,EAAe,QAC9B,EAAiC,OAAO,OAAuB,EAAiB,CAClF,UAAW,KACX,CAAC,OAAO,aAAc,SACtB,QAAW,CACb,EAAG,CAAC,EAAe,OAAO,CAAC,CAAC,C","file":"static/6406.914c6621.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar searchcursor$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var Pos = CodeMirror.Pos;\n    function regexpFlags(regexp) {\n      var flags = regexp.flags;\n      return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n    }\n    __name(regexpFlags, \"regexpFlags\");\n    function ensureFlags(regexp, flags) {\n      var current = regexpFlags(regexp), target = current;\n      for (var i = 0; i < flags.length; i++)\n        if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n      return current == target ? regexp : new RegExp(regexp.source, target);\n    }\n    __name(ensureFlags, \"ensureFlags\");\n    function maybeMultiline(regexp) {\n      return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n    }\n    __name(maybeMultiline, \"maybeMultiline\");\n    function searchRegexpForward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n        regexp.lastIndex = ch;\n        var string = doc.getLine(line), match = regexp.exec(string);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpForward, \"searchRegexpForward\");\n    function searchRegexpForwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpForward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunk = 1;\n      for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n        for (var i = 0; i < chunk; i++) {\n          if (line > last)\n            break;\n          var curLine = doc.getLine(line++);\n          string = string == null ? curLine : string + \"\\n\" + curLine;\n        }\n        chunk = chunk * 2;\n        regexp.lastIndex = start.ch;\n        var match = regexp.exec(string);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpForwardMultiline, \"searchRegexpForwardMultiline\");\n    function lastMatchIn(string, regexp, endMargin) {\n      var match, from = 0;\n      while (from <= string.length) {\n        regexp.lastIndex = from;\n        var newMatch = regexp.exec(string);\n        if (!newMatch)\n          break;\n        var end = newMatch.index + newMatch[0].length;\n        if (end > string.length - endMargin)\n          break;\n        if (!match || end > match.index + match[0].length)\n          match = newMatch;\n        from = newMatch.index + 1;\n      }\n      return match;\n    }\n    __name(lastMatchIn, \"lastMatchIn\");\n    function searchRegexpBackward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n        var string = doc.getLine(line);\n        var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpBackward, \"searchRegexpBackward\");\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpBackward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n      for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n        for (var i = 0; i < chunkSize && line >= first; i++) {\n          var curLine = doc.getLine(line--);\n          string = string == null ? curLine : curLine + \"\\n\" + string;\n        }\n        chunkSize *= 2;\n        var match = lastMatchIn(string, regexp, endMargin);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = line + before.length, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpBackwardMultiline, \"searchRegexpBackwardMultiline\");\n    var doFold, noFold;\n    if (String.prototype.normalize) {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\").toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\");\n      }, \"noFold\");\n    } else {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str;\n      }, \"noFold\");\n    }\n    function adjustPos(orig, folded, pos, foldFunc) {\n      if (orig.length == folded.length)\n        return pos;\n      for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n        if (min == max)\n          return min;\n        var mid = min + max >> 1;\n        var len = foldFunc(orig.slice(0, mid)).length;\n        if (len == pos)\n          return mid;\n        else if (len > pos)\n          max = mid;\n        else\n          min = mid + 1;\n      }\n    }\n    __name(adjustPos, \"adjustPos\");\n    function searchStringForward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0])\n              continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i])\n                continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringForward, \"searchStringForward\");\n    function searchStringBackward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1)\n            orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine)\n              continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i])\n                continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0])\n              continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringBackward, \"searchStringBackward\");\n    function SearchCursor(doc, query, pos, options) {\n      this.atOccurrence = false;\n      this.afterEmptyMatch = false;\n      this.doc = doc;\n      pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n      this.pos = { from: pos, to: pos };\n      var caseFold;\n      if (typeof options == \"object\") {\n        caseFold = options.caseFold;\n      } else {\n        caseFold = options;\n        options = null;\n      }\n      if (typeof query == \"string\") {\n        if (caseFold == null)\n          caseFold = false;\n        this.matches = function(reverse, pos2) {\n          return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n        };\n      } else {\n        query = ensureFlags(query, \"gm\");\n        if (!options || options.multiline !== false)\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n          };\n        else\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n          };\n      }\n    }\n    __name(SearchCursor, \"SearchCursor\");\n    SearchCursor.prototype = {\n      findNext: function() {\n        return this.find(false);\n      },\n      findPrevious: function() {\n        return this.find(true);\n      },\n      find: function(reverse) {\n        var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n        if (this.afterEmptyMatch && this.atOccurrence) {\n          head = Pos(head.line, head.ch);\n          if (reverse) {\n            head.ch--;\n            if (head.ch < 0) {\n              head.line--;\n              head.ch = (this.doc.getLine(head.line) || \"\").length;\n            }\n          } else {\n            head.ch++;\n            if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n              head.ch = 0;\n              head.line++;\n            }\n          }\n          if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n            return this.atOccurrence = false;\n          }\n        }\n        var result = this.matches(reverse, head);\n        this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n        if (result) {\n          this.pos = result;\n          this.atOccurrence = true;\n          return this.pos.match || true;\n        } else {\n          var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n          this.pos = { from: end, to: end };\n          return this.atOccurrence = false;\n        }\n      },\n      from: function() {\n        if (this.atOccurrence)\n          return this.pos.from;\n      },\n      to: function() {\n        if (this.atOccurrence)\n          return this.pos.to;\n      },\n      replace: function(newText, origin) {\n        if (!this.atOccurrence)\n          return;\n        var lines = CodeMirror.splitLines(newText);\n        this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n        this.pos.to = Pos(this.pos.from.line + lines.length - 1, lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n      }\n    };\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this.doc, query, pos, caseFold);\n    });\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this, query, pos, caseFold);\n    });\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n      var ranges = [];\n      var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n      while (cur.findNext()) {\n        if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0)\n          break;\n        ranges.push({ anchor: cur.from(), head: cur.to() });\n      }\n      if (ranges.length)\n        this.setSelections(ranges, 0);\n    });\n  });\n})();\nvar searchcursor = searchcursor$2.exports;\nvar searchcursor$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": searchcursor\n}, [searchcursor$2.exports]));\nexport { searchcursor$2 as a, searchcursor$1 as s };\n"],"sourceRoot":""}