{"version":3,"sources":["webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/badges/src/components/EntityBadgesDialog.tsx"],"names":[],"mappings":"sVA4CO,KAAM,GAAqB,CAAC,CAAE,OAAM,aAAc,CACvD,KAAM,GAAQ,QAAS,EACjB,CAAE,UAAW,qBAAe,EAC5B,EAAa,QAAc,EAAM,YAAY,KAAK,IAAI,CAAC,EACvD,EAAY,aAAO,GAAY,EAE/B,CACJ,MAAO,EACP,UACA,SACE,cAAS,SACP,GAAQ,EACH,KAAM,GAAU,oBAAoB,CAAM,EAE5C,CAAC,EACP,CAAC,EAAW,EAAQ,CAAI,CAAC,EAEtB,EAAW,IAAU,CAAC,GAAG,IAC7B,CAAC,CAAE,MAAO,CAAE,eAAe,KAAI,MAAK,cAClC,gBAAoB,IAAK,CAAE,UAAW,EAAG,IAAK,CAAG,EAC7C,gBAAoB,IAAmB,CAAE,UAAW,KAAM,EACxD,gBAAoB,MAAO,CAAE,IAAK,GAAe,EAAI,IAAK,CAAI,CAAE,EAChE,gBAAoB,cAAa,CAAE,SAAU,WAAY,KAAM,EAAU,mBAAoB,EAAK,CAAE,CACxG,CACF,CAEJ,EAEA,MACE,iBAAoB,IAAQ,CAAE,WAAY,EAAY,KAAM,EAAM,QAAS,CAAQ,EAC/E,gBAAoB,IAAa,KAAM,eAAgB,EACvD,gBAAoB,IAAe,KACjC,gBAAoB,IAAmB,KAAM,6HAG/C,EAEE,GAAW,gBAAoB,WAAU,IAAK,EAC9C,GAAS,gBAAoB,qBAAoB,CAAE,MAAO,CAAM,CAAE,EAElE,CACJ,EAEE,gBAAoB,IAAe,KACjC,gBAAoB,IAAQ,CAAE,QAAS,EAAS,MAAO,SAAU,EAAG,OAEtE,CACF,CACF,CAEJ,C","file":"static/4285.5fceb091.chunk.js","sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useAsyncEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { badgesApiRef } from '../api';\n\nimport {\n  CodeSnippet,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\n\n\n\n\n\nexport const EntityBadgesDialog = ({ open, onClose }) => {\n  const theme = useTheme();\n  const { entity } = useAsyncEntity();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const badgesApi = useApi(badgesApiRef);\n\n  const {\n    value: badges,\n    loading,\n    error,\n  } = useAsync(async () => {\n    if (open && entity) {\n      return await badgesApi.getEntityBadgeSpecs(entity);\n    }\n    return [];\n  }, [badgesApi, entity, open]);\n\n  const content = (badges || []).map(\n    ({ badge: { description }, id, url, markdown }) => (\n      React.createElement(Box, { marginTop: 4, key: id,}\n        , React.createElement(DialogContentText, { component: \"div\",}\n          , React.createElement('img', { alt: description || id, src: url,} )\n          , React.createElement(CodeSnippet, { language: \"markdown\", text: markdown, showCopyCodeButton: true,} )\n        )\n      )\n    ),\n  );\n\n  return (\n    React.createElement(Dialog, { fullScreen: fullScreen, open: open, onClose: onClose,}\n      , React.createElement(DialogTitle, null, \"Entity Badges\" )\n      , React.createElement(DialogContent, null\n        , React.createElement(DialogContentText, null, \"Embed badges in other web sites that link back to this entity. Copy the relevant snippet of Markdown code to use the badge.\"\n\n\n        )\n\n        , loading && React.createElement(Progress, null )\n        , error && React.createElement(ResponseErrorPanel, { error: error,} )\n\n        , content\n      )\n\n      , React.createElement(DialogActions, null\n        , React.createElement(Button, { onClick: onClose, color: \"primary\",}, \"Close\"\n\n        )\n      )\n    )\n  );\n};\n"],"sourceRoot":""}