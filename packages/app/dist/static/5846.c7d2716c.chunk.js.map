{"version":3,"sources":["webpack://example-app/../node_modules/@roadiehq/backstage-plugin-github-pull-requests/node_modules/@backstage/plugin-home/dist/esm/index-8282634e.esm.js"],"names":[],"mappings":"iUASA,KAAM,GAAU,IAAM,CACpB,GAAI,GACJ,KAAM,GAAa,SAAO,IAAa,EACjC,EAAqB,SAAY,IAAc,EAC/C,CAAE,kBAAiB,uBAAwB,SAAmB,EAC9D,EAAW,cAAS,SAAY,CACpC,GAAI,CAAC,EAAgB,KACnB,MAAO,CAAC,EAEV,KAAM,GAAS,CAAC,GAAG,CAAe,EAAE,IAAK,GAAQ,SAAe,CAAG,CAAC,EAAE,IAAK,GAAS,EAClF,KAAM,EAAI,KACV,qBAAsB,EAAI,UAC1B,gBAAiB,EAAI,IACvB,EAAE,EACF,MAAQ,MAAM,GAAW,YAAY,CACnC,SACA,OAAQ,CACN,OACA,qBACA,gBACA,gBACF,CACF,CAAC,GAAG,KACN,EAAG,CAAC,EAAY,CAAe,CAAC,EAChC,MAAI,GAAgB,OAAS,EACJ,gBAAoB,IAAY,CACrD,QAAS,OACX,EAAG,2CAA2C,EAC5C,EAAS,QACY,gBAAoB,KAAU,IAAI,EAEpD,EAAS,MAAwB,gBAAoB,KAAoB,CAC9E,MAAO,EAAS,KAClB,CAAC,EAAoB,gBAAoB,IAAM,KAAO,GAAK,EAAS,QAAU,KAAO,OAAS,EAAG,KAAK,CAAC,EAAG,IAAM,CAC9G,GAAI,GAAK,EACT,MAAS,IAAM,EAAE,SAAS,QAAU,KAAO,EAAM,EAAE,SAAS,MAAM,cAAe,GAAK,EAAE,SAAS,QAAU,KAAO,EAAK,EAAE,SAAS,IAAI,CACxI,CAAC,EAAE,IAAK,GAAW,CACjB,GAAI,GACJ,MAAuB,iBAAoB,IAAU,CACnD,IAAK,SAAmB,CAAM,CAChC,EAAmB,gBAAoB,KAAM,CAC3C,GAAI,EAAmB,SAAkB,CAAM,CAAC,CAClD,EAAmB,gBAAoB,IAAc,CACnD,QAAU,GAAM,EAAO,SAAS,QAAU,KAAO,EAAM,EAAO,SAAS,IACzE,CAAC,CAAC,EAAmB,gBAAoB,IAAyB,KAAsB,gBAAoB,KAAS,CACnH,MAAO,qBACT,EAAmB,gBAAoB,IAAY,CACjD,KAAM,MACN,aAAc,SACd,QAAS,IAAM,EAAoB,CAAM,CAC3C,EAAmB,gBAAoB,IAAU,CAC/C,MAAO,CAAE,MAAO,SAAU,CAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CACP,CAAC,CAAC,CACJ,C","file":"static/5846.c7d2716c.chunk.js","sourcesContent":["import { catalogApiRef, entityRouteRef, useStarredEntities, entityRouteParams } from '@backstage/plugin-catalog-react';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { Progress, ResponseErrorPanel, Link } from '@backstage/core-components';\nimport { Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, IconButton } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst Content = () => {\n  var _a;\n  const catalogApi = useApi(catalogApiRef);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const { starredEntities, toggleStarredEntity } = useStarredEntities();\n  const entities = useAsync(async () => {\n    if (!starredEntities.size) {\n      return [];\n    }\n    const filter = [...starredEntities].map((ent) => parseEntityRef(ent)).map((ref) => ({\n      kind: ref.kind,\n      \"metadata.namespace\": ref.namespace,\n      \"metadata.name\": ref.name\n    }));\n    return (await catalogApi.getEntities({\n      filter,\n      fields: [\n        \"kind\",\n        \"metadata.namespace\",\n        \"metadata.name\",\n        \"metadata.title\"\n      ]\n    })).items;\n  }, [catalogApi, starredEntities]);\n  if (starredEntities.size === 0)\n    return /* @__PURE__ */ React.createElement(Typography, {\n      variant: \"body1\"\n    }, \"You do not have any starred entities yet!\");\n  if (entities.loading) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  }\n  return entities.error ? /* @__PURE__ */ React.createElement(ResponseErrorPanel, {\n    error: entities.error\n  }) : /* @__PURE__ */ React.createElement(List, null, (_a = entities.value) == null ? void 0 : _a.sort((a, b) => {\n    var _a2, _b;\n    return ((_a2 = a.metadata.title) != null ? _a2 : a.metadata.name).localeCompare((_b = b.metadata.title) != null ? _b : b.metadata.name);\n  }).map((entity) => {\n    var _a2;\n    return /* @__PURE__ */ React.createElement(ListItem, {\n      key: stringifyEntityRef(entity)\n    }, /* @__PURE__ */ React.createElement(Link, {\n      to: catalogEntityRoute(entityRouteParams(entity))\n    }, /* @__PURE__ */ React.createElement(ListItemText, {\n      primary: (_a2 = entity.metadata.title) != null ? _a2 : entity.metadata.name\n    })), /* @__PURE__ */ React.createElement(ListItemSecondaryAction, null, /* @__PURE__ */ React.createElement(Tooltip, {\n      title: \"Remove from starred\"\n    }, /* @__PURE__ */ React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"unstar\",\n      onClick: () => toggleStarredEntity(entity)\n    }, /* @__PURE__ */ React.createElement(StarIcon, {\n      style: { color: \"#f3ba37\" }\n    })))));\n  }));\n};\n\nexport { Content };\n//# sourceMappingURL=index-8282634e.esm.js.map\n"],"sourceRoot":""}