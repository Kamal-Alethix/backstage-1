{"version":3,"sources":["webpack://example-app/../node_modules/@graphiql/react/dist/foldgutter.es.js"],"names":[],"mappings":"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","file":"static/5643.13c2c586.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar foldgutter$2 = { exports: {} };\nvar foldcode = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    function doFold(cm, pos, options, force) {\n      if (options && options.call) {\n        var finder = options;\n        options = null;\n      } else {\n        var finder = getOption(cm, options, \"rangeFinder\");\n      }\n      if (typeof pos == \"number\")\n        pos = CodeMirror.Pos(pos, 0);\n      var minSize = getOption(cm, options, \"minFoldSize\");\n      function getRange(allowFolded) {\n        var range2 = finder(cm, pos);\n        if (!range2 || range2.to.line - range2.from.line < minSize)\n          return null;\n        if (force === \"fold\")\n          return range2;\n        var marks = cm.findMarksAt(range2.from);\n        for (var i = 0; i < marks.length; ++i) {\n          if (marks[i].__isFold) {\n            if (!allowFolded)\n              return null;\n            range2.cleared = true;\n            marks[i].clear();\n          }\n        }\n        return range2;\n      }\n      __name(getRange, \"getRange\");\n      var range = getRange(true);\n      if (getOption(cm, options, \"scanUp\"))\n        while (!range && pos.line > cm.firstLine()) {\n          pos = CodeMirror.Pos(pos.line - 1, 0);\n          range = getRange(false);\n        }\n      if (!range || range.cleared || force === \"unfold\")\n        return;\n      var myWidget = makeWidget(cm, options, range);\n      CodeMirror.on(myWidget, \"mousedown\", function(e) {\n        myRange.clear();\n        CodeMirror.e_preventDefault(e);\n      });\n      var myRange = cm.markText(range.from, range.to, {\n        replacedWith: myWidget,\n        clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n        __isFold: true\n      });\n      myRange.on(\"clear\", function(from, to) {\n        CodeMirror.signal(cm, \"unfold\", cm, from, to);\n      });\n      CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n    }\n    __name(doFold, \"doFold\");\n    function makeWidget(cm, options, range) {\n      var widget = getOption(cm, options, \"widget\");\n      if (typeof widget == \"function\") {\n        widget = widget(range.from, range.to);\n      }\n      if (typeof widget == \"string\") {\n        var text = document.createTextNode(widget);\n        widget = document.createElement(\"span\");\n        widget.appendChild(text);\n        widget.className = \"CodeMirror-foldmarker\";\n      } else if (widget) {\n        widget = widget.cloneNode(true);\n      }\n      return widget;\n    }\n    __name(makeWidget, \"makeWidget\");\n    CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n      return function(cm, pos) {\n        doFold(cm, pos, { rangeFinder, widget });\n      };\n    };\n    CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n      doFold(this, pos, options, force);\n    });\n    CodeMirror.defineExtension(\"isFolded\", function(pos) {\n      var marks = this.findMarksAt(pos);\n      for (var i = 0; i < marks.length; ++i)\n        if (marks[i].__isFold)\n          return true;\n    });\n    CodeMirror.commands.toggleFold = function(cm) {\n      cm.foldCode(cm.getCursor());\n    };\n    CodeMirror.commands.fold = function(cm) {\n      cm.foldCode(cm.getCursor(), null, \"fold\");\n    };\n    CodeMirror.commands.unfold = function(cm) {\n      cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n    };\n    CodeMirror.commands.foldAll = function(cm) {\n      cm.operation(function() {\n        for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n          cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n      });\n    };\n    CodeMirror.commands.unfoldAll = function(cm) {\n      cm.operation(function() {\n        for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n          cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n      });\n    };\n    CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n      var funcs = Array.prototype.slice.call(arguments, 0);\n      return function(cm, start) {\n        for (var i = 0; i < funcs.length; ++i) {\n          var found = funcs[i](cm, start);\n          if (found)\n            return found;\n        }\n      };\n    });\n    CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n      var helpers = cm.getHelpers(start, \"fold\");\n      for (var i = 0; i < helpers.length; i++) {\n        var cur = helpers[i](cm, start);\n        if (cur)\n          return cur;\n      }\n    });\n    var defaultOptions = {\n      rangeFinder: CodeMirror.fold.auto,\n      widget: \"\\u2194\",\n      minFoldSize: 0,\n      scanUp: false,\n      clearOnEnter: true\n    };\n    CodeMirror.defineOption(\"foldOptions\", null);\n    function getOption(cm, options, name) {\n      if (options && options[name] !== void 0)\n        return options[name];\n      var editorOptions = cm.options.foldOptions;\n      if (editorOptions && editorOptions[name] !== void 0)\n        return editorOptions[name];\n      return defaultOptions[name];\n    }\n    __name(getOption, \"getOption\");\n    CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n      return getOption(this, options, name);\n    });\n  });\n})();\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports, foldcode.exports);\n  })(function(CodeMirror) {\n    CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.clearGutter(cm.state.foldGutter.options.gutter);\n        cm.state.foldGutter = null;\n        cm.off(\"gutterClick\", onGutterClick);\n        cm.off(\"changes\", onChange);\n        cm.off(\"viewportChange\", onViewportChange);\n        cm.off(\"fold\", onFold);\n        cm.off(\"unfold\", onFold);\n        cm.off(\"swapDoc\", onChange);\n      }\n      if (val) {\n        cm.state.foldGutter = new State(parseOptions(val));\n        updateInViewport(cm);\n        cm.on(\"gutterClick\", onGutterClick);\n        cm.on(\"changes\", onChange);\n        cm.on(\"viewportChange\", onViewportChange);\n        cm.on(\"fold\", onFold);\n        cm.on(\"unfold\", onFold);\n        cm.on(\"swapDoc\", onChange);\n      }\n    });\n    var Pos = CodeMirror.Pos;\n    function State(options) {\n      this.options = options;\n      this.from = this.to = 0;\n    }\n    __name(State, \"State\");\n    function parseOptions(opts) {\n      if (opts === true)\n        opts = {};\n      if (opts.gutter == null)\n        opts.gutter = \"CodeMirror-foldgutter\";\n      if (opts.indicatorOpen == null)\n        opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n      if (opts.indicatorFolded == null)\n        opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n      return opts;\n    }\n    __name(parseOptions, \"parseOptions\");\n    function isFolded(cm, line) {\n      var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          var fromPos = marks[i].find(-1);\n          if (fromPos && fromPos.line === line)\n            return marks[i];\n        }\n      }\n    }\n    __name(isFolded, \"isFolded\");\n    function marker(spec) {\n      if (typeof spec == \"string\") {\n        var elt = document.createElement(\"div\");\n        elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n        return elt;\n      } else {\n        return spec.cloneNode(true);\n      }\n    }\n    __name(marker, \"marker\");\n    function updateFoldInfo(cm, from, to) {\n      var opts = cm.state.foldGutter.options, cur = from - 1;\n      var minSize = cm.foldOption(opts, \"minFoldSize\");\n      var func = cm.foldOption(opts, \"rangeFinder\");\n      var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n      var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n      cm.eachLine(from, to, function(line) {\n        ++cur;\n        var mark = null;\n        var old = line.gutterMarkers;\n        if (old)\n          old = old[opts.gutter];\n        if (isFolded(cm, cur)) {\n          if (clsFolded && old && clsFolded.test(old.className))\n            return;\n          mark = marker(opts.indicatorFolded);\n        } else {\n          var pos = Pos(cur, 0);\n          var range = func && func(cm, pos);\n          if (range && range.to.line - range.from.line >= minSize) {\n            if (clsOpen && old && clsOpen.test(old.className))\n              return;\n            mark = marker(opts.indicatorOpen);\n          }\n        }\n        if (!mark && !old)\n          return;\n        cm.setGutterMarker(line, opts.gutter, mark);\n      });\n    }\n    __name(updateFoldInfo, \"updateFoldInfo\");\n    function classTest(cls) {\n      return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\");\n    }\n    __name(classTest, \"classTest\");\n    function updateInViewport(cm) {\n      var vp = cm.getViewport(), state = cm.state.foldGutter;\n      if (!state)\n        return;\n      cm.operation(function() {\n        updateFoldInfo(cm, vp.from, vp.to);\n      });\n      state.from = vp.from;\n      state.to = vp.to;\n    }\n    __name(updateInViewport, \"updateInViewport\");\n    function onGutterClick(cm, line, gutter) {\n      var state = cm.state.foldGutter;\n      if (!state)\n        return;\n      var opts = state.options;\n      if (gutter != opts.gutter)\n        return;\n      var folded = isFolded(cm, line);\n      if (folded)\n        folded.clear();\n      else\n        cm.foldCode(Pos(line, 0), opts);\n    }\n    __name(onGutterClick, \"onGutterClick\");\n    function onChange(cm) {\n      var state = cm.state.foldGutter;\n      if (!state)\n        return;\n      var opts = state.options;\n      state.from = state.to = 0;\n      clearTimeout(state.changeUpdate);\n      state.changeUpdate = setTimeout(function() {\n        updateInViewport(cm);\n      }, opts.foldOnChangeTimeSpan || 600);\n    }\n    __name(onChange, \"onChange\");\n    function onViewportChange(cm) {\n      var state = cm.state.foldGutter;\n      if (!state)\n        return;\n      var opts = state.options;\n      clearTimeout(state.changeUpdate);\n      state.changeUpdate = setTimeout(function() {\n        var vp = cm.getViewport();\n        if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n          updateInViewport(cm);\n        } else {\n          cm.operation(function() {\n            if (vp.from < state.from) {\n              updateFoldInfo(cm, vp.from, state.from);\n              state.from = vp.from;\n            }\n            if (vp.to > state.to) {\n              updateFoldInfo(cm, state.to, vp.to);\n              state.to = vp.to;\n            }\n          });\n        }\n      }, opts.updateViewportTimeSpan || 400);\n    }\n    __name(onViewportChange, \"onViewportChange\");\n    function onFold(cm, from) {\n      var state = cm.state.foldGutter;\n      if (!state)\n        return;\n      var line = from.line;\n      if (line >= state.from && line < state.to)\n        updateFoldInfo(cm, line, line + 1);\n    }\n    __name(onFold, \"onFold\");\n  });\n})();\nvar foldgutter = foldgutter$2.exports;\nvar foldgutter$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": foldgutter\n}, [foldgutter$2.exports]));\nexport { foldgutter$1 as f };\n"],"sourceRoot":""}