{"version":3,"sources":["webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/home/src/homePageComponents/StarredEntities/Content.tsx"],"names":[],"mappings":"gUA2CO,KAAM,GAAU,IAAM,C,MAC3B,KAAM,GAAa,aAAO,eAAa,EACjC,EAAqB,kBAAY,gBAAc,EAC/C,CAAE,kBAAiB,uBAAwB,yBAAmB,EAG9D,EAAW,cAAS,SAAY,CACpC,GAAI,CAAC,EAAgB,KACnB,MAAO,CAAC,EAGV,KAAM,GAAS,CAAC,GAAG,CAAe,EAC/B,IAAI,GAAO,SAAe,CAAG,CAAC,EAC9B,IAAI,GAAQ,EACX,KAAM,EAAI,KACV,qBAAsB,EAAI,UAC1B,gBAAiB,EAAI,IACvB,EAAE,EAEJ,MACE,MAAM,GAAW,YAAY,CAC3B,SACA,OAAQ,CACN,OACA,qBACA,gBACA,gBACF,CACF,CAAC,GACD,KACJ,EAAG,CAAC,EAAY,CAAe,CAAC,EAEhC,MAAI,GAAgB,OAAS,EAEzB,gBAAoB,IAAY,CAAE,QAAS,OAAQ,EAAG,2CAEtD,EAGA,EAAS,QACJ,gBAAoB,WAAU,IAAK,EAGrC,EAAS,MACd,gBAAoB,qBAAoB,CAAE,MAAO,EAAS,KAAM,CAAE,EAElE,gBAAoB,IAAM,KACtB,KAAS,QAAT,cACE,KAAK,CAAC,EAAG,IAAG,C,QACX,YAAE,SAAS,QAAX,OAAoB,EAAE,SAAS,MAAM,cACpC,KAAE,SAAS,QAAX,OAAoB,EAAE,SAAS,IACjC,IAED,IAAI,GAAO,C,MACV,uBAAoB,IAAU,CAAE,IAAK,SAAmB,CAAM,CAAE,EAC5D,gBAAoB,OAAM,CAAE,GAAI,EAAmB,wBAAkB,CAAM,CAAC,CAAE,EAC5E,gBAAoB,IAAc,CAClC,QAAS,KAAO,SAAS,QAAhB,OAAyB,EAAO,SAAS,IAAK,CACzD,CACF,EACE,gBAAoB,IAAyB,KAC3C,gBAAoB,KAAS,CAAE,MAAO,qBAAwB,EAC5D,gBAAoB,IAAY,CAChC,KAAM,MACN,aAAc,SACd,QAAS,IAAM,EAAoB,CAAM,CAAE,EAEzC,gBAAoB,IAAU,CAAE,MAAO,CAAE,MAAO,SAAU,CAAE,CAAE,CAClE,CACF,CACF,CACF,GAEN,CAEJ,C","file":"static/1520.1dc7d2cd.chunk.js","sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  catalogApiRef,\n  useStarredEntities,\n  entityRouteParams,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { Link, Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\n/**\n * A component to display a list of starred entities for the user.\n *\n * @public\n */\nexport const Content = () => {\n  const catalogApi = useApi(catalogApiRef);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const { starredEntities, toggleStarredEntity } = useStarredEntities();\n\n  // Grab starred entities from catalog to ensure they still exist and also retrieve display titles\n  const entities = useAsync(async () => {\n    if (!starredEntities.size) {\n      return [];\n    }\n\n    const filter = [...starredEntities]\n      .map(ent => parseEntityRef(ent))\n      .map(ref => ({\n        kind: ref.kind,\n        'metadata.namespace': ref.namespace,\n        'metadata.name': ref.name,\n      }));\n\n    return (\n      await catalogApi.getEntities({\n        filter,\n        fields: [\n          'kind',\n          'metadata.namespace',\n          'metadata.name',\n          'metadata.title',\n        ],\n      })\n    ).items;\n  }, [catalogApi, starredEntities]);\n\n  if (starredEntities.size === 0)\n    return (\n      React.createElement(Typography, { variant: \"body1\",}, \"You do not have any starred entities yet!\"\n\n      )\n    );\n\n  if (entities.loading) {\n    return React.createElement(Progress, null );\n  }\n\n  return entities.error ? (\n    React.createElement(ResponseErrorPanel, { error: entities.error,} )\n  ) : (\n    React.createElement(List, null\n      , entities.value\n        ?.sort((a, b) =>\n          (a.metadata.title ?? a.metadata.name).localeCompare(\n            b.metadata.title ?? b.metadata.name,\n          ),\n        )\n        .map(entity => (\n          React.createElement(ListItem, { key: stringifyEntityRef(entity),}\n            , React.createElement(Link, { to: catalogEntityRoute(entityRouteParams(entity)),}\n              , React.createElement(ListItemText, {\n                primary: entity.metadata.title ?? entity.metadata.name,}\n              )\n            )\n            , React.createElement(ListItemSecondaryAction, null\n              , React.createElement(Tooltip, { title: \"Remove from starred\"  ,}\n                , React.createElement(IconButton, {\n                  edge: \"end\",\n                  'aria-label': \"unstar\",\n                  onClick: () => toggleStarredEntity(entity),}\n                \n                  , React.createElement(StarIcon, { style: { color: '#f3ba37' },} )\n                )\n              )\n            )\n          )\n        ))\n    )\n  );\n};\n"],"sourceRoot":""}