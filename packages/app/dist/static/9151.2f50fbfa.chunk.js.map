{"version":3,"sources":["webpack://example-app/../node_modules/@graphiql/react/dist/lint.es2.js"],"names":[],"mappings":"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","file":"static/9151.2f50fbfa.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { GraphQLNonNull, GraphQLList, GraphQLInputObjectType, GraphQLEnumType, GraphQLScalarType } from \"graphql\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction jsonParse(str) {\n  string = str;\n  strLen = str.length;\n  start = end = lastEnd = -1;\n  ch();\n  lex();\n  const ast = parseObj();\n  expect(\"EOF\");\n  return ast;\n}\n__name(jsonParse, \"jsonParse\");\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n  const nodeStart = start;\n  const members = [];\n  expect(\"{\");\n  if (!skip(\"}\")) {\n    do {\n      members.push(parseMember());\n    } while (skip(\",\"));\n    expect(\"}\");\n  }\n  return {\n    kind: \"Object\",\n    start: nodeStart,\n    end: lastEnd,\n    members\n  };\n}\n__name(parseObj, \"parseObj\");\nfunction parseMember() {\n  const nodeStart = start;\n  const key = kind === \"String\" ? curToken() : null;\n  expect(\"String\");\n  expect(\":\");\n  const value = parseVal();\n  return {\n    kind: \"Member\",\n    start: nodeStart,\n    end: lastEnd,\n    key,\n    value\n  };\n}\n__name(parseMember, \"parseMember\");\nfunction parseArr() {\n  const nodeStart = start;\n  const values = [];\n  expect(\"[\");\n  if (!skip(\"]\")) {\n    do {\n      values.push(parseVal());\n    } while (skip(\",\"));\n    expect(\"]\");\n  }\n  return {\n    kind: \"Array\",\n    start: nodeStart,\n    end: lastEnd,\n    values\n  };\n}\n__name(parseArr, \"parseArr\");\nfunction parseVal() {\n  switch (kind) {\n    case \"[\":\n      return parseArr();\n    case \"{\":\n      return parseObj();\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Null\":\n      const token = curToken();\n      lex();\n      return token;\n  }\n  expect(\"Value\");\n}\n__name(parseVal, \"parseVal\");\nfunction curToken() {\n  return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\n__name(curToken, \"curToken\");\nfunction expect(str) {\n  if (kind === str) {\n    lex();\n    return;\n  }\n  let found;\n  if (kind === \"EOF\") {\n    found = \"[end of file]\";\n  } else if (end - start > 1) {\n    found = \"`\" + string.slice(start, end) + \"`\";\n  } else {\n    const match = string.slice(start).match(/^.+?\\b/);\n    found = \"`\" + (match ? match[0] : string[start]) + \"`\";\n  }\n  throw syntaxError(`Expected ${str} but found ${found}.`);\n}\n__name(expect, \"expect\");\nfunction syntaxError(message) {\n  return { message, start, end };\n}\n__name(syntaxError, \"syntaxError\");\nfunction skip(k) {\n  if (kind === k) {\n    lex();\n    return true;\n  }\n}\n__name(skip, \"skip\");\nfunction ch() {\n  if (end < strLen) {\n    end++;\n    code = end === strLen ? 0 : string.charCodeAt(end);\n  }\n  return code;\n}\n__name(ch, \"ch\");\nfunction lex() {\n  lastEnd = end;\n  while (code === 9 || code === 10 || code === 13 || code === 32) {\n    ch();\n  }\n  if (code === 0) {\n    kind = \"EOF\";\n    return;\n  }\n  start = end;\n  switch (code) {\n    case 34:\n      kind = \"String\";\n      return readString();\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      kind = \"Number\";\n      return readNumber();\n    case 102:\n      if (string.slice(start, start + 5) !== \"false\") {\n        break;\n      }\n      end += 4;\n      ch();\n      kind = \"Boolean\";\n      return;\n    case 110:\n      if (string.slice(start, start + 4) !== \"null\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Null\";\n      return;\n    case 116:\n      if (string.slice(start, start + 4) !== \"true\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Boolean\";\n      return;\n  }\n  kind = string[start];\n  ch();\n}\n__name(lex, \"lex\");\nfunction readString() {\n  ch();\n  while (code !== 34 && code > 31) {\n    if (code === 92) {\n      code = ch();\n      switch (code) {\n        case 34:\n        case 47:\n        case 92:\n        case 98:\n        case 102:\n        case 110:\n        case 114:\n        case 116:\n          ch();\n          break;\n        case 117:\n          ch();\n          readHex();\n          readHex();\n          readHex();\n          readHex();\n          break;\n        default:\n          throw syntaxError(\"Bad character escape sequence.\");\n      }\n    } else if (end === strLen) {\n      throw syntaxError(\"Unterminated string.\");\n    } else {\n      ch();\n    }\n  }\n  if (code === 34) {\n    ch();\n    return;\n  }\n  throw syntaxError(\"Unterminated string.\");\n}\n__name(readString, \"readString\");\nfunction readHex() {\n  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {\n    return ch();\n  }\n  throw syntaxError(\"Expected hexadecimal digit.\");\n}\n__name(readHex, \"readHex\");\nfunction readNumber() {\n  if (code === 45) {\n    ch();\n  }\n  if (code === 48) {\n    ch();\n  } else {\n    readDigits();\n  }\n  if (code === 46) {\n    ch();\n    readDigits();\n  }\n  if (code === 69 || code === 101) {\n    code = ch();\n    if (code === 43 || code === 45) {\n      ch();\n    }\n    readDigits();\n  }\n}\n__name(readNumber, \"readNumber\");\nfunction readDigits() {\n  if (code < 48 || code > 57) {\n    throw syntaxError(\"Expected decimal digit.\");\n  }\n  do {\n    ch();\n  } while (code >= 48 && code <= 57);\n}\n__name(readDigits, \"readDigits\");\nCodeMirror.registerHelper(\"lint\", \"graphql-variables\", (text, options, editor) => {\n  if (!text) {\n    return [];\n  }\n  let ast;\n  try {\n    ast = jsonParse(text);\n  } catch (syntaxError2) {\n    if (syntaxError2.stack) {\n      throw syntaxError2;\n    }\n    return [lintError(editor, syntaxError2, syntaxError2.message)];\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return [];\n  }\n  return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n  const errors = [];\n  variablesAST.members.forEach((member) => {\n    var _a;\n    if (member) {\n      const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n      const type = variableToType[variableName];\n      if (!type) {\n        errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n      } else {\n        validateValue(type, member.value).forEach(([node, message]) => {\n          errors.push(lintError(editor, node, message));\n        });\n      }\n    }\n  });\n  return errors;\n}\n__name(validateVariables, \"validateVariables\");\nfunction validateValue(type, valueAST) {\n  if (!type || !valueAST) {\n    return [];\n  }\n  if (type instanceof GraphQLNonNull) {\n    if (valueAST.kind === \"Null\") {\n      return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n    }\n    return validateValue(type.ofType, valueAST);\n  }\n  if (valueAST.kind === \"Null\") {\n    return [];\n  }\n  if (type instanceof GraphQLList) {\n    const itemType = type.ofType;\n    if (valueAST.kind === \"Array\") {\n      const values = valueAST.values || [];\n      return mapCat(values, (item) => validateValue(itemType, item));\n    }\n    return validateValue(itemType, valueAST);\n  }\n  if (type instanceof GraphQLInputObjectType) {\n    if (valueAST.kind !== \"Object\") {\n      return [[valueAST, `Type \"${type}\" must be an Object.`]];\n    }\n    const providedFields = /* @__PURE__ */ Object.create(null);\n    const fieldErrors = mapCat(valueAST.members, (member) => {\n      var _a;\n      const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n      providedFields[fieldName] = true;\n      const inputField = type.getFields()[fieldName];\n      if (!inputField) {\n        return [\n          [\n            member.key,\n            `Type \"${type}\" does not have a field \"${fieldName}\".`\n          ]\n        ];\n      }\n      const fieldType = inputField ? inputField.type : void 0;\n      return validateValue(fieldType, member.value);\n    });\n    Object.keys(type.getFields()).forEach((fieldName) => {\n      if (!providedFields[fieldName]) {\n        const fieldType = type.getFields()[fieldName].type;\n        if (fieldType instanceof GraphQLNonNull) {\n          fieldErrors.push([\n            valueAST,\n            `Object of type \"${type}\" is missing required field \"${fieldName}\".`\n          ]);\n        }\n      }\n    });\n    return fieldErrors;\n  }\n  if (type.name === \"Boolean\" && valueAST.kind !== \"Boolean\" || type.name === \"String\" && valueAST.kind !== \"String\" || type.name === \"ID\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"String\" || type.name === \"Float\" && valueAST.kind !== \"Number\" || type.name === \"Int\" && (valueAST.kind !== \"Number\" || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, `Expected value of type \"${type}\".`]];\n  }\n  if (type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) {\n    if (valueAST.kind !== \"String\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"Boolean\" && valueAST.kind !== \"Null\" || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n  }\n  return [];\n}\n__name(validateValue, \"validateValue\");\nfunction lintError(editor, node, message) {\n  return {\n    message,\n    severity: \"error\",\n    type: \"validation\",\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\n__name(lintError, \"lintError\");\nfunction isNullish(value) {\n  return value === null || value === void 0 || value !== value;\n}\n__name(isNullish, \"isNullish\");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, \"mapCat\");\n"],"sourceRoot":""}