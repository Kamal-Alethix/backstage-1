{"version":3,"sources":["webpack://example-app/../node_modules/@sucrase/webpack-loader/dist/plugins/catalog-graph/src/components/CatalogGraphCard/CatalogGraphCard.tsx"],"names":[],"mappings":"sSAyCA,KAAM,GAAY,QAAW,CAC3B,KAAM,CAAC,CAAE,YAAc,EACrB,QAAS,OACT,cAAe,SACf,UAAW,EACX,UAAW,CACb,GACA,MAAO,CACL,KAAM,EACN,UAAW,CACb,CACF,CAAC,EAEY,EAAoB,GAY5B,CACH,KAAM,CACJ,UAAU,WACV,gBAAgB,KAChB,WAAW,EACX,iBAAiB,GACjB,iBAAiB,GACjB,QACA,YACA,YAAY,gBACZ,SACA,QAAQ,YACR,OAAO,mBACL,EAEE,CAAE,UAAW,gBAAU,EACvB,EAAa,SAAqB,CAAM,EACxC,EAAqB,kBAAY,gBAAc,EAC/C,EAAoB,kBAAY,GAAoB,EACpD,EAAW,SAAY,EACvB,EAAU,EAAU,CAAE,QAAO,CAAC,EAC9B,EAAY,mBAAa,EAEzB,EAAc,kBAClB,CAAC,EAAM,IAAM,C,MACX,KAAM,GAAiB,SAAe,EAAK,EAAE,EACvC,EAAO,EAAmB,CAC9B,KAAM,EAAe,KAAK,kBAAkB,OAAO,EACnD,UAAW,EAAe,UAAU,kBAAkB,OAAO,EAC7D,KAAM,EAAe,IACvB,CAAC,EACD,EAAU,aACR,QACA,KAAK,QAAL,OAAc,wBAAkB,CAAc,EAC9C,CAAE,WAAY,CAAE,GAAI,CAAK,CAAE,CAC7B,EACA,EAAS,CAAI,CACf,EACA,CAAC,EAAoB,EAAU,CAAS,CAC1C,EAEM,EAAqB,cACzB,CAAE,eAAgB,CAAC,SAAmB,CAAM,CAAC,CAAE,EAC/C,CAAE,YAAa,WAAY,eAAgB,EAAK,CAClD,EACM,EAAkB,GAAG,EAAkB,IAAI,IAEjD,MACE,iBAAoB,WAAU,CAC5B,MAAO,EACP,cAAe,EAAQ,KACvB,QAAS,EACT,UAAW,GACX,SAAU,CACR,MAAO,aACP,KAAM,CACR,CAAE,EAEA,gBAAoB,KAAsB,CAC1C,gBAAiB,EACjB,SAAU,EACV,eAAgB,EAChB,eAAgB,EAChB,MAAO,EACP,UAAW,EACX,UAAW,EACX,YAAa,EACb,UAAW,EAAQ,MACnB,cAAe,EACf,KAAM,CAAK,CACb,CACF,CAEJ,C","file":"static/9150.5d664ac5.chunk.js","sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getCompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { InfoCard, } from '@backstage/core-components';\nimport { useAnalytics, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  humanizeEntityRef,\n  useEntity,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { makeStyles, } from '@material-ui/core';\nimport qs from 'qs';\nimport React, { useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport { catalogGraphRouteRef } from '../../routes';\nimport {\n  ALL_RELATION_PAIRS,\n  Direction,\n\n  EntityRelationsGraph,\n\n} from '../EntityRelationsGraph';\n\nconst useStyles = makeStyles({\n  card: ({ height }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: height,\n    minHeight: height,\n  }),\n  graph: {\n    flex: 1,\n    minHeight: 0,\n  },\n});\n\nexport const CatalogGraphCard = (props\n\n\n\n\n\n\n\n\n\n\n\n) => {\n  const {\n    variant = 'gridItem',\n    relationPairs = ALL_RELATION_PAIRS,\n    maxDepth = 1,\n    unidirectional = true,\n    mergeRelations = true,\n    kinds,\n    relations,\n    direction = Direction.LEFT_RIGHT,\n    height,\n    title = 'Relations',\n    zoom = 'enable-on-click',\n  } = props;\n\n  const { entity } = useEntity();\n  const entityName = getCompoundEntityRef(entity);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const catalogGraphRoute = useRouteRef(catalogGraphRouteRef);\n  const navigate = useNavigate();\n  const classes = useStyles({ height });\n  const analytics = useAnalytics();\n\n  const onNodeClick = useCallback(\n    (node, _) => {\n      const nodeEntityName = parseEntityRef(node.id);\n      const path = catalogEntityRoute({\n        kind: nodeEntityName.kind.toLocaleLowerCase('en-US'),\n        namespace: nodeEntityName.namespace.toLocaleLowerCase('en-US'),\n        name: nodeEntityName.name,\n      });\n      analytics.captureEvent(\n        'click',\n        node.title ?? humanizeEntityRef(nodeEntityName),\n        { attributes: { to: path } },\n      );\n      navigate(path);\n    },\n    [catalogEntityRoute, navigate, analytics],\n  );\n\n  const catalogGraphParams = qs.stringify(\n    { rootEntityRefs: [stringifyEntityRef(entity)] },\n    { arrayFormat: 'brackets', addQueryPrefix: true },\n  );\n  const catalogGraphUrl = `${catalogGraphRoute()}${catalogGraphParams}`;\n\n  return (\n    React.createElement(InfoCard, {\n      title: title,\n      cardClassName: classes.card,\n      variant: variant,\n      noPadding: true,\n      deepLink: {\n        title: 'View graph',\n        link: catalogGraphUrl,\n      },}\n    \n      , React.createElement(EntityRelationsGraph, {\n        rootEntityNames: entityName,\n        maxDepth: maxDepth,\n        unidirectional: unidirectional,\n        mergeRelations: mergeRelations,\n        kinds: kinds,\n        relations: relations,\n        direction: direction,\n        onNodeClick: onNodeClick,\n        className: classes.graph,\n        relationPairs: relationPairs,\n        zoom: zoom,}\n      )\n    )\n  );\n};\n"],"sourceRoot":""}