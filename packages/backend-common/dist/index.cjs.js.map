{"version":3,"file":"index.cjs.js","sources":["../src/logging/formats.ts","../src/util/escapeRegExp.ts","../src/logging/rootLogger.ts","../src/logging/voidLogger.ts","../src/cache/CacheClient.ts","../src/cache/NoStore.ts","../src/cache/CacheManager.ts","../src/urls.ts","../src/config.ts","../src/context/AbortContext.ts","../src/context/RootContext.ts","../src/context/ValueContext.ts","../src/context/Contexts.ts","../src/database/config.ts","../src/database/connectors/defaultNameOverride.ts","../src/database/connectors/mysql.ts","../src/database/connectors/defaultSchemaOverride.ts","../src/database/connectors/postgres.ts","../src/database/connectors/sqlite3.ts","../src/database/connection.ts","../src/database/DatabaseManager.ts","../src/database/util.ts","../src/service/lib/config.ts","../src/hot.ts","../src/middleware/errorHandler.ts","../src/middleware/notFoundHandler.ts","../src/middleware/requestLoggingHandler.ts","../src/middleware/statusCheckHandler.ts","../src/service/lib/hostFactory.ts","../src/service/lib/ServiceBuilderImpl.ts","../src/discovery/SingleHostDiscovery.ts","../src/paths.ts","../src/reading/ReadUrlResponseFactory.ts","../src/reading/AzureUrlReader.ts","../src/reading/BitbucketCloudUrlReader.ts","../src/reading/BitbucketUrlReader.ts","../src/reading/BitbucketServerUrlReader.ts","../src/scm/git.ts","../src/reading/GerritUrlReader.ts","../src/reading/GithubUrlReader.ts","../src/reading/tree/util.ts","../src/reading/GitlabUrlReader.ts","../src/reading/AwsS3UrlReader.ts","../src/reading/FetchUrlReader.ts","../src/reading/UrlReaderPredicateMux.ts","../src/reading/tree/TarArchiveResponse.ts","../src/reading/tree/ZipArchiveResponse.ts","../src/reading/tree/ReadableArrayResponse.ts","../src/reading/tree/ReadTreeResponseFactory.ts","../src/reading/GoogleGcsUrlReader.ts","../src/reading/UrlReaders.ts","../src/service/createServiceBuilder.ts","../src/service/createStatusCheckRouter.ts","../src/tokens/ServerTokenManager.ts","../src/util/DockerContainerRunner.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as winston from 'winston';\nimport { TransformableInfo } from 'logform';\n\nconst coloredTemplate = (info: TransformableInfo) => {\n  const { timestamp, level, message, plugin, service, ...fields } = info;\n  const colorizer = winston.format.colorize();\n  const prefix = plugin || service;\n  const timestampColor = colorizer.colorize('timestamp', timestamp);\n  const prefixColor = colorizer.colorize('prefix', prefix);\n\n  const extraFields = Object.entries(fields)\n    .map(([key, value]) => `${colorizer.colorize('field', `${key}`)}=${value}`)\n    .join(' ');\n\n  return `${timestampColor} ${prefixColor} ${level} ${message} ${extraFields}`;\n};\n\n/**\n * A logging format that adds coloring to console output.\n *\n * @public\n */\nexport const coloredFormat = winston.format.combine(\n  winston.format.timestamp(),\n  winston.format.colorize({\n    colors: { timestamp: 'dim', prefix: 'blue', field: 'cyan', debug: 'grey' },\n  }),\n  winston.format.printf(coloredTemplate),\n);\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Escapes a given string to be used inside a RegExp.\n *\n * Taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nexport const escapeRegExp = (text: string) => {\n  return text.replace(/[.*+?^${}(\\)|[\\]\\\\]/g, '\\\\$&');\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { merge } from 'lodash';\nimport * as winston from 'winston';\nimport { LoggerOptions } from 'winston';\nimport { coloredFormat } from './formats';\nimport { escapeRegExp } from '../util/escapeRegExp';\n\nlet rootLogger: winston.Logger;\nlet redactionRegExp: RegExp | undefined;\n\n/**\n * Gets the current root logger.\n *\n * @public\n */\nexport function getRootLogger(): winston.Logger {\n  return rootLogger;\n}\n\n/**\n * Sets a completely custom default \"root\" logger.\n *\n * @remarks\n *\n * This is the logger instance that will be the foundation for all other logger\n * instances passed to plugins etc, in a given backend.\n *\n * Only use this if you absolutely need to make a completely custom logger.\n * Normally if you want to make light adaptations to the default logger\n * behavior, you would instead call {@link createRootLogger}.\n *\n * @public\n */\nexport function setRootLogger(newLogger: winston.Logger) {\n  rootLogger = newLogger;\n}\n\nexport function setRootLoggerRedactionList(redactionList: string[]) {\n  // Exclude secrets that are empty or just one character in length. These\n  // typically mean that you are running local dev or tests, or using the\n  // --lax flag which sets things to just 'x'. So exclude those.\n  const filtered = redactionList.filter(r => r.length > 1);\n\n  if (filtered.length) {\n    redactionRegExp = new RegExp(\n      `(${filtered.map(escapeRegExp).join('|')})`,\n      'g',\n    );\n  } else {\n    redactionRegExp = undefined;\n  }\n}\n\n/**\n * A winston formatting function that finds occurrences of filteredKeys\n * and replaces them with the corresponding identifier.\n */\nfunction redactLogLine(info: winston.Logform.TransformableInfo) {\n  // TODO(hhogg): The logger is created before the config is loaded, because the\n  // logger is needed in the config loader. There is a risk of a secret being\n  // logged out during the config loading stage.\n  // TODO(freben): Added a check that info.message actually was a string,\n  // because it turned out that this was not necessarily guaranteed.\n  // https://github.com/backstage/backstage/issues/8306\n  if (redactionRegExp && typeof info.message === 'string') {\n    info.message = info.message.replace(redactionRegExp, '[REDACTED]');\n  }\n\n  return info;\n}\n\n/**\n * Creates a default \"root\" logger. This also calls {@link setRootLogger} under\n * the hood.\n *\n * @remarks\n *\n * This is the logger instance that will be the foundation for all other logger\n * instances passed to plugins etc, in a given backend.\n *\n * @public\n */\nexport function createRootLogger(\n  options: winston.LoggerOptions = {},\n  env = process.env,\n): winston.Logger {\n  const logger = winston.createLogger(\n    merge<LoggerOptions, LoggerOptions>(\n      {\n        level: env.LOG_LEVEL || 'info',\n        format: winston.format.combine(\n          winston.format(redactLogLine)(),\n          env.NODE_ENV === 'production' ? winston.format.json() : coloredFormat,\n        ),\n        defaultMeta: {\n          service: 'backstage',\n        },\n        transports: [\n          new winston.transports.Console({\n            silent: env.JEST_WORKER_ID !== undefined && !env.LOG_LEVEL,\n          }),\n        ],\n      },\n      options,\n    ),\n  );\n\n  setRootLogger(logger);\n\n  return logger;\n}\n\nrootLogger = createRootLogger();\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as winston from 'winston';\n\n/**\n * A logger that just throws away all messages.\n *\n * @public\n */\nexport function getVoidLogger(): winston.Logger {\n  return winston.createLogger({\n    transports: [new winston.transports.Console({ silent: true })],\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue } from '@backstage/types';\nimport { createHash } from 'crypto';\nimport Keyv from 'keyv';\n\ntype CacheClientArgs = {\n  client: Keyv;\n};\n\n/**\n * Options passed to {@link CacheClient.set}.\n *\n * @public\n */\nexport type CacheClientSetOptions = {\n  /**\n   * Optional TTL in milliseconds. Defaults to the TTL provided when the client\n   * was set up (or no TTL if none are provided).\n   */\n  ttl?: number;\n};\n\n/**\n * A pre-configured, storage agnostic cache client suitable for use by\n * Backstage plugins.\n *\n * @public\n */\nexport interface CacheClient {\n  /**\n   * Reads data from a cache store for the given key. If no data was found,\n   * returns undefined.\n   */\n  get(key: string): Promise<JsonValue | undefined>;\n\n  /**\n   * Writes the given data to a cache store, associated with the given key. An\n   * optional TTL may also be provided, otherwise it defaults to the TTL that\n   * was provided when the client was instantiated.\n   */\n  set(\n    key: string,\n    value: JsonValue,\n    options?: CacheClientSetOptions,\n  ): Promise<void>;\n\n  /**\n   * Removes the given key from the cache store.\n   */\n  delete(key: string): Promise<void>;\n}\n\n/**\n * A basic, concrete implementation of the CacheClient, suitable for almost\n * all uses in Backstage.\n */\nexport class DefaultCacheClient implements CacheClient {\n  private readonly client: Keyv;\n\n  constructor({ client }: CacheClientArgs) {\n    this.client = client;\n  }\n\n  async get(key: string): Promise<JsonValue | undefined> {\n    const k = this.getNormalizedKey(key);\n    return await this.client.get(k);\n  }\n\n  async set(\n    key: string,\n    value: JsonValue,\n    opts: CacheClientSetOptions = {},\n  ): Promise<void> {\n    const k = this.getNormalizedKey(key);\n    await this.client.set(k, value, opts.ttl);\n  }\n\n  async delete(key: string): Promise<void> {\n    const k = this.getNormalizedKey(key);\n    await this.client.delete(k);\n  }\n\n  /**\n   * Ensures keys are well-formed for any/all cache stores.\n   */\n  private getNormalizedKey(candidateKey: string): string {\n    // Remove potentially invalid characters.\n    const wellFormedKey = Buffer.from(candidateKey).toString('base64');\n\n    // Memcache in particular doesn't do well with keys > 250 bytes.\n    // Padded because a plugin ID is also prepended to the key.\n    if (wellFormedKey.length < 200) {\n      return wellFormedKey;\n    }\n\n    return createHash('md5').update(candidateKey).digest('base64');\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Storage class compatible with Keyv which always results in a no-op. This is\n * used when no cache store is configured in a Backstage backend instance.\n */\nexport class NoStore extends Map<string, any> {\n  clear(): void {\n    return;\n  }\n\n  delete(_key: string): boolean {\n    return false;\n  }\n\n  get(_key: string) {\n    return;\n  }\n\n  has(_key: string): boolean {\n    return false;\n  }\n\n  set(_key: string, _value: any): this {\n    return this;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport Keyv from 'keyv';\n// @ts-expect-error\nimport KeyvMemcache from 'keyv-memcache';\nimport KeyvRedis from '@keyv/redis';\nimport { Logger } from 'winston';\nimport { getRootLogger } from '../logging';\nimport { DefaultCacheClient, CacheClient } from './CacheClient';\nimport { NoStore } from './NoStore';\nimport { CacheManagerOptions, PluginCacheManager } from './types';\n\n/**\n * Implements a Cache Manager which will automatically create new cache clients\n * for plugins when requested. All requested cache clients are created with the\n * connection details provided.\n *\n * @public\n */\nexport class CacheManager {\n  /**\n   * Keys represent supported `backend.cache.store` values, mapped to factories\n   * that return Keyv instances appropriate to the store.\n   */\n  private readonly storeFactories = {\n    redis: this.getRedisClient,\n    memcache: this.getMemcacheClient,\n    memory: this.getMemoryClient,\n    none: this.getNoneClient,\n  };\n\n  /**\n   * Shared memory store for the in-memory cache client. Sharing the same Map\n   * instance ensures get/set/delete operations hit the same store, regardless\n   * of where/when a client is instantiated.\n   */\n  private readonly memoryStore = new Map();\n\n  private readonly logger: Logger;\n  private readonly store: keyof CacheManager['storeFactories'];\n  private readonly connection: string;\n  private readonly errorHandler: CacheManagerOptions['onError'];\n\n  /**\n   * Creates a new {@link CacheManager} instance by reading from the `backend`\n   * config section, specifically the `.cache` key.\n   *\n   * @param config - The loaded application configuration.\n   */\n  static fromConfig(\n    config: Config,\n    options: CacheManagerOptions = {},\n  ): CacheManager {\n    // If no `backend.cache` config is provided, instantiate the CacheManager\n    // with a \"NoStore\" cache client.\n    const store = config.getOptionalString('backend.cache.store') || 'none';\n    const connectionString =\n      config.getOptionalString('backend.cache.connection') || '';\n    const logger = (options.logger || getRootLogger()).child({\n      type: 'cacheManager',\n    });\n    return new CacheManager(store, connectionString, logger, options.onError);\n  }\n\n  private constructor(\n    store: string,\n    connectionString: string,\n    logger: Logger,\n    errorHandler: CacheManagerOptions['onError'],\n  ) {\n    if (!this.storeFactories.hasOwnProperty(store)) {\n      throw new Error(`Unknown cache store: ${store}`);\n    }\n    this.logger = logger;\n    this.store = store as keyof CacheManager['storeFactories'];\n    this.connection = connectionString;\n    this.errorHandler = errorHandler;\n  }\n\n  /**\n   * Generates a PluginCacheManager for consumption by plugins.\n   *\n   * @param pluginId - The plugin that the cache manager should be created for.\n   *        Plugin names should be unique.\n   */\n  forPlugin(pluginId: string): PluginCacheManager {\n    return {\n      getClient: (opts = {}): CacheClient => {\n        const concreteClient = this.getClientWithTtl(pluginId, opts.defaultTtl);\n\n        // Always provide an error handler to avoid killing the process.\n        concreteClient.on('error', (err: Error) => {\n          // In all cases, just log the error.\n          this.logger.error(err);\n\n          // Invoke any custom error handler if provided.\n          if (typeof this.errorHandler === 'function') {\n            this.errorHandler(err);\n          }\n        });\n\n        return new DefaultCacheClient({\n          client: concreteClient,\n        });\n      },\n    };\n  }\n\n  private getClientWithTtl(pluginId: string, ttl: number | undefined): Keyv {\n    return this.storeFactories[this.store].call(this, pluginId, ttl);\n  }\n\n  private getRedisClient(\n    pluginId: string,\n    defaultTtl: number | undefined,\n  ): Keyv {\n    return new Keyv({\n      namespace: pluginId,\n      ttl: defaultTtl,\n      store: new KeyvRedis(this.connection),\n    });\n  }\n\n  private getMemcacheClient(\n    pluginId: string,\n    defaultTtl: number | undefined,\n  ): Keyv {\n    return new Keyv({\n      namespace: pluginId,\n      ttl: defaultTtl,\n      store: new KeyvMemcache(this.connection),\n    });\n  }\n\n  private getMemoryClient(\n    pluginId: string,\n    defaultTtl: number | undefined,\n  ): Keyv {\n    return new Keyv({\n      namespace: pluginId,\n      ttl: defaultTtl,\n      store: this.memoryStore,\n    });\n  }\n\n  private getNoneClient(pluginId: string): Keyv {\n    return new Keyv({\n      namespace: pluginId,\n      store: new NoStore(),\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolve as resolvePath } from 'path';\nimport parseArgs from 'minimist';\nimport { Logger } from 'winston';\nimport { findPaths } from '@backstage/cli-common';\nimport {\n  loadConfigSchema,\n  loadConfig,\n  ConfigSchema,\n  ConfigTarget,\n  LoadConfigOptionsRemote,\n} from '@backstage/config-loader';\nimport { AppConfig, Config, ConfigReader } from '@backstage/config';\nimport { JsonValue } from '@backstage/types';\nimport { getPackages } from '@manypkg/get-packages';\n\nimport { isValidUrl } from './urls';\n\nimport { setRootLoggerRedactionList } from './logging/rootLogger';\n\n// Fetch the schema and get all the secrets to pass to the rootLogger for redaction\nconst updateRedactionList = (\n  schema: ConfigSchema,\n  configs: AppConfig[],\n  logger: Logger,\n) => {\n  const secretAppConfigs = schema.process(configs, {\n    visibility: ['secret'],\n    ignoreSchemaErrors: true,\n  });\n  const secretConfig = ConfigReader.fromConfigs(secretAppConfigs);\n  const values = new Set<string>();\n  const data = secretConfig.get();\n\n  JSON.parse(\n    JSON.stringify(data),\n    (_, v) => typeof v === 'string' && values.add(v),\n  );\n\n  logger.info(\n    `${values.size} secrets found in the config which will be redacted`,\n  );\n\n  setRootLoggerRedactionList(Array.from(values));\n};\n\nexport class ObservableConfigProxy implements Config {\n  private config: Config = new ConfigReader({});\n\n  private readonly subscribers: (() => void)[] = [];\n\n  constructor(\n    private readonly logger: Logger,\n    private readonly parent?: ObservableConfigProxy,\n    private parentKey?: string,\n  ) {\n    if (parent && !parentKey) {\n      throw new Error('parentKey is required if parent is set');\n    }\n  }\n\n  setConfig(config: Config) {\n    if (this.parent) {\n      throw new Error('immutable');\n    }\n    this.config = config;\n    for (const subscriber of this.subscribers) {\n      try {\n        subscriber();\n      } catch (error) {\n        this.logger.error(`Config subscriber threw error, ${error}`);\n      }\n    }\n  }\n\n  subscribe(onChange: () => void): { unsubscribe: () => void } {\n    if (this.parent) {\n      return this.parent.subscribe(onChange);\n    }\n\n    this.subscribers.push(onChange);\n    return {\n      unsubscribe: () => {\n        const index = this.subscribers.indexOf(onChange);\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      },\n    };\n  }\n\n  private select(required: true): Config;\n  private select(required: false): Config | undefined;\n  private select(required: boolean): Config | undefined {\n    if (this.parent && this.parentKey) {\n      if (required) {\n        return this.parent.select(true).getConfig(this.parentKey);\n      }\n      return this.parent.select(false)?.getOptionalConfig(this.parentKey);\n    }\n\n    return this.config;\n  }\n\n  has(key: string): boolean {\n    return this.select(false)?.has(key) ?? false;\n  }\n  keys(): string[] {\n    return this.select(false)?.keys() ?? [];\n  }\n  get<T = JsonValue>(key?: string): T {\n    return this.select(true).get(key);\n  }\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    return this.select(false)?.getOptional(key);\n  }\n  getConfig(key: string): Config {\n    return new ObservableConfigProxy(this.logger, this, key);\n  }\n  getOptionalConfig(key: string): Config | undefined {\n    if (this.select(false)?.has(key)) {\n      return new ObservableConfigProxy(this.logger, this, key);\n    }\n    return undefined;\n  }\n  getConfigArray(key: string): Config[] {\n    return this.select(true).getConfigArray(key);\n  }\n  getOptionalConfigArray(key: string): Config[] | undefined {\n    return this.select(false)?.getOptionalConfigArray(key);\n  }\n  getNumber(key: string): number {\n    return this.select(true).getNumber(key);\n  }\n  getOptionalNumber(key: string): number | undefined {\n    return this.select(false)?.getOptionalNumber(key);\n  }\n  getBoolean(key: string): boolean {\n    return this.select(true).getBoolean(key);\n  }\n  getOptionalBoolean(key: string): boolean | undefined {\n    return this.select(false)?.getOptionalBoolean(key);\n  }\n  getString(key: string): string {\n    return this.select(true).getString(key);\n  }\n  getOptionalString(key: string): string | undefined {\n    return this.select(false)?.getOptionalString(key);\n  }\n  getStringArray(key: string): string[] {\n    return this.select(true).getStringArray(key);\n  }\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.select(false)?.getOptionalStringArray(key);\n  }\n}\n\n// A global used to ensure that only a single file watcher is active at a time.\nlet currentCancelFunc: () => void;\n\n/**\n * Load configuration for a Backend.\n *\n * This function should only be called once, during the initialization of the backend.\n *\n * @public\n */\nexport async function loadBackendConfig(options: {\n  logger: Logger;\n  // process.argv or any other overrides\n  remote?: LoadConfigOptionsRemote;\n  argv: string[];\n}): Promise<Config> {\n  const args = parseArgs(options.argv);\n\n  const configTargets: ConfigTarget[] = [args.config ?? []]\n    .flat()\n    .map(arg => (isValidUrl(arg) ? { url: arg } : { path: resolvePath(arg) }));\n\n  /* eslint-disable-next-line no-restricted-syntax */\n  const paths = findPaths(__dirname);\n\n  // TODO(hhogg): This is fetching _all_ of the packages of the monorepo\n  // in order to find the secrets for redactions, however we only care about\n  // the backend ones, we need to find a way to exclude the frontend packages.\n  const { packages } = await getPackages(paths.targetDir);\n  const schema = await loadConfigSchema({\n    dependencies: packages.map(p => p.packageJson.name),\n  });\n\n  const config = new ObservableConfigProxy(options.logger);\n  const { appConfigs } = await loadConfig({\n    configRoot: paths.targetRoot,\n    configTargets: configTargets,\n    remote: options.remote,\n    watch: {\n      onChange(newConfigs) {\n        options.logger.info(\n          `Reloaded config from ${newConfigs.map(c => c.context).join(', ')}`,\n        );\n\n        config.setConfig(ConfigReader.fromConfigs(newConfigs));\n      },\n      stopSignal: new Promise(resolve => {\n        if (currentCancelFunc) {\n          currentCancelFunc();\n        }\n        currentCancelFunc = resolve;\n\n        // For reloads of this module we need to use a dispose handler rather than the global.\n        if (module.hot) {\n          module.hot.addDisposeHandler(resolve);\n        }\n      }),\n    },\n  });\n\n  options.logger.info(\n    `Loaded config from ${appConfigs.map(c => c.context).join(', ')}`,\n  );\n\n  config.setConfig(ConfigReader.fromConfigs(appConfigs));\n\n  // Subscribe to config changes and update the redaction list for logging\n  updateRedactionList(schema, appConfigs, options.logger);\n  config.subscribe(() =>\n    updateRedactionList(schema, appConfigs, options.logger),\n  );\n\n  return config;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbortController, AbortSignal } from 'node-abort-controller';\nimport { Context } from './types';\n\n/**\n * A context that implements various abort related functionality.\n */\nexport class AbortContext implements Context {\n  /**\n   * Abort either when the parent aborts, or after the given timeout has\n   * expired.\n   *\n   * @param ctx - The parent context\n   * @param timeout - A timeout value, in milliseconds\n   * @returns A new context\n   */\n  static forTimeoutMillis(ctx: Context, timeout: number): Context {\n    const desiredDeadline = new Date(Date.now() + timeout);\n    const actualDeadline =\n      ctx.deadline && ctx.deadline < desiredDeadline\n        ? ctx.deadline\n        : desiredDeadline;\n\n    if (ctx.abortSignal.aborted) {\n      if (ctx.deadline && desiredDeadline === actualDeadline) {\n        return ctx;\n      }\n      return new AbortContext(ctx, ctx.abortSignal, actualDeadline);\n    }\n\n    const controller = new AbortController();\n    const timeoutHandle = setTimeout(abort, timeout);\n    ctx.abortSignal.addEventListener('abort', abort);\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      clearTimeout(timeoutHandle!);\n      controller.abort();\n    }\n\n    return new AbortContext(ctx, controller.signal, actualDeadline);\n  }\n\n  /**\n   * Abort either when the parent aborts, or when the given controller is\n   * triggered.\n   *\n   * @remarks\n   *\n   * If you have access to the controller, this function is more efficient than\n   * {@link AbortContext#forSignal}.\n   *\n   * @param ctx - The parent context\n   * @param controller - An abort controller\n   * @returns A new context\n   */\n  static forController(ctx: Context, controller: AbortController): Context {\n    // Already aborted context / signal are fine to reuse as-is\n    if (ctx.abortSignal.aborted) {\n      return ctx;\n    } else if (controller.signal.aborted) {\n      return new AbortContext(ctx, controller.signal, ctx.deadline);\n    }\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      controller.abort();\n    }\n\n    ctx.abortSignal.addEventListener('abort', abort);\n\n    return new AbortContext(ctx, controller.signal, ctx.deadline);\n  }\n\n  /**\n   * Abort either when the parent aborts, or when the given signal is triggered.\n   *\n   * @remarks\n   *\n   * If you have access to the controller and not just the signal,\n   * {@link AbortContext#forController} is slightly more efficient to use.\n   *\n   * @param ctx - The parent context\n   * @param signal - An abort signal\n   * @returns A new context\n   */\n  static forSignal(ctx: Context, signal: AbortSignal): Context {\n    // Already aborted context / signal are fine to reuse as-is\n    if (ctx.abortSignal.aborted) {\n      return ctx;\n    } else if (signal.aborted) {\n      return new AbortContext(ctx, signal, ctx.deadline);\n    }\n\n    const controller = new AbortController();\n\n    function abort() {\n      ctx.abortSignal.removeEventListener('abort', abort);\n      signal.removeEventListener('abort', abort);\n      controller.abort();\n    }\n\n    ctx.abortSignal.addEventListener('abort', abort);\n    signal.addEventListener('abort', abort);\n\n    return new AbortContext(ctx, controller.signal, ctx.deadline);\n  }\n\n  private constructor(\n    private readonly parent: Context,\n    readonly abortSignal: AbortSignal,\n    readonly deadline: Date | undefined,\n  ) {}\n\n  value<T = unknown>(key: string): T | undefined {\n    return this.parent.value(key);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbortSignal } from 'node-abort-controller';\nimport { Context } from './types';\n\n/**\n * Since the root context can never abort, and since nobody is every meant to\n * dispatch events through it, we can use a static dummy instance for\n * efficiency.\n */\nconst dummyAbortSignal: AbortSignal = Object.freeze({\n  aborted: false,\n  addEventListener() {},\n  removeEventListener() {},\n  dispatchEvent() {\n    return true;\n  },\n  onabort: null,\n});\n\n/**\n * An empty root context.\n */\nexport class RootContext implements Context {\n  readonly abortSignal = dummyAbortSignal;\n  readonly deadline = undefined;\n\n  value<T = unknown>(_key: string): T | undefined {\n    return undefined;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbortSignal } from 'node-abort-controller';\nimport { Context } from './types';\n\n/**\n * A context that just holds a single value, and delegates the rest to its\n * parent.\n */\nexport class ValueContext implements Context {\n  static forConstantValue(ctx: Context, key: string, value: unknown): Context {\n    return new ValueContext(ctx, key, value);\n  }\n\n  constructor(\n    private readonly _parent: Context,\n    private readonly _key: string,\n    private readonly _value: unknown,\n  ) {}\n\n  get abortSignal(): AbortSignal {\n    return this._parent.abortSignal;\n  }\n\n  get deadline(): Date | undefined {\n    return this._parent.deadline;\n  }\n\n  value<T = unknown>(key: string): T | undefined {\n    return key === this._key ? (this._value as T) : this._parent.value(key);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Duration } from 'luxon';\nimport { AbortController, AbortSignal } from 'node-abort-controller';\nimport { AbortContext } from './AbortContext';\nimport { RootContext } from './RootContext';\nimport { Context } from './types';\nimport { ValueContext } from './ValueContext';\n\n/**\n * Common context decorators.\n *\n * @alpha\n */\nexport class Contexts {\n  /**\n   * Creates a root context.\n   *\n   * @remarks\n   *\n   * This should normally only be called near the root of an application. The\n   * created context is meant to be passed down into deeper levels, which may or\n   * may not make derived contexts out of it.\n   */\n  static root(): Context {\n    return new RootContext();\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given source is aborted.\n   *\n   * @remarks\n   *\n   * If the parent context was already aborted, then it is returned as-is.\n   *\n   * If the given source was already aborted, then a new already-aborted context\n   * is returned.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param source - An abort controller or signal that you intend to perhaps\n   *                 trigger at some later point in time.\n   * @returns A new {@link Context}\n   */\n  static withAbort(\n    parentCtx: Context,\n    source: AbortController | AbortSignal,\n  ): Context {\n    return 'aborted' in source\n      ? AbortContext.forSignal(parentCtx, source)\n      : AbortContext.forController(parentCtx, source);\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given amount of time has passed.\n   * This may affect the deadline.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param timeout - The duration of time, after which the derived context will\n   *                  signal to abort.\n   * @returns A new {@link Context}\n   */\n  static withTimeoutDuration(parentCtx: Context, timeout: Duration): Context {\n    return AbortContext.forTimeoutMillis(parentCtx, timeout.as('milliseconds'));\n  }\n\n  /**\n   * Creates a derived context, which signals to abort operations either when\n   * any parent context signals, or when the given amount of time has passed.\n   * This may affect the deadline.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param timeout - The number of milliseconds, after which the derived\n   *                  context will signal to abort.\n   * @returns A new {@link Context}\n   */\n  static withTimeoutMillis(parentCtx: Context, timeout: number): Context {\n    return AbortContext.forTimeoutMillis(parentCtx, timeout);\n  }\n\n  /**\n   * Creates a derived context, which has a specific key-value pair set as well\n   * as all key-value pairs that were set in the original context.\n   *\n   * @param parentCtx - A parent context that shall be used as a base\n   * @param key - The key of the value to set\n   * @param value - The value, or a function that accepts the previous value (or\n   *                undefined if not set yet) and computes the new value\n   * @returns A new {@link Context}\n   */\n  static withValue(\n    parentCtx: Context,\n    key: string,\n    value: unknown | ((previous: unknown | undefined) => unknown),\n  ): Context {\n    const v = typeof value === 'function' ? value(parentCtx.value(key)) : value;\n    return ValueContext.forConstantValue(parentCtx, key, v);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { merge } from 'lodash';\n\n/**\n * Merges database objects together\n *\n * @public\n * @param config - The base config. The input is not modified\n * @param overrides - Any additional overrides\n */\nexport function mergeDatabaseConfig(config: any, ...overrides: any[]) {\n  return merge({}, config, ...overrides);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Knex } from 'knex';\n\n/**\n * Provides a partial knex config with database name override.\n *\n * Default override for knex database drivers which accept ConnectionConfig\n * with `connection.database` as the database name field.\n *\n * @param name - database name to get config override for\n */\nexport default function defaultNameOverride(\n  name: string,\n): Partial<Knex.Config> {\n  return {\n    connection: {\n      database: name,\n    },\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport knexFactory, { Knex } from 'knex';\nimport yn from 'yn';\n\nimport { Config } from '@backstage/config';\nimport { InputError } from '@backstage/errors';\nimport { mergeDatabaseConfig } from '../config';\nimport { DatabaseConnector } from '../types';\nimport defaultNameOverride from './defaultNameOverride';\n\n/**\n * Creates a knex mysql database connection\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function createMysqlDatabaseClient(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n) {\n  const knexConfig = buildMysqlDatabaseConfig(dbConfig, overrides);\n  const database = knexFactory(knexConfig);\n  return database;\n}\n\n/**\n * Builds a knex mysql database connection\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function buildMysqlDatabaseConfig(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n) {\n  return mergeDatabaseConfig(\n    dbConfig.get(),\n    {\n      connection: getMysqlConnectionConfig(dbConfig, !!overrides),\n      useNullAsDefault: true,\n    },\n    overrides,\n  );\n}\n\n/**\n * Gets the mysql connection config\n *\n * @param dbConfig - The database config\n * @param parseConnectionString - Flag to explicitly control connection string parsing\n */\nexport function getMysqlConnectionConfig(\n  dbConfig: Config,\n  parseConnectionString?: boolean,\n): Knex.MySqlConnectionConfig | string {\n  const connection = dbConfig.get('connection') as any;\n  const isConnectionString =\n    typeof connection === 'string' || connection instanceof String;\n  const autoParse = typeof parseConnectionString !== 'boolean';\n\n  const shouldParseConnectionString = autoParse\n    ? isConnectionString\n    : parseConnectionString && isConnectionString;\n\n  return shouldParseConnectionString\n    ? parseMysqlConnectionString(connection as string)\n    : connection;\n}\n\n/**\n * Parses a mysql connection string.\n *\n * e.g. mysql://examplename:somepassword@examplehost:3306/dbname\n * @param connectionString - The mysql connection string\n */\nexport function parseMysqlConnectionString(\n  connectionString: string,\n): Knex.MySqlConnectionConfig {\n  try {\n    const {\n      protocol,\n      username,\n      password,\n      port,\n      hostname,\n      pathname,\n      searchParams,\n    } = new URL(connectionString);\n\n    if (protocol !== 'mysql:') {\n      throw new Error(`Unknown protocol ${protocol}`);\n    } else if (!username || !password) {\n      throw new Error(`Missing username/password`);\n    } else if (!pathname.match(/^\\/[^/]+$/)) {\n      throw new Error(`Expected single path segment`);\n    }\n\n    const result: Knex.MySqlConnectionConfig = {\n      user: username,\n      password,\n      host: hostname,\n      port: Number(port || 3306),\n      database: decodeURIComponent(pathname.substr(1)),\n    };\n\n    const ssl = searchParams.get('ssl');\n    if (ssl) {\n      result.ssl = ssl;\n    }\n\n    const debug = searchParams.get('debug');\n    if (debug) {\n      result.debug = yn(debug);\n    }\n\n    return result;\n  } catch (e) {\n    throw new InputError(\n      `Error while parsing MySQL connection string, ${e}`,\n      e,\n    );\n  }\n}\n\n/**\n * Creates the missing mysql database if it does not exist\n *\n * @param dbConfig - The database config\n * @param databases - The names of the databases to create\n */\nexport async function ensureMysqlDatabaseExists(\n  dbConfig: Config,\n  ...databases: Array<string>\n) {\n  const admin = createMysqlDatabaseClient(dbConfig, {\n    connection: {\n      database: null as unknown as string,\n    },\n  });\n\n  try {\n    const ensureDatabase = async (database: string) => {\n      await admin.raw(`CREATE DATABASE IF NOT EXISTS ??`, [database]);\n    };\n    await Promise.all(databases.map(ensureDatabase));\n  } finally {\n    await admin.destroy();\n  }\n}\n\n/**\n * MySQL database connector.\n *\n * Exposes database connector functionality via an immutable object.\n */\nexport const mysqlConnector: DatabaseConnector = Object.freeze({\n  createClient: createMysqlDatabaseClient,\n  ensureDatabaseExists: ensureMysqlDatabaseExists,\n  createNameOverride: defaultNameOverride,\n  parseConnectionString: parseMysqlConnectionString,\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Knex } from 'knex';\n\n/**\n * Provides a partial knex config with schema name override.\n *\n * @param name - schema name to get config override for\n */\nexport default function defaultSchemaOverride(\n  name: string,\n): Partial<Knex.Config> {\n  return {\n    searchPath: [name],\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport knexFactory, { Knex } from 'knex';\n\nimport { Config } from '@backstage/config';\nimport { ForwardedError } from '@backstage/errors';\nimport { mergeDatabaseConfig } from '../config';\nimport { DatabaseConnector } from '../types';\nimport defaultNameOverride from './defaultNameOverride';\nimport defaultSchemaOverride from './defaultSchemaOverride';\n\n/**\n * Creates a knex postgres database connection\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function createPgDatabaseClient(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n) {\n  const knexConfig = buildPgDatabaseConfig(dbConfig, overrides);\n  const database = knexFactory(knexConfig);\n  return database;\n}\n\n/**\n * Builds a knex postgres database connection\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function buildPgDatabaseConfig(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n) {\n  return mergeDatabaseConfig(\n    dbConfig.get(),\n    {\n      connection: getPgConnectionConfig(dbConfig, !!overrides),\n      useNullAsDefault: true,\n    },\n    overrides,\n  );\n}\n\n/**\n * Gets the postgres connection config\n *\n * @param dbConfig - The database config\n * @param parseConnectionString - Flag to explicitly control connection string parsing\n */\nexport function getPgConnectionConfig(\n  dbConfig: Config,\n  parseConnectionString?: boolean,\n): Knex.PgConnectionConfig | string {\n  const connection = dbConfig.get('connection') as any;\n  const isConnectionString =\n    typeof connection === 'string' || connection instanceof String;\n  const autoParse = typeof parseConnectionString !== 'boolean';\n\n  const shouldParseConnectionString = autoParse\n    ? isConnectionString\n    : parseConnectionString && isConnectionString;\n\n  return shouldParseConnectionString\n    ? parsePgConnectionString(connection as string)\n    : connection;\n}\n\n/**\n * Parses a connection string using pg-connection-string\n *\n * @param connectionString - The postgres connection string\n */\nexport function parsePgConnectionString(connectionString: string) {\n  const parse = requirePgConnectionString();\n  return parse(connectionString);\n}\n\nfunction requirePgConnectionString() {\n  try {\n    return require('pg-connection-string').parse;\n  } catch (e) {\n    throw new ForwardedError(\"Postgres: Install 'pg-connection-string'\", e);\n  }\n}\n\n/**\n * Creates the missing Postgres database if it does not exist\n *\n * @param dbConfig - The database config\n * @param databases - The name of the databases to create\n */\nexport async function ensurePgDatabaseExists(\n  dbConfig: Config,\n  ...databases: Array<string>\n) {\n  const admin = createPgDatabaseClient(dbConfig, {\n    connection: {\n      database: 'postgres',\n    },\n  });\n\n  try {\n    const ensureDatabase = async (database: string) => {\n      const result = await admin\n        .from('pg_database')\n        .where('datname', database)\n        .count<Record<string, { count: string }>>();\n\n      if (parseInt(result[0].count, 10) > 0) {\n        return;\n      }\n\n      await admin.raw(`CREATE DATABASE ??`, [database]);\n    };\n\n    await Promise.all(databases.map(ensureDatabase));\n  } finally {\n    await admin.destroy();\n  }\n}\n\n/**\n * Creates the missing Postgres schema if it does not exist\n *\n * @param dbConfig - The database config\n * @param schemas - The name of the schemas to create\n */\nexport async function ensurePgSchemaExists(\n  dbConfig: Config,\n  ...schemas: Array<string>\n): Promise<void> {\n  const admin = createPgDatabaseClient(dbConfig);\n\n  try {\n    const ensureSchema = async (database: string) => {\n      await admin.raw(`CREATE SCHEMA IF NOT EXISTS ??`, [database]);\n    };\n\n    await Promise.all(schemas.map(ensureSchema));\n  } finally {\n    await admin.destroy();\n  }\n}\n\n/**\n * PostgreSQL database connector.\n *\n * Exposes database connector functionality via an immutable object.\n */\nexport const pgConnector: DatabaseConnector = Object.freeze({\n  createClient: createPgDatabaseClient,\n  ensureDatabaseExists: ensurePgDatabaseExists,\n  ensureSchemaExists: ensurePgSchemaExists,\n  createNameOverride: defaultNameOverride,\n  createSchemaOverride: defaultSchemaOverride,\n  parseConnectionString: parsePgConnectionString,\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { ensureDirSync } from 'fs-extra';\nimport knexFactory, { Knex } from 'knex';\nimport path from 'path';\nimport { mergeDatabaseConfig } from '../config';\nimport { DatabaseConnector } from '../types';\n\n/**\n * Creates a knex SQLite3 database connection\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function createSqliteDatabaseClient(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n) {\n  const knexConfig = buildSqliteDatabaseConfig(dbConfig, overrides);\n\n  // If storage on disk is used, ensure that the directory exists\n  if (\n    (knexConfig.connection as Knex.Sqlite3ConnectionConfig).filename &&\n    (knexConfig.connection as Knex.Sqlite3ConnectionConfig).filename !==\n      ':memory:'\n  ) {\n    const { filename } = knexConfig.connection as Knex.Sqlite3ConnectionConfig;\n    const directory = path.dirname(filename);\n\n    ensureDirSync(directory);\n  }\n\n  const database = knexFactory(knexConfig);\n\n  database.client.pool.on('createSuccess', (_eventId: any, resource: any) => {\n    resource.run('PRAGMA foreign_keys = ON', () => {});\n  });\n\n  return database;\n}\n\n/**\n * Builds a knex SQLite3 connection config\n *\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function buildSqliteDatabaseConfig(\n  dbConfig: Config,\n  overrides?: Knex.Config,\n): Knex.Config {\n  const baseConfig = dbConfig.get<Knex.Config>();\n\n  // Normalize config to always contain a connection object\n  if (typeof baseConfig.connection === 'string') {\n    baseConfig.connection = { filename: baseConfig.connection };\n  }\n  if (overrides && typeof overrides.connection === 'string') {\n    overrides.connection = { filename: overrides.connection };\n  }\n\n  const config: Knex.Config = mergeDatabaseConfig(\n    {\n      connection: {},\n    },\n    baseConfig,\n    {\n      useNullAsDefault: true,\n    },\n    overrides,\n  );\n\n  return config;\n}\n\n/**\n * Provides a partial knex SQLite3 config to override database name.\n */\nexport function createSqliteNameOverride(name: string): Partial<Knex.Config> {\n  return {\n    connection: parseSqliteConnectionString(name),\n  };\n}\n\n/**\n * Produces a partial knex SQLite3 connection config with database name.\n */\nexport function parseSqliteConnectionString(\n  name: string,\n): Knex.Sqlite3ConnectionConfig {\n  return {\n    filename: name,\n  };\n}\n\n/**\n * SQLite3 database connector.\n *\n * Exposes database connector functionality via an immutable object.\n */\nexport const sqlite3Connector: DatabaseConnector = Object.freeze({\n  createClient: createSqliteDatabaseClient,\n  createNameOverride: createSqliteNameOverride,\n  parseConnectionString: parseSqliteConnectionString,\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\nimport { InputError } from '@backstage/errors';\nimport knexFactory, { Knex } from 'knex';\nimport { mergeDatabaseConfig } from './config';\nimport { DatabaseConnector } from './types';\n\nimport { mysqlConnector, pgConnector, sqlite3Connector } from './connectors';\n\ntype DatabaseClient =\n  | 'pg'\n  | 'better-sqlite3'\n  | 'sqlite3'\n  | 'mysql'\n  | 'mysql2'\n  | string;\n\n/**\n * Mapping of client type to supported database connectors\n *\n * Database connectors can be aliased here, for example mysql2 uses\n * the same connector as mysql.\n */\nconst ConnectorMapping: Record<DatabaseClient, DatabaseConnector> = {\n  pg: pgConnector,\n  'better-sqlite3': sqlite3Connector,\n  sqlite3: sqlite3Connector,\n  mysql: mysqlConnector,\n  mysql2: mysqlConnector,\n};\n\n/**\n * Creates a knex database connection\n *\n * @public\n * @param dbConfig - The database config\n * @param overrides - Additional options to merge with the config\n */\nexport function createDatabaseClient(\n  dbConfig: Config,\n  overrides?: Partial<Knex.Config>,\n) {\n  const client: DatabaseClient = dbConfig.getString('client');\n\n  return (\n    ConnectorMapping[client]?.createClient(dbConfig, overrides) ??\n    knexFactory(mergeDatabaseConfig(dbConfig.get(), overrides))\n  );\n}\n\n/**\n * Ensures that the given databases all exist, creating them if they do not.\n *\n * @public\n */\nexport async function ensureDatabaseExists(\n  dbConfig: Config,\n  ...databases: Array<string>\n): Promise<void> {\n  const client: DatabaseClient = dbConfig.getString('client');\n\n  return ConnectorMapping[client]?.ensureDatabaseExists?.(\n    dbConfig,\n    ...databases,\n  );\n}\n\n/**\n * Ensures that the given schemas all exist, creating them if they do not.\n *\n * @public\n */\nexport async function ensureSchemaExists(\n  dbConfig: Config,\n  ...schemas: Array<string>\n): Promise<void> {\n  const client: DatabaseClient = dbConfig.getString('client');\n\n  return await ConnectorMapping[client]?.ensureSchemaExists?.(\n    dbConfig,\n    ...schemas,\n  );\n}\n\n/**\n * Provides a `Knex.Config` object with the provided database name for a given\n * client.\n */\nexport function createNameOverride(\n  client: string,\n  name: string,\n): Partial<Knex.Config> {\n  try {\n    return ConnectorMapping[client].createNameOverride(name);\n  } catch (e) {\n    throw new InputError(\n      `Unable to create database name override for '${client}' connector`,\n      e,\n    );\n  }\n}\n\n/**\n * Provides a `Knex.Config` object with the provided database schema for a given\n * client. Currently only supported by `pg`.\n */\nexport function createSchemaOverride(\n  client: string,\n  name: string,\n): Partial<Knex.Config | undefined> {\n  try {\n    return ConnectorMapping[client]?.createSchemaOverride?.(name);\n  } catch (e) {\n    throw new InputError(\n      `Unable to create database schema override for '${client}' connector`,\n      e,\n    );\n  }\n}\n\n/**\n * Parses a connection string for a given client and provides a connection config.\n */\nexport function parseConnectionString(\n  connectionString: string,\n  client?: string,\n): Knex.StaticConnectionConfig {\n  if (typeof client === 'undefined' || client === null) {\n    throw new InputError(\n      'Database connection string client type auto-detection is not yet supported.',\n    );\n  }\n\n  try {\n    return ConnectorMapping[client].parseConnectionString(connectionString);\n  } catch (e) {\n    throw new InputError(\n      `Unable to parse connection string for '${client}' connector`,\n    );\n  }\n}\n\n/**\n * Normalizes a connection config or string into an object which can be passed\n * to Knex.\n */\nexport function normalizeConnection(\n  connection: Knex.StaticConnectionConfig | JsonObject | string | undefined,\n  client: string,\n): Partial<Knex.StaticConnectionConfig> {\n  if (typeof connection === 'undefined' || connection === null) {\n    return {};\n  }\n\n  return typeof connection === 'string' || connection instanceof String\n    ? parseConnectionString(connection as string, client)\n    : connection;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config, ConfigReader } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\nimport { Knex } from 'knex';\nimport { merge, omit } from 'lodash';\nimport { mergeDatabaseConfig } from './config';\nimport {\n  createDatabaseClient,\n  createNameOverride,\n  createSchemaOverride,\n  ensureDatabaseExists,\n  ensureSchemaExists,\n  normalizeConnection,\n} from './connection';\nimport { PluginDatabaseManager } from './types';\nimport path from 'path';\n\n/**\n * Provides a config lookup path for a plugin's config block.\n */\nfunction pluginPath(pluginId: string): string {\n  return `plugin.${pluginId}`;\n}\n\n/**\n * Creation options for {@link DatabaseManager}.\n *\n * @public\n */\nexport type DatabaseManagerOptions = {\n  migrations?: PluginDatabaseManager['migrations'];\n};\n\n/**\n * Manages database connections for Backstage backend plugins.\n *\n * The database manager allows the user to set connection and client settings on\n * a per pluginId basis by defining a database config block under\n * `plugin.<pluginId>` in addition to top level defaults. Optionally, a user may\n * set `prefix` which is used to prefix generated database names if config is\n * not provided.\n *\n * @public\n */\nexport class DatabaseManager {\n  /**\n   * Creates a {@link DatabaseManager} from `backend.database` config.\n   *\n   * @param config - The loaded application configuration.\n   * @param options - An optional configuration object.\n   */\n  static fromConfig(\n    config: Config,\n    options?: DatabaseManagerOptions,\n  ): DatabaseManager {\n    const databaseConfig = config.getConfig('backend.database');\n\n    return new DatabaseManager(\n      databaseConfig,\n      databaseConfig.getOptionalString('prefix'),\n      options,\n    );\n  }\n\n  private constructor(\n    private readonly config: Config,\n    private readonly prefix: string = 'backstage_plugin_',\n    private readonly options?: DatabaseManagerOptions,\n  ) {}\n\n  /**\n   * Generates a PluginDatabaseManager for consumption by plugins.\n   *\n   * @param pluginId - The plugin that the database manager should be created for. Plugin names\n   * should be unique as they are used to look up database config overrides under\n   * `backend.database.plugin`.\n   */\n  forPlugin(pluginId: string): PluginDatabaseManager {\n    const _this = this;\n\n    return {\n      getClient(): Promise<Knex> {\n        return _this.getDatabase(pluginId);\n      },\n      migrations: {\n        skip: false,\n        ..._this.options?.migrations,\n      },\n    };\n  }\n\n  /**\n   * Provides the canonical database name for a given plugin.\n   *\n   * This method provides the effective database name which is determined using global\n   * and plugin specific database config. If no explicit database name is configured\n   * and `pluginDivisionMode` is not `schema`, this method will provide a generated name\n   * which is the pluginId prefixed with 'backstage_plugin_'. If `pluginDivisionMode` is\n   * `schema`, it will fallback to using the default database for the knex instance.\n   *\n   * @param pluginId - Lookup the database name for given plugin\n   * @returns String representing the plugin's database name\n   */\n  private getDatabaseName(pluginId: string): string | undefined {\n    const connection = this.getConnectionConfig(pluginId);\n\n    if (this.getClientType(pluginId).client.includes('sqlite3')) {\n      const sqliteFilename: string | undefined = (\n        connection as Knex.Sqlite3ConnectionConfig\n      ).filename;\n\n      if (sqliteFilename === ':memory:') {\n        return sqliteFilename;\n      }\n\n      const sqliteDirectory =\n        (connection as { directory?: string }).directory ?? '.';\n\n      return path.join(sqliteDirectory, sqliteFilename ?? `${pluginId}.sqlite`);\n    }\n\n    const databaseName = (connection as Knex.ConnectionConfig)?.database;\n\n    // `pluginDivisionMode` as `schema` should use overridden databaseName if supplied or fallback to default knex database\n    if (this.getPluginDivisionModeConfig() === 'schema') {\n      return databaseName;\n    }\n\n    // all other supported databases should fallback to an auto-prefixed name\n    return databaseName ?? `${this.prefix}${pluginId}`;\n  }\n\n  /**\n   * Provides the client type which should be used for a given plugin.\n   *\n   * The client type is determined by plugin specific config if present.\n   * Otherwise the base client is used as the fallback.\n   *\n   * @param pluginId - Plugin to get the client type for\n   * @returns Object with client type returned as `client` and boolean\n   *          representing whether or not the client was overridden as\n   *          `overridden`\n   */\n  private getClientType(pluginId: string): {\n    client: string;\n    overridden: boolean;\n  } {\n    const pluginClient = this.config.getOptionalString(\n      `${pluginPath(pluginId)}.client`,\n    );\n\n    const baseClient = this.config.getString('client');\n    const client = pluginClient ?? baseClient;\n    return {\n      client,\n      overridden: client !== baseClient,\n    };\n  }\n\n  /**\n   * Provides the knexConfig which should be used for a given plugin.\n   *\n   * @param pluginId - Plugin to get the knexConfig for\n   * @returns The merged knexConfig value or undefined if it isn't specified\n   */\n  private getAdditionalKnexConfig(pluginId: string): JsonObject | undefined {\n    const pluginConfig = this.config\n      .getOptionalConfig(`${pluginPath(pluginId)}.knexConfig`)\n      ?.get<JsonObject>();\n\n    const baseConfig = this.config\n      .getOptionalConfig('knexConfig')\n      ?.get<JsonObject>();\n\n    return merge(baseConfig, pluginConfig);\n  }\n\n  private getEnsureExistsConfig(pluginId: string): boolean {\n    const baseConfig = this.config.getOptionalBoolean('ensureExists') ?? true;\n    return (\n      this.config.getOptionalBoolean(`${pluginPath(pluginId)}.ensureExists`) ??\n      baseConfig\n    );\n  }\n\n  private getPluginDivisionModeConfig(): string {\n    return this.config.getOptionalString('pluginDivisionMode') ?? 'database';\n  }\n\n  /**\n   * Provides a Knex connection plugin config by combining base and plugin\n   * config.\n   *\n   * This method provides a baseConfig for a plugin database connector. If the\n   * client type has not been overridden, the global connection config will be\n   * included with plugin specific config as the base. Values from the plugin\n   * connection take precedence over the base. Base database name is omitted for\n   * all supported databases excluding SQLite unless `pluginDivisionMode` is set\n   * to `schema`.\n   */\n  private getConnectionConfig(\n    pluginId: string,\n  ): Partial<Knex.StaticConnectionConfig> {\n    const { client, overridden } = this.getClientType(pluginId);\n\n    let baseConnection = normalizeConnection(\n      this.config.get('connection'),\n      this.config.getString('client'),\n    );\n\n    if (\n      client.includes('sqlite3') &&\n      'filename' in baseConnection &&\n      baseConnection.filename !== ':memory:'\n    ) {\n      throw new Error(\n        '`connection.filename` is not supported for the base sqlite connection. Prefer `connection.directory` or provide a filename for the plugin connection instead.',\n      );\n    }\n\n    // Databases cannot be shared unless the `pluginDivisionMode` is set to `schema`. The\n    // `database` property from the base connection is omitted unless `pluginDivisionMode`\n    // is set to `schema`. SQLite3's `filename` property is an exception as this is used as a\n    // directory elsewhere so we preserve `filename`.\n    if (this.getPluginDivisionModeConfig() !== 'schema') {\n      baseConnection = omit(baseConnection, 'database');\n    }\n\n    // get and normalize optional plugin specific database connection\n    const connection = normalizeConnection(\n      this.config.getOptional(`${pluginPath(pluginId)}.connection`),\n      client,\n    );\n\n    return {\n      // include base connection if client type has not been overridden\n      ...(overridden ? {} : baseConnection),\n      ...connection,\n    };\n  }\n\n  /**\n   * Provides a Knex database config for a given plugin.\n   *\n   * This method provides a Knex configuration object along with the plugin's\n   * client type.\n   *\n   * @param pluginId - The plugin that the database config should correspond with\n   */\n  private getConfigForPlugin(pluginId: string): Knex.Config {\n    const { client } = this.getClientType(pluginId);\n\n    return {\n      ...this.getAdditionalKnexConfig(pluginId),\n      client,\n      connection: this.getConnectionConfig(pluginId),\n    };\n  }\n\n  /**\n   * Provides a partial `Knex.Config` database schema override for a given\n   * plugin.\n   *\n   * @param pluginId - Target plugin to get database schema override\n   * @returns Partial `Knex.Config` with database schema override\n   */\n  private getSchemaOverrides(pluginId: string): Knex.Config | undefined {\n    return createSchemaOverride(this.getClientType(pluginId).client, pluginId);\n  }\n\n  /**\n   * Provides a partial `Knex.Config`• database name override for a given plugin.\n   *\n   * @param pluginId - Target plugin to get database name override\n   * @returns Partial `Knex.Config` with database name override\n   */\n  private getDatabaseOverrides(pluginId: string): Knex.Config {\n    const databaseName = this.getDatabaseName(pluginId);\n    return databaseName\n      ? createNameOverride(this.getClientType(pluginId).client, databaseName)\n      : {};\n  }\n\n  /**\n   * Provides a scoped Knex client for a plugin as per application config.\n   *\n   * @param pluginId - Plugin to get a Knex client for\n   * @returns Promise which resolves to a scoped Knex database client for a\n   *          plugin\n   */\n  private async getDatabase(pluginId: string): Promise<Knex> {\n    const pluginConfig = new ConfigReader(\n      this.getConfigForPlugin(pluginId) as JsonObject,\n    );\n\n    const databaseName = this.getDatabaseName(pluginId);\n    if (databaseName && this.getEnsureExistsConfig(pluginId)) {\n      try {\n        await ensureDatabaseExists(pluginConfig, databaseName);\n      } catch (error) {\n        throw new Error(\n          `Failed to connect to the database to make sure that '${databaseName}' exists, ${error}`,\n        );\n      }\n    }\n\n    let schemaOverrides;\n    if (this.getPluginDivisionModeConfig() === 'schema') {\n      try {\n        schemaOverrides = this.getSchemaOverrides(pluginId);\n        await ensureSchemaExists(pluginConfig, pluginId);\n      } catch (error) {\n        throw new Error(\n          `Failed to connect to the database to make sure that schema for plugin '${pluginId}' exists, ${error}`,\n        );\n      }\n    }\n\n    const databaseClientOverrides = mergeDatabaseConfig(\n      {},\n      this.getDatabaseOverrides(pluginId),\n      schemaOverrides,\n    );\n\n    return createDatabaseClient(pluginConfig, databaseClientOverrides);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to deduce whether a thrown error is a database conflict.\n *\n * @public\n * @param e - A thrown error\n * @returns True if the error looks like it was a conflict error thrown by a\n *          known database engine\n */\nexport function isDatabaseConflictError(e: unknown) {\n  const message = (e as any)?.message;\n\n  return (\n    typeof message === 'string' &&\n    (/SQLITE_CONSTRAINT(?:_UNIQUE)?: UNIQUE/.test(message) ||\n      /UNIQUE constraint failed:/.test(message) ||\n      /unique constraint/.test(message))\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { CorsOptions } from 'cors';\nimport { Minimatch } from 'minimatch';\n\nexport type BaseOptions = {\n  listenPort?: string | number;\n  listenHost?: string;\n};\n\nexport type HttpsSettings = {\n  certificate: CertificateGenerationOptions | CertificateReferenceOptions;\n};\n\nexport type CertificateReferenceOptions = {\n  key: string;\n  cert: string;\n};\n\nexport type CertificateGenerationOptions = {\n  hostname: string;\n};\n\nexport type CertificateAttributes = {\n  commonName: string;\n};\n\n/**\n * A map from CSP directive names to their values.\n */\nexport type CspOptions = Record<string, string[]>;\n\ntype StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[];\n\ntype CustomOrigin = (\n  requestOrigin: string | undefined,\n  callback: (err: Error | null, origin?: StaticOrigin) => void,\n) => void;\n\n/**\n * Reads some base options out of a config object.\n *\n * @param config - The root of a backend config object\n * @returns A base options object\n *\n * @example\n * ```json\n * {\n *   baseUrl: \"http://localhost:7007\",\n *   listen: \"0.0.0.0:7007\"\n * }\n * ```\n */\nexport function readBaseOptions(config: Config): BaseOptions {\n  if (typeof config.get('listen') === 'string') {\n    // TODO(freben): Expand this to support more addresses and perhaps optional\n    const { host, port } = parseListenAddress(config.getString('listen'));\n\n    return removeUnknown({\n      listenPort: port,\n      listenHost: host,\n    });\n  }\n\n  const port = config.getOptional('listen.port');\n  if (\n    typeof port !== 'undefined' &&\n    typeof port !== 'number' &&\n    typeof port !== 'string'\n  ) {\n    throw new Error(\n      `Invalid type in config for key 'backend.listen.port', got ${typeof port}, wanted string or number`,\n    );\n  }\n\n  return removeUnknown({\n    listenPort: port,\n    listenHost: config.getOptionalString('listen.host'),\n    baseUrl: config.getOptionalString('baseUrl'),\n  });\n}\n\n/**\n * Attempts to read a CORS options object from the root of a config object.\n *\n * @param config - The root of a backend config object\n * @returns A CORS options object, or undefined if not specified\n *\n * @example\n * ```json\n * {\n *   cors: {\n *    origin: \"http://localhost:3000\",\n *    credentials: true\n *   }\n * }\n * ```\n */\nexport function readCorsOptions(config: Config): CorsOptions | undefined {\n  const cc = config.getOptionalConfig('cors');\n  if (!cc) {\n    return undefined;\n  }\n\n  return removeUnknown({\n    origin: createCorsOriginMatcher(getOptionalStringOrStrings(cc, 'origin')),\n    methods: getOptionalStringOrStrings(cc, 'methods'),\n    allowedHeaders: getOptionalStringOrStrings(cc, 'allowedHeaders'),\n    exposedHeaders: getOptionalStringOrStrings(cc, 'exposedHeaders'),\n    credentials: cc.getOptionalBoolean('credentials'),\n    maxAge: cc.getOptionalNumber('maxAge'),\n    preflightContinue: cc.getOptionalBoolean('preflightContinue'),\n    optionsSuccessStatus: cc.getOptionalNumber('optionsSuccessStatus'),\n  });\n}\n\n/**\n * Attempts to read a CSP options object from the root of a config object.\n *\n * @param config - The root of a backend config object\n * @returns A CSP options object, or undefined if not specified. Values can be\n *          false as well, which means to remove the default behavior for that\n *          key.\n *\n * @example\n * ```yaml\n * backend:\n *   csp:\n *     connect-src: [\"'self'\", 'http:', 'https:']\n *     upgrade-insecure-requests: false\n * ```\n */\nexport function readCspOptions(\n  config: Config,\n): Record<string, string[] | false> | undefined {\n  const cc = config.getOptionalConfig('csp');\n  if (!cc) {\n    return undefined;\n  }\n\n  const result: Record<string, string[] | false> = {};\n  for (const key of cc.keys()) {\n    if (cc.get(key) === false) {\n      result[key] = false;\n    } else {\n      result[key] = cc.getStringArray(key);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Attempts to read a https settings object from the root of a config object.\n *\n * @param config - The root of a backend config object\n * @returns A https settings object, or undefined if not specified\n *\n * @example\n * ```json\n * {\n *   https: {\n *    certificate: ...\n *   }\n * }\n * ```\n */\nexport function readHttpsSettings(config: Config): HttpsSettings | undefined {\n  const https = config.getOptional('https');\n  if (https === true) {\n    const baseUrl = config.getString('baseUrl');\n    let hostname;\n    try {\n      hostname = new URL(baseUrl).hostname;\n    } catch (error) {\n      throw new Error(`Invalid backend.baseUrl \"${baseUrl}\"`);\n    }\n\n    return { certificate: { hostname } };\n  }\n\n  const cc = config.getOptionalConfig('https');\n  if (!cc) {\n    return undefined;\n  }\n\n  const certificateConfig = cc.get('certificate');\n\n  const cfg = {\n    certificate: certificateConfig,\n  };\n\n  return removeUnknown(cfg as HttpsSettings);\n}\n\nfunction getOptionalStringOrStrings(\n  config: Config,\n  key: string,\n): string | string[] | undefined {\n  const value = config.getOptional(key);\n  if (value === undefined || isStringOrStrings(value)) {\n    return value;\n  }\n  throw new Error(`Expected string or array of strings, got ${typeof value}`);\n}\n\nfunction createCorsOriginMatcher(\n  originValue: string | string[] | undefined,\n): CustomOrigin | undefined {\n  if (originValue === undefined) {\n    return originValue;\n  }\n\n  if (!isStringOrStrings(originValue)) {\n    throw new Error(\n      `Expected string or array of strings, got ${typeof originValue}`,\n    );\n  }\n\n  const allowedOrigin =\n    typeof originValue === 'string' ? [originValue] : originValue;\n\n  const allowedOriginPatterns =\n    allowedOrigin?.map(\n      pattern => new Minimatch(pattern, { nocase: true, noglobstar: true }),\n    ) ?? [];\n\n  return (origin, callback) => {\n    return callback(\n      null,\n      allowedOriginPatterns.some(pattern => pattern.match(origin ?? '')),\n    );\n  };\n}\n\nfunction isStringOrStrings(value: any): value is string | string[] {\n  return typeof value === 'string' || isStringArray(value);\n}\n\nfunction isStringArray(value: any): value is string[] {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n  for (const v of value) {\n    if (typeof v !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction removeUnknown<T extends object>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([, v]) => v !== undefined),\n  ) as T;\n}\n\nfunction parseListenAddress(value: string): { host?: string; port?: number } {\n  const parts = value.split(':');\n  if (parts.length === 1) {\n    return { port: parseInt(parts[0], 10) };\n  }\n  if (parts.length === 2) {\n    return { host: parts[0], port: parseInt(parts[1], 10) };\n  }\n  throw new Error(\n    `Unable to parse listen address ${value}, expected <port> or <host>:<port>`,\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Find all active hot module APIs of all ancestors of a module, including the module itself\nfunction findAllAncestors(_module: NodeModule): NodeModule[] {\n  const ancestors = new Array<NodeModule>();\n  const parentIds = new Set<string | number>();\n\n  function add(id: string | number, m: NodeModule) {\n    if (parentIds.has(id)) {\n      return;\n    }\n    parentIds.add(id);\n    ancestors.push(m);\n\n    for (const parentId of (m as any).parents) {\n      const parent = require.cache[parentId];\n      if (parent) {\n        add(parentId, parent);\n      }\n    }\n  }\n\n  add(_module.id, _module);\n\n  return ancestors;\n}\n\n/**\n * useHotCleanup allows cleanup of ongoing effects when a module is\n * hot-reloaded during development. The cleanup function will be called\n * whenever the module itself or any of its parent modules is hot-reloaded.\n *\n * Useful for cleaning intervals, timers, requests etc\n *\n * @public\n * @example\n * ```ts\n * const intervalId = setInterval(doStuff, 1000);\n * useHotCleanup(module, () => clearInterval(intervalId));\n * ```\n * @param _module - Reference to the current module where you invoke the fn\n * @param cancelEffect - Fn that cleans up the ongoing effects\n */\nexport function useHotCleanup(_module: NodeModule, cancelEffect: () => void) {\n  if (_module.hot) {\n    const ancestors = findAllAncestors(_module);\n    let cancelled = false;\n\n    const handler = () => {\n      if (!cancelled) {\n        cancelled = true;\n        cancelEffect();\n      }\n    };\n\n    for (const m of ancestors) {\n      m.hot?.addDisposeHandler(handler);\n    }\n  }\n}\n\nconst CURRENT_HOT_MEMOIZE_INDEX_KEY = 'backstage.io/hmr-memoize-key';\n\n/**\n * Memoizes a generated value across hot-module reloads. This is useful for\n * stateful parts of the backend, e.g. to retain a database.\n *\n * @public\n * @example\n * ```ts\n * const db = useHotMemoize(module, () => createDB(dbParams));\n * ```\n *\n * **NOTE:** Do not use inside conditionals or loops,\n * same rules as for hooks apply (https://reactjs.org/docs/hooks-rules.html)\n *\n * @param _module - Reference to the current module where you invoke the fn\n * @param valueFactory - Fn that returns the value you want to memoize\n */\nexport function useHotMemoize<T>(\n  _module: NodeModule,\n  valueFactory: () => T,\n): T {\n  if (!_module.hot) {\n    return valueFactory();\n  }\n\n  // When starting blank, reset the counter\n  if (!_module.hot.data?.[CURRENT_HOT_MEMOIZE_INDEX_KEY]) {\n    for (const ancestor of findAllAncestors(_module)) {\n      ancestor.hot?.addDisposeHandler(data => {\n        data[CURRENT_HOT_MEMOIZE_INDEX_KEY] = 1;\n      });\n    }\n\n    _module.hot.data = {\n      ..._module.hot.data,\n      [CURRENT_HOT_MEMOIZE_INDEX_KEY]: 1,\n    };\n  }\n\n  // Store data per module, based on the order of the code invocation\n  const index = _module.hot.data[CURRENT_HOT_MEMOIZE_INDEX_KEY]++;\n  const value = _module.hot.data[index] ?? valueFactory();\n\n  // Always add a handler that, upon a HMR event, reinstates the value.\n  _module.hot.addDisposeHandler(data => {\n    data[index] = value;\n  });\n\n  return value;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthenticationError,\n  ConflictError,\n  ErrorResponseBody,\n  InputError,\n  NotAllowedError,\n  NotFoundError,\n  NotModifiedError,\n  serializeError,\n} from '@backstage/errors';\nimport { ErrorRequestHandler, NextFunction, Request, Response } from 'express';\nimport { Logger } from 'winston';\nimport { getRootLogger } from '../logging';\n\n/**\n * Options passed to the {@link errorHandler} middleware.\n *\n * @public\n */\nexport type ErrorHandlerOptions = {\n  /**\n   * Whether error response bodies should show error stack traces or not.\n   *\n   * If not specified, by default shows stack traces only in development mode.\n   */\n  showStackTraces?: boolean;\n\n  /**\n   * Logger instance to log errors.\n   *\n   * If not specified, the root logger will be used.\n   */\n  logger?: Logger;\n\n  /**\n   * Whether any 4xx errors should be logged or not.\n   *\n   * If not specified, default to only logging 5xx errors.\n   */\n  logClientErrors?: boolean;\n};\n\n/**\n * Express middleware to handle errors during request processing.\n *\n * This is commonly the very last middleware in the chain.\n *\n * Its primary purpose is not to do translation of business logic exceptions,\n * but rather to be a global catch-all for uncaught \"fatal\" errors that are\n * expected to result in a 500 error. However, it also does handle some common\n * error types (such as http-error exceptions) and returns the enclosed status\n * code accordingly.\n *\n * @public\n * @returns An Express error request handler\n */\nexport function errorHandler(\n  options: ErrorHandlerOptions = {},\n): ErrorRequestHandler {\n  const showStackTraces =\n    options.showStackTraces ?? process.env.NODE_ENV === 'development';\n\n  const logger = (options.logger || getRootLogger()).child({\n    type: 'errorHandler',\n  });\n\n  return (error: Error, req: Request, res: Response, next: NextFunction) => {\n    const statusCode = getStatusCode(error);\n    if (options.logClientErrors || statusCode >= 500) {\n      logger.error(error);\n    }\n\n    if (res.headersSent) {\n      // If the headers have already been sent, do not send the response again\n      // as this will throw an error in the backend.\n      next(error);\n      return;\n    }\n\n    const body: ErrorResponseBody = {\n      error: serializeError(error, { includeStack: showStackTraces }),\n      request: { method: req.method, url: req.url },\n      response: { statusCode },\n    };\n\n    res.status(statusCode).json(body);\n  };\n}\n\nfunction getStatusCode(error: Error): number {\n  // Look for common http library status codes\n  const knownStatusCodeFields = ['statusCode', 'status'];\n  for (const field of knownStatusCodeFields) {\n    const statusCode = (error as any)[field];\n    if (\n      typeof statusCode === 'number' &&\n      (statusCode | 0) === statusCode && // is whole integer\n      statusCode >= 100 &&\n      statusCode <= 599\n    ) {\n      return statusCode;\n    }\n  }\n\n  // Handle well-known error types\n  switch (error.name) {\n    case NotModifiedError.name:\n      return 304;\n    case InputError.name:\n      return 400;\n    case AuthenticationError.name:\n      return 401;\n    case NotAllowedError.name:\n      return 403;\n    case NotFoundError.name:\n      return 404;\n    case ConflictError.name:\n      return 409;\n    default:\n      break;\n  }\n\n  // Fall back to internal server error\n  return 500;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NextFunction, Request, RequestHandler, Response } from 'express';\n\n/**\n * Express middleware to handle requests for missing routes.\n *\n * Should be used as the very last handler in the chain, as it unconditionally\n * returns a 404 status.\n *\n * @public\n * @returns An Express request handler\n */\nexport function notFoundHandler(): RequestHandler {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  return (_request: Request, response: Response, _next: NextFunction) => {\n    response.status(404).send();\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RequestHandler } from 'express';\nimport { Logger } from 'winston';\nimport morgan from 'morgan';\nimport { getRootLogger } from '../logging';\n\n/**\n * Logs incoming requests.\n *\n * @public\n * @param logger - An optional logger to use. If not specified, the root logger will be used.\n * @returns An Express request handler\n */\nexport function requestLoggingHandler(logger?: Logger): RequestHandler {\n  const actualLogger = (logger || getRootLogger()).child({\n    type: 'incomingRequest',\n  });\n\n  return morgan('combined', {\n    stream: {\n      write(message: String) {\n        actualLogger.info(message.trimRight());\n      },\n    },\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NextFunction, Request, Response, RequestHandler } from 'express';\n\n/**\n * A custom status checking function, passed to {@link statusCheckHandler} and\n * {@link createStatusCheckRouter}.\n *\n * @public\n */\nexport type StatusCheck = () => Promise<any>;\n\n/**\n * Options passed to {@link statusCheckHandler}.\n *\n * @public\n */\nexport interface StatusCheckHandlerOptions {\n  /**\n   * Optional status function which returns a message.\n   */\n  statusCheck?: StatusCheck;\n}\n\n/**\n * Express middleware for status checks.\n *\n * This is commonly used to implement healthcheck and readiness routes.\n *\n * @public\n * @param options - An optional configuration object.\n * @returns An Express error request handler\n */\nexport async function statusCheckHandler(\n  options: StatusCheckHandlerOptions = {},\n): Promise<RequestHandler> {\n  const statusCheck: StatusCheck = options.statusCheck\n    ? options.statusCheck\n    : () => Promise.resolve({ status: 'ok' });\n\n  return async (_request: Request, response: Response, next: NextFunction) => {\n    try {\n      const status = await statusCheck();\n      response.status(200).header('').send(status);\n    } catch (err) {\n      next(err);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath, dirname } from 'path';\nimport express from 'express';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { Logger } from 'winston';\nimport { HttpsSettings } from './config';\n\nconst ALMOST_MONTH_IN_MS = 25 * 24 * 60 * 60 * 1000;\n\nconst IP_HOSTNAME_REGEX = /:|^\\d+\\.\\d+\\.\\d+\\.\\d+$/;\n\n/**\n * Creates a Http server instance based on an Express application.\n *\n * @param app - The Express application object\n * @param logger - Optional Winston logger object\n * @returns A Http server instance\n *\n */\nexport function createHttpServer(\n  app: express.Express,\n  logger?: Logger,\n): http.Server {\n  logger?.info('Initializing http server');\n\n  return http.createServer(app);\n}\n\n/**\n * Creates a Https server instance based on an Express application.\n *\n * @param app - The Express application object\n * @param httpsSettings - HttpsSettings for self-signed certificate generation\n * @param logger - Optional Winston logger object\n * @returns A Https server instance\n *\n */\nexport async function createHttpsServer(\n  app: express.Express,\n  httpsSettings: HttpsSettings,\n  logger?: Logger,\n): Promise<http.Server> {\n  logger?.info('Initializing https server');\n\n  let credentials: { key: string | Buffer; cert: string | Buffer };\n\n  if ('hostname' in httpsSettings?.certificate) {\n    credentials = await getGeneratedCertificate(\n      httpsSettings.certificate.hostname,\n      logger,\n    );\n  } else {\n    logger?.info('Loading certificate from config');\n\n    credentials = {\n      key: httpsSettings?.certificate?.key,\n      cert: httpsSettings?.certificate?.cert,\n    };\n  }\n\n  if (!credentials.key || !credentials.cert) {\n    throw new Error('Invalid HTTPS credentials');\n  }\n\n  return https.createServer(credentials, app) as http.Server;\n}\n\nasync function getGeneratedCertificate(hostname: string, logger?: Logger) {\n  const hasModules = await fs.pathExists('node_modules');\n  let certPath;\n  if (hasModules) {\n    certPath = resolvePath(\n      'node_modules/.cache/backstage-backend/dev-cert.pem',\n    );\n    await fs.ensureDir(dirname(certPath));\n  } else {\n    certPath = resolvePath('.dev-cert.pem');\n  }\n\n  let cert = undefined;\n  if (await fs.pathExists(certPath)) {\n    const stat = await fs.stat(certPath);\n    const ageMs = Date.now() - stat.ctimeMs;\n    if (stat.isFile() && ageMs < ALMOST_MONTH_IN_MS) {\n      cert = await fs.readFile(certPath);\n    }\n  }\n\n  if (cert) {\n    logger?.info('Using existing self-signed certificate');\n    return {\n      key: cert,\n      cert: cert,\n    };\n  }\n\n  logger?.info('Generating new self-signed certificate');\n  const newCert = await createCertificate(hostname);\n  await fs.writeFile(certPath, newCert.cert + newCert.key, 'utf8');\n  return newCert;\n}\n\nasync function createCertificate(hostname: string) {\n  const attributes = [\n    {\n      name: 'commonName',\n      value: 'dev-cert',\n    },\n  ];\n\n  const sans = [\n    {\n      type: 2, // DNS\n      value: 'localhost',\n    },\n    {\n      type: 2,\n      value: 'localhost.localdomain',\n    },\n    {\n      type: 2,\n      value: '[::1]',\n    },\n    {\n      type: 7, // IP\n      ip: '127.0.0.1',\n    },\n    {\n      type: 7,\n      ip: 'fe80::1',\n    },\n  ];\n\n  // Add hostname from backend.baseUrl if it doesn't already exist in our list of SANs\n  if (!sans.find(({ value, ip }) => value === hostname || ip === hostname)) {\n    sans.push(\n      IP_HOSTNAME_REGEX.test(hostname)\n        ? {\n            type: 7,\n            ip: hostname,\n          }\n        : {\n            type: 2,\n            value: hostname,\n          },\n    );\n  }\n\n  const params = {\n    algorithm: 'sha256',\n    keySize: 2048,\n    days: 30,\n    extensions: [\n      {\n        name: 'keyUsage',\n        keyCertSign: true,\n        digitalSignature: true,\n        nonRepudiation: true,\n        keyEncipherment: true,\n        dataEncipherment: true,\n      },\n      {\n        name: 'extKeyUsage',\n        serverAuth: true,\n        clientAuth: true,\n        codeSigning: true,\n        timeStamping: true,\n      },\n      {\n        name: 'subjectAltName',\n        altNames: sans,\n      },\n    ],\n  };\n\n  return new Promise<{ key: string; cert: string }>((resolve, reject) =>\n    require('selfsigned').generate(\n      attributes,\n      params,\n      (err: Error, bundle: { private: string; cert: string }) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve({ key: bundle.private, cert: bundle.cert });\n        }\n      },\n    ),\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport compression from 'compression';\nimport cors from 'cors';\nimport express, { Router, ErrorRequestHandler } from 'express';\nimport helmet from 'helmet';\nimport { ContentSecurityPolicyOptions } from 'helmet/dist/types/middlewares/content-security-policy';\nimport * as http from 'http';\nimport stoppable from 'stoppable';\nimport { Logger } from 'winston';\nimport { useHotCleanup } from '../../hot';\nimport { getRootLogger } from '../../logging';\nimport {\n  errorHandler as defaultErrorHandler,\n  notFoundHandler,\n  requestLoggingHandler as defaultRequestLoggingHandler,\n} from '../../middleware';\nimport { RequestLoggingHandlerFactory, ServiceBuilder } from '../types';\nimport {\n  CspOptions,\n  HttpsSettings,\n  readBaseOptions,\n  readCorsOptions,\n  readCspOptions,\n  readHttpsSettings,\n} from './config';\nimport { createHttpServer, createHttpsServer } from './hostFactory';\n\nexport const DEFAULT_PORT = 7007;\n// '' is express default, which listens to all interfaces\nconst DEFAULT_HOST = '';\n\nexport class ServiceBuilderImpl implements ServiceBuilder {\n  private port: number | undefined;\n  private host: string | undefined;\n  private logger: Logger | undefined;\n  private corsOptions: cors.CorsOptions | undefined;\n  private cspOptions: Record<string, string[] | false> | undefined;\n  private httpsSettings: HttpsSettings | undefined;\n  private routers: [string, Router][];\n  private requestLoggingHandler: RequestLoggingHandlerFactory | undefined;\n  private errorHandler: ErrorRequestHandler | undefined;\n  private useDefaultErrorHandler: boolean;\n  // Reference to the module where builder is created - needed for hot module\n  // reloading\n  private module: NodeModule;\n\n  constructor(moduleRef: NodeModule) {\n    this.routers = [];\n    this.module = moduleRef;\n    this.useDefaultErrorHandler = true;\n  }\n\n  loadConfig(config: Config): ServiceBuilder {\n    const backendConfig = config.getOptionalConfig('backend');\n    if (!backendConfig) {\n      return this;\n    }\n\n    const baseOptions = readBaseOptions(backendConfig);\n    if (baseOptions.listenPort) {\n      this.port =\n        typeof baseOptions.listenPort === 'string'\n          ? parseInt(baseOptions.listenPort, 10)\n          : baseOptions.listenPort;\n    }\n    if (baseOptions.listenHost) {\n      this.host = baseOptions.listenHost;\n    }\n\n    const corsOptions = readCorsOptions(backendConfig);\n    if (corsOptions) {\n      this.corsOptions = corsOptions;\n    }\n\n    const cspOptions = readCspOptions(backendConfig);\n    if (cspOptions) {\n      this.cspOptions = cspOptions;\n    }\n\n    const httpsSettings = readHttpsSettings(backendConfig);\n    if (httpsSettings) {\n      this.httpsSettings = httpsSettings;\n    }\n\n    return this;\n  }\n\n  setPort(port: number): ServiceBuilder {\n    this.port = port;\n    return this;\n  }\n\n  setHost(host: string): ServiceBuilder {\n    this.host = host;\n    return this;\n  }\n\n  setLogger(logger: Logger): ServiceBuilder {\n    this.logger = logger;\n    return this;\n  }\n\n  setHttpsSettings(settings: HttpsSettings): ServiceBuilder {\n    this.httpsSettings = settings;\n    return this;\n  }\n\n  enableCors(options: cors.CorsOptions): ServiceBuilder {\n    this.corsOptions = options;\n    return this;\n  }\n\n  setCsp(options: CspOptions): ServiceBuilder {\n    this.cspOptions = options;\n    return this;\n  }\n\n  addRouter(root: string, router: Router): ServiceBuilder {\n    this.routers.push([root, router]);\n    return this;\n  }\n\n  setRequestLoggingHandler(\n    requestLoggingHandler: RequestLoggingHandlerFactory,\n  ) {\n    this.requestLoggingHandler = requestLoggingHandler;\n    return this;\n  }\n\n  setErrorHandler(errorHandler: ErrorRequestHandler) {\n    this.errorHandler = errorHandler;\n    return this;\n  }\n\n  disableDefaultErrorHandler() {\n    this.useDefaultErrorHandler = false;\n    return this;\n  }\n\n  async start(): Promise<http.Server> {\n    const app = express();\n    const { port, host, logger, corsOptions, httpsSettings, helmetOptions } =\n      this.getOptions();\n\n    app.use(helmet(helmetOptions));\n    if (corsOptions) {\n      app.use(cors(corsOptions));\n    }\n    app.use(compression());\n    app.use(\n      (this.requestLoggingHandler ?? defaultRequestLoggingHandler)(logger),\n    );\n    for (const [root, route] of this.routers) {\n      app.use(root, route);\n    }\n    app.use(notFoundHandler());\n\n    if (this.errorHandler) {\n      app.use(this.errorHandler);\n    }\n\n    if (this.useDefaultErrorHandler) {\n      app.use(defaultErrorHandler());\n    }\n\n    const server: http.Server = httpsSettings\n      ? await createHttpsServer(app, httpsSettings, logger)\n      : createHttpServer(app, logger);\n    const stoppableServer = stoppable(server, 0);\n\n    useHotCleanup(this.module, () =>\n      stoppableServer.stop((e: any) => {\n        if (e) console.error(e);\n      }),\n    );\n\n    return new Promise((resolve, reject) => {\n      function handleStartupError(e: unknown) {\n        server.close();\n        reject(e);\n      }\n\n      server.on('error', handleStartupError);\n\n      server.listen(port, host, () => {\n        server.off('error', handleStartupError);\n        logger.info(`Listening on ${host}:${port}`);\n        resolve(stoppableServer);\n      });\n    });\n  }\n\n  private getOptions() {\n    return {\n      port: this.port ?? DEFAULT_PORT,\n      host: this.host ?? DEFAULT_HOST,\n      logger: this.logger ?? getRootLogger(),\n      corsOptions: this.corsOptions,\n      httpsSettings: this.httpsSettings,\n      helmetOptions: {\n        contentSecurityPolicy: {\n          useDefaults: false,\n          directives: applyCspDirectives(this.cspOptions),\n        },\n        // These are all disabled in order to maintain backwards compatibility\n        // when bumping helmet v5. We can't enable these by default because\n        // there is no way for users to configure them.\n        // TODO(Rugvip): We should give control of this setup to consumers\n        crossOriginEmbedderPolicy: false,\n        crossOriginOpenerPolicy: false,\n        crossOriginResourcePolicy: false,\n        originAgentCluster: false,\n      },\n    };\n  }\n}\n\nexport function applyCspDirectives(\n  directives: Record<string, string[] | false> | undefined,\n): ContentSecurityPolicyOptions['directives'] {\n  const result: ContentSecurityPolicyOptions['directives'] =\n    helmet.contentSecurityPolicy.getDefaultDirectives();\n\n  // TODO(Rugvip): We currently use non-precompiled AJV for validation in the frontend, which uses eval.\n  //               It should be replaced by any other solution that doesn't require unsafe-eval.\n  result['script-src'] = [\"'self'\", \"'unsafe-eval'\"];\n\n  // TODO(Rugvip): This is removed so that we maintained backwards compatibility\n  //               when bumping to helmet v5, we could remove this as well as\n  //               skip setting `useDefaults: false` in the future.\n  delete result['form-action'];\n\n  if (directives) {\n    for (const [key, value] of Object.entries(directives)) {\n      if (value === false) {\n        delete result[key];\n      } else {\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { PluginEndpointDiscovery } from './types';\nimport { readBaseOptions } from '../service/lib/config';\nimport { DEFAULT_PORT } from '../service/lib/ServiceBuilderImpl';\n\n/**\n * SingleHostDiscovery is a basic PluginEndpointDiscovery implementation\n * that assumes that all plugins are hosted in a single deployment.\n *\n * The deployment may be scaled horizontally, as long as the external URL\n * is the same for all instances. However, internal URLs will always be\n * resolved to the same host, so there won't be any balancing of internal traffic.\n *\n * @public\n */\nexport class SingleHostDiscovery implements PluginEndpointDiscovery {\n  /**\n   * Creates a new SingleHostDiscovery discovery instance by reading\n   * from the `backend` config section, specifically the `.baseUrl` for\n   * discovering the external URL, and the `.listen` and `.https` config\n   * for the internal one.\n   *\n   * The basePath defaults to `/api`, meaning the default full internal\n   * path for the `catalog` plugin will be `http://localhost:7007/api/catalog`.\n   */\n  static fromConfig(config: Config, options?: { basePath?: string }) {\n    const basePath = options?.basePath ?? '/api';\n    const externalBaseUrl = config.getString('backend.baseUrl');\n\n    const { listenHost = '::', listenPort = DEFAULT_PORT } = readBaseOptions(\n      config.getConfig('backend'),\n    );\n    const protocol = config.has('backend.https') ? 'https' : 'http';\n\n    // Translate bind-all to localhost, and support IPv6\n    let host = listenHost;\n    if (host === '::') {\n      // We use localhost instead of ::1, since IPv6-compatible systems should default\n      // to using IPv6 when they see localhost, but if the system doesn't support IPv6\n      // things will still work.\n      host = 'localhost';\n    } else if (host === '0.0.0.0') {\n      host = '127.0.0.1';\n    }\n    if (host.includes(':')) {\n      host = `[${host}]`;\n    }\n\n    const internalBaseUrl = `${protocol}://${host}:${listenPort}`;\n\n    return new SingleHostDiscovery(\n      internalBaseUrl + basePath,\n      externalBaseUrl + basePath,\n    );\n  }\n\n  private constructor(\n    private readonly internalBaseUrl: string,\n    private readonly externalBaseUrl: string,\n  ) {}\n\n  async getBaseUrl(pluginId: string): Promise<string> {\n    return `${this.internalBaseUrl}/${pluginId}`;\n  }\n\n  async getExternalBaseUrl(pluginId: string): Promise<string> {\n    return `${this.externalBaseUrl}/${pluginId}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isChildPath } from '@backstage/cli-common';\nimport { NotAllowedError } from '@backstage/errors';\nimport { resolve as resolvePath } from 'path';\n\n/**\n * Resolve a path relative to the root of a package directory.\n * Additional path arguments are resolved relative to the package dir.\n *\n * This is particularly useful when you want to access assets shipped with\n * your backend plugin package. When doing so, do not forget to include the assets\n * in your published package by adding them to `files` in your `package.json`.\n *\n * @public\n */\nexport function resolvePackagePath(name: string, ...paths: string[]) {\n  const req =\n    typeof __non_webpack_require__ === 'undefined'\n      ? require\n      : __non_webpack_require__;\n\n  return resolvePath(req.resolve(`${name}/package.json`), '..', ...paths);\n}\n\n/**\n * Resolves a target path from a base path while guaranteeing that the result is\n * a path that point to or within the base path. This is useful for resolving\n * paths from user input, as it otherwise opens up for vulnerabilities.\n *\n * @public\n * @param base - The base directory to resolve the path from.\n * @param path - The target path, relative or absolute\n * @returns A path that is guaranteed to point to or within the base path.\n */\nexport function resolveSafeChildPath(base: string, path: string): string {\n  const targetPath = resolvePath(base, path);\n\n  if (!isChildPath(base, targetPath)) {\n    throw new NotAllowedError(\n      'Relative path is not allowed to refer to a directory outside its parent',\n    );\n  }\n\n  return targetPath;\n}\n\n// Re-export isChildPath so that backend packages don't need to depend on cli-common\nexport { isChildPath };\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConflictError } from '@backstage/errors';\nimport getRawBody from 'raw-body';\nimport { Readable } from 'stream';\nimport {\n  ReadUrlResponse,\n  ReadUrlResponseFactoryFromStreamOptions,\n} from './types';\n\n/**\n * Utility class for UrlReader implementations to create valid ReadUrlResponse\n * instances from common response primitives.\n *\n * @public\n */\nexport class ReadUrlResponseFactory {\n  /**\n   * Resolves a ReadUrlResponse from a Readable stream.\n   */\n  static async fromReadable(\n    stream: Readable,\n    options?: ReadUrlResponseFactoryFromStreamOptions,\n  ): Promise<ReadUrlResponse> {\n    // Reference to eventual buffer enables callers to call buffer() multiple\n    // times without consequence.\n    let buffer: Promise<Buffer>;\n\n    // Prevent \"stream is not readable\" errors from bubbling up.\n    const conflictError = new ConflictError(\n      'Cannot use buffer() and stream() from the same ReadUrlResponse',\n    );\n    let hasCalledStream = false;\n    let hasCalledBuffer = false;\n\n    return {\n      buffer: () => {\n        hasCalledBuffer = true;\n        if (hasCalledStream) throw conflictError;\n        if (buffer) return buffer;\n        buffer = getRawBody(stream);\n        return buffer;\n      },\n      stream: () => {\n        hasCalledStream = true;\n        if (hasCalledBuffer) throw conflictError;\n        return stream;\n      },\n      etag: options?.etag,\n    };\n  }\n\n  /**\n   * Resolves a ReadUrlResponse from an old-style NodeJS.ReadableStream.\n   */\n  static async fromNodeJSReadable(\n    oldStyleStream: NodeJS.ReadableStream,\n    options?: ReadUrlResponseFactoryFromStreamOptions,\n  ): Promise<ReadUrlResponse> {\n    const readable = new Readable().wrap(oldStyleStream);\n    return ReadUrlResponseFactory.fromReadable(readable, options);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AzureIntegration,\n  getAzureCommitsUrl,\n  getAzureDownloadUrl,\n  getAzureFileFetchUrl,\n  getAzureRequestOptions,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport fetch, { Response } from 'node-fetch';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  ReadTreeResponseFactory,\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n  ReadUrlOptions,\n  ReadUrlResponse,\n} from './types';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Implements a {@link UrlReader} for Azure repos.\n *\n * @public\n */\nexport class AzureUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    return integrations.azure.list().map(integration => {\n      const reader = new AzureUrlReader(integration, { treeResponseFactory });\n      const predicate = (url: URL) => url.host === integration.config.host;\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: AzureIntegration,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n  ) {}\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    // TODO: etag is not implemented yet.\n    const { signal } = options ?? {};\n\n    const builtUrl = getAzureFileFetchUrl(url);\n\n    let response: Response;\n    try {\n      response = await fetch(builtUrl, {\n        ...getAzureRequestOptions(this.integration.config),\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    // for private repos when PAT is not valid, Azure API returns a http status code 203 with sign in page html\n    if (response.ok && response.status !== 203) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body);\n    }\n\n    const message = `${url} could not be read as ${builtUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { etag, filter, signal } = options ?? {};\n\n    // TODO: Support filepath based reading tree feature like other providers\n\n    // Get latest commit SHA\n\n    const commitsAzureResponse = await fetch(\n      getAzureCommitsUrl(url),\n      getAzureRequestOptions(this.integration.config),\n    );\n    if (!commitsAzureResponse.ok) {\n      const message = `Failed to read tree from ${url}, ${commitsAzureResponse.status} ${commitsAzureResponse.statusText}`;\n      if (commitsAzureResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    const commitSha = (await commitsAzureResponse.json()).value[0].commitId;\n    if (etag && etag === commitSha) {\n      throw new NotModifiedError();\n    }\n\n    const archiveAzureResponse = await fetch(getAzureDownloadUrl(url), {\n      ...getAzureRequestOptions(this.integration.config, {\n        Accept: 'application/zip',\n      }),\n      // TODO(freben): The signal cast is there because pre-3.x versions of\n      // node-fetch have a very slightly deviating AbortSignal type signature.\n      // The difference does not affect us in practice however. The cast can be\n      // removed after we support ESM for CLI dependencies and migrate to\n      // version 3 of node-fetch.\n      // https://github.com/backstage/backstage/issues/8242\n      ...(signal && { signal: signal as any }),\n    });\n    if (!archiveAzureResponse.ok) {\n      const message = `Failed to read tree from ${url}, ${archiveAzureResponse.status} ${archiveAzureResponse.statusText}`;\n      if (archiveAzureResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    // When downloading a zip archive from azure on a subpath we get an extra directory\n    // layer added at the top. With for example the file /a/b/c.txt and a download of\n    // /a/b, we'll see /b/c.txt in the zip archive. This picks out /b so that we can remove it.\n    let subpath;\n    const path = new URL(url).searchParams.get('path');\n    if (path) {\n      subpath = path.split('/').filter(Boolean).slice(-1)[0];\n    }\n\n    return await this.deps.treeResponseFactory.fromZipArchive({\n      stream: archiveAzureResponse.body as unknown as Readable,\n      etag: commitSha,\n      filter,\n      subpath,\n    });\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const treeUrl = new URL(url);\n\n    const path = treeUrl.searchParams.get('path');\n    const matcher = path && new Minimatch(path.replace(/^\\/+/, ''));\n\n    // TODO(freben): For now, read the entire repo and filter through that. In\n    // a future improvement, we could be smart and try to deduce that non-glob\n    // prefixes (like for filepaths such as some-prefix/**/a.yaml) can be used\n    // to get just that part of the repo.\n    treeUrl.searchParams.delete('path');\n\n    const tree = await this.readTree(treeUrl.toString(), {\n      etag: options?.etag,\n      signal: options?.signal,\n      filter: p => (matcher ? matcher.match(p) : true),\n    });\n    const files = await tree.files();\n\n    return {\n      etag: tree.etag,\n      files: files.map(file => ({\n        url: this.integration.resolveUrl({\n          url: `/${file.path}`,\n          base: url,\n        }),\n        content: file.content,\n      })),\n    };\n  }\n\n  toString() {\n    const { host, token } = this.integration.config;\n    return `azure{host=${host},authed=${Boolean(token)}}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  BitbucketCloudIntegration,\n  getBitbucketCloudDefaultBranch,\n  getBitbucketCloudDownloadUrl,\n  getBitbucketCloudFileFetchUrl,\n  getBitbucketCloudRequestOptions,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport fetch, { Response } from 'node-fetch';\nimport parseGitUrl from 'git-url-parse';\nimport { trimEnd } from 'lodash';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport {\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadTreeResponseFactory,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Implements a {@link UrlReader} for files from Bitbucket Cloud.\n *\n * @public\n */\nexport class BitbucketCloudUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    return integrations.bitbucketCloud.list().map(integration => {\n      const reader = new BitbucketCloudUrlReader(integration, {\n        treeResponseFactory,\n      });\n      const predicate = (url: URL) => url.host === integration.config.host;\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: BitbucketCloudIntegration,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n  ) {\n    const { host, username, appPassword } = integration.config;\n\n    if (username && !appPassword) {\n      throw new Error(\n        `Bitbucket Cloud integration for '${host}' has configured a username but is missing a required appPassword.`,\n      );\n    }\n  }\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const { etag, signal } = options ?? {};\n    const bitbucketUrl = getBitbucketCloudFileFetchUrl(\n      url,\n      this.integration.config,\n    );\n    const requestOptions = getBitbucketCloudRequestOptions(\n      this.integration.config,\n    );\n\n    let response: Response;\n    try {\n      response = await fetch(bitbucketUrl.toString(), {\n        headers: {\n          ...requestOptions.headers,\n          ...(etag && { 'If-None-Match': etag }),\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can be\n        // removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    const message = `${url} could not be read as ${bitbucketUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { filepath } = parseGitUrl(url);\n\n    const lastCommitShortHash = await this.getLastCommitShortHash(url);\n    if (options?.etag && options.etag === lastCommitShortHash) {\n      throw new NotModifiedError();\n    }\n\n    const downloadUrl = await getBitbucketCloudDownloadUrl(\n      url,\n      this.integration.config,\n    );\n    const archiveResponse = await fetch(\n      downloadUrl,\n      getBitbucketCloudRequestOptions(this.integration.config),\n    );\n    if (!archiveResponse.ok) {\n      const message = `Failed to read tree from ${url}, ${archiveResponse.status} ${archiveResponse.statusText}`;\n      if (archiveResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    return await this.deps.treeResponseFactory.fromTarArchive({\n      stream: archiveResponse.body as unknown as Readable,\n      subpath: filepath,\n      etag: lastCommitShortHash,\n      filter: options?.filter,\n    });\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const { filepath } = parseGitUrl(url);\n    const matcher = new Minimatch(filepath);\n\n    // TODO(freben): For now, read the entire repo and filter through that. In\n    // a future improvement, we could be smart and try to deduce that non-glob\n    // prefixes (like for filepaths such as some-prefix/**/a.yaml) can be used\n    // to get just that part of the repo.\n    const treeUrl = trimEnd(url.replace(filepath, ''), '/');\n\n    const tree = await this.readTree(treeUrl, {\n      etag: options?.etag,\n      filter: path => matcher.match(path),\n    });\n    const files = await tree.files();\n\n    return {\n      etag: tree.etag,\n      files: files.map(file => ({\n        url: this.integration.resolveUrl({\n          url: `/${file.path}`,\n          base: url,\n        }),\n        content: file.content,\n      })),\n    };\n  }\n\n  toString() {\n    const { host, username, appPassword } = this.integration.config;\n    const authed = Boolean(username && appPassword);\n    return `bitbucketCloud{host=${host},authed=${authed}}`;\n  }\n\n  private async getLastCommitShortHash(url: string): Promise<string> {\n    const { name: repoName, owner: project, ref } = parseGitUrl(url);\n\n    let branch = ref;\n    if (!branch) {\n      branch = await getBitbucketCloudDefaultBranch(\n        url,\n        this.integration.config,\n      );\n    }\n\n    const commitsApiUrl = `${this.integration.config.apiBaseUrl}/repositories/${project}/${repoName}/commits/${branch}`;\n\n    const commitsResponse = await fetch(\n      commitsApiUrl,\n      getBitbucketCloudRequestOptions(this.integration.config),\n    );\n    if (!commitsResponse.ok) {\n      const message = `Failed to retrieve commits from ${commitsApiUrl}, ${commitsResponse.status} ${commitsResponse.statusText}`;\n      if (commitsResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    const commits = await commitsResponse.json();\n    if (\n      commits &&\n      commits.values &&\n      commits.values.length > 0 &&\n      commits.values[0].hash\n    ) {\n      return commits.values[0].hash.substring(0, 12);\n    }\n\n    throw new Error(`Failed to read response from ${commitsApiUrl}`);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  BitbucketIntegration,\n  getBitbucketDefaultBranch,\n  getBitbucketDownloadUrl,\n  getBitbucketFileFetchUrl,\n  getBitbucketRequestOptions,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport fetch, { Response } from 'node-fetch';\nimport parseGitUrl from 'git-url-parse';\nimport { trimEnd } from 'lodash';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport { Logger } from 'winston';\nimport {\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadTreeResponseFactory,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Implements a {@link UrlReader} for files from Bitbucket v1 and v2 APIs, such\n * as the one exposed by Bitbucket Cloud itself.\n *\n * @public\n * @deprecated in favor of BitbucketCloudUrlReader and BitbucketServerUrlReader\n */\nexport class BitbucketUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, logger, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    return integrations.bitbucket\n      .list()\n      .filter(\n        item =>\n          !integrations.bitbucketCloud.byHost(item.config.host) &&\n          !integrations.bitbucketServer.byHost(item.config.host),\n      )\n      .map(integration => {\n        const reader = new BitbucketUrlReader(integration, logger, {\n          treeResponseFactory,\n        });\n        const predicate = (url: URL) => url.host === integration.config.host;\n        return { reader, predicate };\n      });\n  };\n\n  constructor(\n    private readonly integration: BitbucketIntegration,\n    logger: Logger,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n  ) {\n    const { host, token, username, appPassword } = integration.config;\n    const replacement =\n      host === 'bitbucket.org' ? 'bitbucketCloud' : 'bitbucketServer';\n    logger.warn(\n      `[Deprecated] Please migrate from \"integrations.bitbucket\" to \"integrations.${replacement}\".`,\n    );\n\n    if (!token && username && !appPassword) {\n      throw new Error(\n        `Bitbucket integration for '${host}' has configured a username but is missing a required appPassword.`,\n      );\n    }\n  }\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const { etag, signal } = options ?? {};\n    const bitbucketUrl = getBitbucketFileFetchUrl(url, this.integration.config);\n    const requestOptions = getBitbucketRequestOptions(this.integration.config);\n\n    let response: Response;\n    try {\n      response = await fetch(bitbucketUrl.toString(), {\n        headers: {\n          ...requestOptions.headers,\n          ...(etag && { 'If-None-Match': etag }),\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can be\n        // removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    const message = `${url} could not be read as ${bitbucketUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { filepath } = parseGitUrl(url);\n\n    const lastCommitShortHash = await this.getLastCommitShortHash(url);\n    if (options?.etag && options.etag === lastCommitShortHash) {\n      throw new NotModifiedError();\n    }\n\n    const downloadUrl = await getBitbucketDownloadUrl(\n      url,\n      this.integration.config,\n    );\n    const archiveBitbucketResponse = await fetch(\n      downloadUrl,\n      getBitbucketRequestOptions(this.integration.config),\n    );\n    if (!archiveBitbucketResponse.ok) {\n      const message = `Failed to read tree from ${url}, ${archiveBitbucketResponse.status} ${archiveBitbucketResponse.statusText}`;\n      if (archiveBitbucketResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    return await this.deps.treeResponseFactory.fromTarArchive({\n      stream: archiveBitbucketResponse.body as unknown as Readable,\n      subpath: filepath,\n      etag: lastCommitShortHash,\n      filter: options?.filter,\n    });\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const { filepath } = parseGitUrl(url);\n    const matcher = new Minimatch(filepath);\n\n    // TODO(freben): For now, read the entire repo and filter through that. In\n    // a future improvement, we could be smart and try to deduce that non-glob\n    // prefixes (like for filepaths such as some-prefix/**/a.yaml) can be used\n    // to get just that part of the repo.\n    const treeUrl = trimEnd(url.replace(filepath, ''), '/');\n\n    const tree = await this.readTree(treeUrl, {\n      etag: options?.etag,\n      filter: path => matcher.match(path),\n    });\n    const files = await tree.files();\n\n    return {\n      etag: tree.etag,\n      files: files.map(file => ({\n        url: this.integration.resolveUrl({\n          url: `/${file.path}`,\n          base: url,\n        }),\n        content: file.content,\n      })),\n    };\n  }\n\n  toString() {\n    const { host, token, username, appPassword } = this.integration.config;\n    let authed = Boolean(token);\n    if (!authed) {\n      authed = Boolean(username && appPassword);\n    }\n    return `bitbucket{host=${host},authed=${authed}}`;\n  }\n\n  private async getLastCommitShortHash(url: string): Promise<string> {\n    const { resource, name: repoName, owner: project, ref } = parseGitUrl(url);\n\n    let branch = ref;\n    if (!branch) {\n      branch = await getBitbucketDefaultBranch(url, this.integration.config);\n    }\n\n    const isHosted = resource === 'bitbucket.org';\n    // Bitbucket Server https://docs.atlassian.com/bitbucket-server/rest/7.9.0/bitbucket-rest.html#idp222\n    const commitsApiUrl = isHosted\n      ? `${this.integration.config.apiBaseUrl}/repositories/${project}/${repoName}/commits/${branch}`\n      : `${this.integration.config.apiBaseUrl}/projects/${project}/repos/${repoName}/commits`;\n\n    const commitsResponse = await fetch(\n      commitsApiUrl,\n      getBitbucketRequestOptions(this.integration.config),\n    );\n    if (!commitsResponse.ok) {\n      const message = `Failed to retrieve commits from ${commitsApiUrl}, ${commitsResponse.status} ${commitsResponse.statusText}`;\n      if (commitsResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    const commits = await commitsResponse.json();\n    if (isHosted) {\n      if (\n        commits &&\n        commits.values &&\n        commits.values.length > 0 &&\n        commits.values[0].hash\n      ) {\n        return commits.values[0].hash.substring(0, 12);\n      }\n    } else {\n      if (\n        commits &&\n        commits.values &&\n        commits.values.length > 0 &&\n        commits.values[0].id\n      ) {\n        return commits.values[0].id.substring(0, 12);\n      }\n    }\n\n    throw new Error(`Failed to read response from ${commitsApiUrl}`);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  BitbucketServerIntegration,\n  getBitbucketServerDownloadUrl,\n  getBitbucketServerFileFetchUrl,\n  getBitbucketServerRequestOptions,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport fetch, { Response } from 'node-fetch';\nimport parseGitUrl from 'git-url-parse';\nimport { trimEnd } from 'lodash';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport {\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadTreeResponseFactory,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Implements a {@link UrlReader} for files from Bitbucket Server APIs.\n *\n * @public\n */\nexport class BitbucketServerUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    return integrations.bitbucketServer.list().map(integration => {\n      const reader = new BitbucketServerUrlReader(integration, {\n        treeResponseFactory,\n      });\n      const predicate = (url: URL) => url.host === integration.config.host;\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: BitbucketServerIntegration,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n  ) {}\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const { etag, signal } = options ?? {};\n    const bitbucketUrl = getBitbucketServerFileFetchUrl(\n      url,\n      this.integration.config,\n    );\n    const requestOptions = getBitbucketServerRequestOptions(\n      this.integration.config,\n    );\n\n    let response: Response;\n    try {\n      response = await fetch(bitbucketUrl.toString(), {\n        headers: {\n          ...requestOptions.headers,\n          ...(etag && { 'If-None-Match': etag }),\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can be\n        // removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    const message = `${url} could not be read as ${bitbucketUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { filepath } = parseGitUrl(url);\n\n    const lastCommitShortHash = await this.getLastCommitShortHash(url);\n    if (options?.etag && options.etag === lastCommitShortHash) {\n      throw new NotModifiedError();\n    }\n\n    const downloadUrl = await getBitbucketServerDownloadUrl(\n      url,\n      this.integration.config,\n    );\n    const archiveResponse = await fetch(\n      downloadUrl,\n      getBitbucketServerRequestOptions(this.integration.config),\n    );\n    if (!archiveResponse.ok) {\n      const message = `Failed to read tree from ${url}, ${archiveResponse.status} ${archiveResponse.statusText}`;\n      if (archiveResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    return await this.deps.treeResponseFactory.fromTarArchive({\n      stream: archiveResponse.body as unknown as Readable,\n      subpath: filepath,\n      etag: lastCommitShortHash,\n      filter: options?.filter,\n    });\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const { filepath } = parseGitUrl(url);\n    const matcher = new Minimatch(filepath);\n\n    // TODO(freben): For now, read the entire repo and filter through that. In\n    // a future improvement, we could be smart and try to deduce that non-glob\n    // prefixes (like for filepaths such as some-prefix/**/a.yaml) can be used\n    // to get just that part of the repo.\n    const treeUrl = trimEnd(url.replace(filepath, ''), '/');\n\n    const tree = await this.readTree(treeUrl, {\n      etag: options?.etag,\n      filter: path => matcher.match(path),\n    });\n    const files = await tree.files();\n\n    return {\n      etag: tree.etag,\n      files: files.map(file => ({\n        url: this.integration.resolveUrl({\n          url: `/${file.path}`,\n          base: url,\n        }),\n        content: file.content,\n      })),\n    };\n  }\n\n  toString() {\n    const { host, token } = this.integration.config;\n    const authed = Boolean(token);\n    return `bitbucketServer{host=${host},authed=${authed}}`;\n  }\n\n  private async getLastCommitShortHash(url: string): Promise<string> {\n    const { name: repoName, owner: project } = parseGitUrl(url);\n\n    // Bitbucket Server https://docs.atlassian.com/bitbucket-server/rest/7.9.0/bitbucket-rest.html#idp222\n    const commitsApiUrl = `${this.integration.config.apiBaseUrl}/projects/${project}/repos/${repoName}/commits`;\n\n    const commitsResponse = await fetch(\n      commitsApiUrl,\n      getBitbucketServerRequestOptions(this.integration.config),\n    );\n    if (!commitsResponse.ok) {\n      const message = `Failed to retrieve commits from ${commitsApiUrl}, ${commitsResponse.status} ${commitsResponse.statusText}`;\n      if (commitsResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    const commits = await commitsResponse.json();\n    if (\n      commits &&\n      commits.values &&\n      commits.values.length > 0 &&\n      commits.values[0].id\n    ) {\n      return commits.values[0].id.substring(0, 12);\n    }\n\n    throw new Error(`Failed to read response from ${commitsApiUrl}`);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport git, {\n  ProgressCallback,\n  MergeResult,\n  ReadCommitResult,\n} from 'isomorphic-git';\nimport http from 'isomorphic-git/http/node';\nimport fs from 'fs-extra';\nimport { Logger } from 'winston';\n\n/*\nprovider    username         password\nGitHub      'x-access-token' token\nBitBucket   'x-token-auth'   token\nGitLab      'oauth2'         token\nFrom : https://isomorphic-git.org/docs/en/onAuth with fix for GitHub\n\nAzure       'notempty'      token\n*/\n\n/**\n * A convenience wrapper around the `isomorphic-git` library.\n *\n * @public\n */\nexport class Git {\n  private constructor(\n    private readonly config: {\n      username?: string;\n      password?: string;\n      logger?: Logger;\n    },\n  ) {}\n\n  async add(options: { dir: string; filepath: string }): Promise<void> {\n    const { dir, filepath } = options;\n    this.config.logger?.info(`Adding file {dir=${dir},filepath=${filepath}}`);\n\n    return git.add({ fs, dir, filepath });\n  }\n\n  async addRemote(options: {\n    dir: string;\n    remote: string;\n    url: string;\n  }): Promise<void> {\n    const { dir, url, remote } = options;\n    this.config.logger?.info(\n      `Creating new remote {dir=${dir},remote=${remote},url=${url}}`,\n    );\n    return git.addRemote({ fs, dir, remote, url });\n  }\n\n  async commit(options: {\n    dir: string;\n    message: string;\n    author: { name: string; email: string };\n    committer: { name: string; email: string };\n  }): Promise<string> {\n    const { dir, message, author, committer } = options;\n    this.config.logger?.info(\n      `Committing file to repo {dir=${dir},message=${message}}`,\n    );\n\n    return git.commit({ fs, dir, message, author, committer });\n  }\n\n  /** https://isomorphic-git.org/docs/en/clone */\n  async clone(options: {\n    url: string;\n    dir: string;\n    ref?: string;\n    depth?: number;\n    noCheckout?: boolean;\n  }): Promise<void> {\n    const { url, dir, ref, depth, noCheckout } = options;\n    this.config.logger?.info(`Cloning repo {dir=${dir},url=${url}}`);\n    return git.clone({\n      fs,\n      http,\n      url,\n      dir,\n      ref,\n      singleBranch: true,\n      depth: depth ?? 1,\n      noCheckout,\n      onProgress: this.onProgressHandler(),\n      headers: {\n        'user-agent': 'git/@isomorphic-git',\n      },\n      onAuth: this.onAuth,\n    });\n  }\n\n  /** https://isomorphic-git.org/docs/en/currentBranch */\n  async currentBranch(options: {\n    dir: string;\n    fullName?: boolean;\n  }): Promise<string | undefined> {\n    const { dir, fullName = false } = options;\n    return git.currentBranch({ fs, dir, fullname: fullName }) as Promise<\n      string | undefined\n    >;\n  }\n\n  /** https://isomorphic-git.org/docs/en/fetch */\n  async fetch(options: { dir: string; remote?: string }): Promise<void> {\n    const { dir, remote = 'origin' } = options;\n    this.config.logger?.info(\n      `Fetching remote=${remote} for repository {dir=${dir}}`,\n    );\n    await git.fetch({\n      fs,\n      http,\n      dir,\n      remote,\n      onProgress: this.onProgressHandler(),\n      headers: { 'user-agent': 'git/@isomorphic-git' },\n      onAuth: this.onAuth,\n    });\n  }\n\n  async init(options: { dir: string; defaultBranch?: string }): Promise<void> {\n    const { dir, defaultBranch = 'master' } = options;\n    this.config.logger?.info(`Init git repository {dir=${dir}}`);\n\n    return git.init({\n      fs,\n      dir,\n      defaultBranch,\n    });\n  }\n\n  /** https://isomorphic-git.org/docs/en/merge */\n  async merge(options: {\n    dir: string;\n    theirs: string;\n    ours?: string;\n    author: { name: string; email: string };\n    committer: { name: string; email: string };\n  }): Promise<MergeResult> {\n    const { dir, theirs, ours, author, committer } = options;\n    this.config.logger?.info(\n      `Merging branch '${theirs}' into '${ours}' for repository {dir=${dir}}`,\n    );\n\n    // If ours is undefined, current branch is used.\n    return git.merge({\n      fs,\n      dir,\n      ours,\n      theirs,\n      author,\n      committer,\n    });\n  }\n\n  async push(options: { dir: string; remote: string }) {\n    const { dir, remote } = options;\n    this.config.logger?.info(\n      `Pushing directory to remote {dir=${dir},remote=${remote}}`,\n    );\n    return git.push({\n      fs,\n      dir,\n      http,\n      onProgress: this.onProgressHandler(),\n      headers: {\n        'user-agent': 'git/@isomorphic-git',\n      },\n      remote: remote,\n      onAuth: this.onAuth,\n    });\n  }\n\n  /** https://isomorphic-git.org/docs/en/readCommit */\n  async readCommit(options: {\n    dir: string;\n    sha: string;\n  }): Promise<ReadCommitResult> {\n    const { dir, sha } = options;\n    return git.readCommit({ fs, dir, oid: sha });\n  }\n\n  /** https://isomorphic-git.org/docs/en/resolveRef */\n  async resolveRef(options: { dir: string; ref: string }): Promise<string> {\n    const { dir, ref } = options;\n    return git.resolveRef({ fs, dir, ref });\n  }\n\n  /** https://isomorphic-git.org/docs/en/log */\n  async log(options: {\n    dir: string;\n    ref?: string;\n  }): Promise<ReadCommitResult[]> {\n    const { dir, ref } = options;\n    return git.log({\n      fs,\n      dir,\n      ref: ref ?? 'HEAD',\n    });\n  }\n\n  private onAuth = () => ({\n    username: this.config.username,\n    password: this.config.password,\n  });\n\n  private onProgressHandler = (): ProgressCallback => {\n    let currentPhase = '';\n\n    return event => {\n      if (currentPhase !== event.phase) {\n        currentPhase = event.phase;\n        this.config.logger?.info(event.phase);\n      }\n      const total = event.total\n        ? `${Math.round((event.loaded / event.total) * 100)}%`\n        : event.loaded;\n      this.config.logger?.debug(`status={${event.phase},total={${total}}}`);\n    };\n  };\n\n  static fromAuth = (options: {\n    username?: string;\n    password?: string;\n    logger?: Logger;\n  }) => {\n    const { username, password, logger } = options;\n    return new Git({ username, password, logger });\n  };\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Git } from '../scm';\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  GerritIntegration,\n  getGerritCloneRepoUrl,\n  getGerritBranchApiUrl,\n  getGerritFileContentsApiUrl,\n  getGerritRequestOptions,\n  parseGerritJsonResponse,\n  parseGerritGitilesUrl,\n} from '@backstage/integration';\nimport { Base64Decode } from 'base64-stream';\nimport concatStream from 'concat-stream';\nimport fs from 'fs-extra';\nimport fetch, { Response } from 'node-fetch';\nimport os from 'os';\nimport { join as joinPath } from 'path';\nimport tar from 'tar';\nimport { pipeline as pipelineCb, Readable } from 'stream';\nimport { promisify } from 'util';\nimport {\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadTreeResponseFactory,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport { ScmIntegrations } from '@backstage/integration';\n\nconst pipeline = promisify(pipelineCb);\n\nconst createTemporaryDirectory = async (workDir: string): Promise<string> =>\n  await fs.mkdtemp(joinPath(workDir, '/gerrit-clone-'));\n\n/**\n * Implements a {@link UrlReader} for files in Gerrit.\n *\n * @remarks\n * To be able to link to Git contents for Gerrit providers in a user friendly\n * way we are depending on that there is a Gitiles installation somewhere\n * that we can link to. It is perfectly possible to integrate Gerrit with\n * Backstage without Gitiles since all API calls goes directly to Gerrit.\n *\n * The \"host\" variable in the config is the Gerrit host. The address where\n * Gitiles is installed may be on the same host but it could be on a\n * separate host. For example a Gerrit instance could be hosted on\n * \"gerrit-review.company.com\" but the repos could be browsable on a separate\n * host, e.g. \"gerrit.company.com\" and the human readable URL would then\n * not point to the API host.\n *\n * @public\n */\nexport class GerritUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    if (!integrations.gerrit) {\n      return [];\n    }\n    const workDir =\n      config.getOptionalString('backend.workingDirectory') ?? os.tmpdir();\n    return integrations.gerrit.list().map(integration => {\n      const reader = new GerritUrlReader(\n        integration,\n        { treeResponseFactory },\n        workDir,\n      );\n      const predicate = (url: URL) => {\n        const gitilesUrl = new URL(integration.config.gitilesBaseUrl!);\n        // If gitilesUrl is not specified it will default to\n        // \"integration.config.host\".\n        return url.host === gitilesUrl.host;\n      };\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: GerritIntegration,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n    private readonly workDir: string,\n  ) {}\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const apiUrl = getGerritFileContentsApiUrl(this.integration.config, url);\n    let response: Response;\n    try {\n      response = await fetch(apiUrl, {\n        method: 'GET',\n        ...getGerritRequestOptions(this.integration.config),\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        signal: options?.signal as any,\n      });\n    } catch (e) {\n      throw new Error(`Unable to read gerrit file ${url}, ${e}`);\n    }\n    if (response.ok) {\n      let responseBody: string;\n      return {\n        buffer: async () => {\n          if (responseBody === undefined) {\n            responseBody = await response.text();\n          }\n          return Buffer.from(responseBody, 'base64');\n        },\n        stream: () => {\n          const readable = new Readable().wrap(response.body);\n          return readable.pipe(new Base64Decode());\n        },\n      };\n    }\n    if (response.status === 404) {\n      throw new NotFoundError(`File ${url} not found.`);\n    }\n    throw new Error(\n      `${url} could not be read as ${apiUrl}, ${response.status} ${response.statusText}`,\n    );\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { filePath } = parseGerritGitilesUrl(this.integration.config, url);\n    const apiUrl = getGerritBranchApiUrl(this.integration.config, url);\n    let response: Response;\n    try {\n      response = await fetch(apiUrl, {\n        method: 'GET',\n        ...getGerritRequestOptions(this.integration.config),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read branch state ${url}, ${e}`);\n    }\n\n    if (response.status === 404) {\n      throw new NotFoundError(`Not found: ${url}`);\n    }\n\n    if (!response.ok) {\n      throw new Error(\n        `${url} could not be read as ${apiUrl}, ${response.status} ${response.statusText}`,\n      );\n    }\n    const branchInfo = (await parseGerritJsonResponse(response as any)) as {\n      revision: string;\n    };\n    if (options?.etag === branchInfo.revision) {\n      throw new NotModifiedError();\n    }\n\n    const git = Git.fromAuth({\n      username: this.integration.config.username,\n      password: this.integration.config.password,\n    });\n    const tempDir = await createTemporaryDirectory(this.workDir);\n    const cloneUrl = getGerritCloneRepoUrl(this.integration.config, url);\n    try {\n      // The \"fromTarArchive\" function will strip the top level directory so\n      // an additional directory level is created when we clone.\n      await git.clone({\n        url: cloneUrl,\n        dir: joinPath(tempDir, 'repo'),\n        ref: branchInfo.revision,\n        depth: 1,\n      });\n\n      const data = await new Promise<Buffer>(async resolve => {\n        await pipeline(\n          tar.create({ cwd: tempDir }, ['']),\n          concatStream(resolve),\n        );\n      });\n      const tarArchive = Readable.from(data);\n      return await this.deps.treeResponseFactory.fromTarArchive({\n        stream: tarArchive as unknown as Readable,\n        subpath: filePath === '/' ? undefined : filePath,\n        etag: branchInfo.revision,\n        filter: options?.filter,\n      });\n    } catch (error) {\n      throw new Error(`Could not clone ${cloneUrl}: ${error}`);\n    } finally {\n      await fs.rm(tempDir, { recursive: true, force: true });\n    }\n  }\n\n  async search(): Promise<SearchResponse> {\n    throw new Error('GerritReader does not implement search');\n  }\n\n  toString() {\n    const { host, password } = this.integration.config;\n    return `gerrit{host=${host},authed=${Boolean(password)}}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGitHubFileFetchUrl,\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  GitHubIntegration,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport { RestEndpointMethodTypes } from '@octokit/rest';\nimport fetch, { RequestInit, Response } from 'node-fetch';\nimport parseGitUrl from 'git-url-parse';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport {\n  ReadTreeResponseFactory,\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  SearchOptions,\n  SearchResponse,\n  SearchResponseFile,\n  UrlReader,\n  ReadUrlOptions,\n  ReadUrlResponse,\n} from './types';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\nexport type GhRepoResponse =\n  RestEndpointMethodTypes['repos']['get']['response']['data'];\nexport type GhBranchResponse =\n  RestEndpointMethodTypes['repos']['getBranch']['response']['data'];\nexport type GhTreeResponse =\n  RestEndpointMethodTypes['git']['getTree']['response']['data'];\nexport type GhBlobResponse =\n  RestEndpointMethodTypes['git']['getBlob']['response']['data'];\n\n/**\n * Implements a {@link UrlReader} for files through the GitHub v3 APIs, such as\n * the one exposed by GitHub itself.\n *\n * @public\n */\nexport class GithubUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    const credentialsProvider =\n      DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n    return integrations.github.list().map(integration => {\n      const reader = new GithubUrlReader(integration, {\n        treeResponseFactory,\n        credentialsProvider,\n      });\n      const predicate = (url: URL) => url.host === integration.config.host;\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: GitHubIntegration,\n    private readonly deps: {\n      treeResponseFactory: ReadTreeResponseFactory;\n      credentialsProvider: GithubCredentialsProvider;\n    },\n  ) {\n    if (!integration.config.apiBaseUrl && !integration.config.rawBaseUrl) {\n      throw new Error(\n        `GitHub integration '${integration.title}' must configure an explicit apiBaseUrl or rawBaseUrl`,\n      );\n    }\n  }\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const credentials = await this.deps.credentialsProvider.getCredentials({\n      url,\n    });\n    const ghUrl = getGitHubFileFetchUrl(\n      url,\n      this.integration.config,\n      credentials,\n    );\n\n    let response: Response;\n    try {\n      response = await fetch(ghUrl, {\n        headers: {\n          ...credentials?.headers,\n          ...(options?.etag && { 'If-None-Match': options.etag }),\n          Accept: 'application/vnd.github.v3.raw',\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        signal: options?.signal as any,\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    let message = `${url} could not be read as ${ghUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n\n    // GitHub returns a 403 response with a couple of headers indicating rate\n    // limit status. See more in the GitHub docs:\n    // https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting\n    if (\n      response.status === 403 &&\n      response.headers.get('X-RateLimit-Remaining') === '0'\n    ) {\n      message += ' (rate limit exceeded)';\n    }\n\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const repoDetails = await this.getRepoDetails(url);\n    const commitSha = repoDetails.branch.commit.sha!;\n\n    if (options?.etag && options.etag === commitSha) {\n      throw new NotModifiedError();\n    }\n\n    const { filepath } = parseGitUrl(url);\n    const { headers } = await this.deps.credentialsProvider.getCredentials({\n      url,\n    });\n\n    return this.doReadTree(\n      repoDetails.repo.archive_url,\n      commitSha,\n      filepath,\n      // TODO(freben): The signal cast is there because pre-3.x versions of\n      // node-fetch have a very slightly deviating AbortSignal type signature.\n      // The difference does not affect us in practice however. The cast can be\n      // removed after we support ESM for CLI dependencies and migrate to\n      // version 3 of node-fetch.\n      // https://github.com/backstage/backstage/issues/8242\n      { headers, signal: options?.signal as any },\n      options,\n    );\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const repoDetails = await this.getRepoDetails(url);\n    const commitSha = repoDetails.branch.commit.sha!;\n\n    if (options?.etag && options.etag === commitSha) {\n      throw new NotModifiedError();\n    }\n\n    const { filepath } = parseGitUrl(url);\n    const { headers } = await this.deps.credentialsProvider.getCredentials({\n      url,\n    });\n\n    const files = await this.doSearch(\n      url,\n      repoDetails.repo.trees_url,\n      repoDetails.repo.archive_url,\n      commitSha,\n      filepath,\n      { headers, signal: options?.signal as any },\n    );\n\n    return { files, etag: commitSha };\n  }\n\n  toString() {\n    const { host, token } = this.integration.config;\n    return `github{host=${host},authed=${Boolean(token)}}`;\n  }\n\n  private async doReadTree(\n    archiveUrl: string,\n    sha: string,\n    subpath: string,\n    init: RequestInit,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    // archive_url looks like \"https://api.github.com/repos/owner/repo/{archive_format}{/ref}\"\n    const archive = await this.fetchResponse(\n      archiveUrl\n        .replace('{archive_format}', 'tarball')\n        .replace('{/ref}', `/${sha}`),\n      init,\n    );\n\n    return await this.deps.treeResponseFactory.fromTarArchive({\n      // TODO(Rugvip): Underlying implementation of fetch will be node-fetch, we probably want\n      //               to stick to using that in exclusively backend code.\n      stream: archive.body as unknown as Readable,\n      subpath,\n      etag: sha,\n      filter: options?.filter,\n    });\n  }\n\n  private async doSearch(\n    url: string,\n    treesUrl: string,\n    archiveUrl: string,\n    sha: string,\n    query: string,\n    init: RequestInit,\n  ): Promise<SearchResponseFile[]> {\n    function pathToUrl(path: string): string {\n      // TODO(freben): Use the integration package facility for this instead\n      // pathname starts as /backstage/backstage/blob/master/<path>\n      const updated = new URL(url);\n      const base = updated.pathname.split('/').slice(1, 5).join('/');\n      updated.pathname = `${base}/${path}`;\n      return updated.toString();\n    }\n\n    const matcher = new Minimatch(query.replace(/^\\/+/, ''));\n\n    // trees_url looks like \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\n    const recursiveTree: GhTreeResponse = await this.fetchJson(\n      treesUrl.replace('{/sha}', `/${sha}?recursive=true`),\n      init,\n    );\n\n    // The simple case is that we got the entire tree in a single operation.\n    if (!recursiveTree.truncated) {\n      const matching = recursiveTree.tree.filter(\n        item =>\n          item.type === 'blob' &&\n          item.path &&\n          item.url &&\n          matcher.match(item.path),\n      );\n\n      return matching.map(item => ({\n        url: pathToUrl(item.path!),\n        content: async () => {\n          const blob: GhBlobResponse = await this.fetchJson(item.url!, init);\n          return Buffer.from(blob.content, 'base64');\n        },\n      }));\n    }\n\n    // For larger repos, we leverage readTree and filter through that instead\n    const tree = await this.doReadTree(archiveUrl, sha, '', init, {\n      filter: path => matcher.match(path),\n    });\n    const files = await tree.files();\n\n    return files.map(file => ({\n      url: pathToUrl(file.path),\n      content: file.content,\n    }));\n  }\n\n  private async getRepoDetails(url: string): Promise<{\n    repo: GhRepoResponse;\n    branch: GhBranchResponse;\n  }> {\n    const parsed = parseGitUrl(url);\n    const { ref, full_name } = parsed;\n\n    // Caveat: The ref will totally be incorrect if the branch name includes a\n    // slash. Thus, some operations can not work on URLs containing branch\n    // names that have a slash in them.\n\n    const { headers } = await this.deps.credentialsProvider.getCredentials({\n      url,\n    });\n\n    const repo: GhRepoResponse = await this.fetchJson(\n      `${this.integration.config.apiBaseUrl}/repos/${full_name}`,\n      { headers },\n    );\n\n    // branches_url looks like \"https://api.github.com/repos/owner/repo/branches{/branch}\"\n    const branch: GhBranchResponse = await this.fetchJson(\n      repo.branches_url.replace('{/branch}', `/${ref || repo.default_branch}`),\n      { headers },\n    );\n\n    return { repo, branch };\n  }\n\n  private async fetchResponse(\n    url: string | URL,\n    init: RequestInit,\n  ): Promise<Response> {\n    const urlAsString = url.toString();\n\n    const response = await fetch(urlAsString, init);\n\n    if (!response.ok) {\n      const message = `Request failed for ${urlAsString}, ${response.status} ${response.statusText}`;\n      if (response.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    return response;\n  }\n\n  private async fetchJson(url: string | URL, init: RequestInit): Promise<any> {\n    const response = await this.fetchResponse(url, init);\n    return await response.json();\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Matches a directory name + one `/` at the start of any string,\n// containing any character except `/` one or more times, and ending with a `/`\n// e.g. Will match `dirA/` in `dirA/dirB/file.ext`\nconst directoryNameRegex = /^[^\\/]+\\//;\n\n// Removes the first segment of a forward-slash-separated path\nexport function stripFirstDirectoryFromPath(path: string): string {\n  return path.replace(directoryNameRegex, '');\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGitLabFileFetchUrl,\n  getGitLabRequestOptions,\n  GitLabIntegration,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport fetch, { Response } from 'node-fetch';\nimport parseGitUrl from 'git-url-parse';\nimport { Minimatch } from 'minimatch';\nimport { Readable } from 'stream';\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport { stripFirstDirectoryFromPath } from './tree/util';\nimport {\n  ReadTreeResponseFactory,\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n  ReadUrlResponse,\n  ReadUrlOptions,\n} from './types';\nimport { trimEnd } from 'lodash';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Implements a {@link UrlReader} for files on GitLab.\n *\n * @public\n */\nexport class GitlabUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n    return integrations.gitlab.list().map(integration => {\n      const reader = new GitlabUrlReader(integration, {\n        treeResponseFactory,\n      });\n      const predicate = (url: URL) => url.host === integration.config.host;\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: GitLabIntegration,\n    private readonly deps: { treeResponseFactory: ReadTreeResponseFactory },\n  ) {}\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const { etag, signal } = options ?? {};\n    const builtUrl = await getGitLabFileFetchUrl(url, this.integration.config);\n\n    let response: Response;\n    try {\n      response = await fetch(builtUrl, {\n        headers: {\n          ...getGitLabRequestOptions(this.integration.config).headers,\n          ...(etag && { 'If-None-Match': etag }),\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can be\n        // removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    const message = `${url} could not be read as ${builtUrl}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const { etag, signal } = options ?? {};\n    const { ref, full_name, filepath } = parseGitUrl(url);\n\n    // Use GitLab API to get the default branch\n    // encodeURIComponent is required for GitLab API\n    // https://docs.gitlab.com/ee/api/README.html#namespaced-path-encoding\n    const projectGitlabResponse = await fetch(\n      new URL(\n        `${this.integration.config.apiBaseUrl}/projects/${encodeURIComponent(\n          full_name,\n        )}`,\n      ).toString(),\n      getGitLabRequestOptions(this.integration.config),\n    );\n    if (!projectGitlabResponse.ok) {\n      const msg = `Failed to read tree from ${url}, ${projectGitlabResponse.status} ${projectGitlabResponse.statusText}`;\n      if (projectGitlabResponse.status === 404) {\n        throw new NotFoundError(msg);\n      }\n      throw new Error(msg);\n    }\n    const projectGitlabResponseJson = await projectGitlabResponse.json();\n\n    // ref is an empty string if no branch is set in provided url to readTree.\n    const branch = ref || projectGitlabResponseJson.default_branch;\n\n    // Fetch the latest commit that modifies the the filepath in the provided or default branch\n    // to compare against the provided sha.\n    const commitsReqParams = new URLSearchParams();\n    commitsReqParams.set('ref_name', branch);\n    if (!!filepath) {\n      commitsReqParams.set('path', filepath);\n    }\n    const commitsGitlabResponse = await fetch(\n      new URL(\n        `${this.integration.config.apiBaseUrl}/projects/${encodeURIComponent(\n          full_name,\n        )}/repository/commits?${commitsReqParams.toString()}`,\n      ).toString(),\n      {\n        ...getGitLabRequestOptions(this.integration.config),\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      },\n    );\n    if (!commitsGitlabResponse.ok) {\n      const message = `Failed to read tree (branch) from ${url}, ${commitsGitlabResponse.status} ${commitsGitlabResponse.statusText}`;\n      if (commitsGitlabResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    const commitSha = (await commitsGitlabResponse.json())[0].id;\n\n    if (etag && etag === commitSha) {\n      throw new NotModifiedError();\n    }\n\n    // https://docs.gitlab.com/ee/api/repositories.html#get-file-archive\n    const archiveGitLabResponse = await fetch(\n      `${this.integration.config.apiBaseUrl}/projects/${encodeURIComponent(\n        full_name,\n      )}/repository/archive?sha=${branch}`,\n      {\n        ...getGitLabRequestOptions(this.integration.config),\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        ...(signal && { signal: signal as any }),\n      },\n    );\n    if (!archiveGitLabResponse.ok) {\n      const message = `Failed to read tree (archive) from ${url}, ${archiveGitLabResponse.status} ${archiveGitLabResponse.statusText}`;\n      if (archiveGitLabResponse.status === 404) {\n        throw new NotFoundError(message);\n      }\n      throw new Error(message);\n    }\n\n    return await this.deps.treeResponseFactory.fromTarArchive({\n      stream: archiveGitLabResponse.body as unknown as Readable,\n      subpath: filepath,\n      etag: commitSha,\n      filter: options?.filter,\n    });\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const { filepath } = parseGitUrl(url);\n    const matcher = new Minimatch(filepath);\n\n    // TODO(freben): For now, read the entire repo and filter through that. In\n    // a future improvement, we could be smart and try to deduce that non-glob\n    // prefixes (like for filepaths such as some-prefix/**/a.yaml) can be used\n    // to get just that part of the repo.\n    const treeUrl = trimEnd(url.replace(filepath, ''), '/');\n\n    const tree = await this.readTree(treeUrl, {\n      etag: options?.etag,\n      signal: options?.signal,\n      filter: path => matcher.match(stripFirstDirectoryFromPath(path)),\n    });\n    const files = await tree.files();\n\n    return {\n      etag: tree.etag,\n      files: files.map(file => ({\n        url: this.integration.resolveUrl({ url: `/${file.path}`, base: url }),\n        content: file.content,\n      })),\n    };\n  }\n\n  toString() {\n    const { host, token } = this.integration.config;\n    return `gitlab{host=${host},authed=${Boolean(token)}}`;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport aws, { Credentials, S3 } from 'aws-sdk';\nimport { CredentialsOptions } from 'aws-sdk/lib/credentials';\nimport {\n  ReaderFactory,\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadTreeResponseFactory,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport {\n  AwsS3Integration,\n  ScmIntegrations,\n  AwsS3IntegrationConfig,\n} from '@backstage/integration';\nimport { ForwardedError, NotModifiedError } from '@backstage/errors';\nimport { ListObjectsV2Output, ObjectList } from 'aws-sdk/clients/s3';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * Path style URLs: https://s3.(region).amazonaws.com/(bucket)/(key)\n * The region can also be on the old form: https://s3-(region).amazonaws.com/(bucket)/(key)\n * Virtual hosted style URLs: https://(bucket).s3.(region).amazonaws.com/(key)\n * See https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access\n */\nexport function parseUrl(\n  url: string,\n  config: AwsS3IntegrationConfig,\n): { path: string; bucket: string; region: string } {\n  const parsedUrl = new URL(url);\n\n  /**\n   * Removes the leading '/' from the pathname to be processed\n   * as a parameter by AWS S3 SDK getObject method.\n   */\n  const pathname = parsedUrl.pathname.substring(1);\n  const host = parsedUrl.host;\n\n  // Treat Amazon hosted separately because it has special region logic\n  if (config.host === 'amazonaws.com') {\n    const match = host.match(\n      /^(?:([a-z0-9.-]+)\\.)?s3[.-]([a-z0-9-]+)\\.amazonaws\\.com$/,\n    );\n    if (!match) {\n      throw new Error(`Invalid AWS S3 URL ${url}`);\n    }\n\n    const [, hostBucket, hostRegion] = match;\n\n    if (config.s3ForcePathStyle || !hostBucket) {\n      const slashIndex = pathname.indexOf('/');\n      if (slashIndex < 0) {\n        throw new Error(\n          `Invalid path-style AWS S3 URL ${url}, does not contain bucket in the path`,\n        );\n      }\n\n      return {\n        path: pathname.substring(slashIndex + 1),\n        bucket: pathname.substring(0, slashIndex),\n        region: hostRegion,\n      };\n    }\n\n    return {\n      path: pathname,\n      bucket: hostBucket,\n      region: hostRegion,\n    };\n  }\n\n  const usePathStyle =\n    config.s3ForcePathStyle || host.length === config.host.length;\n\n  if (usePathStyle) {\n    const slashIndex = pathname.indexOf('/');\n    if (slashIndex < 0) {\n      throw new Error(\n        `Invalid path-style AWS S3 URL ${url}, does not contain bucket in the path`,\n      );\n    }\n\n    return {\n      path: pathname.substring(slashIndex + 1),\n      bucket: pathname.substring(0, slashIndex),\n      region: '',\n    };\n  }\n\n  return {\n    path: pathname,\n    bucket: host.substring(0, host.length - config.host.length - 1),\n    region: '',\n  };\n}\n\n/**\n * Implements a {@link UrlReader} for AWS S3 buckets.\n *\n * @public\n */\nexport class AwsS3UrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, treeResponseFactory }) => {\n    const integrations = ScmIntegrations.fromConfig(config);\n\n    return integrations.awsS3.list().map(integration => {\n      const credentials = AwsS3UrlReader.buildCredentials(integration);\n\n      const s3 = new S3({\n        apiVersion: '2006-03-01',\n        credentials,\n        endpoint: integration.config.endpoint,\n        s3ForcePathStyle: integration.config.s3ForcePathStyle,\n      });\n      const reader = new AwsS3UrlReader(integration, {\n        s3,\n        treeResponseFactory,\n      });\n      const predicate = (url: URL) =>\n        url.host.endsWith(integration.config.host);\n      return { reader, predicate };\n    });\n  };\n\n  constructor(\n    private readonly integration: AwsS3Integration,\n    private readonly deps: {\n      s3: S3;\n      treeResponseFactory: ReadTreeResponseFactory;\n    },\n  ) {}\n\n  /**\n   * If accessKeyId and secretAccessKey are missing, the standard credentials provider chain will be used:\n   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html\n   */\n  private static buildCredentials(\n    integration?: AwsS3Integration,\n  ): Credentials | CredentialsOptions | undefined {\n    if (!integration) {\n      return undefined;\n    }\n\n    const accessKeyId = integration.config.accessKeyId;\n    const secretAccessKey = integration.config.secretAccessKey;\n    let explicitCredentials: Credentials | undefined;\n\n    if (accessKeyId && secretAccessKey) {\n      explicitCredentials = new Credentials({\n        accessKeyId,\n        secretAccessKey,\n      });\n    }\n\n    const roleArn = integration.config.roleArn;\n    if (roleArn) {\n      return new aws.ChainableTemporaryCredentials({\n        masterCredentials: explicitCredentials,\n        params: {\n          RoleSessionName: 'backstage-aws-s3-url-reader',\n          RoleArn: roleArn,\n          ExternalId: integration.config.externalId,\n        },\n      });\n    }\n\n    return explicitCredentials;\n  }\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    try {\n      const { path, bucket, region } = parseUrl(url, this.integration.config);\n      aws.config.update({ region: region });\n\n      let params;\n      if (options?.etag) {\n        params = {\n          Bucket: bucket,\n          Key: path,\n          IfNoneMatch: options.etag,\n        };\n      } else {\n        params = {\n          Bucket: bucket,\n          Key: path,\n        };\n      }\n\n      const request = this.deps.s3.getObject(params);\n      options?.signal?.addEventListener('abort', () => request.abort());\n\n      // Since we're consuming the read stream we need to consume headers and errors via events.\n      const etagPromise = new Promise<string | undefined>((resolve, reject) => {\n        request.on('httpHeaders', (status, headers) => {\n          if (status < 400) {\n            if (status === 200) {\n              resolve(headers.etag);\n            } else if (status !== 304 /* not modified */) {\n              reject(\n                new Error(\n                  `S3 readUrl request received unexpected status '${status}' in response`,\n                ),\n              );\n            }\n          }\n        });\n        request.on('error', error => reject(error));\n        request.on('complete', () =>\n          reject(\n            new Error('S3 readUrl request completed without receiving headers'),\n          ),\n        );\n      });\n\n      const stream = request.createReadStream();\n      stream.on('error', () => {\n        // The AWS SDK forwards request errors to the stream, so we need to\n        // ignore those errors here or the process will crash.\n      });\n\n      return ReadUrlResponseFactory.fromReadable(stream, {\n        etag: await etagPromise,\n      });\n    } catch (e) {\n      if (e.statusCode === 304) {\n        throw new NotModifiedError();\n      }\n\n      throw new ForwardedError('Could not retrieve file from S3', e);\n    }\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    try {\n      const { path, bucket, region } = parseUrl(url, this.integration.config);\n      const allObjects: ObjectList = [];\n      const responses = [];\n      let continuationToken: string | undefined;\n      let output: ListObjectsV2Output;\n      do {\n        aws.config.update({ region: region });\n        const request = this.deps.s3.listObjectsV2({\n          Bucket: bucket,\n          ContinuationToken: continuationToken,\n          Prefix: path,\n        });\n        options?.signal?.addEventListener('abort', () => request.abort());\n        output = await request.promise();\n        if (output.Contents) {\n          output.Contents.forEach(contents => {\n            allObjects.push(contents);\n          });\n        }\n        continuationToken = output.NextContinuationToken;\n      } while (continuationToken);\n\n      for (let i = 0; i < allObjects.length; i++) {\n        const object = this.deps.s3.getObject({\n          Bucket: bucket,\n          Key: String(allObjects[i].Key),\n        });\n        responses.push({\n          data: object.createReadStream(),\n          path: String(allObjects[i].Key),\n        });\n      }\n\n      return await this.deps.treeResponseFactory.fromReadableArray(responses);\n    } catch (e) {\n      throw new ForwardedError('Could not retrieve file tree from S3', e);\n    }\n  }\n\n  async search(): Promise<SearchResponse> {\n    throw new Error('AwsS3Reader does not implement search');\n  }\n\n  toString() {\n    const secretAccessKey = this.integration.config.secretAccessKey;\n    return `awsS3{host=${this.integration.config.host},authed=${Boolean(\n      secretAccessKey,\n    )}}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotFoundError, NotModifiedError } from '@backstage/errors';\nimport fetch, { Response } from 'node-fetch';\nimport {\n  ReaderFactory,\n  ReadTreeResponse,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport path from 'path';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\n/**\n * A {@link UrlReader} that does a plain fetch of the URL.\n *\n * @public\n */\nexport class FetchUrlReader implements UrlReader {\n  /**\n   * The factory creates a single reader that will be used for reading any URL that's listed\n   * in configuration at `backend.reading.allow`. The allow list contains a list of objects describing\n   * targets to allow, containing the following fields:\n   *\n   * `host`:\n   *   Either full hostnames to match, or subdomain wildcard matchers with a leading `*`.\n   *   For example `example.com` and `*.example.com` are valid values, `prod.*.example.com` is not.\n   *\n   * `paths`:\n   *   An optional list of paths which are allowed. If the list is omitted all paths are allowed.\n   */\n  static factory: ReaderFactory = ({ config }) => {\n    const predicates =\n      config\n        .getOptionalConfigArray('backend.reading.allow')\n        ?.map(allowConfig => {\n          const paths = allowConfig.getOptionalStringArray('paths');\n          const checkPath = paths\n            ? (url: URL) => {\n                const targetPath = path.posix.normalize(url.pathname);\n                return paths.some(allowedPath =>\n                  targetPath.startsWith(allowedPath),\n                );\n              }\n            : (_url: URL) => true;\n          const host = allowConfig.getString('host');\n          if (host.startsWith('*.')) {\n            const suffix = host.slice(1);\n            return (url: URL) => url.host.endsWith(suffix) && checkPath(url);\n          }\n          return (url: URL) => url.host === host && checkPath(url);\n        }) ?? [];\n\n    const reader = new FetchUrlReader();\n    const predicate = (url: URL) => predicates.some(p => p(url));\n    return [{ reader, predicate }];\n  };\n\n  async read(url: string): Promise<Buffer> {\n    const response = await this.readUrl(url);\n    return response.buffer();\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    let response: Response;\n    try {\n      response = await fetch(url, {\n        headers: {\n          ...(options?.etag && { 'If-None-Match': options.etag }),\n        },\n        // TODO(freben): The signal cast is there because pre-3.x versions of\n        // node-fetch have a very slightly deviating AbortSignal type signature.\n        // The difference does not affect us in practice however. The cast can\n        // be removed after we support ESM for CLI dependencies and migrate to\n        // version 3 of node-fetch.\n        // https://github.com/backstage/backstage/issues/8242\n        signal: options?.signal as any,\n      });\n    } catch (e) {\n      throw new Error(`Unable to read ${url}, ${e}`);\n    }\n\n    if (response.status === 304) {\n      throw new NotModifiedError();\n    }\n\n    if (response.ok) {\n      return ReadUrlResponseFactory.fromNodeJSReadable(response.body, {\n        etag: response.headers.get('ETag') ?? undefined,\n      });\n    }\n\n    const message = `could not read ${url}, ${response.status} ${response.statusText}`;\n    if (response.status === 404) {\n      throw new NotFoundError(message);\n    }\n    throw new Error(message);\n  }\n\n  async readTree(): Promise<ReadTreeResponse> {\n    throw new Error('FetchUrlReader does not implement readTree');\n  }\n\n  async search(): Promise<SearchResponse> {\n    throw new Error('FetchUrlReader does not implement search');\n  }\n\n  toString() {\n    return 'fetch{}';\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotAllowedError } from '@backstage/errors';\nimport { Logger } from 'winston';\nimport {\n  ReadTreeOptions,\n  ReadTreeResponse,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchOptions,\n  SearchResponse,\n  UrlReader,\n  UrlReaderPredicateTuple,\n} from './types';\n\nconst MIN_WARNING_INTERVAL_MS = 1000 * 60 * 15;\n\nfunction notAllowedMessage(url: string) {\n  return (\n    `Reading from '${url}' is not allowed. ` +\n    `You may need to configure an integration for the target host, or add it ` +\n    `to the configured list of allowed hosts at 'backend.reading.allow'`\n  );\n}\n\n/**\n * A UrlReader implementation that selects from a set of UrlReaders\n * based on a predicate tied to each reader.\n */\nexport class UrlReaderPredicateMux implements UrlReader {\n  private readonly readers: UrlReaderPredicateTuple[] = [];\n  private readonly readerWarnings: Map<UrlReader, number> = new Map();\n\n  constructor(private readonly logger: Logger) {}\n\n  register(tuple: UrlReaderPredicateTuple): void {\n    this.readers.push(tuple);\n  }\n\n  async read(url: string): Promise<Buffer> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return reader.read(url);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  async readUrl(\n    url: string,\n    options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        if (reader.readUrl) {\n          return reader.readUrl(url, options);\n        }\n        const now = Date.now();\n        const lastWarned = this.readerWarnings.get(reader) ?? 0;\n        if (now > lastWarned + MIN_WARNING_INTERVAL_MS) {\n          this.readerWarnings.set(reader, now);\n          this.logger.warn(\n            `No implementation of readUrl found for ${reader}, this method will be required in the ` +\n              `future and will replace the 'read' method. See the changelog for more details here: ` +\n              'https://github.com/backstage/backstage/blob/master/packages/backend-common/CHANGELOG.md#085',\n          );\n        }\n        const buffer = await reader.read(url);\n        return {\n          buffer: async () => buffer,\n        };\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  async readTree(\n    url: string,\n    options?: ReadTreeOptions,\n  ): Promise<ReadTreeResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return await reader.readTree(url, options);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  async search(url: string, options?: SearchOptions): Promise<SearchResponse> {\n    const parsed = new URL(url);\n\n    for (const { predicate, reader } of this.readers) {\n      if (predicate(parsed)) {\n        return await reader.search(url, options);\n      }\n    }\n\n    throw new NotAllowedError(notAllowedMessage(url));\n  }\n\n  toString() {\n    return `predicateMux{readers=${this.readers.map(t => t.reader).join(',')}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport concatStream from 'concat-stream';\nimport fs from 'fs-extra';\nimport platformPath from 'path';\nimport { pipeline as pipelineCb, Readable } from 'stream';\nimport tar, { Parse, ParseStream, ReadEntry } from 'tar';\nimport { promisify } from 'util';\nimport {\n  ReadTreeResponse,\n  ReadTreeResponseDirOptions,\n  ReadTreeResponseFile,\n} from '../types';\nimport { stripFirstDirectoryFromPath } from './util';\n\n// Tar types for `Parse` is not a proper constructor, but it should be\nconst TarParseStream = Parse as unknown as { new (): ParseStream };\n\nconst pipeline = promisify(pipelineCb);\n\n/**\n * Wraps a tar archive stream into a tree response reader.\n */\nexport class TarArchiveResponse implements ReadTreeResponse {\n  private read = false;\n\n  constructor(\n    private readonly stream: Readable,\n    private readonly subPath: string,\n    private readonly workDir: string,\n    public readonly etag: string,\n    private readonly filter?: (path: string, info: { size: number }) => boolean,\n  ) {\n    if (subPath) {\n      if (!subPath.endsWith('/')) {\n        this.subPath += '/';\n      }\n      if (subPath.startsWith('/')) {\n        throw new TypeError(\n          `TarArchiveResponse subPath must not start with a /, got '${subPath}'`,\n        );\n      }\n    }\n\n    this.etag = etag;\n  }\n\n  // Make sure the input stream is only read once\n  private onlyOnce() {\n    if (this.read) {\n      throw new Error('Response has already been read');\n    }\n    this.read = true;\n  }\n\n  async files(): Promise<ReadTreeResponseFile[]> {\n    this.onlyOnce();\n\n    const files = Array<ReadTreeResponseFile>();\n    const parser = new TarParseStream();\n\n    parser.on('entry', (entry: ReadEntry & Readable) => {\n      if (entry.type === 'Directory') {\n        entry.resume();\n        return;\n      }\n\n      // File path relative to the root extracted directory. Will remove the\n      // top level dir name from the path since its name is hard to predetermine.\n      const relativePath = stripFirstDirectoryFromPath(entry.path);\n\n      if (this.subPath) {\n        if (!relativePath.startsWith(this.subPath)) {\n          entry.resume();\n          return;\n        }\n      }\n\n      const path = relativePath.slice(this.subPath.length);\n      if (this.filter) {\n        if (!this.filter(path, { size: entry.remain })) {\n          entry.resume();\n          return;\n        }\n      }\n\n      const content = new Promise<Buffer>(async resolve => {\n        await pipeline(entry, concatStream(resolve));\n      });\n\n      files.push({\n        path,\n        content: () => content,\n      });\n\n      entry.resume();\n    });\n\n    await pipeline(this.stream, parser);\n\n    return files;\n  }\n\n  async archive(): Promise<Readable> {\n    if (!this.subPath) {\n      this.onlyOnce();\n\n      return this.stream;\n    }\n\n    // TODO(Rugvip): method for repacking a tar with a subpath is to simply extract into a\n    //               tmp dir and recreate the archive. Would be nicer to stream things instead.\n    const tmpDir = await this.dir();\n\n    try {\n      const data = await new Promise<Buffer>(async resolve => {\n        await pipeline(\n          tar.create({ cwd: tmpDir }, ['']),\n          concatStream(resolve),\n        );\n      });\n      return Readable.from(data);\n    } finally {\n      await fs.remove(tmpDir);\n    }\n  }\n\n  async dir(options?: ReadTreeResponseDirOptions): Promise<string> {\n    this.onlyOnce();\n\n    const dir =\n      options?.targetDir ??\n      (await fs.mkdtemp(platformPath.join(this.workDir, 'backstage-')));\n\n    // Equivalent of tar --strip-components=N\n    // When no subPath is given, remove just 1 top level directory\n    const strip = this.subPath ? this.subPath.split('/').length : 1;\n\n    let filterError: Error | undefined = undefined;\n\n    await pipeline(\n      this.stream,\n      tar.extract({\n        strip,\n        cwd: dir,\n        filter: (path, stat) => {\n          // Filter errors will short-circuit the rest of the filtering and then throw\n          if (filterError) {\n            return false;\n          }\n\n          // File path relative to the root extracted directory. Will remove the\n          // top level dir name from the path since its name is hard to predetermine.\n          const relativePath = stripFirstDirectoryFromPath(path);\n          if (this.subPath && !relativePath.startsWith(this.subPath)) {\n            return false;\n          }\n          if (this.filter) {\n            const innerPath = path.split('/').slice(strip).join('/');\n            try {\n              return this.filter(innerPath, { size: stat.size });\n            } catch (error) {\n              filterError = error;\n              return false;\n            }\n          }\n          return true;\n        },\n      }),\n    );\n\n    if (filterError) {\n      // If the dir was provided we don't want to remove it, but if it wasn't it means\n      // we created a temporary directory and we should remove it.\n      if (!options?.targetDir) {\n        await fs.remove(dir).catch(() => {});\n      }\n      throw filterError;\n    }\n\n    return dir;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport archiver from 'archiver';\nimport fs from 'fs-extra';\nimport platformPath from 'path';\nimport { Readable } from 'stream';\nimport unzipper, { Entry } from 'unzipper';\nimport {\n  ReadTreeResponse,\n  ReadTreeResponseDirOptions,\n  ReadTreeResponseFile,\n} from '../types';\n\n/**\n * Wraps a zip archive stream into a tree response reader.\n */\nexport class ZipArchiveResponse implements ReadTreeResponse {\n  private read = false;\n\n  constructor(\n    private readonly stream: Readable,\n    private readonly subPath: string,\n    private readonly workDir: string,\n    public readonly etag: string,\n    private readonly filter?: (path: string, info: { size: number }) => boolean,\n  ) {\n    if (subPath) {\n      if (!subPath.endsWith('/')) {\n        this.subPath += '/';\n      }\n      if (subPath.startsWith('/')) {\n        throw new TypeError(\n          `ZipArchiveResponse subPath must not start with a /, got '${subPath}'`,\n        );\n      }\n    }\n\n    this.etag = etag;\n  }\n\n  // Make sure the input stream is only read once\n  private onlyOnce() {\n    if (this.read) {\n      throw new Error('Response has already been read');\n    }\n    this.read = true;\n  }\n\n  // File path relative to the root extracted directory or a sub directory if subpath is set.\n  private getInnerPath(path: string): string {\n    return path.slice(this.subPath.length);\n  }\n\n  private shouldBeIncluded(entry: Entry): boolean {\n    if (this.subPath) {\n      if (!entry.path.startsWith(this.subPath)) {\n        return false;\n      }\n    }\n    if (this.filter) {\n      return this.filter(this.getInnerPath(entry.path), {\n        size:\n          (entry.vars as { uncompressedSize?: number }).uncompressedSize ??\n          entry.vars.compressedSize,\n      });\n    }\n    return true;\n  }\n\n  async files(): Promise<ReadTreeResponseFile[]> {\n    this.onlyOnce();\n\n    const files = Array<ReadTreeResponseFile>();\n\n    await this.stream\n      .pipe(unzipper.Parse())\n      .on('entry', (entry: Entry) => {\n        if (entry.type === 'Directory') {\n          entry.resume();\n          return;\n        }\n\n        if (this.shouldBeIncluded(entry)) {\n          files.push({\n            path: this.getInnerPath(entry.path),\n            content: () => entry.buffer(),\n          });\n        } else {\n          entry.autodrain();\n        }\n      })\n      .promise();\n\n    return files;\n  }\n\n  async archive(): Promise<Readable> {\n    this.onlyOnce();\n\n    if (!this.subPath) {\n      return this.stream;\n    }\n\n    const archive = archiver('zip');\n    await this.stream\n      .pipe(unzipper.Parse())\n      .on('entry', (entry: Entry) => {\n        if (entry.type === 'File' && this.shouldBeIncluded(entry)) {\n          archive.append(entry, { name: this.getInnerPath(entry.path) });\n        } else {\n          entry.autodrain();\n        }\n      })\n      .promise();\n    archive.finalize();\n\n    return archive;\n  }\n\n  async dir(options?: ReadTreeResponseDirOptions): Promise<string> {\n    this.onlyOnce();\n\n    const dir =\n      options?.targetDir ??\n      (await fs.mkdtemp(platformPath.join(this.workDir, 'backstage-')));\n\n    await this.stream\n      .pipe(unzipper.Parse())\n      .on('entry', async (entry: Entry) => {\n        // Ignore directory entries since we handle that with the file entries\n        // as a zip can have files with directories without directory entries\n        if (entry.type === 'File' && this.shouldBeIncluded(entry)) {\n          const entryPath = this.getInnerPath(entry.path);\n          const dirname = platformPath.dirname(entryPath);\n          if (dirname) {\n            await fs.mkdirp(platformPath.join(dir, dirname));\n          }\n          entry.pipe(fs.createWriteStream(platformPath.join(dir, entryPath)));\n        } else {\n          entry.autodrain();\n        }\n      })\n      .promise();\n\n    return dir;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport concatStream from 'concat-stream';\nimport platformPath, { basename } from 'path';\n\nimport getRawBody from 'raw-body';\nimport fs from 'fs-extra';\nimport { promisify } from 'util';\nimport tar from 'tar';\nimport { pipeline as pipelineCb, Readable } from 'stream';\nimport {\n  ReadTreeResponse,\n  ReadTreeResponseFile,\n  ReadTreeResponseDirOptions,\n  FromReadableArrayOptions,\n} from '../types';\n\nconst pipeline = promisify(pipelineCb);\n\n/**\n * Wraps a array of Readable objects into a tree response reader.\n */\nexport class ReadableArrayResponse implements ReadTreeResponse {\n  private read = false;\n\n  constructor(\n    private readonly stream: FromReadableArrayOptions,\n    private readonly workDir: string,\n    public readonly etag: string,\n  ) {\n    this.etag = etag;\n  }\n\n  // Make sure the input stream is only read once\n  private onlyOnce() {\n    if (this.read) {\n      throw new Error('Response has already been read');\n    }\n    this.read = true;\n  }\n\n  async files(): Promise<ReadTreeResponseFile[]> {\n    this.onlyOnce();\n\n    const files = Array<ReadTreeResponseFile>();\n\n    for (let i = 0; i < this.stream.length; i++) {\n      if (!this.stream[i].path.endsWith('/')) {\n        files.push({\n          path: this.stream[i].path,\n          content: () => getRawBody(this.stream[i].data),\n        });\n      }\n    }\n\n    return files;\n  }\n\n  async archive(): Promise<NodeJS.ReadableStream> {\n    const tmpDir = await this.dir();\n\n    try {\n      const data = await new Promise<Buffer>(async resolve => {\n        await pipeline(\n          tar.create({ cwd: tmpDir }, ['']),\n          concatStream(resolve),\n        );\n      });\n      return Readable.from(data);\n    } finally {\n      await fs.remove(tmpDir);\n    }\n  }\n\n  async dir(options?: ReadTreeResponseDirOptions): Promise<string> {\n    this.onlyOnce();\n\n    const dir =\n      options?.targetDir ??\n      (await fs.mkdtemp(platformPath.join(this.workDir, 'backstage-')));\n\n    for (let i = 0; i < this.stream.length; i++) {\n      if (!this.stream[i].path.endsWith('/')) {\n        await pipeline(\n          this.stream[i].data,\n          fs.createWriteStream(\n            platformPath.join(dir, basename(this.stream[i].path)),\n          ),\n        );\n      }\n    }\n\n    return dir;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\nimport { Config } from '@backstage/config';\nimport {\n  ReadTreeResponse,\n  ReadTreeResponseFactoryOptions,\n  ReadTreeResponseFactory,\n  FromReadableArrayOptions,\n} from '../types';\nimport { TarArchiveResponse } from './TarArchiveResponse';\nimport { ZipArchiveResponse } from './ZipArchiveResponse';\nimport { ReadableArrayResponse } from './ReadableArrayResponse';\n\nexport class DefaultReadTreeResponseFactory implements ReadTreeResponseFactory {\n  static create(options: { config: Config }): DefaultReadTreeResponseFactory {\n    return new DefaultReadTreeResponseFactory(\n      options.config.getOptionalString('backend.workingDirectory') ??\n        os.tmpdir(),\n    );\n  }\n\n  constructor(private readonly workDir: string) {}\n\n  async fromTarArchive(\n    options: ReadTreeResponseFactoryOptions,\n  ): Promise<ReadTreeResponse> {\n    return new TarArchiveResponse(\n      options.stream,\n      options.subpath ?? '',\n      this.workDir,\n      options.etag,\n      options.filter,\n    );\n  }\n\n  async fromZipArchive(\n    options: ReadTreeResponseFactoryOptions,\n  ): Promise<ReadTreeResponse> {\n    return new ZipArchiveResponse(\n      options.stream,\n      options.subpath ?? '',\n      this.workDir,\n      options.etag,\n      options.filter,\n    );\n  }\n\n  async fromReadableArray(\n    options: FromReadableArrayOptions,\n  ): Promise<ReadTreeResponse> {\n    return new ReadableArrayResponse(options, this.workDir, '');\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Storage } from '@google-cloud/storage';\nimport {\n  ReaderFactory,\n  ReadTreeResponse,\n  ReadUrlOptions,\n  ReadUrlResponse,\n  SearchResponse,\n  UrlReader,\n} from './types';\nimport getRawBody from 'raw-body';\nimport {\n  GoogleGcsIntegrationConfig,\n  readGoogleGcsIntegrationConfig,\n} from '@backstage/integration';\nimport { Readable } from 'stream';\nimport { ReadUrlResponseFactory } from './ReadUrlResponseFactory';\n\nconst GOOGLE_GCS_HOST = 'storage.cloud.google.com';\n\nconst parseURL = (\n  url: string,\n): { host: string; bucket: string; key: string } => {\n  const { host, pathname } = new URL(url);\n\n  if (host !== GOOGLE_GCS_HOST) {\n    throw new Error(`not a valid GCS URL: ${url}`);\n  }\n\n  const [, bucket, ...key] = pathname.split('/');\n  return {\n    host: host,\n    bucket,\n    key: key.join('/'),\n  };\n};\n\n/**\n * Implements a {@link UrlReader} for files on Google GCS.\n *\n * @public\n */\nexport class GoogleGcsUrlReader implements UrlReader {\n  static factory: ReaderFactory = ({ config, logger }) => {\n    if (!config.has('integrations.googleGcs')) {\n      return [];\n    }\n    const gcsConfig = readGoogleGcsIntegrationConfig(\n      config.getConfig('integrations.googleGcs'),\n    );\n    let storage: Storage;\n    if (!gcsConfig.clientEmail || !gcsConfig.privateKey) {\n      logger.info(\n        'googleGcs credentials not found in config. Using default credentials provider.',\n      );\n      storage = new Storage();\n    } else {\n      storage = new Storage({\n        credentials: {\n          client_email: gcsConfig.clientEmail || undefined,\n          private_key: gcsConfig.privateKey || undefined,\n        },\n      });\n    }\n    const reader = new GoogleGcsUrlReader(gcsConfig, storage);\n    const predicate = (url: URL) => url.host === GOOGLE_GCS_HOST;\n    return [{ reader, predicate }];\n  };\n\n  constructor(\n    private readonly integration: GoogleGcsIntegrationConfig,\n    private readonly storage: Storage,\n  ) {}\n\n  private readStreamFromUrl(url: string): Readable {\n    const { bucket, key } = parseURL(url);\n    return this.storage.bucket(bucket).file(key).createReadStream();\n  }\n\n  async read(url: string): Promise<Buffer> {\n    try {\n      return await getRawBody(this.readStreamFromUrl(url));\n    } catch (error) {\n      throw new Error(`unable to read gcs file from ${url}, ${error}`);\n    }\n  }\n\n  async readUrl(\n    url: string,\n    _options?: ReadUrlOptions,\n  ): Promise<ReadUrlResponse> {\n    // TODO etag is not implemented yet.\n    const stream = this.readStreamFromUrl(url);\n    return ReadUrlResponseFactory.fromReadable(stream);\n  }\n\n  async readTree(): Promise<ReadTreeResponse> {\n    throw new Error('GcsUrlReader does not implement readTree');\n  }\n\n  async search(url: string): Promise<SearchResponse> {\n    const { bucket, key: pattern } = parseURL(url);\n\n    if (!pattern.endsWith('*') || pattern.indexOf('*') !== pattern.length - 1) {\n      throw new Error('GcsUrlReader only supports prefix-based searches');\n    }\n\n    const [files] = await this.storage.bucket(bucket).getFiles({\n      autoPaginate: true,\n      prefix: pattern.split('*').join(''),\n    });\n\n    return {\n      files: files.map(file => {\n        const fullUrl = ['https:/', GOOGLE_GCS_HOST, bucket, file.name].join(\n          '/',\n        );\n        return {\n          url: fullUrl,\n          content: async () => {\n            const readResponse = await this.readUrl(fullUrl);\n            return readResponse.buffer();\n          },\n        };\n      }),\n      // TODO etag is not implemented yet.\n      etag: 'NOT/IMPLEMENTED',\n    };\n  }\n\n  toString() {\n    const key = this.integration.privateKey;\n    return `googleGcs{host=${GOOGLE_GCS_HOST},authed=${Boolean(key)}}`;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport { Config } from '@backstage/config';\nimport { ReaderFactory, UrlReader } from './types';\nimport { UrlReaderPredicateMux } from './UrlReaderPredicateMux';\nimport { AzureUrlReader } from './AzureUrlReader';\nimport { BitbucketCloudUrlReader } from './BitbucketCloudUrlReader';\nimport { BitbucketServerUrlReader } from './BitbucketServerUrlReader';\nimport { BitbucketUrlReader } from './BitbucketUrlReader';\nimport { GerritUrlReader } from './GerritUrlReader';\nimport { GithubUrlReader } from './GithubUrlReader';\nimport { GitlabUrlReader } from './GitlabUrlReader';\nimport { DefaultReadTreeResponseFactory } from './tree';\nimport { FetchUrlReader } from './FetchUrlReader';\nimport { GoogleGcsUrlReader } from './GoogleGcsUrlReader';\nimport { AwsS3UrlReader } from './AwsS3UrlReader';\n\n/**\n * Creation options for {@link UrlReaders}.\n *\n * @public\n */\nexport type UrlReadersOptions = {\n  /** Root config object */\n  config: Config;\n  /** Logger used by all the readers */\n  logger: Logger;\n  /** A list of factories used to construct individual readers that match on URLs */\n  factories?: ReaderFactory[];\n};\n\n/**\n * Helps construct {@link UrlReader}s.\n *\n * @public\n */\nexport class UrlReaders {\n  /**\n   * Creates a custom {@link UrlReader} wrapper for your own set of factories.\n   */\n  static create(options: UrlReadersOptions): UrlReader {\n    const { logger, config, factories } = options;\n    const mux = new UrlReaderPredicateMux(logger);\n    const treeResponseFactory = DefaultReadTreeResponseFactory.create({\n      config,\n    });\n\n    for (const factory of factories ?? []) {\n      const tuples = factory({ config, logger: logger, treeResponseFactory });\n\n      for (const tuple of tuples) {\n        mux.register(tuple);\n      }\n    }\n\n    return mux;\n  }\n\n  /**\n   * Creates a {@link UrlReader} wrapper that includes all the default factories\n   * from this package.\n   *\n   * Any additional factories passed will be loaded before the default ones.\n   */\n  static default(options: UrlReadersOptions) {\n    const { logger, config, factories = [] } = options;\n    return UrlReaders.create({\n      logger,\n      config,\n      factories: factories.concat([\n        AzureUrlReader.factory,\n        BitbucketCloudUrlReader.factory,\n        BitbucketServerUrlReader.factory,\n        BitbucketUrlReader.factory,\n        GerritUrlReader.factory,\n        GithubUrlReader.factory,\n        GitlabUrlReader.factory,\n        GoogleGcsUrlReader.factory,\n        AwsS3UrlReader.factory,\n        FetchUrlReader.factory,\n      ]),\n    });\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ServiceBuilderImpl } from './lib/ServiceBuilderImpl';\nimport { ServiceBuilder } from './types';\n\n/**\n * Creates a new service builder.\n *\n * @public\n */\nexport function createServiceBuilder(_module: NodeModule): ServiceBuilder {\n  return new ServiceBuilderImpl(_module);\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport Router from 'express-promise-router';\nimport express from 'express';\nimport { errorHandler, statusCheckHandler, StatusCheck } from '../middleware';\n\n/**\n * Creates a default status checking router, that you can add to your express\n * app.\n *\n * @remarks\n *\n * This adds a `/healthcheck` route (or any other path, if given as an\n * argument), which your infra can call to see if the service is ready to serve\n * requests.\n *\n * @public\n */\nexport async function createStatusCheckRouter(options: {\n  logger: Logger;\n  /**\n   * The path (including a leading slash) that the health check should be\n   * mounted on.\n   *\n   * @defaultValue '/healthcheck'\n   */\n  path?: string;\n  /**\n   * If not implemented, the default express middleware always returns 200.\n   * Override this to implement your own logic for a health check.\n   */\n  statusCheck?: StatusCheck;\n}): Promise<express.Router> {\n  const router = Router();\n  const { path = '/healthcheck', statusCheck } = options;\n\n  router.use(path, await statusCheckHandler({ statusCheck }));\n  router.use(errorHandler());\n\n  return router;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { AuthenticationError } from '@backstage/errors';\nimport { base64url, exportJWK, generateSecret, jwtVerify, SignJWT } from 'jose';\nimport { DateTime, Duration } from 'luxon';\nimport { Logger } from 'winston';\nimport { TokenManager } from './types';\n\nconst TOKEN_ALG = 'HS256';\nconst TOKEN_SUB = 'backstage-server';\nconst TOKEN_EXPIRY_AFTER = Duration.fromObject({ hours: 1 });\nconst TOKEN_REISSUE_AFTER = Duration.fromObject({ minutes: 10 });\n\n/**\n * A token manager that issues static dummy tokens and never fails\n * authentication. This can be useful for testing.\n */\nclass NoopTokenManager implements TokenManager {\n  public readonly isInsecureServerTokenManager: boolean = true;\n\n  async getToken() {\n    return { token: '' };\n  }\n\n  async authenticate() {}\n}\n\n/**\n * Options for {@link ServerTokenManager}.\n *\n * @public\n */\nexport interface ServerTokenManagerOptions {\n  /**\n   * The logger to use.\n   */\n  logger: Logger;\n}\n\n/**\n * Creates and validates tokens for use during backend-to-backend\n * authentication.\n *\n * @public\n */\nexport class ServerTokenManager implements TokenManager {\n  private readonly options: ServerTokenManagerOptions;\n  private readonly verificationKeys: Uint8Array[];\n  private signingKey: Uint8Array;\n  private privateKeyPromise: Promise<void> | undefined;\n  private currentTokenPromise: Promise<{ token: string }> | undefined;\n\n  /**\n   * Creates a token manager that issues static dummy tokens and never fails\n   * authentication. This can be useful for testing.\n   */\n  static noop(): TokenManager {\n    return new NoopTokenManager();\n  }\n\n  static fromConfig(config: Config, options: ServerTokenManagerOptions) {\n    const keys = config.getOptionalConfigArray('backend.auth.keys');\n    if (keys?.length) {\n      return new ServerTokenManager(\n        keys.map(key => key.getString('secret')),\n        options,\n      );\n    }\n\n    if (process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'You must configure at least one key in backend.auth.keys for production.',\n      );\n    }\n\n    // For development, if a secret has not been configured, we auto generate a secret instead of throwing.\n    options.logger.warn(\n      'Generated a secret for backend-to-backend authentication: DEVELOPMENT USE ONLY.',\n    );\n    return new ServerTokenManager([], options);\n  }\n\n  private constructor(secrets: string[], options: ServerTokenManagerOptions) {\n    if (!secrets.length && process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'No secrets provided when constructing ServerTokenManager',\n      );\n    }\n    this.options = options;\n    this.verificationKeys = secrets.map(s => base64url.decode(s));\n    this.signingKey = this.verificationKeys[0];\n  }\n\n  // Called when no keys have been generated yet in the dev environment\n  private async generateKeys(): Promise<void> {\n    if (process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'Key generation is not supported outside of the dev environment',\n      );\n    }\n\n    if (this.privateKeyPromise) {\n      return this.privateKeyPromise;\n    }\n\n    const promise = (async () => {\n      const secret = await generateSecret(TOKEN_ALG);\n      const jwk = await exportJWK(secret);\n      this.verificationKeys.push(base64url.decode(jwk.k ?? ''));\n      this.signingKey = this.verificationKeys[0];\n      return;\n    })();\n\n    try {\n      this.privateKeyPromise = promise;\n      await promise;\n    } catch (error) {\n      // If we fail to generate a new key, we need to clear the state so that\n      // the next caller will try to generate another key.\n      this.options.logger.error(`Failed to generate new key, ${error}`);\n      delete this.privateKeyPromise;\n    }\n\n    return promise;\n  }\n\n  async getToken(): Promise<{ token: string }> {\n    if (!this.verificationKeys.length) {\n      await this.generateKeys();\n    }\n\n    if (this.currentTokenPromise) {\n      return this.currentTokenPromise;\n    }\n\n    const result = Promise.resolve().then(async () => {\n      const jwt = await new SignJWT({})\n        .setProtectedHeader({ alg: TOKEN_ALG })\n        .setSubject(TOKEN_SUB)\n        .setExpirationTime(\n          DateTime.now().plus(TOKEN_EXPIRY_AFTER).toUnixInteger(),\n        )\n        .sign(this.signingKey);\n      return { token: jwt };\n    });\n\n    this.currentTokenPromise = result;\n\n    result\n      .then(() => {\n        setTimeout(() => {\n          this.currentTokenPromise = undefined;\n        }, TOKEN_REISSUE_AFTER.toMillis());\n      })\n      .catch(() => {\n        this.currentTokenPromise = undefined;\n      });\n\n    return result;\n  }\n\n  async authenticate(token: string): Promise<void> {\n    let verifyError = undefined;\n\n    for (const key of this.verificationKeys) {\n      try {\n        const {\n          protectedHeader: { alg },\n          payload: { sub, exp },\n        } = await jwtVerify(token, key);\n\n        if (alg !== TOKEN_ALG) {\n          throw new AuthenticationError(`Illegal alg \"${alg}\"`);\n        }\n\n        if (sub !== TOKEN_SUB) {\n          throw new AuthenticationError(`Illegal sub \"${sub}\"`);\n        }\n\n        if (typeof exp !== 'number') {\n          throw new AuthenticationError(\n            'Server-to-server token had no exp claim',\n          );\n        }\n        return;\n      } catch (e) {\n        // Catch the verify exception and continue\n        verifyError = e;\n      }\n    }\n\n    throw new AuthenticationError('Invalid server token', verifyError);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Docker from 'dockerode';\nimport fs from 'fs-extra';\nimport { ForwardedError } from '@backstage/errors';\nimport { PassThrough } from 'stream';\nimport { ContainerRunner, RunContainerOptions } from './ContainerRunner';\n\nexport type UserOptions = {\n  User?: string;\n};\n\n/**\n * A {@link ContainerRunner} for Docker containers.\n *\n * @public\n */\nexport class DockerContainerRunner implements ContainerRunner {\n  private readonly dockerClient: Docker;\n\n  constructor(options: { dockerClient: Docker }) {\n    this.dockerClient = options.dockerClient;\n  }\n\n  async runContainer(options: RunContainerOptions) {\n    const {\n      imageName,\n      command,\n      args,\n      logStream = new PassThrough(),\n      mountDirs = {},\n      workingDir,\n      envVars = {},\n      pullImage = true,\n    } = options;\n\n    // Show a better error message when Docker is unavailable.\n    try {\n      await this.dockerClient.ping();\n    } catch (e) {\n      throw new ForwardedError(\n        'This operation requires Docker. Docker does not appear to be available. Docker.ping() failed with',\n        e,\n      );\n    }\n\n    if (pullImage) {\n      await new Promise<void>((resolve, reject) => {\n        this.dockerClient.pull(imageName, {}, (err, stream) => {\n          if (err) return reject(err);\n          stream.pipe(logStream, { end: false });\n          stream.on('end', () => resolve());\n          stream.on('error', (error: Error) => reject(error));\n          return undefined;\n        });\n      });\n    }\n\n    const userOptions: UserOptions = {};\n    if (process.getuid && process.getgid) {\n      // Files that are created inside the Docker container will be owned by\n      // root on the host system on non Mac systems, because of reasons. Mainly the fact that\n      // volume sharing is done using NFS on Mac and actual mounts in Linux world.\n      // So we set the user in the container as the same user and group id as the host.\n      // On Windows we don't have process.getuid nor process.getgid\n      userOptions.User = `${process.getuid()}:${process.getgid()}`;\n    }\n\n    // Initialize volumes to mount based on mountDirs map\n    const Volumes: { [T: string]: object } = {};\n    for (const containerDir of Object.values(mountDirs)) {\n      Volumes[containerDir] = {};\n    }\n\n    // Create bind volumes\n    const Binds: string[] = [];\n    for (const [hostDir, containerDir] of Object.entries(mountDirs)) {\n      // Need to use realpath here as Docker mounting does not like\n      // symlinks for binding volumes\n      const realHostDir = await fs.realpath(hostDir);\n      Binds.push(`${realHostDir}:${containerDir}`);\n    }\n\n    // Create docker environment variables array\n    const Env = [];\n    for (const [key, value] of Object.entries(envVars)) {\n      Env.push(`${key}=${value}`);\n    }\n\n    const [{ Error: error, StatusCode: statusCode }] =\n      await this.dockerClient.run(imageName, args, logStream, {\n        Volumes,\n        HostConfig: {\n          AutoRemove: true,\n          Binds,\n        },\n        ...(workingDir ? { WorkingDir: workingDir } : {}),\n        Entrypoint: command,\n        Env,\n        ...userOptions,\n      } as Docker.ContainerCreateOptions);\n\n    if (error) {\n      throw new Error(\n        `Docker failed to run with the following error message: ${error}`,\n      );\n    }\n\n    if (statusCode !== 0) {\n      throw new Error(\n        `Docker container returned a non-zero exit code (${statusCode})`,\n      );\n    }\n  }\n}\n"],"names":["winston","merge","createHash","Keyv","KeyvRedis","KeyvMemcache","ConfigReader","parseArgs","resolvePath","findPaths","getPackages","loadConfigSchema","config","loadConfig","AbortController","knexFactory","yn","InputError","ForwardedError","path","ensureDirSync","omit","Minimatch","serializeError","NotModifiedError","AuthenticationError","NotAllowedError","NotFoundError","ConflictError","morgan","http","https","fs","dirname","express","helmet","cors","compression","defaultRequestLoggingHandler","defaultErrorHandler","stoppable","isChildPath","getRawBody","Readable","getAzureFileFetchUrl","fetch","getAzureRequestOptions","getAzureCommitsUrl","getAzureDownloadUrl","ScmIntegrations","getBitbucketCloudFileFetchUrl","getBitbucketCloudRequestOptions","parseGitUrl","getBitbucketCloudDownloadUrl","trimEnd","getBitbucketCloudDefaultBranch","getBitbucketFileFetchUrl","getBitbucketRequestOptions","getBitbucketDownloadUrl","getBitbucketDefaultBranch","getBitbucketServerFileFetchUrl","getBitbucketServerRequestOptions","getBitbucketServerDownloadUrl","git","pipeline","promisify","pipelineCb","joinPath","getGerritFileContentsApiUrl","getGerritRequestOptions","Base64Decode","parseGerritGitilesUrl","getGerritBranchApiUrl","parseGerritJsonResponse","getGerritCloneRepoUrl","tar","concatStream","os","getGitHubFileFetchUrl","DefaultGithubCredentialsProvider","getGitLabFileFetchUrl","getGitLabRequestOptions","Credentials","aws","S3","Parse","platformPath","unzipper","archiver","basename","readGoogleGcsIntegrationConfig","storage","Storage","Router","Duration","base64url","generateSecret","exportJWK","SignJWT","DateTime","jwtVerify","PassThrough"],"mappings":"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"}