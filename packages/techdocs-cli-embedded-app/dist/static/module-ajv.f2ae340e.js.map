{"version":3,"sources":["webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/ajv.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/codegen/code.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/codegen/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/codegen/scope.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/errors.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/names.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/ref_error.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/resolve.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/rules.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/util.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/applicability.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/boolSchema.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/dataType.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/defaults.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/keyword.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/compile/validate/subschema.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/core.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/runtime/equal.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/runtime/ucs2length.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/runtime/uri.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/runtime/validation_error.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/allOf.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/anyOf.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/contains.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/dependencies.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/if.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/items.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/items2020.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/not.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/oneOf.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/properties.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/applicator/thenElse.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/code.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/core/id.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/core/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/core/ref.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/discriminator/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/discriminator/types.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/draft7.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/format/format.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/format/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/metadata.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/const.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/enum.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/index.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/limitItems.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/limitLength.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/limitNumber.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/limitProperties.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/multipleOf.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/pattern.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/required.js","webpack://techdocs-cli-embedded-app/../catalog-model/node_modules/ajv/dist/vocabularies/validation/uniqueItems.js"],"names":[],"mappings":"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","file":"static/module-ajv.f2ae340e.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\n//# sourceMappingURL=ajv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    it.dataTypes = it.dataTypes.filter((t) => includesType(types, t));\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map"],"sourceRoot":""}