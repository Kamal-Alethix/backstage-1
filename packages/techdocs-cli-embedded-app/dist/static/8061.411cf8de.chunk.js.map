{"version":3,"sources":["webpack://techdocs-cli-embedded-app/../node_modules/@sucrase/webpack-loader/dist/plugins/catalog/src/components/DependsOnComponentsCard/DependsOnComponentsCard.tsx","webpack://techdocs-cli-embedded-app/../node_modules/@sucrase/webpack-loader/dist/plugins/catalog/src/components/RelatedEntitiesCard/RelatedEntitiesCard.tsx","webpack://techdocs-cli-embedded-app/../node_modules/@sucrase/webpack-loader/dist/plugins/catalog/src/components/RelatedEntitiesCard/presets.ts"],"names":[],"mappings":"yPAgCO,WAAiC,EAAO,CAC7C,KAAM,CAAE,UAAU,WAAY,QAAQ,yBAA4B,EAClE,MACE,iBAAoB,sBAAqB,CACvC,QAAS,EACT,MAAO,EACP,WAAY,YACZ,aAAc,KACd,QAAS,yBACT,aAAc,iDACd,cAAe,0BACf,qBAAsB,qBAAoB,CAC5C,CAEJ,C,0fCWO,WACL,EACA,CACA,KAAM,CACJ,UAAU,WACV,QACA,UACA,aACA,eACA,eACA,gBACA,wBACE,EAEE,CAAE,UAAW,gBAAU,EACvB,CAAE,WAAU,UAAS,SAAU,yBAAmB,EAAQ,CAC9D,KAAM,EACN,KAAM,CACR,CAAC,EAED,MAAI,GAEA,gBAAoB,WAAU,CAAE,QAAS,EAAS,MAAO,CAAM,EAC3D,gBAAoB,WAAU,IAAK,CACvC,EAIA,EAEA,gBAAoB,WAAU,CAAE,QAAS,EAAS,MAAO,CAAM,EAC3D,gBAAoB,qBAAoB,CAAE,MAAO,CAAM,CAAE,CAC7D,EAKF,gBAAoB,cAAa,CAC/B,MAAO,EACP,QAAS,EACT,aACE,gBAAoB,MAAO,CAAE,MAAO,CAAE,UAAW,QAAS,CAAE,EACxD,gBAAoB,IAAY,CAAE,QAAS,OAAQ,EAAG,CAAY,EAClE,gBAAoB,IAAY,CAAE,QAAS,OAAQ,EACjD,gBAAoB,OAAM,CAAE,GAAI,CAAc,EAAG,2BAA+B,CACpF,CACF,EAEF,QAAS,EACT,SAAU,EAAqB,GAAY,CAAC,CAAC,CAAE,CACjD,CAEJ,CCrFO,KAAM,GAAyB,CACpC,4CAA0C,CAAE,YAAa,WAAY,CAAC,EACtE,wCAAsC,EACtC,2CAAyC,EACzC,gDAA8C,EAC9C,sDAAoD,CACtD,EACa,EACX,uFACW,EAAuB,GAClC,EAEW,EAAwB,CACnC,4CAA0C,CAAE,YAAa,UAAW,CAAC,EACrE,wCAAsC,EACtC,2CAAyC,EACzC,gDAA8C,EAC9C,sDAAoD,CACtD,EACa,EACX,sFACW,EAAsB,GACjC,EAEW,EAAsB,CACjC,4CAA0C,CAAE,YAAa,QAAS,CAAC,EACnE,wCAAsC,EACtC,sDAAoD,CACtD,EACa,EACX,oFACW,EAAoB,GAC/B,C","file":"static/8061.411cf8de.chunk.js","sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RELATION_DEPENDS_ON } from '@backstage/catalog-model';\n\nimport React from 'react';\nimport {\n  asComponentEntities,\n  componentEntityColumns,\n  componentEntityHelpLink,\n  RelatedEntitiesCard,\n} from '../RelatedEntitiesCard';\n\n/** @public */\n\n\n\n\n\nexport function DependsOnComponentsCard(props) {\n  const { variant = 'gridItem', title = 'Depends on components' } = props;\n  return (\n    React.createElement(RelatedEntitiesCard, {\n      variant: variant,\n      title: title,\n      entityKind: \"Component\",\n      relationType: RELATION_DEPENDS_ON,\n      columns: componentEntityColumns,\n      emptyMessage: \"No component is a dependency of this component\"       ,\n      emptyHelpLink: componentEntityHelpLink,\n      asRenderableEntities: asComponentEntities,}\n    )\n  );\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport {\n  InfoCard,\n\n  Link,\n  Progress,\n  ResponseErrorPanel,\n\n} from '@backstage/core-components';\n\n/** @public */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A low level card component that can be used as a building block for more\n * specific cards.\n *\n * @remarks\n *\n * You probably want to make a dedicated component for your needs, which renders\n * this card as its implementation with some of the props set to the appropriate\n * values.\n *\n * @public\n */\nexport function RelatedEntitiesCard(\n  props,\n) {\n  const {\n    variant = 'gridItem',\n    title,\n    columns,\n    entityKind,\n    relationType,\n    emptyMessage,\n    emptyHelpLink,\n    asRenderableEntities,\n  } = props;\n\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: relationType,\n    kind: entityKind,\n  });\n\n  if (loading) {\n    return (\n      React.createElement(InfoCard, { variant: variant, title: title,}\n        , React.createElement(Progress, null )\n      )\n    );\n  }\n\n  if (error) {\n    return (\n      React.createElement(InfoCard, { variant: variant, title: title,}\n        , React.createElement(ResponseErrorPanel, { error: error,} )\n      )\n    );\n  }\n\n  return (\n    React.createElement(EntityTable, {\n      title: title,\n      variant: variant,\n      emptyContent: \n        React.createElement('div', { style: { textAlign: 'center' },}\n          , React.createElement(Typography, { variant: \"body1\",}, emptyMessage)\n          , React.createElement(Typography, { variant: \"body2\",}\n            , React.createElement(Link, { to: emptyHelpLink,}, \"Learn how to change this.\"    )\n          )\n        )\n      ,\n      columns: columns,\n      entities: asRenderableEntities(entities || []),}\n    )\n  );\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { EntityTable } from '@backstage/plugin-catalog-react';\n\n\nexport const componentEntityColumns = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'component' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const componentEntityHelpLink =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component';\nexport const asComponentEntities = (entities) =>\n  entities ;\n\nexport const resourceEntityColumns = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'resource' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const resourceEntityHelpLink =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-resource';\nexport const asResourceEntities = (entities) =>\n  entities ;\n\nexport const systemEntityColumns = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'system' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\nexport const systemEntityHelpLink =\n  'https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system';\nexport const asSystemEntities = (entities) =>\n  entities ;\n"],"sourceRoot":""}