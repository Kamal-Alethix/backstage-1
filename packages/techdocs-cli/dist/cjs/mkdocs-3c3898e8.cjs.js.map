{"version":3,"file":"mkdocs-3c3898e8.cjs.js","sources":["../../src/commands/serve/mkdocs.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OptionValues } from 'commander';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { createLogger } from '../../lib/utility';\nimport { runMkdocsServer } from '../../lib/mkdocsServer';\nimport { LogFunc, waitForSignal } from '../../lib/run';\n\nexport default async function serveMkdocs(opts: OptionValues) {\n  const logger = createLogger({ verbose: opts.verbose });\n\n  const dockerAddr = `http://0.0.0.0:${opts.port}`;\n  const localAddr = `http://127.0.0.1:${opts.port}`;\n  const expectedDevAddr = opts.docker ? dockerAddr : localAddr;\n  // We want to open browser only once based on a log.\n  let boolOpenBrowserTriggered = false;\n\n  const logFunc: LogFunc = data => {\n    // Sometimes the lines contain an unnecessary extra new line in between\n    const logLines = data.toString().split('\\n');\n    const logPrefix = opts.docker ? '[docker/mkdocs]' : '[mkdocs]';\n    logLines.forEach(line => {\n      if (line === '') {\n        return;\n      }\n\n      // Logs from container is verbose.\n      logger.verbose(`${logPrefix} ${line}`);\n\n      // When the server has started, open a new browser tab for the user.\n      if (\n        !boolOpenBrowserTriggered &&\n        line.includes(`Serving on ${expectedDevAddr}`)\n      ) {\n        // Always open the local address, since 0.0.0.0 belongs to docker\n        logger.info(`\\nStarting mkdocs server on ${localAddr}\\n`);\n        openBrowser(localAddr);\n        boolOpenBrowserTriggered = true;\n      }\n    });\n  };\n  // mkdocs writes all of its logs to stderr by default, and not stdout.\n  // https://github.com/mkdocs/mkdocs/issues/879#issuecomment-203536006\n  // Had me questioning this whole implementation for half an hour.\n\n  // Commander stores --no-docker in cmd.docker variable\n  const childProcess = await runMkdocsServer({\n    port: opts.port,\n    dockerImage: opts.dockerImage,\n    dockerEntrypoint: opts.dockerEntrypoint,\n    useDocker: opts.docker,\n    stdoutLogFunc: logFunc,\n    stderrLogFunc: logFunc,\n  });\n\n  // Keep waiting for user to cancel the process\n  await waitForSignal([childProcess]);\n}\n"],"names":["createLogger","openBrowser","runMkdocsServer","waitForSignal"],"mappings":";;;;;;;;;;;;AAIe,eAAe,WAAW,CAAC,IAAI,EAAE;AAChD,EAAE,MAAM,MAAM,GAAGA,oBAAY,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACzD,EAAE,MAAM,UAAU,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACnD,EAAE,MAAM,SAAS,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,EAAE,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,SAAS,CAAC;AAC/D,EAAE,IAAI,wBAAwB,GAAG,KAAK,CAAC;AACvC,EAAE,MAAM,OAAO,GAAG,CAAC,IAAI,KAAK;AAC5B,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjD,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAG,UAAU,CAAC;AACnE,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,MAAM,IAAI,IAAI,KAAK,EAAE,EAAE;AACvB,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7C,MAAM,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE;AACvF,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,0BAA0B,EAAE,SAAS,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,QAAQC,+BAAW,CAAC,SAAS,CAAC,CAAC;AAC/B,QAAQ,wBAAwB,GAAG,IAAI,CAAC;AACxC,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG,CAAC;AACJ,EAAE,MAAM,YAAY,GAAG,MAAMC,4BAAe,CAAC;AAC7C,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI;AACnB,IAAI,WAAW,EAAE,IAAI,CAAC,WAAW;AACjC,IAAI,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AAC3C,IAAI,SAAS,EAAE,IAAI,CAAC,MAAM;AAC1B,IAAI,aAAa,EAAE,OAAO;AAC1B,IAAI,aAAa,EAAE,OAAO;AAC1B,GAAG,CAAC,CAAC;AACL,EAAE,MAAMC,0BAAa,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACtC;;;;"}