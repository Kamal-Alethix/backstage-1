{"version":3,"file":"mkdocsServer-0af6527d.cjs.js","sources":["../../src/lib/run.ts","../../src/lib/mkdocsServer.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { spawn, SpawnOptions, ChildProcess } from 'child_process';\n\nexport type LogFunc = (data: Buffer | string) => void;\ntype SpawnOptionsPartialEnv = Omit<SpawnOptions, 'env'> & {\n  env?: Partial<NodeJS.ProcessEnv>;\n  // Pipe stdout to this log function\n  stdoutLogFunc?: LogFunc;\n  // Pipe stderr to this log function\n  stderrLogFunc?: LogFunc;\n};\n\n// TODO: Accept log functions to pipe logs with.\n// Runs a child command, returning the child process instance.\n// Use it along with waitForSignal to run a long running process e.g. mkdocs serve\nexport const run = async (\n  name: string,\n  args: string[] = [],\n  options: SpawnOptionsPartialEnv = {},\n): Promise<ChildProcess> => {\n  const { stdoutLogFunc, stderrLogFunc } = options;\n\n  const env: NodeJS.ProcessEnv = {\n    ...process.env,\n    FORCE_COLOR: 'true',\n    ...(options.env ?? {}),\n  };\n\n  // Refer: https://nodejs.org/api/child_process.html#child_process_subprocess_stdio\n  const stdio = [\n    'inherit',\n    stdoutLogFunc ? 'pipe' : 'inherit',\n    stderrLogFunc ? 'pipe' : 'inherit',\n  ] as ('inherit' | 'pipe')[];\n\n  const childProcess = spawn(name, args, {\n    stdio: stdio,\n    ...options,\n    env,\n  });\n\n  if (stdoutLogFunc && childProcess.stdout) {\n    childProcess.stdout.on('data', stdoutLogFunc);\n  }\n  if (stderrLogFunc && childProcess.stderr) {\n    childProcess.stderr.on('data', stderrLogFunc);\n  }\n\n  return childProcess;\n};\n\n// Block indefinitely and wait for a signal to kill the child process(es)\n// Throw error if any child process errors\n// Resolves only when all processes exit with status code 0\nexport async function waitForSignal(\n  childProcesses: Array<ChildProcess>,\n): Promise<void> {\n  const promises: Array<Promise<void>> = [];\n\n  for (const signal of ['SIGINT', 'SIGTERM'] as const) {\n    process.on(signal, () => {\n      childProcesses.forEach(childProcess => {\n        childProcess.kill();\n      });\n    });\n  }\n\n  childProcesses.forEach(childProcess => {\n    if (typeof childProcess.exitCode === 'number') {\n      if (childProcess.exitCode) {\n        throw new Error(`Non zero exit code from child process`);\n      }\n      return;\n    }\n\n    promises.push(\n      new Promise<void>((resolve, reject) => {\n        childProcess.once('error', reject);\n        childProcess.once('exit', resolve);\n      }),\n    );\n  });\n\n  await Promise.all(promises);\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildProcess } from 'child_process';\nimport { run, LogFunc } from './run';\n\nexport const runMkdocsServer = async (options: {\n  port?: string;\n  useDocker?: boolean;\n  dockerImage?: string;\n  dockerEntrypoint?: string;\n  stdoutLogFunc?: LogFunc;\n  stderrLogFunc?: LogFunc;\n}): Promise<ChildProcess> => {\n  const port = options.port ?? '8000';\n  const useDocker = options.useDocker ?? true;\n  const dockerImage = options.dockerImage ?? 'spotify/techdocs';\n\n  if (useDocker) {\n    return await run(\n      'docker',\n      [\n        'run',\n        '--rm',\n        '-w',\n        '/content',\n        '-v',\n        `${process.cwd()}:/content`,\n        '-p',\n        `${port}:${port}`,\n        '-it',\n        ...(options.dockerEntrypoint\n          ? ['--entrypoint', options.dockerEntrypoint]\n          : []),\n        dockerImage,\n        'serve',\n        '--dev-addr',\n        `0.0.0.0:${port}`,\n      ],\n      {\n        stdoutLogFunc: options.stdoutLogFunc,\n        stderrLogFunc: options.stderrLogFunc,\n      },\n    );\n  }\n\n  return await run('mkdocs', ['serve', '--dev-addr', `127.0.0.1:${port}`], {\n    stdoutLogFunc: options.stdoutLogFunc,\n    stderrLogFunc: options.stderrLogFunc,\n  });\n};\n"],"names":["spawn"],"mappings":"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"}