{"version":3,"file":"serve-48337ec4.cjs.js","sources":["../../src/lib/httpServer.ts","../../src/commands/serve/serve.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport serveHandler from 'serve-handler';\nimport http from 'http';\nimport httpProxy from 'http-proxy';\nimport { createLogger } from './utility';\n\nexport default class HTTPServer {\n  private readonly proxyEndpoint: string;\n  private readonly backstageBundleDir: string;\n  private readonly backstagePort: number;\n  private readonly mkdocsPort: number;\n  private readonly verbose: boolean;\n\n  constructor(\n    backstageBundleDir: string,\n    backstagePort: number,\n    mkdocsPort: number,\n    verbose: boolean,\n  ) {\n    this.proxyEndpoint = '/api/techdocs/';\n    this.backstageBundleDir = backstageBundleDir;\n    this.backstagePort = backstagePort;\n    this.mkdocsPort = mkdocsPort;\n    this.verbose = verbose;\n  }\n\n  // Create a Proxy for mkdocs server\n  private createProxy() {\n    const proxy = httpProxy.createProxyServer({\n      target: `http://localhost:${this.mkdocsPort}`,\n    });\n\n    return (request: http.IncomingMessage): [httpProxy, string] => {\n      // If the request path is prefixed with this.proxyEndpoint, remove it.\n      const proxyEndpointPath = new RegExp(`^${this.proxyEndpoint}`, 'i');\n      const forwardPath = request.url?.replace(proxyEndpointPath, '') || '';\n\n      return [proxy, forwardPath];\n    };\n  }\n\n  public async serve(): Promise<http.Server> {\n    return new Promise<http.Server>((resolve, reject) => {\n      const proxyHandler = this.createProxy();\n      const server = http.createServer(\n        (request: http.IncomingMessage, response: http.ServerResponse) => {\n          if (request.url?.startsWith(this.proxyEndpoint)) {\n            const [proxy, forwardPath] = proxyHandler(request);\n\n            proxy.on('error', (error: Error) => {\n              reject(error);\n            });\n\n            response.setHeader('Access-Control-Allow-Origin', '*');\n            response.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');\n\n            request.url = forwardPath;\n            proxy.web(request, response);\n            return;\n          }\n\n          // This endpoint is used by the frontend to detect where the backend is running.\n          if (request.url === '/.detect') {\n            response.setHeader('Content-Type', 'text/plain');\n            response.end('techdocs-cli-server');\n            return;\n          }\n\n          serveHandler(request, response, {\n            public: this.backstageBundleDir,\n            trailingSlash: true,\n            rewrites: [{ source: '**', destination: 'index.html' }],\n          });\n        },\n      );\n\n      const logger = createLogger({ verbose: false });\n      server.listen(this.backstagePort, () => {\n        if (this.verbose) {\n          logger.info(\n            `[techdocs-preview-bundle] Running local version of Backstage at http://localhost:${this.backstagePort}`,\n          );\n        }\n        resolve(server);\n      });\n\n      server.on('error', (error: Error) => {\n        reject(error);\n      });\n    });\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OptionValues } from 'commander';\nimport path from 'path';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { findPaths } from '@backstage/cli-common';\nimport HTTPServer from '../../lib/httpServer';\nimport { runMkdocsServer } from '../../lib/mkdocsServer';\nimport { LogFunc, waitForSignal } from '../../lib/run';\nimport { createLogger } from '../../lib/utility';\n\nfunction findPreviewBundlePath(): string {\n  try {\n    return path.join(\n      path.dirname(require.resolve('techdocs-cli-embedded-app/package.json')),\n      'dist',\n    );\n  } catch {\n    // If the techdocs-cli-embedded-app package is not available it means we're\n    // running a published package. For published packages the preview bundle is\n    // copied to dist/embedded-app be the prepack script.\n    //\n    // This can be tested by running `yarn pack` and extracting the resulting tarball into a directory.\n    // Within the extracted directory, run `npm install --only=prod`.\n    // Once that's done you can test the CLI in any directory using `node <tmp-dir>/package <command>`.\n    // eslint-disable-next-line no-restricted-syntax\n    return findPaths(__dirname).resolveOwn('dist/embedded-app');\n  }\n}\n\nexport default async function serve(opts: OptionValues) {\n  const logger = createLogger({ verbose: opts.verbose });\n\n  // Determine if we want to run in local dev mode or not\n  // This will run the backstage http server on a different port and only used\n  // for proxying mkdocs to the backstage app running locally (e.g. with webpack-dev-server)\n  const isDevMode = Object.keys(process.env).includes('TECHDOCS_CLI_DEV_MODE')\n    ? true\n    : false;\n\n  // TODO: Backstage app port should also be configurable as a CLI option. However, since we bundle\n  // a backstage app, we define app.baseUrl in the app-config.yaml.\n  // Hence, it is complicated to make this configurable.\n  const backstagePort = 3000;\n  const backstageBackendPort = 7007;\n\n  const mkdocsDockerAddr = `http://0.0.0.0:${opts.mkdocsPort}`;\n  const mkdocsLocalAddr = `http://127.0.0.1:${opts.mkdocsPort}`;\n  const mkdocsExpectedDevAddr = opts.docker\n    ? mkdocsDockerAddr\n    : mkdocsLocalAddr;\n\n  let mkdocsServerHasStarted = false;\n  const mkdocsLogFunc: LogFunc = data => {\n    // Sometimes the lines contain an unnecessary extra new line\n    const logLines = data.toString().split('\\n');\n    const logPrefix = opts.docker ? '[docker/mkdocs]' : '[mkdocs]';\n    logLines.forEach(line => {\n      if (line === '') {\n        return;\n      }\n\n      logger.verbose(`${logPrefix} ${line}`);\n\n      // When the server has started, open a new browser tab for the user.\n      if (\n        !mkdocsServerHasStarted &&\n        line.includes(`Serving on ${mkdocsExpectedDevAddr}`)\n      ) {\n        mkdocsServerHasStarted = true;\n      }\n    });\n  };\n  // mkdocs writes all of its logs to stderr by default, and not stdout.\n  // https://github.com/mkdocs/mkdocs/issues/879#issuecomment-203536006\n  // Had me questioning this whole implementation for half an hour.\n  logger.info('Starting mkdocs server.');\n  const mkdocsChildProcess = await runMkdocsServer({\n    port: opts.mkdocsPort,\n    dockerImage: opts.dockerImage,\n    dockerEntrypoint: opts.dockerEntrypoint,\n    useDocker: opts.docker,\n    stdoutLogFunc: mkdocsLogFunc,\n    stderrLogFunc: mkdocsLogFunc,\n  });\n\n  // Wait until mkdocs server has started so that Backstage starts with docs loaded\n  // Takes 1-5 seconds\n  for (let attempt = 0; attempt < 30; attempt++) {\n    await new Promise(r => setTimeout(r, 3000));\n    if (mkdocsServerHasStarted) {\n      break;\n    }\n    logger.info('Waiting for mkdocs server to start...');\n  }\n\n  if (!mkdocsServerHasStarted) {\n    logger.error(\n      'mkdocs server did not start. Exiting. Try re-running command with -v option for more details.',\n    );\n  }\n\n  const port = isDevMode ? backstageBackendPort : backstagePort;\n  const httpServer = new HTTPServer(\n    findPreviewBundlePath(),\n    port,\n    opts.mkdocsPort,\n    opts.verbose,\n  );\n\n  httpServer\n    .serve()\n    .catch(err => {\n      logger.error(err);\n      mkdocsChildProcess.kill();\n      process.exit(1);\n    })\n    .then(() => {\n      // The last three things default/component/local/ don't matter. They can be anything.\n      openBrowser(`http://localhost:${port}/docs/default/component/local/`);\n      logger.info(\n        `Serving docs in Backstage at http://localhost:${port}/docs/default/component/local/\\nOpening browser.`,\n      );\n    });\n\n  await waitForSignal([mkdocsChildProcess]);\n}\n"],"names":["httpProxy","http","serveHandler","createLogger","path","findPaths","runMkdocsServer","openBrowser","waitForSignal"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIe,MAAM,UAAU,CAAC;AAChC,EAAE,WAAW,CAAC,kBAAkB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE;AACtE,IAAI,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;AAC1C,IAAI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACjD,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACvC,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH,EAAE,WAAW,GAAG;AAChB,IAAI,MAAM,KAAK,GAAGA,6BAAS,CAAC,iBAAiB,CAAC;AAC9C,MAAM,MAAM,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACnD,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,OAAO,KAAK;AACxB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,MAAM,iBAAiB,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1E,MAAM,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1G,MAAM,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAClC,KAAK,CAAC;AACN,GAAG;AACH,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC9C,MAAM,MAAM,MAAM,GAAGC,wBAAI,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,QAAQ,KAAK;AAC9D,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;AACrF,UAAU,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;AAC7D,UAAU,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,KAAK;AACvC,YAAY,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,WAAW,CAAC,CAAC;AACb,UAAU,QAAQ,CAAC,SAAS,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;AACjE,UAAU,QAAQ,CAAC,SAAS,CAAC,8BAA8B,EAAE,cAAc,CAAC,CAAC;AAC7E,UAAU,OAAO,CAAC,GAAG,GAAG,WAAW,CAAC;AACpC,UAAU,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACvC,UAAU,OAAO;AACjB,SAAS;AACT,QAAQ,IAAI,OAAO,CAAC,GAAG,KAAK,UAAU,EAAE;AACxC,UAAU,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC3D,UAAU,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC9C,UAAU,OAAO;AACjB,SAAS;AACT,QAAQC,gCAAY,CAAC,OAAO,EAAE,QAAQ,EAAE;AACxC,UAAU,MAAM,EAAE,IAAI,CAAC,kBAAkB;AACzC,UAAU,aAAa,EAAE,IAAI;AAC7B,UAAU,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC;AACjE,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,MAAM,GAAGC,oBAAY,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AACtD,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM;AAC9C,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC,iFAAiF,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAChI,SAAS;AACT,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC;AACxB,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,KAAK;AACpC,QAAQ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;ACvDA,SAAS,qBAAqB,GAAG;AACjC,EAAE,IAAI;AACN,IAAI,OAAOC,wBAAI,CAAC,IAAI,CAACA,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACtG,GAAG,CAAC,MAAM;AACV,IAAI,OAAOC,mBAAS,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAChE,GAAG;AACH,CAAC;AACc,eAAe,KAAK,CAAC,IAAI,EAAE;AAC1C,EAAE,MAAM,MAAM,GAAGF,oBAAY,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACzD,EAAE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;AAC9F,EAAE,MAAM,aAAa,GAAG,GAAG,CAAC;AAC5B,EAAE,MAAM,oBAAoB,GAAG,IAAI,CAAC;AACpC,EAAE,MAAM,gBAAgB,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC/D,EAAE,MAAM,eAAe,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAChE,EAAE,MAAM,qBAAqB,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,GAAG,eAAe,CAAC;AACjF,EAAE,IAAI,sBAAsB,GAAG,KAAK,CAAC;AACrC,EAAE,MAAM,aAAa,GAAG,CAAC,IAAI,KAAK;AAClC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjD,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAG,UAAU,CAAC;AACnE,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,MAAM,IAAI,IAAI,KAAK,EAAE,EAAE;AACvB,QAAQ,OAAO;AACf,OAAO;AACP,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7C,MAAM,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC,CAAC,EAAE;AAC3F,QAAQ,sBAAsB,GAAG,IAAI,CAAC;AACtC,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG,CAAC;AACJ,EAAE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;AACzC,EAAE,MAAM,kBAAkB,GAAG,MAAMG,4BAAe,CAAC;AACnD,IAAI,IAAI,EAAE,IAAI,CAAC,UAAU;AACzB,IAAI,WAAW,EAAE,IAAI,CAAC,WAAW;AACjC,IAAI,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AAC3C,IAAI,SAAS,EAAE,IAAI,CAAC,MAAM;AAC1B,IAAI,aAAa,EAAE,aAAa;AAChC,IAAI,aAAa,EAAE,aAAa;AAChC,GAAG,CAAC,CAAC;AACL,EAAE,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE;AACjD,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACjD,IAAI,IAAI,sBAAsB,EAAE;AAChC,MAAM,MAAM;AACZ,KAAK;AACL,IAAI,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;AACzD,GAAG;AACH,EAAE,IAAI,CAAC,sBAAsB,EAAE;AAC/B,IAAI,MAAM,CAAC,KAAK,CAAC,+FAA+F,CAAC,CAAC;AAClH,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,SAAS,GAAG,oBAAoB,GAAG,aAAa,CAAC;AAChE,EAAE,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAClG,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK;AACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,kBAAkB,CAAC,IAAI,EAAE,CAAC;AAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM;AAChB,IAAIC,+BAAW,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;AAC1E,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,8CAA8C,EAAE,IAAI,CAAC;AACtE,gBAAgB,CAAC,CAAC,CAAC;AACnB,GAAG,CAAC,CAAC;AACL,EAAE,MAAMC,0BAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC5C;;;;"}