{"version":3,"file":"index.cjs.js","sources":["../src/codemods.ts","../src/errors.ts","../src/action.ts","../src/index.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Codemod {\n  name: string;\n  description: string;\n}\n\nexport const codemods: Codemod[] = [\n  {\n    name: 'core-imports',\n    description:\n      'Updates @backstage/core imports to use @backstage/core-* imports instead.',\n  },\n  {\n    name: 'extension-names',\n    description:\n      'Adds a \"name\" property to all core extensions provided by plugins.',\n  },\n];\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\n\nexport class CustomError extends Error {\n  get name(): string {\n    return this.constructor.name;\n  }\n}\n\nexport class ExitCodeError extends CustomError {\n  readonly code: number;\n\n  constructor(code: number, command?: string) {\n    if (command) {\n      super(`Command '${command}' exited with code ${code}`);\n    } else {\n      super(`Child exited with code ${code}`);\n    }\n    this.code = code;\n  }\n}\n\nexport function exitWithError(error: Error): never {\n  if (error instanceof ExitCodeError) {\n    process.stderr.write(`\\n${chalk.red(error.message)}\\n\\n`);\n    process.exit(error.code);\n  } else {\n    process.stderr.write(`\\n${chalk.red(`${error}`)}\\n\\n`);\n    process.exit(1);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { relative as relativePath } from 'path';\nimport { spawn } from 'child_process';\nimport { OptionValues } from 'commander';\nimport { findPaths } from '@backstage/cli-common';\nimport { platform } from 'os';\nimport { ExitCodeError } from './errors';\n\n// eslint-disable-next-line no-restricted-syntax\nconst paths = findPaths(__dirname);\n\nexport function createCodemodAction(name: string) {\n  return async (dirs: string[], opts: OptionValues) => {\n    const transformPath = relativePath(\n      process.cwd(),\n      paths.resolveOwn('transforms', `${name}.js`),\n    );\n\n    const args = [\n      '--parser=tsx',\n      '--extensions=tsx,js,ts,tsx',\n      '--transform',\n      transformPath,\n      '--ignore-pattern=**/node_modules/**',\n    ];\n\n    if (opts.dry) {\n      args.push('--dry');\n    }\n\n    if (dirs.length) {\n      args.push(...dirs);\n    } else {\n      args.push('.');\n    }\n\n    console.log(`Running jscodeshift with these arguments: ${args.join(' ')}`);\n\n    let command;\n    if (platform() === 'win32') {\n      command = 'jscodeshift';\n    } else {\n      // jscodeshift ships a slightly broken bin script with windows\n      // line endings so we need to execute it using node rather than\n      // letting the `#!/usr/bin/env node` take care of it\n      command = process.argv0;\n      args.unshift(require.resolve('.bin/jscodeshift'));\n    }\n\n    const child = spawn(command, args, {\n      stdio: 'inherit',\n      shell: true,\n      env: {\n        ...process.env,\n        FORCE_COLOR: 'true',\n      },\n    });\n\n    if (typeof child.exitCode === 'number') {\n      if (child.exitCode) {\n        throw new ExitCodeError(child.exitCode, name);\n      }\n      return;\n    }\n\n    await new Promise<void>((resolve, reject) => {\n      child.once('error', error => reject(error));\n      child.once('exit', code => {\n        if (code) {\n          reject(new ExitCodeError(code, name));\n        } else {\n          resolve();\n        }\n      });\n    });\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A collection of codemods for Backstage projects\n *\n * @packageDocumentation\n */\n\nimport { program } from 'commander';\nimport chalk from 'chalk';\nimport { codemods } from './codemods';\nimport { exitWithError } from './errors';\nimport { createCodemodAction } from './action';\nimport { version } from '../package.json';\n\nasync function main(argv: string[]) {\n  program.name('backstage-codemods').version(version);\n\n  const applyCommand = program\n    .command('apply <codemod> [target-dirs...]')\n    .description(\n      'Apply a codemod to target directories, defaulting to the current directory',\n    );\n\n  for (const codemod of codemods) {\n    applyCommand\n      .command(`${codemod.name} [target-dirs...]`)\n      .description(codemod.description)\n      .option('-d, --dry', 'Dry run, no changes written to files')\n      .action(createCodemodAction(codemod.name));\n  }\n\n  program\n    .command('list')\n    .description('List available codemods')\n    .action(() => {\n      const maxNameLength = Math.max(...codemods.map(m => m.name.length));\n      for (const codemod of codemods) {\n        const paddedName = codemod.name.padEnd(maxNameLength, ' ');\n        console.log(`${paddedName} - ${codemod.description}`);\n      }\n    });\n\n  program.on('command:*', () => {\n    console.log();\n    console.log(chalk.red(`Invalid command: ${program.args.join(' ')}`));\n    console.log();\n    program.outputHelp();\n    process.exit(1);\n  });\n\n  program.parse(argv);\n}\n\nprocess.on('unhandledRejection', (rejection: unknown) => {\n  if (rejection instanceof Error) {\n    exitWithError(rejection);\n  } else {\n    exitWithError(new Error(`Unknown rejection: '${rejection}'`));\n  }\n});\n\nmain(process.argv).catch(exitWithError);\n"],"names":["chalk","findPaths","relativePath","platform","spawn","program"],"mappings":"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"}