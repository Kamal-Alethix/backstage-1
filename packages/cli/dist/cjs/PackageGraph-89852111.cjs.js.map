{"version":3,"file":"PackageGraph-89852111.cjs.js","sources":["../../src/lib/git.ts","../../src/lib/monorepo/PackageGraph.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertError, ForwardedError } from '@backstage/errors';\nimport { execFile as execFileCb } from 'child_process';\nimport { promisify } from 'util';\nimport { paths } from './paths';\n\nconst execFile = promisify(execFileCb);\n\n/**\n * Run a git command, trimming the output splitting it into lines.\n */\nexport async function runGit(...args: string[]) {\n  try {\n    const { stdout } = await execFile('git', args, {\n      shell: true,\n      cwd: paths.targetRoot,\n    });\n    return stdout.trim().split(/\\r\\n|\\r|\\n/);\n  } catch (error) {\n    assertError(error);\n    if (error.stderr || typeof error.code === 'number') {\n      const stderr = (error.stderr as undefined | Buffer)?.toString('utf8');\n      const msg = stderr?.trim() ?? `with exit code ${error.code}`;\n      throw new Error(`git ${args[0]} failed, ${msg}`);\n    }\n    throw new ForwardedError('Unknown execution error', error);\n  }\n}\n\n/**\n * Returns a sorted list of all files that have changed since the merge base\n * of the provided `ref` and HEAD, as well as all files that are not tracked by git.\n */\nexport async function listChangedFiles(ref: string) {\n  if (!ref) {\n    throw new Error('ref is required');\n  }\n\n  let diffRef = ref;\n  try {\n    const [base] = await runGit('merge-base', 'HEAD', ref);\n    diffRef = base;\n  } catch {\n    // silently fall back to using the ref directly if merge base is not available\n  }\n\n  const tracked = await runGit('diff', '--name-only', diffRef);\n  const untracked = await runGit('ls-files', '--others', '--exclude-standard');\n\n  return Array.from(new Set([...tracked, ...untracked]));\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport { getPackages, Package } from '@manypkg/get-packages';\nimport { paths } from '../paths';\nimport { PackageRole } from '../role';\nimport { listChangedFiles } from '../git';\n\ntype PackageJSON = Package['packageJson'];\n\nexport interface ExtendedPackageJSON extends PackageJSON {\n  scripts?: {\n    [key: string]: string;\n  };\n  // The `bundled` field is a field known within Backstage, it means\n  // that the package bundles all of its dependencies in its build output.\n  bundled?: boolean;\n\n  backstage?: {\n    role?: PackageRole;\n  };\n}\n\nexport type ExtendedPackage = {\n  dir: string;\n  packageJson: ExtendedPackageJSON;\n};\n\nexport type PackageGraphNode = {\n  /** The name of the package */\n  name: string;\n  /** The directory of the package */\n  dir: string;\n  /** The package data of the package itself */\n  packageJson: ExtendedPackageJSON;\n\n  /** All direct local dependencies of the package */\n  allLocalDependencies: Map<string, PackageGraphNode>;\n  /** All direct local dependencies that will be present in the published package */\n  publishedLocalDependencies: Map<string, PackageGraphNode>;\n  /** Local dependencies */\n  localDependencies: Map<string, PackageGraphNode>;\n  /** Local devDependencies */\n  localDevDependencies: Map<string, PackageGraphNode>;\n  /** Local optionalDependencies */\n  localOptionalDependencies: Map<string, PackageGraphNode>;\n\n  /** All direct incoming local dependencies of the package */\n  allLocalDependents: Map<string, PackageGraphNode>;\n  /** All direct incoming local dependencies that will be present in the published package */\n  publishedLocalDependents: Map<string, PackageGraphNode>;\n  /** Incoming local dependencies */\n  localDependents: Map<string, PackageGraphNode>;\n  /** Incoming local devDependencies */\n  localDevDependents: Map<string, PackageGraphNode>;\n  /** Incoming local optionalDependencies */\n  localOptionalDependents: Map<string, PackageGraphNode>;\n};\n\nexport class PackageGraph extends Map<string, PackageGraphNode> {\n  static async listTargetPackages(): Promise<ExtendedPackage[]> {\n    const { packages } = await getPackages(paths.targetDir);\n    return packages as ExtendedPackage[];\n  }\n\n  static fromPackages(packages: Package[]): PackageGraph {\n    const graph = new PackageGraph();\n\n    // Add all local packages to the graph\n    for (const pkg of packages) {\n      const name = pkg.packageJson.name;\n      const existingPkg = graph.get(name);\n      if (existingPkg) {\n        throw new Error(\n          `Duplicate package name '${name}' at ${pkg.dir} and ${existingPkg.dir}`,\n        );\n      }\n\n      graph.set(name, {\n        name,\n        dir: pkg.dir,\n        packageJson: pkg.packageJson as ExtendedPackageJSON,\n\n        allLocalDependencies: new Map(),\n        publishedLocalDependencies: new Map(),\n        localDependencies: new Map(),\n        localDevDependencies: new Map(),\n        localOptionalDependencies: new Map(),\n\n        allLocalDependents: new Map(),\n        publishedLocalDependents: new Map(),\n        localDependents: new Map(),\n        localDevDependents: new Map(),\n        localOptionalDependents: new Map(),\n      });\n    }\n\n    // Populate the local dependency structure\n    for (const node of graph.values()) {\n      for (const depName of Object.keys(node.packageJson.dependencies || {})) {\n        const depPkg = graph.get(depName);\n        if (depPkg) {\n          node.allLocalDependencies.set(depName, depPkg);\n          node.publishedLocalDependencies.set(depName, depPkg);\n          node.localDependencies.set(depName, depPkg);\n\n          depPkg.allLocalDependents.set(node.name, node);\n          depPkg.publishedLocalDependents.set(node.name, node);\n          depPkg.localDependents.set(node.name, node);\n        }\n      }\n      for (const depName of Object.keys(\n        node.packageJson.devDependencies || {},\n      )) {\n        const depPkg = graph.get(depName);\n        if (depPkg) {\n          node.allLocalDependencies.set(depName, depPkg);\n          node.localDevDependencies.set(depName, depPkg);\n\n          depPkg.allLocalDependents.set(node.name, node);\n          depPkg.localDevDependents.set(node.name, node);\n        }\n      }\n      for (const depName of Object.keys(\n        node.packageJson.optionalDependencies || {},\n      )) {\n        const depPkg = graph.get(depName);\n        if (depPkg) {\n          node.allLocalDependencies.set(depName, depPkg);\n          node.publishedLocalDependencies.set(depName, depPkg);\n          node.localOptionalDependencies.set(depName, depPkg);\n\n          depPkg.allLocalDependents.set(node.name, node);\n          depPkg.publishedLocalDependents.set(node.name, node);\n          depPkg.localOptionalDependents.set(node.name, node);\n        }\n      }\n    }\n\n    return graph;\n  }\n\n  /**\n   * Traverses the package graph and collects a set of package names.\n   *\n   * The traversal starts at the provided list names, and continues\n   * throughout all the names returned by the `collectFn`, which is\n   * called once for each seen package.\n   */\n  collectPackageNames(\n    startingPackageNames: string[],\n    collectFn: (pkg: PackageGraphNode) => Iterable<string> | undefined,\n  ): Set<string> {\n    const targets = new Set<string>();\n    const searchNames = startingPackageNames.slice();\n\n    while (searchNames.length) {\n      const name = searchNames.pop()!;\n\n      if (targets.has(name)) {\n        continue;\n      }\n\n      const node = this.get(name);\n      if (!node) {\n        throw new Error(`Package '${name}' not found`);\n      }\n\n      targets.add(name);\n\n      const collected = collectFn(node);\n      if (collected) {\n        searchNames.push(...collected);\n      }\n    }\n\n    return targets;\n  }\n\n  async listChangedPackages(options: { ref: string }) {\n    const changedFiles = await listChangedFiles(options.ref);\n\n    const dirMap = new Map(\n      Array.from(this.values()).map(pkg => [\n        // relative from root, convert to posix, and add a / at the end\n        path\n          .relative(paths.targetRoot, pkg.dir)\n          .split(path.sep)\n          .join(path.posix.sep) + path.posix.sep,\n        pkg,\n      ]),\n    );\n    const packageDirs = Array.from(dirMap.keys());\n\n    const result = new Array<PackageGraphNode>();\n    let searchIndex = 0;\n\n    changedFiles.sort();\n    packageDirs.sort();\n\n    for (const packageDir of packageDirs) {\n      // Skip through changes that appear before our package dir\n      while (\n        searchIndex < changedFiles.length &&\n        changedFiles[searchIndex] < packageDir\n      ) {\n        searchIndex += 1;\n      }\n\n      // Check if we arrived at a match, otherwise we move on to the next package dir\n      if (changedFiles[searchIndex]?.startsWith(packageDir)) {\n        searchIndex += 1;\n\n        result.push(dirMap.get(packageDir)!);\n\n        // Skip through the rest of the changed files for the same package\n        while (changedFiles[searchIndex]?.startsWith(packageDir)) {\n          searchIndex += 1;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n"],"names":["promisify","execFileCb","paths","assertError","ForwardedError","getPackages","path"],"mappings":"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"}