{"version":3,"file":"tasks-ff51899d.cjs.js","sources":["../../src/lib/codeowners/codeowners.ts","../../src/lib/tasks.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { paths } from '../paths';\n\nconst TEAM_ID_RE = /^@[-\\w]+\\/[-\\w]+$/;\nconst USER_ID_RE = /^@[-\\w]+$/;\nconst EMAIL_RE = /^[^@]+@[-.\\w]+\\.[-\\w]+$/i;\nconst DEFAULT_OWNER = '@backstage/maintainers';\n\ntype CodeownersEntry = {\n  ownedPath: string;\n  ownerIds: string[];\n};\n\nexport async function getCodeownersFilePath(\n  rootDir: string,\n): Promise<string | undefined> {\n  const possiblePaths = [\n    path.join(rootDir, '.github', 'CODEOWNERS'),\n    path.join(rootDir, '.gitlab', 'CODEOWNERS'),\n    path.join(rootDir, 'docs', 'CODEOWNERS'),\n    path.join(rootDir, 'CODEOWNERS'),\n  ];\n\n  for (const p of possiblePaths) {\n    if (await fs.pathExists(p)) {\n      return p;\n    }\n  }\n\n  return undefined;\n}\n\nexport function isValidSingleOwnerId(id: string): boolean {\n  if (!id || typeof id !== 'string') {\n    return false;\n  }\n\n  return TEAM_ID_RE.test(id) || USER_ID_RE.test(id) || EMAIL_RE.test(id);\n}\n\nexport function parseOwnerIds(\n  spaceSeparatedOwnerIds: string | undefined,\n): string[] | undefined {\n  if (!spaceSeparatedOwnerIds || typeof spaceSeparatedOwnerIds !== 'string') {\n    return undefined;\n  }\n\n  const ids = spaceSeparatedOwnerIds.split(' ').filter(Boolean);\n  if (!ids.every(isValidSingleOwnerId)) {\n    return undefined;\n  }\n\n  return ids;\n}\n\nexport async function addCodeownersEntry(\n  ownedPath: string,\n  ownerStr: string,\n  codeownersFilePath?: string,\n): Promise<boolean> {\n  const ownerIds = parseOwnerIds(ownerStr);\n  if (!ownerIds || ownerIds.length === 0) {\n    return false;\n  }\n\n  let filePath = codeownersFilePath;\n  if (!filePath) {\n    filePath = await getCodeownersFilePath(paths.targetRoot);\n    if (!filePath) {\n      return false;\n    }\n  }\n\n  const allLines = (await fs.readFile(filePath, 'utf8')).split('\\n');\n\n  // Only keep comments from the top of the file\n  const commentLines = [];\n  for (const line of allLines) {\n    if (line[0] !== '#') {\n      break;\n    }\n    commentLines.push(line);\n  }\n\n  const oldDeclarationEntries: CodeownersEntry[] = allLines\n    .filter(line => line[0] !== '#')\n    .map(line => line.split(/\\s+/).filter(Boolean))\n    .filter(tokens => tokens.length >= 2)\n    .map(tokens => ({\n      ownedPath: tokens[0],\n      ownerIds: tokens.slice(1),\n    }));\n\n  const newDeclarationEntries = oldDeclarationEntries\n    .filter(entry => entry.ownedPath !== '*')\n    .concat([{ ownedPath, ownerIds }])\n    .sort((l1, l2) => l1.ownedPath.localeCompare(l2.ownedPath));\n  newDeclarationEntries.unshift({\n    ownedPath: '*',\n    ownerIds: [DEFAULT_OWNER],\n  });\n\n  // Calculate longest path to be able to align entries nicely\n  const longestOwnedPath = newDeclarationEntries.reduce(\n    (length, entry) => Math.max(length, entry.ownedPath.length),\n    0,\n  );\n\n  const newDeclarationLines = newDeclarationEntries.map(entry => {\n    const entryPath =\n      entry.ownedPath + ' '.repeat(longestOwnedPath - entry.ownedPath.length);\n    return [entryPath, ...entry.ownerIds].join(' ');\n  });\n\n  const newLines = [...commentLines, '', ...newDeclarationLines, ''];\n\n  await fs.writeFile(filePath, newLines.join('\\n'), 'utf8');\n\n  return true;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport handlebars from 'handlebars';\nimport ora from 'ora';\nimport { promisify } from 'util';\nimport { basename, dirname } from 'path';\nimport recursive from 'recursive-readdir';\nimport { exec as execCb } from 'child_process';\nimport { paths } from './paths';\nimport { assertError } from '@backstage/errors';\n\nconst exec = promisify(execCb);\n\nconst TASK_NAME_MAX_LENGTH = 14;\n\nexport class Task {\n  static log(name: string = '') {\n    process.stderr.write(`${chalk.green(name)}\\n`);\n  }\n\n  static error(message: string = '') {\n    process.stderr.write(`\\n${chalk.red(message)}\\n\\n`);\n  }\n\n  static section(name: string) {\n    const title = chalk.green(`${name}:`);\n    process.stderr.write(`\\n ${title}\\n`);\n  }\n\n  static exit(code: number = 0) {\n    process.exit(code);\n  }\n\n  static async forItem<T = void>(\n    task: string,\n    item: string,\n    taskFunc: () => Promise<T>,\n  ): Promise<T> {\n    const paddedTask = chalk.green(task.padEnd(TASK_NAME_MAX_LENGTH));\n\n    const spinner = ora({\n      prefixText: chalk.green(`  ${paddedTask}${chalk.cyan(item)}`),\n      spinner: 'arc',\n      color: 'green',\n    }).start();\n\n    try {\n      const result = await taskFunc();\n      spinner.succeed();\n      return result;\n    } catch (error) {\n      spinner.fail();\n      throw error;\n    }\n  }\n\n  static async forCommand(\n    command: string,\n    options?: { cwd?: string; optional?: boolean },\n  ) {\n    try {\n      await Task.forItem('executing', command, async () => {\n        await exec(command, { cwd: options?.cwd });\n      });\n    } catch (error) {\n      assertError(error);\n      if (error.stderr) {\n        process.stderr.write(error.stderr as Buffer);\n      }\n      if (error.stdout) {\n        process.stdout.write(error.stdout as Buffer);\n      }\n      if (options?.optional) {\n        Task.error(`Warning: Failed to execute command ${chalk.cyan(command)}`);\n      } else {\n        throw new Error(\n          `Failed to execute command '${chalk.cyan(command)}', ${error}`,\n        );\n      }\n    }\n  }\n}\n\nexport async function templatingTask(\n  templateDir: string,\n  destinationDir: string,\n  context: any,\n  versionProvider: (name: string, versionHint?: string) => string,\n) {\n  const files = await recursive(templateDir).catch(error => {\n    throw new Error(`Failed to read template directory: ${error.message}`);\n  });\n  const isMonoRepo = await fs.pathExists(paths.resolveTargetRoot('lerna.json'));\n\n  for (const file of files) {\n    const destinationFile = file.replace(templateDir, destinationDir);\n    await fs.ensureDir(dirname(destinationFile));\n\n    if (file.endsWith('.hbs')) {\n      await Task.forItem('templating', basename(file), async () => {\n        const destination = destinationFile.replace(/\\.hbs$/, '');\n\n        const template = await fs.readFile(file);\n        const compiled = handlebars.compile(template.toString(), {\n          strict: true,\n        });\n        const contents = compiled(\n          { name: basename(destination), ...context },\n          {\n            helpers: {\n              versionQuery(name: string, versionHint: string | unknown) {\n                return versionProvider(\n                  name,\n                  typeof versionHint === 'string' ? versionHint : undefined,\n                );\n              },\n            },\n          },\n        );\n\n        await fs.writeFile(destination, contents).catch(error => {\n          throw new Error(\n            `Failed to create file: ${destination}: ${error.message}`,\n          );\n        });\n      });\n    } else {\n      if (isMonoRepo && file.match('tsconfig.json')) {\n        continue;\n      }\n\n      await Task.forItem('copying', basename(file), async () => {\n        await fs.copyFile(file, destinationFile).catch(error => {\n          const destination = destinationFile;\n          throw new Error(\n            `Failed to copy file to ${destination} : ${error.message}`,\n          );\n        });\n      });\n    }\n  }\n}\n\nexport async function addPackageDependency(\n  path: string,\n  options: {\n    dependencies?: Record<string, string>;\n    devDependencies?: Record<string, string>;\n    peerDependencies?: Record<string, string>;\n  },\n) {\n  try {\n    const pkgJson = await fs.readJson(path);\n\n    const normalize = (obj: Record<string, string>) => {\n      if (Object.keys(obj).length === 0) {\n        return undefined;\n      }\n      return Object.fromEntries(\n        Object.keys(obj)\n          .sort()\n          .map(key => [key, obj[key]]),\n      );\n    };\n\n    pkgJson.dependencies = normalize({\n      ...pkgJson.dependencies,\n      ...options.dependencies,\n    });\n    pkgJson.devDependencies = normalize({\n      ...pkgJson.devDependencies,\n      ...options.devDependencies,\n    });\n    pkgJson.peerDependencies = normalize({\n      ...pkgJson.peerDependencies,\n      ...options.peerDependencies,\n    });\n\n    await fs.writeJson(path, pkgJson, { spaces: 2 });\n  } catch (error) {\n    throw new Error(`Failed to add package dependencies, ${error}`);\n  }\n}\n"],"names":["path","fs","paths","promisify","execCb","chalk","ora","assertError","recursive","dirname","basename","handlebars"],"mappings":"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"}