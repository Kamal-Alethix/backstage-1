{"version":3,"file":"buildBackend-7d762705.cjs.js","sources":["../../src/commands/build/buildFrontend.ts","../../src/commands/build/buildBackend.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath } from 'path';\nimport { buildBundle } from '../../lib/bundler';\nimport { getEnvironmentParallelism } from '../../lib/parallel';\nimport { loadCliConfig } from '../../lib/config';\n\ninterface BuildAppOptions {\n  targetDir: string;\n  writeStats: boolean;\n  configPaths: string[];\n}\n\nexport async function buildFrontend(options: BuildAppOptions) {\n  const { targetDir, writeStats, configPaths } = options;\n  const { name } = await fs.readJson(resolvePath(targetDir, 'package.json'));\n  await buildBundle({\n    targetDir,\n    entry: 'src/index',\n    parallelism: getEnvironmentParallelism(),\n    statsJsonEnabled: writeStats,\n    ...(await loadCliConfig({\n      args: configPaths,\n      fromPackage: name,\n    })),\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\nimport fs from 'fs-extra';\nimport { resolve as resolvePath } from 'path';\nimport tar, { CreateOptions } from 'tar';\nimport { createDistWorkspace } from '../../lib/packager';\nimport { getEnvironmentParallelism } from '../../lib/parallel';\nimport { buildPackage, Output } from '../../lib/builder';\n\nconst BUNDLE_FILE = 'bundle.tar.gz';\nconst SKELETON_FILE = 'skeleton.tar.gz';\n\ninterface BuildBackendOptions {\n  targetDir: string;\n  skipBuildDependencies: boolean;\n}\n\nexport async function buildBackend(options: BuildBackendOptions) {\n  const { targetDir, skipBuildDependencies } = options;\n  const pkg = await fs.readJson(resolvePath(targetDir, 'package.json'));\n\n  // We build the target package without generating type declarations.\n  await buildPackage({\n    targetDir: options.targetDir,\n    outputs: new Set([Output.cjs]),\n  });\n\n  const tmpDir = await fs.mkdtemp(resolvePath(os.tmpdir(), 'backstage-bundle'));\n  try {\n    await createDistWorkspace([pkg.name], {\n      targetDir: tmpDir,\n      buildDependencies: !skipBuildDependencies,\n      buildExcludes: [pkg.name],\n      parallelism: getEnvironmentParallelism(),\n      skeleton: SKELETON_FILE,\n    });\n\n    // We built the target backend package using the regular build process, but the result of\n    // that has now been packed into the dist workspace, so clean up the dist dir.\n    const distDir = resolvePath(targetDir, 'dist');\n    await fs.remove(distDir);\n    await fs.mkdir(distDir);\n\n    // Move out skeleton.tar.gz before we create the main bundle, no point having that included up twice.\n    await fs.move(\n      resolvePath(tmpDir, SKELETON_FILE),\n      resolvePath(distDir, SKELETON_FILE),\n    );\n\n    // Create main bundle.tar.gz, with some tweaks to make it more likely hit Docker build cache.\n    await tar.create(\n      {\n        file: resolvePath(distDir, BUNDLE_FILE),\n        cwd: tmpDir,\n        portable: true,\n        noMtime: true,\n        gzip: true,\n      } as CreateOptions & { noMtime: boolean },\n      [''],\n    );\n  } finally {\n    await fs.remove(tmpDir);\n  }\n}\n"],"names":["fs","resolvePath","buildBundle","getEnvironmentParallelism","loadCliConfig","buildPackage","Output","os","createDistWorkspace","tar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,eAAe,aAAa,CAAC,OAAO,EAAE;AAC7C,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;AACzD,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMA,sBAAE,CAAC,QAAQ,CAACC,YAAW,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;AAC7E,EAAE,MAAMC,kBAAW,CAAC;AACpB,IAAI,SAAS;AACb,IAAI,KAAK,EAAE,WAAW;AACtB,IAAI,WAAW,EAAEC,kCAAyB,EAAE;AAC5C,IAAI,gBAAgB,EAAE,UAAU;AAChC,IAAI,GAAG,MAAMC,oBAAa,CAAC;AAC3B,MAAM,IAAI,EAAE,WAAW;AACvB,MAAM,WAAW,EAAE,IAAI;AACvB,KAAK,CAAC;AACN,GAAG,CAAC,CAAC;AACL;;ACXA,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,aAAa,GAAG,iBAAiB,CAAC;AACjC,eAAe,YAAY,CAAC,OAAO,EAAE;AAC5C,EAAE,MAAM,EAAE,SAAS,EAAE,qBAAqB,EAAE,GAAG,OAAO,CAAC;AACvD,EAAE,MAAM,GAAG,GAAG,MAAMJ,sBAAE,CAAC,QAAQ,CAACC,YAAW,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;AACxE,EAAE,MAAMI,qBAAY,CAAC;AACrB,IAAI,SAAS,EAAE,OAAO,CAAC,SAAS;AAChC,IAAI,OAAO,kBAAkB,IAAI,GAAG,CAAC,CAACC,eAAM,CAAC,GAAG,CAAC,CAAC;AAClD,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,MAAM,GAAG,MAAMN,sBAAE,CAAC,OAAO,CAACC,YAAW,CAACM,sBAAE,CAAC,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAChF,EAAE,IAAI;AACN,IAAI,MAAMC,uCAAmB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC1C,MAAM,SAAS,EAAE,MAAM;AACvB,MAAM,iBAAiB,EAAE,CAAC,qBAAqB;AAC/C,MAAM,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,MAAM,WAAW,EAAEL,kCAAyB,EAAE;AAC9C,MAAM,QAAQ,EAAE,aAAa;AAC7B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,OAAO,GAAGF,YAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACnD,IAAI,MAAMD,sBAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAMA,sBAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5B,IAAI,MAAMA,sBAAE,CAAC,IAAI,CAACC,YAAW,CAAC,MAAM,EAAE,aAAa,CAAC,EAAEA,YAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;AAC3F,IAAI,MAAMQ,uBAAG,CAAC,MAAM,CAAC;AACrB,MAAM,IAAI,EAAER,YAAW,CAAC,OAAO,EAAE,WAAW,CAAC;AAC7C,MAAM,GAAG,EAAE,MAAM;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,OAAO,EAAE,IAAI;AACnB,MAAM,IAAI,EAAE,IAAI;AAChB,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,MAAMD,sBAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,GAAG;AACH;;;;;"}