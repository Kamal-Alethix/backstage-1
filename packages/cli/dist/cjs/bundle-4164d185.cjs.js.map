{"version":3,"file":"bundle-4164d185.cjs.js","sources":["../../src/commands/backend/bundle.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\nimport fs from 'fs-extra';\nimport { resolve as resolvePath } from 'path';\nimport tar, { CreateOptions } from 'tar';\nimport { OptionValues } from 'commander';\nimport { createDistWorkspace } from '../../lib/packager';\nimport { paths } from '../../lib/paths';\nimport { getEnvironmentParallelism } from '../../lib/parallel';\nimport { buildPackage, Output } from '../../lib/builder';\n\nconst BUNDLE_FILE = 'bundle.tar.gz';\nconst SKELETON_FILE = 'skeleton.tar.gz';\n\nexport default async (opts: OptionValues) => {\n  const targetDir = paths.resolveTarget('dist');\n  const pkg = await fs.readJson(paths.resolveTarget('package.json'));\n\n  // We build the target package without generating type declarations.\n  await buildPackage({ outputs: new Set([Output.cjs]) });\n\n  const tmpDir = await fs.mkdtemp(resolvePath(os.tmpdir(), 'backstage-bundle'));\n  try {\n    await createDistWorkspace([pkg.name], {\n      targetDir: tmpDir,\n      buildDependencies: Boolean(opts.buildDependencies),\n      buildExcludes: [pkg.name],\n      parallelism: getEnvironmentParallelism(),\n      skeleton: SKELETON_FILE,\n    });\n\n    // We built the target backend package using the regular build process, but the result of\n    // that has now been packed into the dist workspace, so clean up the dist dir.\n    await fs.remove(targetDir);\n    await fs.mkdir(targetDir);\n\n    // Move out skeleton.tar.gz before we create the main bundle, no point having that included up twice.\n    await fs.move(\n      resolvePath(tmpDir, SKELETON_FILE),\n      resolvePath(targetDir, SKELETON_FILE),\n    );\n\n    // Create main bundle.tar.gz, with some tweaks to make it more likely hit Docker build cache.\n    await tar.create(\n      {\n        file: resolvePath(targetDir, BUNDLE_FILE),\n        cwd: tmpDir,\n        portable: true,\n        noMtime: true,\n        gzip: true,\n      } as CreateOptions & { noMtime: boolean },\n      [''],\n    );\n  } finally {\n    await fs.remove(tmpDir);\n  }\n};\n"],"names":["paths","fs","buildPackage","Output","resolvePath","os","createDistWorkspace","getEnvironmentParallelism","tar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,aAAa,GAAG,iBAAiB,CAAC;AACxC,aAAe,OAAO,IAAI,KAAK;AAC/B,EAAE,MAAM,SAAS,GAAGA,WAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAChD,EAAE,MAAM,GAAG,GAAG,MAAMC,sBAAE,CAAC,QAAQ,CAACD,WAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;AACrE,EAAE,MAAME,qBAAY,CAAC,EAAE,OAAO,kBAAkB,IAAI,GAAG,CAAC,CAACC,eAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACzE,EAAE,MAAM,MAAM,GAAG,MAAMF,sBAAE,CAAC,OAAO,CAACG,YAAW,CAACC,sBAAE,CAAC,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAChF,EAAE,IAAI;AACN,IAAI,MAAMC,uCAAmB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC1C,MAAM,SAAS,EAAE,MAAM;AACvB,MAAM,iBAAiB,EAAE,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;AACxD,MAAM,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,MAAM,WAAW,EAAEC,kCAAyB,EAAE;AAC9C,MAAM,QAAQ,EAAE,aAAa;AAC7B,KAAK,CAAC,CAAC;AACP,IAAI,MAAMN,sBAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,MAAMA,sBAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC9B,IAAI,MAAMA,sBAAE,CAAC,IAAI,CAACG,YAAW,CAAC,MAAM,EAAE,aAAa,CAAC,EAAEA,YAAW,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;AAC7F,IAAI,MAAMI,uBAAG,CAAC,MAAM,CAAC;AACrB,MAAM,IAAI,EAAEJ,YAAW,CAAC,SAAS,EAAE,WAAW,CAAC;AAC/C,MAAM,GAAG,EAAE,MAAM;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,OAAO,EAAE,IAAI;AACnB,MAAM,IAAI,EAAE,IAAI;AAChB,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,MAAMH,sBAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,GAAG;AACH,CAAC;;;;"}