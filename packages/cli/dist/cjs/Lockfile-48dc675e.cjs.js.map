{"version":3,"file":"Lockfile-48dc675e.cjs.js","sources":["../../src/lib/versioning/Lockfile.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport semver from 'semver';\nimport { parseSyml, stringifySyml } from '@yarnpkg/parsers';\nimport { stringify as legacyStringifyLockfile } from '@yarnpkg/lockfile';\n\nconst ENTRY_PATTERN = /^((?:@[^/]+\\/)?[^@/]+)@(.+)$/;\n\ntype LockfileData = {\n  [entry: string]: {\n    version: string;\n    resolved?: string;\n    integrity?: string;\n    dependencies?: { [name: string]: string };\n  };\n};\n\ntype LockfileQueryEntry = {\n  range: string;\n  version: string;\n};\n\n/** Entries that have an invalid version range, for example an npm tag */\ntype AnalyzeResultInvalidRange = {\n  name: string;\n  range: string;\n};\n\n/** Entries that can be deduplicated by bumping to an existing higher version */\ntype AnalyzeResultNewVersion = {\n  name: string;\n  range: string;\n  oldVersion: string;\n  newVersion: string;\n};\n\n/** Entries that would need a dependency update in package.json to be deduplicated */\ntype AnalyzeResultNewRange = {\n  name: string;\n  oldRange: string;\n  newRange: string;\n  oldVersion: string;\n  newVersion: string;\n};\n\ntype AnalyzeResult = {\n  invalidRanges: AnalyzeResultInvalidRange[];\n  newVersions: AnalyzeResultNewVersion[];\n  newRanges: AnalyzeResultNewRange[];\n};\n\nfunction parseLockfile(lockfileContents: string) {\n  try {\n    return {\n      object: parseSyml(lockfileContents),\n      type: 'success',\n    };\n  } catch (err) {\n    return {\n      object: null,\n      type: err,\n    };\n  }\n}\n\n// the new yarn header is handled out of band of the parsing\n// https://github.com/yarnpkg/berry/blob/0c5974f193a9397630e9aee2b3876cca62611149/packages/yarnpkg-core/sources/Project.ts#L1741-L1746\nconst NEW_HEADER = `${[\n  `# This file is generated by running \"yarn install\" inside your project.\\n`,\n  `# Manual changes might be lost - proceed with caution!\\n`,\n].join(``)}\\n`;\n\nfunction stringifyLockfile(data: LockfileData, legacy: boolean) {\n  return legacy\n    ? legacyStringifyLockfile(data)\n    : NEW_HEADER + stringifySyml(data);\n}\n// taken from yarn parser package\n// https://github.com/yarnpkg/berry/blob/0c5974f193a9397630e9aee2b3876cca62611149/packages/yarnpkg-parsers/sources/syml.ts#L136\nconst LEGACY_REGEX = /^(#.*(\\r?\\n))*?#\\s+yarn\\s+lockfile\\s+v1\\r?\\n/i;\n\n// these are special top level yarn keys.\n// https://github.com/yarnpkg/berry/blob/9bd61fbffb83d0b8166a9cc26bec3a58743aa453/packages/yarnpkg-parsers/sources/syml.ts#L9\nconst SPECIAL_OBJECT_KEYS = [\n  `__metadata`,\n  `version`,\n  `resolution`,\n  `dependencies`,\n  `peerDependencies`,\n  `dependenciesMeta`,\n  `peerDependenciesMeta`,\n  `binaries`,\n];\n\nexport class Lockfile {\n  static async load(path: string) {\n    const lockfileContents = await fs.readFile(path, 'utf8');\n    const legacy = LEGACY_REGEX.test(lockfileContents);\n    const lockfile = parseLockfile(lockfileContents);\n    if (lockfile.type !== 'success') {\n      throw new Error(`Failed yarn.lock parse with ${lockfile.type}`);\n    }\n\n    const data = lockfile.object as LockfileData;\n    const packages = new Map<string, LockfileQueryEntry[]>();\n\n    for (const [key, value] of Object.entries(data)) {\n      if (SPECIAL_OBJECT_KEYS.includes(key)) continue;\n\n      const [, name, range] = ENTRY_PATTERN.exec(key) ?? [];\n      if (!name) {\n        throw new Error(`Failed to parse yarn.lock entry '${key}'`);\n      }\n\n      let queries = packages.get(name);\n      if (!queries) {\n        queries = [];\n        packages.set(name, queries);\n      }\n      queries.push({ range, version: value.version });\n    }\n\n    return new Lockfile(path, packages, data, legacy);\n  }\n\n  private constructor(\n    private readonly path: string,\n    private readonly packages: Map<string, LockfileQueryEntry[]>,\n    private readonly data: LockfileData,\n    private readonly legacy: boolean = false,\n  ) {}\n\n  /** Get the entries for a single package in the lockfile */\n  get(name: string): LockfileQueryEntry[] | undefined {\n    return this.packages.get(name);\n  }\n\n  /** Returns the name of all packages available in the lockfile */\n  keys(): IterableIterator<string> {\n    return this.packages.keys();\n  }\n\n  /** Analyzes the lockfile to identify possible actions and warnings for the entries */\n  analyze(options?: { filter?: (name: string) => boolean }): AnalyzeResult {\n    const { filter } = options ?? {};\n    const result: AnalyzeResult = {\n      invalidRanges: [],\n      newVersions: [],\n      newRanges: [],\n    };\n\n    for (const [name, allEntries] of this.packages) {\n      if (filter && !filter(name)) {\n        continue;\n      }\n\n      // Get rid of and signal any invalid ranges upfront\n      const invalid = allEntries.filter(e => !semver.validRange(e.range));\n      result.invalidRanges.push(\n        ...invalid.map(({ range }) => ({ name, range })),\n      );\n\n      // Grab all valid entries, if there aren't at least 2 different valid ones we're done\n      const entries = allEntries.filter(e => semver.validRange(e.range));\n      if (entries.length < 2) {\n        continue;\n      }\n\n      // Find all versions currently in use\n      const versions = Array.from(new Set(entries.map(e => e.version))).sort(\n        (v1, v2) => semver.rcompare(v1, v2),\n      );\n\n      // If we're not using at least 2 different versions we're done\n      if (versions.length < 2) {\n        continue;\n      }\n\n      const acceptedVersions = new Set<string>();\n      for (const { version, range } of entries) {\n        // Finds the highest matching version from the the known versions\n        // TODO(Rugvip): We may want to select the version that satisfies the most ranges rather than the highest one\n        const acceptedVersion = versions.find(v => semver.satisfies(v, range));\n        if (!acceptedVersion) {\n          throw new Error(\n            `No existing version was accepted for range ${range}, searching through ${versions}, for package ${name}`,\n          );\n        }\n\n        if (acceptedVersion !== version) {\n          result.newVersions.push({\n            name,\n            range,\n            newVersion: acceptedVersion,\n            oldVersion: version,\n          });\n        }\n\n        acceptedVersions.add(acceptedVersion);\n      }\n\n      // If all ranges were able to accept the same version, we're done\n      if (acceptedVersions.size === 1) {\n        continue;\n      }\n\n      // Find the max version that we may want bump older packages to\n      const maxVersion = Array.from(acceptedVersions).sort(semver.rcompare)[0];\n      // Find all existing ranges that satisfy the new max version, and pick the one that\n      // results in the highest minimum allowed version, usually being the more specific one\n      const maxEntry = entries\n        .filter(e => semver.satisfies(maxVersion, e.range))\n        .map(e => ({ e, min: semver.minVersion(e.range) }))\n        .filter(p => p.min)\n        .sort((a, b) => semver.rcompare(a.min!, b.min!))[0]?.e;\n      if (!maxEntry) {\n        throw new Error(\n          `No entry found that satisfies max version '${maxVersion}'`,\n        );\n      }\n\n      // Find all entries that don't satisfy the max version\n      for (const { version, range } of entries) {\n        if (semver.satisfies(maxVersion, range)) {\n          continue;\n        }\n\n        result.newRanges.push({\n          name,\n          oldRange: range,\n          newRange: maxEntry.range,\n          oldVersion: version,\n          newVersion: maxVersion,\n        });\n      }\n    }\n\n    return result;\n  }\n\n  remove(name: string, range: string): boolean {\n    const query = `${name}@${range}`;\n    const existed = Boolean(this.data[query]);\n    delete this.data[query];\n\n    const newEntries = this.packages.get(name)?.filter(e => e.range !== range);\n    if (newEntries) {\n      this.packages.set(name, newEntries);\n    }\n\n    return existed;\n  }\n\n  /** Modifies the lockfile by bumping packages to the suggested versions */\n  replaceVersions(results: AnalyzeResultNewVersion[]) {\n    for (const { name, range, oldVersion, newVersion } of results) {\n      const query = `${name}@${range}`;\n\n      // Update the backing data\n      const entryData = this.data[query];\n      if (!entryData) {\n        throw new Error(`No entry data for ${query}`);\n      }\n      if (entryData.version !== oldVersion) {\n        throw new Error(\n          `Expected existing version data for ${query} to be ${oldVersion}, was ${entryData.version}`,\n        );\n      }\n\n      // Modifying the data in the entry is not enough, we need to reference an existing version object\n      const matchingEntry = Object.entries(this.data).find(\n        ([q, e]) => q.startsWith(`${name}@`) && e.version === newVersion,\n      );\n      if (!matchingEntry) {\n        throw new Error(\n          `No matching entry found for ${name} at version ${newVersion}`,\n        );\n      }\n      this.data[query] = matchingEntry[1];\n\n      // Update our internal data structure\n      const entry = this.packages.get(name)?.find(e => e.range === range);\n      if (!entry) {\n        throw new Error(`No entry data for ${query}`);\n      }\n      if (entry.version !== oldVersion) {\n        throw new Error(\n          `Expected existing version data for ${query} to be ${oldVersion}, was ${entryData.version}`,\n        );\n      }\n      entry.version = newVersion;\n    }\n  }\n\n  async save() {\n    await fs.writeFile(this.path, this.toString(), 'utf8');\n  }\n\n  toString() {\n    return stringifyLockfile(this.data, this.legacy);\n  }\n}\n"],"names":["parseSyml","legacyStringifyLockfile","stringifySyml","fs","semver"],"mappings":"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"}