{"version":3,"file":"bump-9f978731.cjs.js","sources":["../../src/commands/versions/bump.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport semver from 'semver';\nimport minimatch from 'minimatch';\nimport { OptionValues } from 'commander';\nimport { isError, NotFoundError } from '@backstage/errors';\nimport { resolve as resolvePath } from 'path';\nimport { run } from '../../lib/run';\nimport { paths } from '../../lib/paths';\nimport {\n  mapDependencies,\n  fetchPackageInfo,\n  Lockfile,\n  YarnInfoInspectData,\n} from '../../lib/versioning';\nimport { forbiddenDuplicatesFilter } from './lint';\nimport { BACKSTAGE_JSON } from '@backstage/cli-common';\nimport { runParallelWorkers } from '../../lib/parallel';\nimport {\n  getManifestByReleaseLine,\n  getManifestByVersion,\n  ReleaseManifest,\n} from '@backstage/release-manifests';\nimport 'global-agent/bootstrap';\n\nconst DEP_TYPES = [\n  'dependencies',\n  'devDependencies',\n  'peerDependencies',\n  'optionalDependencies',\n];\n\nconst DEFAULT_PATTERN_GLOB = '@backstage/*';\n\ntype PkgVersionInfo = {\n  range: string;\n  target: string;\n  name: string;\n  location: string;\n};\n\nexport default async (opts: OptionValues) => {\n  const lockfilePath = paths.resolveTargetRoot('yarn.lock');\n  const lockfile = await Lockfile.load(lockfilePath);\n  let pattern = opts.pattern;\n\n  if (!pattern) {\n    console.log(`Using default pattern glob ${DEFAULT_PATTERN_GLOB}`);\n    pattern = DEFAULT_PATTERN_GLOB;\n  } else {\n    console.log(`Using custom pattern glob ${pattern}`);\n  }\n\n  let findTargetVersion: (name: string) => Promise<string>;\n  let releaseManifest: ReleaseManifest;\n  // Specific release specified. Be strict when resolving versions\n  if (semver.valid(opts.release)) {\n    releaseManifest = await getManifestByVersion({ version: opts.release });\n    findTargetVersion = createStrictVersionFinder({\n      releaseManifest,\n    });\n  } else {\n    // Release line specified. Be lenient when resolving versions.\n    if (opts.release === 'next') {\n      const next = await getManifestByReleaseLine({\n        releaseLine: 'next',\n      });\n      const main = await getManifestByReleaseLine({\n        releaseLine: 'main',\n      });\n      // Prefer manifest with the latest release version\n      releaseManifest = semver.gt(next.releaseVersion, main.releaseVersion)\n        ? next\n        : main;\n    } else {\n      releaseManifest = await getManifestByReleaseLine({\n        releaseLine: opts.release,\n      });\n    }\n    findTargetVersion = createVersionFinder({\n      releaseLine: opts.releaseLine,\n      releaseManifest,\n    });\n  }\n\n  // First we discover all Backstage dependencies within our own repo\n  const dependencyMap = await mapDependencies(paths.targetDir, pattern);\n\n  // Next check with the package registry to see which dependency ranges we need to bump\n  const versionBumps = new Map<string, PkgVersionInfo[]>();\n  // Track package versions that we want to remove from yarn.lock in order to trigger a bump\n  const unlocked = Array<{ name: string; range: string; target: string }>();\n\n  await runParallelWorkers({\n    parallelismFactor: 4,\n    items: dependencyMap.entries(),\n    async worker([name, pkgs]) {\n      let target: string;\n      try {\n        target = await findTargetVersion(name);\n      } catch (error) {\n        if (isError(error) && error.name === 'NotFoundError') {\n          console.log(`Package info not found, ignoring package ${name}`);\n          return;\n        }\n        throw error;\n      }\n\n      for (const pkg of pkgs) {\n        if (semver.satisfies(target, pkg.range)) {\n          if (semver.minVersion(pkg.range)?.version !== target) {\n            unlocked.push({ name, range: pkg.range, target });\n          }\n\n          continue;\n        }\n        versionBumps.set(\n          pkg.name,\n          (versionBumps.get(pkg.name) ?? []).concat({\n            name,\n            location: pkg.location,\n            range: `^${target}`, // TODO(Rugvip): Option to use something else than ^?\n            target,\n          }),\n        );\n      }\n    },\n  });\n\n  const filter = (name: string) => minimatch(name, pattern);\n\n  // Check for updates of transitive backstage dependencies\n  await runParallelWorkers({\n    parallelismFactor: 4,\n    items: lockfile.keys(),\n    async worker(name) {\n      // Only check @backstage packages and friends, we don't want this to do a full update of all deps\n      if (!filter(name)) {\n        return;\n      }\n\n      let target: string;\n      try {\n        target = await findTargetVersion(name);\n      } catch (error) {\n        if (isError(error) && error.name === 'NotFoundError') {\n          console.log(`Package info not found, ignoring package ${name}`);\n          return;\n        }\n        throw error;\n      }\n\n      for (const entry of lockfile.get(name) ?? []) {\n        // Ignore lockfile entries that don't satisfy the version range, since\n        // these can't cause the package to be locked to an older version\n        if (!semver.satisfies(target, entry.range)) {\n          continue;\n        }\n        // Unlock all entries that are within range but on the old version\n        unlocked.push({ name, range: entry.range, target });\n      }\n    },\n  });\n\n  console.log();\n\n  // Write all discovered version bumps to package.json in this repo\n  if (versionBumps.size === 0 && unlocked.length === 0) {\n    console.log(chalk.green('All Backstage packages are up to date!'));\n  } else {\n    console.log(chalk.yellow('Some packages are outdated, updating'));\n    console.log();\n\n    if (unlocked.length > 0) {\n      const removed = new Set<string>();\n      for (const { name, range, target } of unlocked) {\n        // Don't bother removing lockfile entries if they're already on the correct version\n        const existingEntry = lockfile.get(name)?.find(e => e.range === range);\n        if (existingEntry?.version === target) {\n          continue;\n        }\n        const key = JSON.stringify({ name, range });\n        if (!removed.has(key)) {\n          removed.add(key);\n          console.log(\n            `${chalk.magenta('unlocking')} ${name}@${chalk.yellow(\n              range,\n            )} ~> ${chalk.yellow(target)}`,\n          );\n          lockfile.remove(name, range);\n        }\n      }\n      await lockfile.save();\n    }\n\n    const breakingUpdates = new Map<string, { from: string; to: string }>();\n    await runParallelWorkers({\n      parallelismFactor: 4,\n      items: versionBumps.entries(),\n      async worker([name, deps]) {\n        const pkgPath = resolvePath(deps[0].location, 'package.json');\n        const pkgJson = await fs.readJson(pkgPath);\n\n        for (const dep of deps) {\n          console.log(\n            `${chalk.cyan('bumping')} ${dep.name} in ${chalk.cyan(\n              name,\n            )} to ${chalk.yellow(dep.range)}`,\n          );\n\n          for (const depType of DEP_TYPES) {\n            if (depType in pkgJson && dep.name in pkgJson[depType]) {\n              const oldRange = pkgJson[depType][dep.name];\n              pkgJson[depType][dep.name] = dep.range;\n\n              // Check if the update was at least a pre-v1 minor or post-v1 major release\n              const lockfileEntry = lockfile\n                .get(dep.name)\n                ?.find(entry => entry.range === oldRange);\n              if (lockfileEntry) {\n                const from = lockfileEntry.version;\n                const to = dep.target;\n                if (!semver.satisfies(to, `^${from}`)) {\n                  breakingUpdates.set(dep.name, { from, to });\n                }\n              }\n            }\n          }\n        }\n\n        await fs.writeJson(pkgPath, pkgJson, { spaces: 2 });\n      },\n    });\n\n    console.log();\n\n    // Do not update backstage.json when upgrade patterns are used.\n    if (pattern === DEFAULT_PATTERN_GLOB) {\n      await bumpBackstageJsonVersion(releaseManifest.releaseVersion);\n    } else {\n      console.log(\n        chalk.yellow(\n          `Skipping backstage.json update as custom pattern is used`,\n        ),\n      );\n    }\n\n    await runYarnInstall();\n\n    if (breakingUpdates.size > 0) {\n      console.log();\n      console.log(\n        chalk.yellow('⚠️  The following packages may have breaking changes:'),\n      );\n      console.log();\n\n      for (const [name, { from, to }] of Array.from(\n        breakingUpdates.entries(),\n      ).sort()) {\n        console.log(\n          `  ${chalk.yellow(name)} : ${chalk.yellow(from)} ~> ${chalk.yellow(\n            to,\n          )}`,\n        );\n\n        let path;\n        if (name.startsWith('@backstage/plugin-')) {\n          path = `plugins/${name.replace('@backstage/plugin-', '')}`;\n        } else if (name.startsWith('@backstage/')) {\n          path = `packages/${name.replace('@backstage/', '')}`;\n        }\n        if (path) {\n          // TODO(Rugvip): Grab these URLs and paths from package.json, possibly verify existence\n          //               Possibly invent new \"changelog\" field in package.json or some sh*t.\n          console.log(\n            `    https://github.com/backstage/backstage/blob/master/${path}/CHANGELOG.md`,\n          );\n        }\n        console.log();\n      }\n    } else {\n      console.log();\n    }\n\n    console.log(chalk.green('Version bump complete!'));\n  }\n\n  console.log();\n\n  // Finally we make sure the new lockfile doesn't have any duplicates\n  const dedupLockfile = await Lockfile.load(lockfilePath);\n  const result = dedupLockfile.analyze({\n    filter,\n  });\n\n  if (result.newVersions.length > 0) {\n    throw new Error('Duplicate versions present after package bump');\n  }\n\n  const forbiddenNewRanges = result.newRanges.filter(({ name }) =>\n    forbiddenDuplicatesFilter(name),\n  );\n  if (forbiddenNewRanges.length > 0) {\n    throw new Error(\n      `Version bump failed for ${forbiddenNewRanges\n        .map(i => i.name)\n        .join(', ')}`,\n    );\n  }\n};\n\nexport function createStrictVersionFinder(options: {\n  releaseManifest: ReleaseManifest;\n}) {\n  const releasePackages = new Map(\n    options.releaseManifest.packages.map(p => [p.name, p.version]),\n  );\n  return async function findTargetVersion(name: string) {\n    console.log(`Checking for updates of ${name}`);\n    const manifestVersion = releasePackages.get(name);\n    if (manifestVersion) {\n      return manifestVersion;\n    }\n    throw new NotFoundError(`Package ${name} not found in release manifest`);\n  };\n}\n\nexport function createVersionFinder(options: {\n  releaseLine?: string;\n  packageInfoFetcher?: () => Promise<YarnInfoInspectData>;\n  releaseManifest?: ReleaseManifest;\n}) {\n  const {\n    releaseLine = 'latest',\n    packageInfoFetcher = fetchPackageInfo,\n    releaseManifest,\n  } = options;\n  // The main release line is just an alias for latest\n  const distTag = releaseLine === 'main' ? 'latest' : releaseLine;\n  const found = new Map<string, string>();\n  const releasePackages = new Map(\n    releaseManifest?.packages.map(p => [p.name, p.version]),\n  );\n  return async function findTargetVersion(name: string) {\n    const existing = found.get(name);\n    if (existing) {\n      return existing;\n    }\n\n    console.log(`Checking for updates of ${name}`);\n    const manifestVersion = releasePackages.get(name);\n    if (manifestVersion) {\n      return manifestVersion;\n    }\n\n    const info = await packageInfoFetcher(name);\n    const latestVersion = info['dist-tags'].latest;\n    if (!latestVersion) {\n      throw new Error(`No target 'latest' version found for ${name}`);\n    }\n\n    const taggedVersion = info['dist-tags'][distTag];\n    if (distTag === 'latest' || !taggedVersion) {\n      found.set(name, latestVersion);\n      return latestVersion;\n    }\n\n    const latestVersionDateStr = info.time[latestVersion];\n    const taggedVersionDateStr = info.time[taggedVersion];\n    if (!latestVersionDateStr) {\n      throw new Error(\n        `No time available for version '${latestVersion}' of ${name}`,\n      );\n    }\n    if (!taggedVersionDateStr) {\n      throw new Error(\n        `No time available for version '${taggedVersion}' of ${name}`,\n      );\n    }\n\n    const latestVersionRelease = new Date(latestVersionDateStr).getTime();\n    const taggedVersionRelease = new Date(taggedVersionDateStr).getTime();\n    if (latestVersionRelease > taggedVersionRelease) {\n      // Prefer latest version if it's newer.\n      found.set(name, latestVersion);\n      return latestVersion;\n    }\n\n    found.set(name, taggedVersion);\n    return taggedVersion;\n  };\n}\n\nexport async function bumpBackstageJsonVersion(version: string) {\n  const backstageJsonPath = paths.resolveTargetRoot(BACKSTAGE_JSON);\n  const backstageJson = await fs.readJSON(backstageJsonPath).catch(e => {\n    if (e.code === 'ENOENT') {\n      // gracefully continue in case the file doesn't exist\n      return;\n    }\n    throw e;\n  });\n\n  const prevVersion = backstageJson?.version;\n\n  if (prevVersion === version) {\n    return;\n  }\n\n  const { yellow, cyan, green } = chalk;\n  if (prevVersion) {\n    const from = encodeURIComponent(prevVersion);\n    const to = encodeURIComponent(version);\n    const link = `https://backstage.github.io/upgrade-helper/?from=${from}&to=${to}`;\n    console.log(\n      yellow(\n        `Upgraded from release ${green(prevVersion)} to ${green(\n          version,\n        )}, please review these template changes:`,\n      ),\n    );\n    console.log();\n    console.log(`  ${cyan(link)}`);\n    console.log();\n  } else {\n    console.log(\n      yellow(\n        `Your project is now at version ${version}, which has been written to ${BACKSTAGE_JSON}`,\n      ),\n    );\n  }\n\n  await fs.writeJson(\n    backstageJsonPath,\n    { ...backstageJson, version },\n    {\n      spaces: 2,\n      encoding: 'utf8',\n    },\n  );\n}\n\nasync function runYarnInstall() {\n  const spinner = ora({\n    prefixText: `Running ${chalk.blue('yarn install')} to install new versions`,\n    spinner: 'arc',\n    color: 'green',\n  }).start();\n\n  const installOutput = new Array<Buffer>();\n  try {\n    await run('yarn', ['install'], {\n      env: {\n        FORCE_COLOR: 'true',\n        // We filter out all of the npm_* environment variables that are added when\n        // executing through yarn. This works around an issue where these variables\n        // incorrectly override local yarn or npm config in the project directory.\n        ...Object.fromEntries(\n          Object.entries(process.env).map(([name, value]) =>\n            name.startsWith('npm_') ? [name, undefined] : [name, value],\n          ),\n        ),\n      },\n      stdoutLogFunc: data => installOutput.push(data),\n      stderrLogFunc: data => installOutput.push(data),\n    });\n    spinner.succeed();\n  } catch (error) {\n    spinner.fail();\n    process.stdout.write(Buffer.concat(installOutput));\n    throw error;\n  }\n}\n"],"names":["paths","Lockfile","semver","getManifestByVersion","getManifestByReleaseLine","mapDependencies","runParallelWorkers","isError","minimatch","chalk","resolvePath","fs","forbiddenDuplicatesFilter","NotFoundError","fetchPackageInfo","BACKSTAGE_JSON","ora","run"],"mappings":"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"}