{"version":3,"file":"index-a5d56062.cjs.js","sources":["../../src/lib/errors.ts","../../src/lib/paths.ts","../../src/lib/version.ts","../../src/commands/index.ts","../../src/index.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\n\nexport class CustomError extends Error {\n  get name(): string {\n    return this.constructor.name;\n  }\n}\n\nexport class ExitCodeError extends CustomError {\n  readonly code: number;\n\n  constructor(code: number, command?: string) {\n    super(\n      command\n        ? `Command '${command}' exited with code ${code}`\n        : `Child exited with code ${code}`,\n    );\n    this.code = code;\n  }\n}\n\nexport function exitWithError(error: Error): never {\n  if (error instanceof ExitCodeError) {\n    process.stderr.write(`\\n${chalk.red(error.message)}\\n\\n`);\n    process.exit(error.code);\n  } else {\n    process.stderr.write(`\\n${chalk.red(`${error}`)}\\n\\n`);\n    process.exit(1);\n  }\n}\n\nexport class NotFoundError extends CustomError {}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { findPaths } from '@backstage/cli-common';\n\n/* eslint-disable-next-line no-restricted-syntax */\nexport const paths = findPaths(__dirname);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport semver from 'semver';\nimport { paths } from './paths';\nimport { Lockfile } from './versioning';\n\n/* eslint-disable monorepo/no-relative-import */\n\n/*\nThis is a list of all packages used by the templates. If dependencies are added or removed,\nthis list should be updated as well.\n\nThe list, and the accompanying devDependencies entries, are here to ensure correct versioning\nand bumping of this package. Without this list the version would not be bumped unless we\nmanually trigger a release.\n\nThis does not create an actual dependency on these packages and does not bring in any code.\nRollup will extract the value of the version field in each package at build time without\nleaving any imports in place.\n*/\n\nimport { version as backendCommon } from '../../../../packages/backend-common/package.json';\nimport { version as cli } from '../../../../packages/cli/package.json';\nimport { version as config } from '../../../../packages/config/package.json';\nimport { version as coreAppApi } from '../../../../packages/core-app-api/package.json';\nimport { version as coreComponents } from '../../../../packages/core-components/package.json';\nimport { version as corePluginApi } from '../../../../packages/core-plugin-api/package.json';\nimport { version as devUtils } from '../../../../packages/dev-utils/package.json';\nimport { version as testUtils } from '../../../../packages/test-utils/package.json';\nimport { version as theme } from '../../../../packages/theme/package.json';\nimport { version as scaffolderBackend } from '../../../../plugins/scaffolder-backend/package.json';\n\nexport const packageVersions: Record<string, string> = {\n  '@backstage/backend-common': backendCommon,\n  '@backstage/cli': cli,\n  '@backstage/config': config,\n  '@backstage/core-app-api': coreAppApi,\n  '@backstage/core-components': coreComponents,\n  '@backstage/core-plugin-api': corePluginApi,\n  '@backstage/dev-utils': devUtils,\n  '@backstage/test-utils': testUtils,\n  '@backstage/theme': theme,\n  '@backstage/plugin-scaffolder-backend': scaffolderBackend,\n};\n\nexport function findVersion() {\n  const pkgContent = fs.readFileSync(paths.resolveOwn('package.json'), 'utf8');\n  return JSON.parse(pkgContent).version;\n}\n\nexport const version = findVersion();\nexport const isDev = fs.pathExistsSync(paths.resolveOwn('src'));\n\nexport function createPackageVersionProvider(lockfile?: Lockfile) {\n  return (name: string, versionHint?: string): string => {\n    const packageVersion = packageVersions[name];\n    const targetVersion = versionHint || packageVersion;\n    if (!targetVersion) {\n      throw new Error(`No version available for package ${name}`);\n    }\n\n    const lockfileEntries = lockfile?.get(name);\n    if (\n      name.startsWith('@types/') &&\n      lockfileEntries?.some(entry => entry.range === '*')\n    ) {\n      return '*';\n    }\n    const validRanges = lockfileEntries?.filter(entry =>\n      semver.satisfies(targetVersion, entry.range),\n    );\n    const highestRange = validRanges?.slice(-1)[0];\n\n    if (highestRange?.range) {\n      return highestRange?.range;\n    }\n    if (packageVersion) {\n      return `^${packageVersion}`;\n    }\n    if (semver.parse(versionHint)?.prerelease.length) {\n      return versionHint!;\n    }\n    return versionHint?.match(/^[\\d\\.]+$/) ? `^${versionHint}` : versionHint!;\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertError } from '@backstage/errors';\nimport { Command } from 'commander';\nimport { exitWithError } from '../lib/errors';\n\nconst configOption = [\n  '--config <path>',\n  'Config files to load instead of app-config.yaml',\n  (opt: string, opts: string[]) => (opts ? [...opts, opt] : [opt]),\n  Array<string>(),\n] as const;\n\nexport function registerRepoCommand(program: Command) {\n  const command = program\n    .command('repo [command]')\n    .description('Command that run across an entire Backstage project');\n\n  command\n    .command('build')\n    .description(\n      'Build packages in the project, excluding bundled app and backend packages.',\n    )\n    .option(\n      '--all',\n      'Build all packages, including bundled app and backend packages.',\n    )\n    .option(\n      '--since <ref>',\n      'Only build packages and their dev dependents that changed since the specified ref',\n    )\n    .action(lazy(() => import('./repo/build').then(m => m.command)));\n\n  command\n    .command('lint')\n    .description('Lint all packages in the project')\n    .option(\n      '--format <format>',\n      'Lint report output format',\n      'eslint-formatter-friendly',\n    )\n    .option(\n      '--since <ref>',\n      'Only lint packages that changed since the specified ref',\n    )\n    .option('--fix', 'Attempt to automatically fix violations')\n    .action(lazy(() => import('./repo/lint').then(m => m.command)));\n\n  command\n    .command('list-deprecations', { hidden: true })\n    .description('List deprecations. [EXPERIMENTAL]')\n    .option('--json', 'Output as JSON')\n    .action(\n      lazy(() => import('./repo/list-deprecations').then(m => m.command)),\n    );\n}\n\nexport function registerScriptCommand(program: Command) {\n  const command = program\n    .command('package [command]')\n    .description('Lifecycle scripts for individual packages');\n\n  command\n    .command('start')\n    .description('Start a package for local development')\n    .option(...configOption)\n    .option('--role <name>', 'Run the command with an explicit package role')\n    .option('--check', 'Enable type checking and linting if available')\n    .option('--inspect', 'Enable debugger in Node.js environments')\n    .option(\n      '--inspect-brk',\n      'Enable debugger in Node.js environments, breaking before code starts',\n    )\n    .action(lazy(() => import('./start').then(m => m.command)));\n\n  command\n    .command('build')\n    .description('Build a package for production deployment or publishing')\n    .option('--role <name>', 'Run the command with an explicit package role')\n    .option(\n      '--minify',\n      'Minify the generated code. Does not apply to app or backend packages.',\n    )\n    .option(\n      '--experimental-type-build',\n      'Enable experimental type build. Does not apply to app or backend packages.',\n    )\n    .option(\n      '--skip-build-dependencies',\n      'Skip the automatic building of local dependencies. Applies to backend packages only.',\n    )\n    .option(\n      '--stats',\n      'If bundle stats are available, write them to the output directory. Applies to app packages only.',\n    )\n    .option(\n      '--config <path>',\n      'Config files to load instead of app-config.yaml. Applies to app packages only.',\n      (opt: string, opts: string[]) => (opts ? [...opts, opt] : [opt]),\n      Array<string>(),\n    )\n    .action(lazy(() => import('./build').then(m => m.command)));\n\n  command\n    .command('lint [directories...]')\n    .option(\n      '--format <format>',\n      'Lint report output format',\n      'eslint-formatter-friendly',\n    )\n    .option('--fix', 'Attempt to automatically fix violations')\n    .description('Lint a package')\n    .action(lazy(() => import('./lint').then(m => m.default)));\n\n  command\n    .command('test')\n    .allowUnknownOption(true) // Allows the command to run, but we still need to parse raw args\n    .helpOption(', --backstage-cli-help') // Let Jest handle help\n    .description('Run tests, forwarding args to Jest, defaulting to watch mode')\n    .action(lazy(() => import('./test').then(m => m.default)));\n\n  command\n    .command('fix', { hidden: true })\n    .description('Applies automated fixes to the package. [EXPERIMENTAL]')\n    .option('--deps', 'Only fix monorepo dependencies in package.json')\n    .action(lazy(() => import('./fix').then(m => m.command)));\n\n  command\n    .command('clean')\n    .description('Delete cache directories')\n    .action(lazy(() => import('./clean/clean').then(m => m.default)));\n\n  command\n    .command('prepack')\n    .description('Prepares a package for packaging before publishing')\n    .action(lazy(() => import('./pack').then(m => m.pre)));\n\n  command\n    .command('postpack')\n    .description('Restores the changes made by the prepack command')\n    .action(lazy(() => import('./pack').then(m => m.post)));\n}\n\nexport function registerMigrateCommand(program: Command) {\n  const command = program\n    .command('migrate [command]')\n    .description('Migration utilities');\n\n  command\n    .command('package-roles')\n    .description(`Add package role field to packages that don't have it`)\n    .action(lazy(() => import('./migrate/packageRole').then(m => m.default)));\n\n  command\n    .command('package-scripts')\n    .description('Set package scripts according to each package role')\n    .action(\n      lazy(() => import('./migrate/packageScripts').then(m => m.command)),\n    );\n\n  command\n    .command('package-lint-configs')\n    .description(\n      'Migrates all packages to use @backstage/cli/config/eslint-factory',\n    )\n    .action(\n      lazy(() => import('./migrate/packageLintConfigs').then(m => m.command)),\n    );\n}\n\nexport function registerCommands(program: Command) {\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('app:build')\n    .description('Build an app for a production release [DEPRECATED]')\n    .option('--stats', 'Write bundle stats to output directory')\n    .option(...configOption)\n    .action(lazy(() => import('./app/build').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('app:serve')\n    .description('Serve an app for local development [DEPRECATED]')\n    .option('--check', 'Enable type checking and linting')\n    .option(...configOption)\n    .action(lazy(() => import('./app/serve').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('backend:build')\n    .description('Build a backend plugin [DEPRECATED]')\n    .option('--minify', 'Minify the generated code')\n    .option('--experimental-type-build', 'Enable experimental type build')\n    .action(lazy(() => import('./backend/build').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('backend:bundle')\n    .description('Bundle the backend into a deployment archive [DEPRECATED]')\n    .option(\n      '--build-dependencies',\n      'Build all local package dependencies before bundling the backend',\n    )\n    .action(lazy(() => import('./backend/bundle').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('backend:dev')\n    .description(\n      'Start local development server with HMR for the backend [DEPRECATED]',\n    )\n    .option('--check', 'Enable type checking and linting')\n    .option('--inspect', 'Enable debugger')\n    .option('--inspect-brk', 'Enable debugger with await to attach debugger')\n    // We don't actually use the config in the CLI, just pass them on to the NodeJS process\n    .option(...configOption)\n    .action(lazy(() => import('./backend/dev').then(m => m.default)));\n\n  program\n    .command('create')\n    .storeOptionsAsProperties(false)\n    .description(\n      'Open up an interactive guide to creating new things in your app',\n    )\n    .option(\n      '--select <name>',\n      'Select the thing you want to be creating upfront',\n    )\n    .option(\n      '--option <name>=<value>',\n      'Pre-fill options for the creation process',\n      (opt, arr: string[]) => [...arr, opt],\n      [],\n    )\n    .option('--scope <scope>', 'The scope to use for new packages')\n    .option(\n      '--npm-registry <URL>',\n      'The package registry to use for new packages',\n    )\n    .option('--no-private', 'Do not mark new packages as private')\n    .action(lazy(() => import('./create/create').then(m => m.default)));\n\n  program\n    .command('create-plugin')\n    .option(\n      '--backend',\n      'Create plugin with the backend dependencies as default',\n    )\n    .description('Creates a new plugin in the current repository')\n    .option('--scope <scope>', 'npm scope')\n    .option('--npm-registry <URL>', 'npm registry URL')\n    .option('--no-private', 'Public npm package')\n    .action(\n      lazy(() => import('./create-plugin/createPlugin').then(m => m.default)),\n    );\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('plugin:build')\n    .description('Build a plugin [DEPRECATED]')\n    .option('--minify', 'Minify the generated code')\n    .option('--experimental-type-build', 'Enable experimental type build')\n    .action(lazy(() => import('./plugin/build').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('plugin:serve')\n    .description('Serves the dev/ folder of a plugin [DEPRECATED]')\n    .option('--check', 'Enable type checking and linting')\n    .option(...configOption)\n    .action(lazy(() => import('./plugin/serve').then(m => m.default)));\n\n  program\n    .command('plugin:diff')\n    .option('--check', 'Fail if changes are required')\n    .option('--yes', 'Apply all changes')\n    .description('Diff an existing plugin with the creation template')\n    .action(lazy(() => import('./plugin/diff').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('build')\n    .description('Build a package for publishing [DEPRECATED]')\n    .option('--outputs <formats>', 'List of formats to output [types,cjs,esm]')\n    .option('--minify', 'Minify the generated code')\n    .option('--experimental-type-build', 'Enable experimental type build')\n    .action(lazy(() => import('./oldBuild').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('lint [directories...]')\n    .option(\n      '--format <format>',\n      'Lint report output format',\n      'eslint-formatter-friendly',\n    )\n    .option('--fix', 'Attempt to automatically fix violations')\n    .description('Lint a package [DEPRECATED]')\n    .action(lazy(() => import('./lint').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('test')\n    .allowUnknownOption(true) // Allows the command to run, but we still need to parse raw args\n    .helpOption(', --backstage-cli-help') // Let Jest handle help\n    .description(\n      'Run tests, forwarding args to Jest, defaulting to watch mode [DEPRECATED]',\n    )\n    .action(lazy(() => import('./test').then(m => m.default)));\n\n  program\n    .command('config:docs')\n    .option(\n      '--package <name>',\n      'Only include the schema that applies to the given package',\n    )\n    .description('Browse the configuration reference documentation')\n    .action(lazy(() => import('./config/docs').then(m => m.default)));\n\n  program\n    .command('config:print')\n    .option(\n      '--package <name>',\n      'Only load config schema that applies to the given package',\n    )\n    .option('--lax', 'Do not require environment variables to be set')\n    .option('--frontend', 'Print only the frontend configuration')\n    .option('--with-secrets', 'Include secrets in the printed configuration')\n    .option(\n      '--format <format>',\n      'Format to print the configuration in, either json or yaml [yaml]',\n    )\n    .option(...configOption)\n    .description('Print the app configuration for the current package')\n    .action(lazy(() => import('./config/print').then(m => m.default)));\n\n  program\n    .command('config:check')\n    .option(\n      '--package <name>',\n      'Only load config schema that applies to the given package',\n    )\n    .option('--lax', 'Do not require environment variables to be set')\n    .option('--frontend', 'Only validate the frontend configuration')\n    .option('--deprecated', 'Output deprecated configuration settings')\n    .option(...configOption)\n    .description(\n      'Validate that the given configuration loads and matches schema',\n    )\n    .action(lazy(() => import('./config/validate').then(m => m.default)));\n\n  program\n    .command('config:schema')\n    .option(\n      '--package <name>',\n      'Only output config schema that applies to the given package',\n    )\n    .option(\n      '--format <format>',\n      'Format to print the schema in, either json or yaml [yaml]',\n    )\n    .description('Print configuration schema')\n    .action(lazy(() => import('./config/schema').then(m => m.default)));\n\n  registerRepoCommand(program);\n  registerScriptCommand(program);\n  registerMigrateCommand(program);\n\n  program\n    .command('versions:bump')\n    .option(\n      '--pattern <glob>',\n      'Override glob for matching packages to upgrade',\n    )\n    .option(\n      '--release <version|next|main>',\n      'Bump to a specific Backstage release line or version',\n      'main',\n    )\n    .description('Bump Backstage packages to the latest versions')\n    .action(lazy(() => import('./versions/bump').then(m => m.default)));\n\n  program\n    .command('versions:check')\n    .option('--fix', 'Fix any auto-fixable versioning problems')\n    .description('Check Backstage package versioning')\n    .action(lazy(() => import('./versions/lint').then(m => m.default)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('prepack')\n    .description(\n      'Prepares a package for packaging before publishing [DEPRECATED]',\n    )\n    .action(lazy(() => import('./pack').then(m => m.pre)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('postpack')\n    .description(\n      'Restores the changes made by the prepack command [DEPRECATED]',\n    )\n    .action(lazy(() => import('./pack').then(m => m.post)));\n\n  // TODO(Rugvip): Deprecate in favor of package variant\n  program\n    .command('clean')\n    .description('Delete cache directories [DEPRECATED]')\n    .action(lazy(() => import('./clean/clean').then(m => m.default)));\n\n  program\n    .command('build-workspace <workspace-dir> [packages...]')\n    .description('Builds a temporary dist workspace from the provided packages')\n    .action(lazy(() => import('./buildWorkspace').then(m => m.default)));\n\n  program\n    .command('create-github-app <github-org>')\n    .description('Create new GitHub App in your organization.')\n    .action(lazy(() => import('./create-github-app').then(m => m.default)));\n\n  program\n    .command('info')\n    .description('Show helpful information for debugging and reporting bugs')\n    .action(lazy(() => import('./info').then(m => m.default)));\n\n  program\n    .command('install [plugin-id]', { hidden: true })\n    .option(\n      '--from <packageJsonFilePath>',\n      'Install from a local package.json containing the installation recipe',\n    )\n    .description('Install a Backstage plugin [EXPERIMENTAL]')\n    .action(lazy(() => import('./install/install').then(m => m.default)));\n}\n\n// Wraps an action function so that it always exits and handles errors\nfunction lazy(\n  getActionFunc: () => Promise<(...args: any[]) => Promise<void>>,\n): (...args: any[]) => Promise<never> {\n  return async (...args: any[]) => {\n    try {\n      const actionFunc = await getActionFunc();\n      await actionFunc(...args);\n\n      process.exit(0);\n    } catch (error) {\n      assertError(error);\n      exitWithError(error);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * CLI for developing Backstage plugins and apps\n *\n * @packageDocumentation\n */\n\nimport { program } from 'commander';\nimport chalk from 'chalk';\nimport { exitWithError } from './lib/errors';\nimport { version } from './lib/version';\nimport { registerCommands } from './commands';\n\nconst main = (argv: string[]) => {\n  program.name('backstage-cli').version(version);\n\n  registerCommands(program);\n\n  program.on('command:*', () => {\n    console.log();\n    console.log(chalk.red(`Invalid command: ${program.args.join(' ')}`));\n    console.log();\n    program.outputHelp();\n    process.exit(1);\n  });\n\n  program.parse(argv);\n};\n\nprocess.on('unhandledRejection', rejection => {\n  if (rejection instanceof Error) {\n    exitWithError(rejection);\n  } else {\n    exitWithError(new Error(`Unknown rejection: '${rejection}'`));\n  }\n});\n\nmain(process.argv);\n"],"names":["chalk","findPaths","backendCommon","cli","config","coreAppApi","coreComponents","corePluginApi","devUtils","testUtils","theme","scaffolderBackend","fs","semver","assertError","program"],"mappings":"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"}