{"version":3,"file":"index-be0f39da.cjs.js","sources":["../../src/commands/create-github-app/GithubCreateAppServer.ts","../../src/commands/create-github-app/index.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport crypto from 'crypto';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { request } from '@octokit/request';\nimport express, { Express, Request, Response } from 'express';\n\nconst MANIFEST_DATA = {\n  default_events: ['create', 'delete', 'push', 'repository'],\n  default_permissions: {\n    contents: 'read',\n    metadata: 'read',\n  },\n  name: 'Backstage-<changeme>',\n  url: 'https://backstage.io',\n  description: 'GitHub App for Backstage',\n  public: false,\n};\n\nconst FORM_PAGE = `\n<html>\n  <body>\n    <form id=\"form\" action=\"ACTION_URL\" method=\"post\">\n      <input type=\"hidden\" name=\"manifest\" value=\"MANIFEST_JSON\">\n      <input type=\"submit\" value=\"Continue\">\n    </form>\n    <script>\n      document.getElementById(\"form\").submit()\n    </script>\n  </body>\n</html>\n`;\n\ntype GithubAppConfig = {\n  appId: number;\n  slug?: string;\n  name?: string;\n  webhookUrl?: string;\n  clientId: string;\n  clientSecret: string;\n  webhookSecret: string;\n  privateKey: string;\n};\n\nexport class GithubCreateAppServer {\n  private baseUrl?: string;\n  private webhookUrl?: string;\n\n  static async run(options: {\n    org: string;\n    readWrite: boolean;\n  }): Promise<GithubAppConfig> {\n    const encodedOrg = encodeURIComponent(options.org);\n    const actionUrl = `https://github.com/organizations/${encodedOrg}/settings/apps/new`;\n    const server = new GithubCreateAppServer(actionUrl, options.readWrite);\n    return server.start();\n  }\n\n  private constructor(\n    private readonly actionUrl: string,\n    private readonly readWrite: boolean,\n  ) {\n    const webhookId = crypto\n      .randomBytes(15)\n      .toString('base64')\n      .replace(/[\\+\\/]/g, '');\n\n    this.webhookUrl = `https://smee.io/${webhookId}`;\n  }\n\n  private async start(): Promise<GithubAppConfig> {\n    const app = express();\n\n    app.get('/', this.formHandler);\n\n    const callPromise = new Promise<GithubAppConfig>((resolve, reject) => {\n      app.get('/callback', (req, res) => {\n        request(\n          `POST /app-manifests/${encodeURIComponent(\n            req.query.code as string,\n          )}/conversions`,\n        ).then(({ data }) => {\n          resolve({\n            name: data.name,\n            slug: data.slug,\n            appId: data.id,\n            webhookUrl: this.webhookUrl,\n            clientId: data.client_id,\n            clientSecret: data.client_secret,\n            webhookSecret: data.webhook_secret,\n            privateKey: data.pem,\n          });\n          res.redirect(302, `${data.html_url}/installations/new`);\n        }, reject);\n      });\n    });\n\n    this.baseUrl = await this.listen(app);\n\n    openBrowser(this.baseUrl);\n\n    return callPromise;\n  }\n\n  private formHandler = (_req: Request, res: Response) => {\n    const baseUrl = this.baseUrl;\n    if (!baseUrl) {\n      throw new Error('baseUrl is not set');\n    }\n    const manifest = {\n      ...MANIFEST_DATA,\n      redirect_url: `${baseUrl}/callback`,\n      hook_attributes: {\n        url: this.webhookUrl,\n        active: false,\n      },\n      ...(this.readWrite && {\n        default_permissions: {\n          contents: 'write',\n          actions: 'write',\n          metadata: 'read',\n        },\n      }),\n    };\n    const manifestJson = JSON.stringify(manifest).replace(/\\\"/g, '&quot;');\n\n    let body = FORM_PAGE;\n    body = body.replace('MANIFEST_JSON', manifestJson);\n    body = body.replace('ACTION_URL', this.actionUrl);\n\n    res.setHeader('content-type', 'text/html');\n    res.send(body);\n  };\n\n  private async listen(app: Express) {\n    return new Promise<string>((resolve, reject) => {\n      const listener = app.listen(0, () => {\n        const info = listener.address();\n        if (typeof info !== 'object' || info === null) {\n          reject(new Error(`Unexpected listener info '${info}'`));\n          return;\n        }\n        const { port } = info;\n        resolve(`http://localhost:${port}`);\n      });\n    });\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport { stringify as stringifyYaml } from 'yaml';\nimport inquirer, { Question, Answers } from 'inquirer';\nimport { paths } from '../../lib/paths';\nimport { GithubCreateAppServer } from './GithubCreateAppServer';\nimport fetch from 'node-fetch';\nimport openBrowser from 'react-dev-utils/openBrowser';\n// This is an experimental command that at this point does not support GitHub Enterprise\n// due to lacking support for creating apps from manifests.\n// https://docs.github.com/en/free-pro-team@latest/developers/apps/creating-a-github-app-from-a-manifest\nexport default async (org: string) => {\n  const answers: Answers = await inquirer.prompt([\n    {\n      type: 'list',\n      name: 'appType',\n      message: chalk.blue('What will the app be used for [required]'),\n      choices: ['Read and Write (needed by Software Templates)', 'Read only'],\n    },\n  ]);\n  const readWrite = answers.appType !== 'Read only';\n  await verifyGithubOrg(org);\n  const { slug, name, ...config } = await GithubCreateAppServer.run({\n    org,\n    readWrite,\n  });\n\n  const fileName = `github-app-${slug}-credentials.yaml`;\n  const content = `# Name: ${name}\\n${stringifyYaml(config)}`;\n  await fs.writeFile(paths.resolveTargetRoot(fileName), content);\n  console.log(`GitHub App configuration written to ${chalk.cyan(fileName)}`);\n  console.log(\n    chalk.yellow(\n      'This file contains sensitive credentials, it should not be committed to version control and handled with care!',\n    ),\n  );\n  console.log(\n    \"Here's an example on how to update the integrations section in app-config.yaml\",\n  );\n  console.log(\n    chalk.green(`\nintegrations:\n  github:\n    - host: github.com\n      apps:\n        - $include: ${fileName}`),\n  );\n};\n\nasync function verifyGithubOrg(org: string): Promise<void> {\n  let response;\n\n  try {\n    response = await fetch(\n      `https://api.github.com/orgs/${encodeURIComponent(org)}`,\n    );\n  } catch (e) {\n    console.log(\n      chalk.yellow(\n        'Warning: Unable to verify existence of GitHub organization. ',\n        e,\n      ),\n    );\n  }\n\n  if (response?.status === 404) {\n    const questions: Question[] = [\n      {\n        type: 'confirm',\n        name: 'shouldCreateOrg',\n        message: `GitHub organization ${chalk.cyan(\n          org,\n        )} does not exist. Would you like to create a new Organization instead?`,\n      },\n    ];\n\n    const answers = await inquirer.prompt(questions);\n\n    if (!answers.shouldCreateOrg) {\n      console.log(\n        chalk.yellow('GitHub organization must exist to create GitHub app'),\n      );\n      process.exit(1);\n    }\n\n    openBrowser('https://github.com/account/organizations/new');\n\n    console.log(\n      chalk.yellow(\n        'Please re-run this command when you have created your new organization',\n      ),\n    );\n\n    process.exit(0);\n  }\n}\n"],"names":["crypto","express","request","openBrowser","inquirer","chalk","stringifyYaml","fs","paths","fetch"],"mappings":"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"}