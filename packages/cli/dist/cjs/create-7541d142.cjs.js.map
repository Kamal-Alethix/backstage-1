{"version":3,"file":"create-7541d142.cjs.js","sources":["../../src/lib/create/types.ts","../../src/lib/create/factories/common/prompts.ts","../../src/lib/create/factories/common/tasks.ts","../../src/lib/create/factories/frontendPlugin.ts","../../src/lib/create/factories/backendPlugin.ts","../../src/lib/create/factories/pluginCommon.ts","../../src/lib/create/factories/scaffolderModule.ts","../../src/lib/create/FactoryRegistry.ts","../../src/commands/create/create.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DistinctQuestion } from 'inquirer';\n\nexport interface CreateContext {\n  /** The package scope to use for new packages */\n  scope?: string;\n  /** The NPM registry to use for new packages */\n  npmRegistry?: string;\n  /** Whether new packages should be marked as private */\n  private: boolean;\n  /** Whether we are creating something in a monorepo or not */\n  isMonoRepo: boolean;\n  /** The default version to use for new packages */\n  defaultVersion: string;\n\n  /** Creates a temporary directory. This will always be deleted after creation is done. */\n  createTemporaryDirectory(name: string): Promise<string>;\n\n  /** Signal that the creation process got to a point where permanent modifications were made */\n  markAsModified(): void;\n}\n\nexport type AnyOptions = Record<string, string>;\n\nexport type Prompt<TOptions> = DistinctQuestion<TOptions> & { name: string };\n\nexport interface Factory<TOptions extends AnyOptions> {\n  /**\n   * The name used for this factory.\n   */\n  name: string;\n\n  /**\n   * A description that describes what this factory creates to the user.\n   */\n  description: string;\n\n  /**\n   * An optional options discovery step that is run\n   * before the prompts to potentially fill in some of the options.\n   */\n  optionsDiscovery?(): Promise<Partial<TOptions>>;\n\n  /**\n   * Inquirer prompts that will be filled in either interactively or\n   * through command line arguments.\n   */\n  optionsPrompts?: ReadonlyArray<Prompt<TOptions>>;\n\n  /**\n   * The main method of the factory that handles creation.\n   */\n  create(options: TOptions, context?: CreateContext): Promise<void>;\n}\n\nexport type AnyFactory = Factory<AnyOptions>;\n\nexport function createFactory<TOptions extends AnyOptions>(\n  config: Factory<TOptions>,\n): AnyFactory {\n  return config as AnyFactory;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Prompt } from '../../types';\nimport { parseOwnerIds } from '../../../codeowners';\n\nexport function pluginIdPrompt(): Prompt<{ id: string }> {\n  return {\n    type: 'input',\n    name: 'id',\n    message: 'Enter the ID of the plugin [required]',\n    validate: (value: string) => {\n      if (!value) {\n        return 'Please enter the ID of the plugin';\n      } else if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(value)) {\n        return 'Plugin IDs must be lowercase and contain only letters, digits, and dashes.';\n      }\n      return true;\n    },\n  };\n}\n\nexport function ownerPrompt(): Prompt<{\n  owner?: string;\n  codeOwnersPath?: string;\n}> {\n  return {\n    type: 'input',\n    name: 'owner',\n    message: 'Enter an owner to add to CODEOWNERS [optional]',\n    when: opts => Boolean(opts.codeOwnersPath),\n    validate: (value: string) => {\n      if (!value) {\n        return true;\n      }\n\n      const ownerIds = parseOwnerIds(value);\n      if (!ownerIds) {\n        return 'The owner must be a space separated list of team names (e.g. @org/team-name), usernames (e.g. @username), or the email addresses (e.g. user@example.com).';\n      }\n\n      return true;\n    },\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport { resolve as resolvePath, relative as relativePath } from 'path';\nimport { paths } from '../../../paths';\nimport { Task, templatingTask } from '../../../tasks';\nimport { Lockfile } from '../../../versioning';\nimport { createPackageVersionProvider } from '../../../version';\nimport { CreateContext } from '../../types';\n\nexport async function executePluginPackageTemplate(\n  ctx: CreateContext,\n  options: {\n    templateName: string;\n    targetDir: string;\n    values: Record<string, unknown>;\n  },\n) {\n  const { targetDir } = options;\n\n  let lockfile: Lockfile | undefined;\n  try {\n    lockfile = await Lockfile.load(paths.resolveTargetRoot('yarn.lock'));\n  } catch {\n    /* ignored */\n  }\n\n  Task.section('Checking Prerequisites');\n  const shortPluginDir = relativePath(paths.targetRoot, targetDir);\n  await Task.forItem('availability', shortPluginDir, async () => {\n    if (await fs.pathExists(targetDir)) {\n      throw new Error(\n        `A package with the same plugin ID already exists at ${chalk.cyan(\n          shortPluginDir,\n        )}. Please try again with a different ID.`,\n      );\n    }\n  });\n\n  const tempDir = await Task.forItem('creating', 'temp dir', async () => {\n    return await ctx.createTemporaryDirectory('backstage-create');\n  });\n\n  Task.section('Executing Template');\n  await templatingTask(\n    paths.resolveOwn('templates', options.templateName),\n    tempDir,\n    options.values,\n    createPackageVersionProvider(lockfile),\n  );\n\n  // Format package.json if it exists\n  const pkgJsonPath = resolvePath(tempDir, 'package.json');\n  if (await fs.pathExists(pkgJsonPath)) {\n    const pkgJson = await fs.readJson(pkgJsonPath);\n    await fs.writeJson(pkgJsonPath, pkgJson, { spaces: 2 });\n  }\n\n  Task.section('Installing');\n  await Task.forItem('moving', shortPluginDir, async () => {\n    await fs.move(tempDir, targetDir).catch(error => {\n      throw new Error(\n        `Failed to move package from ${tempDir} to ${targetDir}, ${error.message}`,\n      );\n    });\n  });\n\n  ctx.markAsModified();\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport camelCase from 'lodash/camelCase';\nimport upperFirst from 'lodash/upperFirst';\nimport { paths } from '../../paths';\nimport { addCodeownersEntry, getCodeownersFilePath } from '../../codeowners';\nimport { createFactory, CreateContext } from '../types';\nimport { addPackageDependency, Task } from '../../tasks';\nimport { ownerPrompt, pluginIdPrompt } from './common/prompts';\nimport { executePluginPackageTemplate } from './common/tasks';\n\ntype Options = {\n  id: string;\n  owner?: string;\n  codeOwnersPath?: string;\n};\n\nexport const frontendPlugin = createFactory<Options>({\n  name: 'plugin',\n  description: 'A new frontend plugin',\n  optionsDiscovery: async () => ({\n    codeOwnersPath: await getCodeownersFilePath(paths.targetRoot),\n  }),\n  optionsPrompts: [pluginIdPrompt(), ownerPrompt()],\n  async create(options: Options, ctx: CreateContext) {\n    const { id } = options;\n\n    const name = ctx.scope\n      ? `@${ctx.scope}/plugin-${id}`\n      : `backstage-plugin-${id}`;\n    const extensionName = `${upperFirst(camelCase(id))}Page`;\n\n    Task.log();\n    Task.log(`Creating frontend plugin ${chalk.cyan(name)}`);\n\n    const targetDir = ctx.isMonoRepo\n      ? paths.resolveTargetRoot('plugins', id)\n      : paths.resolveTargetRoot(`backstage-plugin-${id}`);\n\n    await executePluginPackageTemplate(ctx, {\n      targetDir,\n      templateName: 'default-plugin',\n      values: {\n        id,\n        name,\n        extensionName,\n        pluginVar: `${camelCase(id)}Plugin`,\n        pluginVersion: ctx.defaultVersion,\n        privatePackage: ctx.private,\n        npmRegistry: ctx.npmRegistry,\n      },\n    });\n\n    if (await fs.pathExists(paths.resolveTargetRoot('packages/app'))) {\n      await Task.forItem('app', 'adding dependency', async () => {\n        await addPackageDependency(\n          paths.resolveTargetRoot('packages/app/package.json'),\n          {\n            dependencies: {\n              [name]: `^${ctx.defaultVersion}`,\n            },\n          },\n        );\n      });\n\n      await Task.forItem('app', 'adding import', async () => {\n        const pluginsFilePath = paths.resolveTargetRoot(\n          'packages/app/src/App.tsx',\n        );\n        if (!(await fs.pathExists(pluginsFilePath))) {\n          return;\n        }\n\n        const content = await fs.readFile(pluginsFilePath, 'utf8');\n        const revLines = content.split('\\n').reverse();\n\n        const lastImportIndex = revLines.findIndex(line =>\n          line.match(/ from (\"|').*(\"|')/),\n        );\n        const lastRouteIndex = revLines.findIndex(line =>\n          line.match(/<\\/FlatRoutes/),\n        );\n\n        if (lastImportIndex !== -1 && lastRouteIndex !== -1) {\n          const importLine = `import { ${extensionName} } from '${name}';`;\n          if (!content.includes(importLine)) {\n            revLines.splice(lastImportIndex, 0, importLine);\n          }\n\n          const componentLine = `<Route path=\"/${id}\" element={<${extensionName} />} />`;\n          if (!content.includes(componentLine)) {\n            const [indentation] =\n              revLines[lastRouteIndex + 1].match(/^\\s*/) ?? [];\n            revLines.splice(lastRouteIndex + 1, 0, indentation + componentLine);\n          }\n\n          const newContent = revLines.reverse().join('\\n');\n          await fs.writeFile(pluginsFilePath, newContent, 'utf8');\n        }\n      });\n    }\n\n    if (options.owner) {\n      await addCodeownersEntry(`/plugins/${id}`, options.owner);\n    }\n\n    await Task.forCommand('yarn install', { cwd: targetDir, optional: true });\n    await Task.forCommand('yarn lint --fix', {\n      cwd: targetDir,\n      optional: true,\n    });\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport chalk from 'chalk';\nimport camelCase from 'lodash/camelCase';\nimport { paths } from '../../paths';\nimport { addCodeownersEntry, getCodeownersFilePath } from '../../codeowners';\nimport { createFactory, CreateContext } from '../types';\nimport { addPackageDependency, Task } from '../../tasks';\nimport { ownerPrompt, pluginIdPrompt } from './common/prompts';\nimport { executePluginPackageTemplate } from './common/tasks';\n\ntype Options = {\n  id: string;\n  owner?: string;\n  codeOwnersPath?: string;\n};\n\nexport const backendPlugin = createFactory<Options>({\n  name: 'backend-plugin',\n  description: 'A new backend plugin',\n  optionsDiscovery: async () => ({\n    codeOwnersPath: await getCodeownersFilePath(paths.targetRoot),\n  }),\n  optionsPrompts: [pluginIdPrompt(), ownerPrompt()],\n  async create(options: Options, ctx: CreateContext) {\n    const id = `${options.id}-backend`;\n    const name = ctx.scope\n      ? `@${ctx.scope}/plugin-${id}`\n      : `backstage-plugin-${id}`;\n\n    Task.log();\n    Task.log(`Creating backend plugin ${chalk.cyan(name)}`);\n\n    const targetDir = ctx.isMonoRepo\n      ? paths.resolveTargetRoot('plugins', id)\n      : paths.resolveTargetRoot(`backstage-plugin-${id}`);\n\n    await executePluginPackageTemplate(ctx, {\n      targetDir,\n      templateName: 'default-backend-plugin',\n      values: {\n        id,\n        name,\n        pluginVar: `${camelCase(id)}Plugin`,\n        pluginVersion: ctx.defaultVersion,\n        privatePackage: ctx.private,\n        npmRegistry: ctx.npmRegistry,\n      },\n    });\n\n    if (await fs.pathExists(paths.resolveTargetRoot('packages/backend'))) {\n      await Task.forItem('backend', 'adding dependency', async () => {\n        await addPackageDependency(\n          paths.resolveTargetRoot('packages/backend/package.json'),\n          {\n            dependencies: {\n              [name]: `^${ctx.defaultVersion}`,\n            },\n          },\n        );\n      });\n    }\n\n    if (options.owner) {\n      await addCodeownersEntry(`/plugins/${id}`, options.owner);\n    }\n\n    await Task.forCommand('yarn install', { cwd: targetDir, optional: true });\n    await Task.forCommand('yarn lint --fix', {\n      cwd: targetDir,\n      optional: true,\n    });\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\nimport { paths } from '../../paths';\nimport { addCodeownersEntry, getCodeownersFilePath } from '../../codeowners';\nimport { createFactory, CreateContext } from '../types';\nimport { Task } from '../../tasks';\nimport { ownerPrompt, pluginIdPrompt } from './common/prompts';\nimport { executePluginPackageTemplate } from './common/tasks';\n\ntype Options = {\n  id: string;\n  owner?: string;\n  codeOwnersPath?: string;\n};\n\nexport const pluginCommon = createFactory<Options>({\n  name: 'plugin-common',\n  description: 'A new isomorphic common plugin package',\n  optionsDiscovery: async () => ({\n    codeOwnersPath: await getCodeownersFilePath(paths.targetRoot),\n  }),\n  optionsPrompts: [pluginIdPrompt(), ownerPrompt()],\n  async create(options: Options, ctx: CreateContext) {\n    const { id } = options;\n    const suffix = `${id}-common`;\n    const name = ctx.scope\n      ? `@${ctx.scope}/plugin-${suffix}`\n      : `backstage-plugin-${suffix}`;\n\n    Task.log();\n    Task.log(`Creating backend plugin ${chalk.cyan(name)}`);\n\n    const targetDir = ctx.isMonoRepo\n      ? paths.resolveTargetRoot('plugins', suffix)\n      : paths.resolveTargetRoot(`backstage-plugin-${suffix}`);\n\n    await executePluginPackageTemplate(ctx, {\n      targetDir,\n      templateName: 'default-common-plugin-package',\n      values: {\n        id,\n        name,\n        privatePackage: ctx.private,\n        npmRegistry: ctx.npmRegistry,\n        pluginVersion: ctx.defaultVersion,\n      },\n    });\n\n    if (options.owner) {\n      await addCodeownersEntry(`/plugins/${suffix}`, options.owner);\n    }\n\n    await Task.forCommand('yarn install', { cwd: targetDir, optional: true });\n    await Task.forCommand('yarn lint --fix', {\n      cwd: targetDir,\n      optional: true,\n    });\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\nimport { paths } from '../../paths';\nimport { addCodeownersEntry, getCodeownersFilePath } from '../../codeowners';\nimport { createFactory, CreateContext } from '../types';\nimport { Task } from '../../tasks';\nimport { ownerPrompt } from './common/prompts';\nimport { executePluginPackageTemplate } from './common/tasks';\n\ntype Options = {\n  id: string;\n  owner?: string;\n  codeOwnersPath?: string;\n};\n\nexport const scaffolderModule = createFactory<Options>({\n  name: 'scaffolder-module',\n  description:\n    'An module exporting custom actions for @backstage/plugin-scaffolder-backend',\n  optionsDiscovery: async () => ({\n    codeOwnersPath: await getCodeownersFilePath(paths.targetRoot),\n  }),\n  optionsPrompts: [\n    {\n      type: 'input',\n      name: 'id',\n      message: 'Enter the name of the module [required]',\n      validate: (value: string) => {\n        if (!value) {\n          return 'Please enter the name of the module';\n        } else if (!/^[a-z0-9]+(-[a-z0-9]+)*$/.test(value)) {\n          return 'Module names must be lowercase and contain only letters, digits, and dashes.';\n        }\n        return true;\n      },\n    },\n    ownerPrompt(),\n  ],\n  async create(options: Options, ctx: CreateContext) {\n    const { id } = options;\n    const slug = `scaffolder-backend-module-${id}`;\n\n    let name = `backstage-plugin-${slug}`;\n    if (ctx.scope) {\n      if (ctx.scope === 'backstage') {\n        name = `@backstage/plugin-${slug}`;\n      } else {\n        name = `@${ctx.scope}/backstage-plugin-${slug}`;\n      }\n    }\n\n    Task.log();\n    Task.log(`Creating module ${chalk.cyan(name)}`);\n\n    const targetDir = ctx.isMonoRepo\n      ? paths.resolveTargetRoot('plugins', slug)\n      : paths.resolveTargetRoot(`backstage-plugin-${slug}`);\n\n    await executePluginPackageTemplate(ctx, {\n      targetDir,\n      templateName: 'scaffolder-module',\n      values: {\n        id,\n        name,\n        privatePackage: ctx.private,\n        npmRegistry: ctx.npmRegistry,\n        pluginVersion: ctx.defaultVersion,\n      },\n    });\n\n    if (options.owner) {\n      await addCodeownersEntry(`/plugins/${slug}`, options.owner);\n    }\n\n    await Task.forCommand('yarn install', { cwd: targetDir, optional: true });\n    await Task.forCommand('yarn lint --fix', {\n      cwd: targetDir,\n      optional: true,\n    });\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport { AnyFactory, Prompt } from './types';\nimport * as factories from './factories';\nimport partition from 'lodash/partition';\n\nfunction applyPromptMessageTransforms<T>(\n  prompt: Prompt<T>,\n  transforms: {\n    message: (msg: string) => string;\n    error: (msg: string) => string;\n  },\n): Prompt<T> {\n  return {\n    ...prompt,\n    message:\n      prompt.message &&\n      (async answers => {\n        if (typeof prompt.message === 'function') {\n          return transforms.message(await prompt.message(answers));\n        }\n        return transforms.message(await prompt.message!);\n      }),\n    validate:\n      prompt.validate &&\n      (async (...args) => {\n        const result = await prompt.validate!(...args);\n        if (typeof result === 'string') {\n          return transforms.error(result);\n        }\n        return result;\n      }),\n  };\n}\n\nexport class FactoryRegistry {\n  private static factoryMap = new Map<string, AnyFactory>(\n    Object.values(factories).map(factory => [factory.name, factory]),\n  );\n\n  static async interactiveSelect(preselected?: string): Promise<AnyFactory> {\n    let selected = preselected;\n\n    if (!selected) {\n      const answers = await inquirer.prompt<{ name: string }>([\n        {\n          type: 'list',\n          name: 'name',\n          message: 'What do you want to create?',\n          choices: Array.from(this.factoryMap.values()).map(factory => ({\n            name: `${factory.name} - ${factory.description}`,\n            value: factory.name,\n          })),\n        },\n      ]);\n      selected = answers.name;\n    }\n\n    const factory = this.factoryMap.get(selected);\n    if (!factory) {\n      throw new Error(`Unknown selection '${selected}'`);\n    }\n    return factory;\n  }\n\n  static async populateOptions(\n    factory: AnyFactory,\n    provided: Record<string, string>,\n  ): Promise<Record<string, string>> {\n    let currentOptions = provided;\n\n    if (factory.optionsDiscovery) {\n      const discoveredOptions = await factory.optionsDiscovery();\n      currentOptions = {\n        ...currentOptions,\n        ...(discoveredOptions as Record<string, string>),\n      };\n    }\n\n    if (factory.optionsPrompts) {\n      const [hasAnswers, needsAnswers] = partition(\n        factory.optionsPrompts,\n        option => option.name in currentOptions,\n      );\n\n      for (const option of hasAnswers) {\n        const value = provided[option.name];\n\n        if (option.validate) {\n          const result = option.validate(value);\n          if (result !== true) {\n            throw new Error(`Invalid option '${option.name}'. ${result}`);\n          }\n        }\n      }\n\n      currentOptions = await inquirer.prompt(\n        needsAnswers.map(option =>\n          applyPromptMessageTransforms(option, {\n            message: chalk.blue,\n            error: chalk.red,\n          }),\n        ),\n        currentOptions,\n      );\n    }\n\n    return currentOptions;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport os from 'os';\nimport fs from 'fs-extra';\nimport { join as joinPath } from 'path';\nimport { OptionValues } from 'commander';\nimport { FactoryRegistry } from '../../lib/create/FactoryRegistry';\nimport { paths } from '../../lib/paths';\nimport { assertError } from '@backstage/errors';\nimport { Task } from '../../lib/tasks';\n\nfunction parseOptions(optionStrings: string[]): Record<string, string> {\n  const options: Record<string, string> = {};\n\n  for (const str of optionStrings) {\n    const [key] = str.split('=', 1);\n    const value = str.slice(key.length + 1);\n    if (!key || str[key.length] !== '=') {\n      throw new Error(\n        `Invalid option '${str}', must be of the format <key>=<value>`,\n      );\n    }\n    options[key] = value;\n  }\n\n  return options;\n}\n\nexport default async (opts: OptionValues) => {\n  const factory = await FactoryRegistry.interactiveSelect(opts.select);\n\n  const providedOptions = parseOptions(opts.option);\n  const options = await FactoryRegistry.populateOptions(\n    factory,\n    providedOptions,\n  );\n\n  let isMonoRepo = false;\n  try {\n    const rootPackageJson = await fs.readJson(\n      paths.resolveTargetRoot('package.json'),\n    );\n    if (rootPackageJson.workspaces) {\n      isMonoRepo = true;\n    }\n  } catch (error) {\n    assertError(error);\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n\n  let defaultVersion = '0.1.0';\n  try {\n    const rootLernaJson = await fs.readJson(\n      paths.resolveTargetRoot('lerna.json'),\n    );\n    if (rootLernaJson.version) {\n      defaultVersion = rootLernaJson.version;\n    }\n  } catch (error) {\n    assertError(error);\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n\n  const tempDirs = new Array<string>();\n  async function createTemporaryDirectory(name: string): Promise<string> {\n    const dir = await fs.mkdtemp(joinPath(os.tmpdir(), name));\n    tempDirs.push(dir);\n    return dir;\n  }\n\n  let modified = false;\n  try {\n    await factory.create(options, {\n      isMonoRepo,\n      defaultVersion,\n      scope: opts.scope?.replace(/^@/, ''),\n      npmRegistry: opts.npmRegistry,\n      private: Boolean(opts.private),\n      createTemporaryDirectory,\n      markAsModified() {\n        modified = true;\n      },\n    });\n\n    Task.log();\n    Task.log(`🎉  Successfully created ${factory.name}`);\n    Task.log();\n  } catch (error) {\n    assertError(error);\n    Task.error(error.message);\n\n    if (modified) {\n      Task.log('It seems that something went wrong in the creation process 🤔');\n      Task.log();\n      Task.log(\n        'We have left the changes that were made intact in case you want to',\n      );\n      Task.log(\n        'continue manually, but you can also revert the changes and try again.',\n      );\n\n      Task.error(`🔥  Failed to create ${factory.name}!`);\n    }\n  } finally {\n    for (const dir of tempDirs) {\n      try {\n        await fs.remove(dir);\n      } catch (error) {\n        console.error(\n          `Failed to remove temporary directory '${dir}', ${error}`,\n        );\n      }\n    }\n  }\n};\n"],"names":["parseOwnerIds","Lockfile","paths","Task","relativePath","fs","chalk","templatingTask","createPackageVersionProvider","resolvePath","getCodeownersFilePath","upperFirst","camelCase","addPackageDependency","addCodeownersEntry","inquirer","partition","assertError","joinPath","os"],"mappings":"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"}