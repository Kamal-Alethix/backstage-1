{"version":3,"file":"run-3d0b00b7.cjs.js","sources":["../../src/lib/run.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  SpawnOptions,\n  spawn,\n  ChildProcess,\n  execFile as execFileCb,\n} from 'child_process';\nimport { ExitCodeError } from './errors';\nimport { promisify } from 'util';\nimport { LogFunc } from './logging';\nimport { assertError, ForwardedError } from '@backstage/errors';\n\nconst execFile = promisify(execFileCb);\n\ntype SpawnOptionsPartialEnv = Omit<SpawnOptions, 'env'> & {\n  env?: Partial<NodeJS.ProcessEnv>;\n  // Pipe stdout to this log function\n  stdoutLogFunc?: LogFunc;\n  // Pipe stderr to this log function\n  stderrLogFunc?: LogFunc;\n};\n\n// Runs a child command, returning a promise that is only resolved if the child exits with code 0.\nexport async function run(\n  name: string,\n  args: string[] = [],\n  options: SpawnOptionsPartialEnv = {},\n) {\n  const { stdoutLogFunc, stderrLogFunc } = options;\n  const env: NodeJS.ProcessEnv = {\n    ...process.env,\n    FORCE_COLOR: 'true',\n    ...(options.env ?? {}),\n  };\n\n  const stdio = [\n    'inherit',\n    stdoutLogFunc ? 'pipe' : 'inherit',\n    stderrLogFunc ? 'pipe' : 'inherit',\n  ] as ('inherit' | 'pipe')[];\n\n  const child = spawn(name, args, {\n    stdio,\n    shell: true,\n    ...options,\n    env,\n  });\n\n  if (stdoutLogFunc && child.stdout) {\n    child.stdout.on('data', stdoutLogFunc);\n  }\n  if (stderrLogFunc && child.stderr) {\n    child.stderr.on('data', stderrLogFunc);\n  }\n\n  await waitForExit(child, name);\n}\n\nexport async function runPlain(cmd: string, ...args: string[]) {\n  try {\n    const { stdout } = await execFile(cmd, args, { shell: true });\n    return stdout.trim();\n  } catch (error) {\n    assertError(error);\n    if ('stderr' in error) {\n      process.stderr.write(error.stderr as Buffer);\n    }\n    if (typeof error.code === 'number') {\n      throw new ExitCodeError(error.code, [cmd, ...args].join(' '));\n    }\n    throw new ForwardedError('Unknown execution error', error);\n  }\n}\n\nexport async function runCheck(cmd: string, ...args: string[]) {\n  try {\n    await execFile(cmd, args, { shell: true });\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport async function waitForExit(\n  child: ChildProcess & { exitCode: number | null },\n  name?: string,\n): Promise<void> {\n  if (typeof child.exitCode === 'number') {\n    if (child.exitCode) {\n      throw new ExitCodeError(child.exitCode, name);\n    }\n    return;\n  }\n\n  await new Promise<void>((resolve, reject) => {\n    child.once('error', error => reject(error));\n    child.once('exit', code => {\n      if (code) {\n        reject(new ExitCodeError(code, name));\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n"],"names":["promisify","execFileCb","spawn","assertError","ExitCodeError","ForwardedError"],"mappings":"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"}