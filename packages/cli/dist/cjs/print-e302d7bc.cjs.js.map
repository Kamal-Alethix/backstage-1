{"version":3,"file":"print-e302d7bc.cjs.js","sources":["../../src/commands/config/print.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OptionValues } from 'commander';\nimport { stringify as stringifyYaml } from 'yaml';\nimport { AppConfig, ConfigReader } from '@backstage/config';\nimport { loadCliConfig } from '../../lib/config';\nimport { ConfigSchema, ConfigVisibility } from '@backstage/config-loader';\n\nexport default async (opts: OptionValues) => {\n  const { schema, appConfigs } = await loadCliConfig({\n    args: opts.config,\n    fromPackage: opts.package,\n    mockEnv: opts.lax,\n    fullVisibility: !opts.frontend,\n  });\n  const visibility = getVisibilityOption(opts);\n  const data = serializeConfigData(appConfigs, schema, visibility);\n\n  if (opts.format === 'json') {\n    process.stdout.write(`${JSON.stringify(data, null, 2)}\\n`);\n  } else {\n    process.stdout.write(`${stringifyYaml(data)}\\n`);\n  }\n};\n\nfunction getVisibilityOption(opts: OptionValues): ConfigVisibility {\n  if (opts.frontend && opts.withSecrets) {\n    throw new Error('Not allowed to combine frontend and secret config');\n  }\n  if (opts.frontend) {\n    return 'frontend';\n  } else if (opts.withSecrets) {\n    return 'secret';\n  }\n  return 'backend';\n}\n\nfunction serializeConfigData(\n  appConfigs: AppConfig[],\n  schema: ConfigSchema,\n  visibility: ConfigVisibility,\n) {\n  if (visibility === 'frontend') {\n    const frontendConfigs = schema.process(appConfigs, {\n      visibility: ['frontend'],\n    });\n    return ConfigReader.fromConfigs(frontendConfigs).get();\n  } else if (visibility === 'secret') {\n    return ConfigReader.fromConfigs(appConfigs).get();\n  }\n\n  const sanitizedConfigs = schema.process(appConfigs, {\n    valueTransform: (value, context) =>\n      context.visibility === 'secret' ? '<secret>' : value,\n  });\n\n  return ConfigReader.fromConfigs(sanitizedConfigs).get();\n}\n"],"names":["loadCliConfig","stringifyYaml","ConfigReader"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA,YAAe,OAAO,IAAI,KAAK;AAC/B,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAMA,oBAAa,CAAC;AACrD,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM;AACrB,IAAI,WAAW,EAAE,IAAI,CAAC,OAAO;AAC7B,IAAI,OAAO,EAAE,IAAI,CAAC,GAAG;AACrB,IAAI,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ;AAClC,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC/C,EAAE,MAAM,IAAI,GAAG,mBAAmB,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;AACnE,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAC9B,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC;AACH,GAAG,MAAM;AACT,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAEC,cAAa,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC;AACH,GAAG;AACH,CAAC,CAAC;AACF,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AACzC,IAAI,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;AACzE,GAAG;AACH,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AACrB,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC/B,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG;AACH,EAAE,OAAO,SAAS,CAAC;AACnB,CAAC;AACD,SAAS,mBAAmB,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE;AAC7D,EAAE,IAAI,UAAU,KAAK,UAAU,EAAE;AACjC,IAAI,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE;AACvD,MAAM,UAAU,EAAE,CAAC,UAAU,CAAC;AAC9B,KAAK,CAAC,CAAC;AACP,IAAI,OAAOC,qBAAY,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3D,GAAG,MAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;AACtC,IAAI,OAAOA,qBAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;AACtD,GAAG;AACH,EAAE,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE;AACtD,IAAI,cAAc,EAAE,CAAC,KAAK,EAAE,OAAO,KAAK,OAAO,CAAC,UAAU,KAAK,QAAQ,GAAG,UAAU,GAAG,KAAK;AAC5F,GAAG,CAAC,CAAC;AACL,EAAE,OAAOA,qBAAY,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,GAAG,EAAE,CAAC;AAC1D;;;;"}