{"version":3,"file":"index.cjs.js","sources":["../src/lib/env.ts","../src/lib/transform/utils.ts","../src/lib/transform/apply.ts","../src/lib/transform/include.ts","../src/lib/transform/substitution.ts","../src/lib/schema/types.ts","../src/lib/schema/compile.ts","../src/lib/schema/collect.ts","../src/lib/schema/filtering.ts","../src/lib/schema/load.ts","../src/lib/urls.ts","../src/loader.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\nimport { assertError } from '@backstage/errors';\n\nconst ENV_PREFIX = 'APP_CONFIG_';\n\n// Update the same pattern in config package if this is changed\nconst CONFIG_KEY_PART_PATTERN = /^[a-z][a-z0-9]*(?:[-_][a-z][a-z0-9]*)*$/i;\n\n/**\n * Read runtime configuration from the environment.\n *\n * Only environment variables prefixed with APP_CONFIG_ will be considered.\n *\n * For each variable, the prefix will be removed, and rest of the key will\n * be split by '_'. Each part will then be used as keys to build up a nested\n * config object structure. The treatment of the entire environment variable\n * is case-sensitive.\n *\n * The value of the variable should be JSON serialized, as it will be parsed\n * and the type will be kept intact. For example \"true\" and true are treated\n * differently, as well as \"42\" and 42.\n *\n * For example, to set the config app.title to \"My Title\", use the following:\n *\n * APP_CONFIG_app_title='\"My Title\"'\n *\n * @public\n */\nexport function readEnvConfig(env: {\n  [name: string]: string | undefined;\n}): AppConfig[] {\n  let data: JsonObject | undefined = undefined;\n\n  for (const [name, value] of Object.entries(env)) {\n    if (!value) {\n      continue;\n    }\n    if (name.startsWith(ENV_PREFIX)) {\n      const key = name.replace(ENV_PREFIX, '');\n      const keyParts = key.split('_');\n\n      let obj = (data = data ?? {});\n      for (const [index, part] of keyParts.entries()) {\n        if (!CONFIG_KEY_PART_PATTERN.test(part)) {\n          throw new TypeError(`Invalid env config key '${key}'`);\n        }\n        if (index < keyParts.length - 1) {\n          obj = (obj[part] = obj[part] ?? {}) as JsonObject;\n          if (typeof obj !== 'object' || Array.isArray(obj)) {\n            const subKey = keyParts.slice(0, index + 1).join('_');\n            throw new TypeError(\n              `Could not nest config for key '${key}' under existing value '${subKey}'`,\n            );\n          }\n        } else {\n          if (part in obj) {\n            throw new TypeError(\n              `Refusing to override existing config at key '${key}'`,\n            );\n          }\n          try {\n            const [, parsedValue] = safeJsonParse(value);\n            if (parsedValue === null) {\n              throw new Error('value may not be null');\n            }\n            obj[part] = parsedValue;\n          } catch (error) {\n            throw new TypeError(\n              `Failed to parse JSON-serialized config value for key '${key}', ${error}`,\n            );\n          }\n        }\n      }\n    }\n  }\n\n  return data ? [{ data, context: 'env' }] : [];\n}\n\nfunction safeJsonParse(str: string): [Error | null, any] {\n  try {\n    return [null, JSON.parse(str)];\n  } catch (err) {\n    assertError(err);\n    return [err, str];\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue, JsonObject } from '@backstage/types';\n\nexport function isObject(obj: JsonValue | undefined): obj is JsonObject {\n  if (typeof obj !== 'object') {\n    return false;\n  } else if (Array.isArray(obj)) {\n    return false;\n  }\n  return obj !== null;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { assertError } from '@backstage/errors';\nimport { TransformFunc } from './types';\nimport { isObject } from './utils';\n\n/**\n * Applies a set of transforms to raw configuration data.\n */\nexport async function applyConfigTransforms(\n  initialDir: string,\n  input: JsonValue,\n  transforms: TransformFunc[],\n): Promise<JsonObject> {\n  async function transform(\n    inputObj: JsonValue,\n    path: string,\n    baseDir: string,\n  ): Promise<JsonValue | undefined> {\n    let obj = inputObj;\n    let dir = baseDir;\n\n    for (const tf of transforms) {\n      try {\n        const result = await tf(inputObj, baseDir);\n        if (result.applied) {\n          if (result.value === undefined) {\n            return undefined;\n          }\n          obj = result.value;\n          dir = result.newBaseDir ?? dir;\n          break;\n        }\n      } catch (error) {\n        assertError(error);\n        throw new Error(`error at ${path}, ${error.message}`);\n      }\n    }\n\n    if (typeof obj !== 'object') {\n      return obj;\n    } else if (obj === null) {\n      return undefined;\n    } else if (Array.isArray(obj)) {\n      const arr = new Array<JsonValue>();\n\n      for (const [index, value] of obj.entries()) {\n        const out = await transform(value, `${path}[${index}]`, dir);\n        if (out !== undefined) {\n          arr.push(out);\n        }\n      }\n\n      return arr;\n    }\n\n    const out: JsonObject = {};\n\n    for (const [key, value] of Object.entries(obj)) {\n      // undefined covers optional fields\n      if (value !== undefined) {\n        const result = await transform(value, `${path}.${key}`, dir);\n        if (result !== undefined) {\n          out[key] = result;\n        }\n      }\n    }\n\n    return out;\n  }\n\n  const finalData = await transform(input, '', initialDir);\n  if (!isObject(finalData)) {\n    throw new TypeError('expected object at config root');\n  }\n  return finalData;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport yaml from 'yaml';\nimport { extname, dirname, resolve as resolvePath } from 'path';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport { isObject } from './utils';\nimport { TransformFunc, EnvFunc, ReadFileFunc } from './types';\n\n// Parsers for each type of included file\nconst includeFileParser: {\n  [ext in string]: (content: string) => Promise<JsonObject>;\n} = {\n  '.json': async content => JSON.parse(content),\n  '.yaml': async content => yaml.parse(content),\n  '.yml': async content => yaml.parse(content),\n};\n\n/**\n * Transforms a include description into the actual included value.\n */\nexport function createIncludeTransform(\n  env: EnvFunc,\n  readFile: ReadFileFunc,\n  substitute: TransformFunc,\n): TransformFunc {\n  return async (input: JsonValue, baseDir: string) => {\n    if (!isObject(input)) {\n      return { applied: false };\n    }\n    // Check if there's any key that starts with a '$', in that case we treat\n    // this entire object as an include description.\n    const [includeKey] = Object.keys(input).filter(key => key.startsWith('$'));\n    if (includeKey) {\n      if (Object.keys(input).length !== 1) {\n        throw new Error(\n          `include key ${includeKey} should not have adjacent keys`,\n        );\n      }\n    } else {\n      return { applied: false };\n    }\n\n    const rawIncludedValue = input[includeKey];\n    if (typeof rawIncludedValue !== 'string') {\n      throw new Error(`${includeKey} include value is not a string`);\n    }\n\n    const substituteResults = await substitute(rawIncludedValue, baseDir);\n    const includeValue = substituteResults.applied\n      ? substituteResults.value\n      : rawIncludedValue;\n\n    // The second string check is needed for Typescript to know this is a string.\n    if (includeValue === undefined || typeof includeValue !== 'string') {\n      throw new Error(`${includeKey} substitution value was undefined`);\n    }\n\n    switch (includeKey) {\n      case '$file':\n        try {\n          const value = await readFile(resolvePath(baseDir, includeValue));\n          return { applied: true, value };\n        } catch (error) {\n          throw new Error(`failed to read file ${includeValue}, ${error}`);\n        }\n      case '$env':\n        try {\n          return { applied: true, value: await env(includeValue) };\n        } catch (error) {\n          throw new Error(`failed to read env ${includeValue}, ${error}`);\n        }\n\n      case '$include': {\n        const [filePath, dataPath] = includeValue.split(/#(.*)/);\n\n        const ext = extname(filePath);\n        const parser = includeFileParser[ext];\n        if (!parser) {\n          throw new Error(\n            `no configuration parser available for included file ${filePath}`,\n          );\n        }\n\n        const path = resolvePath(baseDir, filePath);\n        const content = await readFile(path);\n        const newBaseDir = dirname(path);\n\n        const parts = dataPath ? dataPath.split('.') : [];\n\n        let value: JsonValue | undefined;\n        try {\n          value = await parser(content);\n        } catch (error) {\n          throw new Error(\n            `failed to parse included file ${filePath}, ${error}`,\n          );\n        }\n\n        // This bit handles selecting a subtree in the included file, if a path was provided after a #\n        for (const [index, part] of parts.entries()) {\n          if (!isObject(value)) {\n            const errPath = parts.slice(0, index).join('.');\n            throw new Error(\n              `value at '${errPath}' in included file ${filePath} is not an object`,\n            );\n          }\n          value = value[part];\n        }\n\n        return {\n          applied: true,\n          value,\n          newBaseDir: newBaseDir !== baseDir ? newBaseDir : undefined,\n        };\n      }\n\n      default:\n        throw new Error(`unknown include ${includeKey}`);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue } from '@backstage/types';\nimport { TransformFunc, EnvFunc } from './types';\n\n/**\n * A environment variable substitution transform that transforms e.g. 'token ${MY_TOKEN}'\n * to 'token abc' if MY_TOKEN is 'abc'. If any of the substituted variables are undefined,\n * the entire expression ends up undefined.\n */\nexport function createSubstitutionTransform(env: EnvFunc): TransformFunc {\n  return async (input: JsonValue) => {\n    if (typeof input !== 'string') {\n      return { applied: false };\n    }\n\n    const parts: (string | undefined)[] = input.split(/(\\$?\\$\\{[^{}]*\\})/);\n    for (let i = 1; i < parts.length; i += 2) {\n      const part = parts[i]!;\n      if (part.startsWith('$$')) {\n        parts[i] = part.slice(1);\n      } else {\n        parts[i] = await env(part.slice(2, -1).trim());\n      }\n    }\n\n    if (parts.some(part => part === undefined)) {\n      return { applied: true, value: undefined };\n    }\n    return { applied: true, value: parts.join('') };\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\n\n/**\n * An sub-set of configuration schema.\n */\nexport type ConfigSchemaPackageEntry = {\n  /**\n   * The configuration schema itself.\n   */\n  value: JsonObject;\n  /**\n   * The relative path that the configuration schema was discovered at.\n   */\n  path: string;\n};\n\n/**\n * A list of all possible configuration value visibilities.\n */\nexport const CONFIG_VISIBILITIES = ['frontend', 'backend', 'secret'] as const;\n\n/**\n * A type representing the possible configuration value visibilities\n *\n * @public\n */\nexport type ConfigVisibility = 'frontend' | 'backend' | 'secret';\n\n/**\n * The default configuration visibility if no other values is given.\n */\nexport const DEFAULT_CONFIG_VISIBILITY: ConfigVisibility = 'backend';\n\n/**\n * An explanation of a configuration validation error.\n */\nexport type ValidationError = {\n  keyword: string;\n  instancePath: string;\n  schemaPath: string;\n  params: Record<string, any>;\n  propertyName?: string;\n  message?: string;\n};\n\n/**\n * The result of validating configuration data using a schema.\n */\ntype ValidationResult = {\n  /**\n   * Errors that where emitted during validation, if any.\n   */\n  errors?: ValidationError[];\n  /**\n   * The configuration visibilities that were discovered during validation.\n   *\n   * The path in the key uses the form `/<key>/<sub-key>/<array-index>/<leaf-key>`\n   */\n  visibilityByDataPath: Map<string, ConfigVisibility>;\n\n  /**\n   * The configuration visibilities that were discovered during validation.\n   *\n   * The path in the key uses the form `/properties/<key>/items/additionalProperties/<leaf-key>`\n   */\n  visibilityBySchemaPath: Map<string, ConfigVisibility>;\n\n  /**\n   * The deprecated options that were discovered during validation.\n   *\n   * The path in the key uses the form `/<key>/<sub-key>/<array-index>/<leaf-key>`\n   */\n  deprecationByDataPath: Map<string, string>;\n};\n\n/**\n * A function used validate configuration data.\n */\nexport type ValidationFunc = (configs: AppConfig[]) => ValidationResult;\n\n/**\n * A function used to transform primitive configuration values.\n *\n * @public\n */\nexport type TransformFunc<T extends number | string | boolean> = (\n  value: T,\n  context: { visibility: ConfigVisibility },\n) => T | undefined;\n\n/**\n * Options used to process configuration data with a schema.\n *\n * @public\n */\nexport type ConfigSchemaProcessingOptions = {\n  /**\n   * The visibilities that should be included in the output data.\n   * If omitted, the data will not be filtered by visibility.\n   */\n  visibility?: ConfigVisibility[];\n\n  /**\n   * When set to `true`, any schema errors in the provided configuration will be ignored.\n   */\n  ignoreSchemaErrors?: boolean;\n\n  /**\n   * A transform function that can be used to transform primitive configuration values\n   * during validation. The value returned from the transform function will be used\n   * instead of the original value. If the transform returns `undefined`, the value\n   * will be omitted.\n   */\n  valueTransform?: TransformFunc<any>;\n\n  /**\n   * Whether or not to include the `filteredKeys` property in the output `AppConfig`s.\n   *\n   * Default: `false`.\n   */\n  withFilteredKeys?: boolean;\n\n  /**\n   * Whether or not to include the `deprecatedKeys` property in the output `AppConfig`s.\n   *\n   * Default: `true`.\n   */\n  withDeprecatedKeys?: boolean;\n};\n\n/**\n * A loaded configuration schema that is ready to process configuration data.\n *\n * @public\n */\nexport type ConfigSchema = {\n  process(\n    appConfigs: AppConfig[],\n    options?: ConfigSchemaProcessingOptions,\n  ): AppConfig[];\n\n  serialize(): JsonObject;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv from 'ajv';\nimport { JSONSchema7 as JSONSchema } from 'json-schema';\nimport mergeAllOf, { Resolvers } from 'json-schema-merge-allof';\nimport traverse from 'json-schema-traverse';\nimport { ConfigReader } from '@backstage/config';\nimport {\n  ConfigSchemaPackageEntry,\n  ValidationFunc,\n  CONFIG_VISIBILITIES,\n  ConfigVisibility,\n} from './types';\n\n/**\n * This takes a collection of Backstage configuration schemas from various\n * sources and compiles them down into a single schema validation function.\n *\n * It also handles the implementation of the custom \"visibility\" keyword used\n * to specify the scope of different config paths.\n */\nexport function compileConfigSchemas(\n  schemas: ConfigSchemaPackageEntry[],\n): ValidationFunc {\n  // The ajv instance below is stateful and doesn't really allow for additional\n  // output during validation. We work around this by having this extra piece\n  // of state that we reset before each validation.\n  const visibilityByDataPath = new Map<string, ConfigVisibility>();\n  const deprecationByDataPath = new Map<string, string>();\n\n  const ajv = new Ajv({\n    allErrors: true,\n    allowUnionTypes: true,\n    schemas: {\n      'https://backstage.io/schema/config-v1': true,\n    },\n  })\n    .addKeyword({\n      keyword: 'visibility',\n      metaSchema: {\n        type: 'string',\n        enum: CONFIG_VISIBILITIES,\n      },\n      compile(visibility: ConfigVisibility) {\n        return (_data, context) => {\n          if (context?.instancePath === undefined) {\n            return false;\n          }\n          if (visibility && visibility !== 'backend') {\n            const normalizedPath = context.instancePath.replace(\n              /\\['?(.*?)'?\\]/g,\n              (_, segment) => `/${segment}`,\n            );\n            visibilityByDataPath.set(normalizedPath, visibility);\n          }\n          return true;\n        };\n      },\n    })\n    .removeKeyword('deprecated') // remove `deprecated` keyword so that we can implement our own compiler\n    .addKeyword({\n      keyword: 'deprecated',\n      metaSchema: { type: 'string' },\n      compile(deprecationDescription: string) {\n        return (_data, context) => {\n          if (context?.instancePath === undefined) {\n            return false;\n          }\n          const normalizedPath = context.instancePath.replace(\n            /\\['?(.*?)'?\\]/g,\n            (_, segment) => `/${segment}`,\n          );\n          // create mapping of deprecation description and data path of property\n          deprecationByDataPath.set(normalizedPath, deprecationDescription);\n          return true;\n        };\n      },\n    });\n\n  for (const schema of schemas) {\n    try {\n      ajv.compile(schema.value);\n    } catch (error) {\n      throw new Error(`Schema at ${schema.path} is invalid, ${error}`);\n    }\n  }\n\n  const merged = mergeConfigSchemas(schemas.map(_ => _.value));\n\n  const validate = ajv.compile(merged);\n\n  const visibilityBySchemaPath = new Map<string, ConfigVisibility>();\n  traverse(merged, (schema, path) => {\n    if (schema.visibility && schema.visibility !== 'backend') {\n      visibilityBySchemaPath.set(path, schema.visibility);\n    }\n  });\n\n  return configs => {\n    const config = ConfigReader.fromConfigs(configs).get();\n\n    visibilityByDataPath.clear();\n\n    const valid = validate(config);\n\n    if (!valid) {\n      return {\n        errors: validate.errors ?? [],\n        visibilityByDataPath: new Map(visibilityByDataPath),\n        visibilityBySchemaPath,\n        deprecationByDataPath,\n      };\n    }\n\n    return {\n      visibilityByDataPath: new Map(visibilityByDataPath),\n      visibilityBySchemaPath,\n      deprecationByDataPath,\n    };\n  };\n}\n\n/**\n * Given a list of configuration schemas from packages, merge them\n * into a single json schema.\n *\n * @public\n */\nexport function mergeConfigSchemas(schemas: JSONSchema[]): JSONSchema {\n  const merged = mergeAllOf(\n    { allOf: schemas },\n    {\n      // JSONSchema is typically subtractive, as in it always reduces the set of allowed\n      // inputs through constraints. This changes the object property merging to be additive\n      // rather than subtractive.\n      ignoreAdditionalProperties: true,\n      resolvers: {\n        // This ensures that the visibilities across different schemas are sound, and\n        // selects the most specific visibility for each path.\n        visibility(values: string[], path: string[]) {\n          const hasFrontend = values.some(_ => _ === 'frontend');\n          const hasSecret = values.some(_ => _ === 'secret');\n          if (hasFrontend && hasSecret) {\n            throw new Error(\n              `Config schema visibility is both 'frontend' and 'secret' for ${path.join(\n                '/',\n              )}`,\n            );\n          } else if (hasFrontend) {\n            return 'frontend';\n          } else if (hasSecret) {\n            return 'secret';\n          }\n\n          return 'backend';\n        },\n      } as Partial<Resolvers<JSONSchema>>,\n    },\n  );\n  return merged;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport {\n  resolve as resolvePath,\n  relative as relativePath,\n  dirname,\n  sep,\n} from 'path';\nimport { ConfigSchemaPackageEntry } from './types';\nimport { JsonObject } from '@backstage/types';\nimport { assertError } from '@backstage/errors';\n\ntype Item = {\n  name?: string;\n  parentPath?: string;\n  packagePath?: string;\n};\n\nconst req =\n  typeof __non_webpack_require__ === 'undefined'\n    ? require\n    : __non_webpack_require__;\n\n/**\n * This collects all known config schemas across all dependencies of the app.\n */\nexport async function collectConfigSchemas(\n  packageNames: string[],\n  packagePaths: string[],\n): Promise<ConfigSchemaPackageEntry[]> {\n  const schemas = new Array<ConfigSchemaPackageEntry>();\n  const tsSchemaPaths = new Array<string>();\n  const visitedPackageVersions = new Map<string, Set<string>>(); // pkgName: [versions...]\n\n  const currentDir = await fs.realpath(process.cwd());\n\n  async function processItem(item: Item) {\n    let pkgPath = item.packagePath;\n\n    if (pkgPath) {\n      const pkgExists = await fs.pathExists(pkgPath);\n      if (!pkgExists) {\n        return;\n      }\n    } else if (item.name) {\n      const { name, parentPath } = item;\n\n      try {\n        pkgPath = req.resolve(\n          `${name}/package.json`,\n          parentPath && {\n            paths: [parentPath],\n          },\n        );\n      } catch {\n        // We can somewhat safely ignore packages that don't export package.json,\n        // as they are likely not part of the Backstage ecosystem anyway.\n      }\n    }\n    if (!pkgPath) {\n      return;\n    }\n\n    const pkg = await fs.readJson(pkgPath);\n\n    // Ensures that we only process the same version of each package once.\n    let versions = visitedPackageVersions.get(pkg.name);\n    if (versions?.has(pkg.version)) {\n      return;\n    }\n    if (!versions) {\n      versions = new Set();\n      visitedPackageVersions.set(pkg.name, versions);\n    }\n    versions.add(pkg.version);\n\n    const depNames = [\n      ...Object.keys(pkg.dependencies ?? {}),\n      ...Object.keys(pkg.devDependencies ?? {}),\n      ...Object.keys(pkg.optionalDependencies ?? {}),\n      ...Object.keys(pkg.peerDependencies ?? {}),\n    ];\n\n    // TODO(Rugvip): Trying this out to avoid having to traverse the full dependency graph,\n    //               since that's pretty slow. We probably need a better way to determine when\n    //               we've left the Backstage ecosystem, but this will do for now.\n    const hasSchema = 'configSchema' in pkg;\n    const hasBackstageDep = depNames.some(_ => _.startsWith('@backstage/'));\n    if (!hasSchema && !hasBackstageDep) {\n      return;\n    }\n    if (hasSchema) {\n      if (typeof pkg.configSchema === 'string') {\n        const isJson = pkg.configSchema.endsWith('.json');\n        const isDts = pkg.configSchema.endsWith('.d.ts');\n        if (!isJson && !isDts) {\n          throw new Error(\n            `Config schema files must be .json or .d.ts, got ${pkg.configSchema}`,\n          );\n        }\n        if (isDts) {\n          tsSchemaPaths.push(\n            relativePath(\n              currentDir,\n              resolvePath(dirname(pkgPath), pkg.configSchema),\n            ),\n          );\n        } else {\n          const path = resolvePath(dirname(pkgPath), pkg.configSchema);\n          const value = await fs.readJson(path);\n          schemas.push({\n            value,\n            path: relativePath(currentDir, path),\n          });\n        }\n      } else {\n        schemas.push({\n          value: pkg.configSchema,\n          path: relativePath(currentDir, pkgPath),\n        });\n      }\n    }\n\n    await Promise.all(\n      depNames.map(depName =>\n        processItem({ name: depName, parentPath: pkgPath }),\n      ),\n    );\n  }\n\n  await Promise.all([\n    ...packageNames.map(name => processItem({ name, parentPath: currentDir })),\n    ...packagePaths.map(path => processItem({ name: path, packagePath: path })),\n  ]);\n\n  const tsSchemas = await compileTsSchemas(tsSchemaPaths);\n\n  return schemas.concat(tsSchemas);\n}\n\n// This handles the support of TypeScript .d.ts config schema declarations.\n// We collect all typescript schema definition and compile them all in one go.\n// This is much faster than compiling them separately.\nasync function compileTsSchemas(paths: string[]) {\n  if (paths.length === 0) {\n    return [];\n  }\n\n  // Lazy loaded, because this brings up all of TypeScript and we don't\n  // want that eagerly loaded in tests\n  const { getProgramFromFiles, generateSchema } = await import(\n    'typescript-json-schema'\n  );\n\n  const program = getProgramFromFiles(paths, {\n    incremental: false,\n    isolatedModules: true,\n    lib: ['ES5'], // Skipping most libs speeds processing up a lot, we just need the primitive types anyway\n    noEmit: true,\n    noResolve: true,\n    skipLibCheck: true, // Skipping lib checks speeds things up\n    skipDefaultLibCheck: true,\n    strict: true,\n    typeRoots: [], // Do not include any additional types\n    types: [],\n  });\n\n  const tsSchemas = paths.map(path => {\n    let value;\n    try {\n      value = generateSchema(\n        program,\n        // All schemas should export a `Config` symbol\n        'Config',\n        // This enables the use of these tags in TSDoc comments\n        {\n          required: true,\n          validationKeywords: ['visibility', 'deprecated'],\n        },\n        [path.split(sep).join('/')], // Unix paths are expected for all OSes here\n      ) as JsonObject | null;\n    } catch (error) {\n      assertError(error);\n      if (error.message !== 'type Config not found') {\n        throw error;\n      }\n    }\n\n    if (!value) {\n      throw new Error(`Invalid schema in ${path}, missing Config export`);\n    }\n    return { path, value };\n  });\n\n  return tsSchemas;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  ConfigVisibility,\n  DEFAULT_CONFIG_VISIBILITY,\n  TransformFunc,\n  ValidationError,\n} from './types';\n\n/**\n * This filters data by visibility by discovering the visibility of each\n * value, and then only keeping the ones that are specified in `includeVisibilities`.\n */\nexport function filterByVisibility(\n  data: JsonObject,\n  includeVisibilities: ConfigVisibility[],\n  visibilityByDataPath: Map<string, ConfigVisibility>,\n  deprecationByDataPath: Map<string, string>,\n  transformFunc?: TransformFunc<number | string | boolean>,\n  withFilteredKeys?: boolean,\n  withDeprecatedKeys?: boolean,\n): {\n  data: JsonObject;\n  filteredKeys?: string[];\n  deprecatedKeys?: { key: string; description: string }[];\n} {\n  const filteredKeys = new Array<string>();\n  const deprecatedKeys = new Array<{ key: string; description: string }>();\n\n  function transform(\n    jsonVal: JsonValue,\n    visibilityPath: string, // Matches the format we get from ajv\n    filterPath: string, // Matches the format of the ConfigReader\n  ): JsonValue | undefined {\n    const visibility =\n      visibilityByDataPath.get(visibilityPath) ?? DEFAULT_CONFIG_VISIBILITY;\n    const isVisible = includeVisibilities.includes(visibility);\n\n    // deprecated keys are added regardless of visibility indicator\n    const deprecation = deprecationByDataPath.get(visibilityPath);\n    if (deprecation) {\n      deprecatedKeys.push({ key: filterPath, description: deprecation });\n    }\n\n    if (typeof jsonVal !== 'object') {\n      if (isVisible) {\n        if (transformFunc) {\n          return transformFunc(jsonVal, { visibility });\n        }\n        return jsonVal;\n      }\n      if (withFilteredKeys) {\n        filteredKeys.push(filterPath);\n      }\n      return undefined;\n    } else if (jsonVal === null) {\n      return undefined;\n    } else if (Array.isArray(jsonVal)) {\n      const arr = new Array<JsonValue>();\n\n      for (const [index, value] of jsonVal.entries()) {\n        let path = visibilityPath;\n        const hasVisibilityInIndex = visibilityByDataPath.get(\n          `${visibilityPath}/${index}`,\n        );\n\n        if (hasVisibilityInIndex || typeof value === 'object') {\n          path = `${visibilityPath}/${index}`;\n        }\n\n        const out = transform(value, path, `${filterPath}[${index}]`);\n\n        if (out !== undefined) {\n          arr.push(out);\n        }\n      }\n\n      if (arr.length > 0 || isVisible) {\n        return arr;\n      }\n      return undefined;\n    }\n\n    const outObj: JsonObject = {};\n    let hasOutput = false;\n\n    for (const [key, value] of Object.entries(jsonVal)) {\n      if (value === undefined) {\n        continue;\n      }\n      const out = transform(\n        value,\n        `${visibilityPath}/${key}`,\n        filterPath ? `${filterPath}.${key}` : key,\n      );\n      if (out !== undefined) {\n        outObj[key] = out;\n        hasOutput = true;\n      }\n    }\n\n    if (hasOutput || isVisible) {\n      return outObj;\n    }\n    return undefined;\n  }\n\n  return {\n    filteredKeys: withFilteredKeys ? filteredKeys : undefined,\n    deprecatedKeys: withDeprecatedKeys ? deprecatedKeys : undefined,\n    data: (transform(data, '', '') as JsonObject) ?? {},\n  };\n}\n\nexport function filterErrorsByVisibility(\n  errors: ValidationError[] | undefined,\n  includeVisibilities: ConfigVisibility[] | undefined,\n  visibilityByDataPath: Map<string, ConfigVisibility>,\n  visibilityBySchemaPath: Map<string, ConfigVisibility>,\n): ValidationError[] {\n  if (!errors) {\n    return [];\n  }\n  if (!includeVisibilities) {\n    return errors;\n  }\n\n  const visibleSchemaPaths = Array.from(visibilityBySchemaPath)\n    .filter(([, v]) => includeVisibilities.includes(v))\n    .map(([k]) => k);\n\n  // If we're filtering by visibility we only care about the errors that happened\n  // in a visible path.\n  return errors.filter(error => {\n    // We always include structural errors as we don't know whether there are\n    // any visible paths within the structures.\n    if (\n      error.keyword === 'type' &&\n      ['object', 'array'].includes(error.params.type)\n    ) {\n      return true;\n    }\n\n    // For fields that were required we use the schema path to determine whether\n    // it was visible in addition to the data path. This is because the data path\n    // visibilities are only populated for values that we reached, which we won't\n    // if the value is missing.\n    // We don't use this method for all the errors as the data path is more robust\n    // and doesn't require us to properly trim the schema path.\n    if (error.keyword === 'required') {\n      const trimmedPath = error.schemaPath.slice(1, -'/required'.length);\n      const fullPath = `${trimmedPath}/properties/${error.params.missingProperty}`;\n      if (\n        visibleSchemaPaths.some(visiblePath => visiblePath.startsWith(fullPath))\n      ) {\n        return true;\n      }\n    }\n\n    const vis =\n      visibilityByDataPath.get(error.instancePath) ?? DEFAULT_CONFIG_VISIBILITY;\n    return vis && includeVisibilities.includes(vis);\n  });\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '@backstage/config';\nimport { JsonObject } from '@backstage/types';\nimport { compileConfigSchemas } from './compile';\nimport { collectConfigSchemas } from './collect';\nimport { filterByVisibility, filterErrorsByVisibility } from './filtering';\nimport {\n  ValidationError,\n  ConfigSchema,\n  ConfigSchemaPackageEntry,\n  CONFIG_VISIBILITIES,\n} from './types';\n\n/**\n * Options that control the loading of configuration schema files in the backend.\n *\n * @public\n */\nexport type LoadConfigSchemaOptions =\n  | {\n      dependencies: string[];\n      packagePaths?: string[];\n    }\n  | {\n      serialized: JsonObject;\n    };\n\nfunction errorsToError(errors: ValidationError[]): Error {\n  const messages = errors.map(({ instancePath, message, params }) => {\n    const paramStr = Object.entries(params)\n      .map(([name, value]) => `${name}=${value}`)\n      .join(' ');\n    return `Config ${message || ''} { ${paramStr} } at ${instancePath}`;\n  });\n  const error = new Error(`Config validation failed, ${messages.join('; ')}`);\n  (error as any).messages = messages;\n  return error;\n}\n\n/**\n * Loads config schema for a Backstage instance.\n *\n * @public\n */\nexport async function loadConfigSchema(\n  options: LoadConfigSchemaOptions,\n): Promise<ConfigSchema> {\n  let schemas: ConfigSchemaPackageEntry[];\n\n  if ('dependencies' in options) {\n    schemas = await collectConfigSchemas(\n      options.dependencies,\n      options.packagePaths ?? [],\n    );\n  } else {\n    const { serialized } = options;\n    if (serialized?.backstageConfigSchemaVersion !== 1) {\n      throw new Error(\n        'Serialized configuration schema is invalid or has an invalid version number',\n      );\n    }\n    schemas = serialized.schemas as ConfigSchemaPackageEntry[];\n  }\n\n  const validate = compileConfigSchemas(schemas);\n\n  return {\n    process(\n      configs: AppConfig[],\n      {\n        visibility,\n        valueTransform,\n        withFilteredKeys,\n        withDeprecatedKeys,\n        ignoreSchemaErrors,\n      } = {},\n    ): AppConfig[] {\n      const result = validate(configs);\n\n      if (!ignoreSchemaErrors) {\n        const visibleErrors = filterErrorsByVisibility(\n          result.errors,\n          visibility,\n          result.visibilityByDataPath,\n          result.visibilityBySchemaPath,\n        );\n        if (visibleErrors.length > 0) {\n          throw errorsToError(visibleErrors);\n        }\n      }\n\n      let processedConfigs = configs;\n\n      if (visibility) {\n        processedConfigs = processedConfigs.map(({ data, context }) => ({\n          context,\n          ...filterByVisibility(\n            data,\n            visibility,\n            result.visibilityByDataPath,\n            result.deprecationByDataPath,\n            valueTransform,\n            withFilteredKeys,\n            withDeprecatedKeys,\n          ),\n        }));\n      } else if (valueTransform) {\n        processedConfigs = processedConfigs.map(({ data, context }) => ({\n          context,\n          ...filterByVisibility(\n            data,\n            Array.from(CONFIG_VISIBILITIES),\n            result.visibilityByDataPath,\n            result.deprecationByDataPath,\n            valueTransform,\n            withFilteredKeys,\n            withDeprecatedKeys,\n          ),\n        }));\n      }\n\n      return processedConfigs;\n    },\n    serialize(): JsonObject {\n      return {\n        schemas,\n        backstageConfigSchemaVersion: 1,\n      };\n    },\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport yaml from 'yaml';\nimport chokidar from 'chokidar';\nimport { basename, dirname, isAbsolute, resolve as resolvePath } from 'path';\nimport { AppConfig } from '@backstage/config';\nimport { ForwardedError } from '@backstage/errors';\nimport {\n  applyConfigTransforms,\n  createIncludeTransform,\n  createSubstitutionTransform,\n  isValidUrl,\n  readEnvConfig,\n} from './lib';\nimport fetch from 'node-fetch';\n\n/** @public */\nexport type ConfigTarget = { path: string } | { url: string };\n\n/** @public */\nexport type LoadConfigOptionsWatch = {\n  /**\n   * A listener that is called when a config file is changed.\n   */\n  onChange: (configs: AppConfig[]) => void;\n\n  /**\n   * An optional signal that stops the watcher once the promise resolves.\n   */\n  stopSignal?: Promise<void>;\n};\n\n/** @public */\nexport type LoadConfigOptionsRemote = {\n  /**\n   * A remote config reloading period, in seconds\n   */\n  reloadIntervalSeconds: number;\n};\n\n/**\n * Options that control the loading of configuration files in the backend.\n *\n * @public\n */\nexport type LoadConfigOptions = {\n  // The root directory of the config loading context. Used to find default configs.\n  configRoot: string;\n\n  // Paths to load config files from. Configs from earlier paths have lower priority.\n  configTargets: ConfigTarget[];\n\n  /**\n   * Custom environment variable loading function\n   *\n   * @experimental This API is not stable and may change at any point\n   */\n  experimentalEnvFunc?: (name: string) => Promise<string | undefined>;\n\n  /**\n   * An optional remote config\n   */\n  remote?: LoadConfigOptionsRemote;\n\n  /**\n   * An optional configuration that enables watching of config files.\n   */\n  watch?: LoadConfigOptionsWatch;\n};\n\n/**\n * Results of loading configuration files.\n * @public\n */\nexport type LoadConfigResult = {\n  /**\n   * Array of all loaded configs.\n   */\n  appConfigs: AppConfig[];\n};\n\n/**\n * Load configuration data.\n *\n * @public\n */\nexport async function loadConfig(\n  options: LoadConfigOptions,\n): Promise<LoadConfigResult> {\n  const { configRoot, experimentalEnvFunc: envFunc, watch, remote } = options;\n\n  const configPaths: string[] = options.configTargets\n    .slice()\n    .filter((e): e is { path: string } => e.hasOwnProperty('path'))\n    .map(configTarget => configTarget.path);\n\n  const configUrls: string[] = options.configTargets\n    .slice()\n    .filter((e): e is { url: string } => e.hasOwnProperty('url'))\n    .map(configTarget => configTarget.url);\n\n  if (remote === undefined) {\n    if (configUrls.length > 0) {\n      throw new Error(\n        `Please make sure you are passing the remote option when loading remote configurations. See https://backstage.io/docs/conf/writing#configuration-files for detailed info.`,\n      );\n    }\n  } else if (remote.reloadIntervalSeconds <= 0) {\n    throw new Error(\n      `Remote config must be contain a non zero reloadIntervalSeconds: <seconds> value`,\n    );\n  }\n\n  // If no paths are provided, we default to reading\n  // `app-config.yaml` and, if it exists, `app-config.local.yaml`\n  if (configPaths.length === 0 && configUrls.length === 0) {\n    configPaths.push(resolvePath(configRoot, 'app-config.yaml'));\n\n    const localConfig = resolvePath(configRoot, 'app-config.local.yaml');\n    if (await fs.pathExists(localConfig)) {\n      configPaths.push(localConfig);\n    }\n  }\n\n  const env = envFunc ?? (async (name: string) => process.env[name]);\n\n  const loadConfigFiles = async () => {\n    const fileConfigs = [];\n    const loadedPaths = new Set<string>();\n\n    for (const configPath of configPaths) {\n      if (!isAbsolute(configPath)) {\n        throw new Error(`Config load path is not absolute: '${configPath}'`);\n      }\n\n      const dir = dirname(configPath);\n      const readFile = (path: string) => {\n        const fullPath = resolvePath(dir, path);\n        // if we read a file when building configuration,\n        // we should include that file when watching for\n        // changes, too.\n        loadedPaths.add(fullPath);\n\n        return fs.readFile(fullPath, 'utf8');\n      };\n\n      const input = yaml.parse(await readFile(configPath));\n\n      // A completely empty file ends up as a null return value\n      if (input !== null) {\n        const substitutionTransform = createSubstitutionTransform(env);\n        const data = await applyConfigTransforms(dir, input, [\n          createIncludeTransform(env, readFile, substitutionTransform),\n          substitutionTransform,\n        ]);\n\n        fileConfigs.push({ data, context: basename(configPath) });\n      }\n    }\n\n    return { fileConfigs, loadedPaths };\n  };\n\n  const loadRemoteConfigFiles = async () => {\n    const configs: AppConfig[] = [];\n\n    const readConfigFromUrl = async (url: string) => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Could not read config file at ${url}`);\n      }\n\n      return await response.text();\n    };\n\n    for (let i = 0; i < configUrls.length; i++) {\n      const configUrl = configUrls[i];\n      if (!isValidUrl(configUrl)) {\n        throw new Error(`Config load path is not valid: '${configUrl}'`);\n      }\n\n      const remoteConfigContent = await readConfigFromUrl(configUrl);\n      if (!remoteConfigContent) {\n        throw new Error(`Config is not valid`);\n      }\n      const configYaml = yaml.parse(remoteConfigContent);\n      const substitutionTransform = createSubstitutionTransform(env);\n      const data = await applyConfigTransforms(configRoot, configYaml, [\n        substitutionTransform,\n      ]);\n\n      configs.push({ data, context: configUrl });\n    }\n\n    return configs;\n  };\n\n  let fileConfigs: AppConfig[];\n  let loadedPaths: Set<string>;\n  try {\n    ({ fileConfigs, loadedPaths } = await loadConfigFiles());\n  } catch (error) {\n    throw new ForwardedError('Failed to read static configuration file', error);\n  }\n\n  let remoteConfigs: AppConfig[] = [];\n  if (remote) {\n    try {\n      remoteConfigs = await loadRemoteConfigFiles();\n    } catch (error) {\n      throw new ForwardedError(\n        `Failed to read remote configuration file`,\n        error,\n      );\n    }\n  }\n\n  const envConfigs = readEnvConfig(process.env);\n\n  const watchConfigFile = (watchProp: LoadConfigOptionsWatch) => {\n    let watchedFiles = Array.from(loadedPaths);\n\n    const watcher = chokidar.watch(watchedFiles, {\n      usePolling: process.env.NODE_ENV === 'test',\n    });\n\n    let currentSerializedConfig = JSON.stringify(fileConfigs);\n    watcher.on('change', async () => {\n      try {\n        const { fileConfigs: newConfigs, loadedPaths: newLoadedPaths } =\n          await loadConfigFiles();\n\n        // Replace watches to handle any added or removed\n        // $include or $file expressions.\n        watcher.unwatch(watchedFiles);\n        watchedFiles = Array.from(newLoadedPaths);\n        watcher.add(watchedFiles);\n\n        const newSerializedConfig = JSON.stringify(newConfigs);\n\n        if (currentSerializedConfig === newSerializedConfig) {\n          return;\n        }\n        currentSerializedConfig = newSerializedConfig;\n\n        watchProp.onChange([...remoteConfigs, ...newConfigs, ...envConfigs]);\n      } catch (error) {\n        console.error(`Failed to reload configuration files, ${error}`);\n      }\n    });\n\n    if (watchProp.stopSignal) {\n      watchProp.stopSignal.then(() => {\n        watcher.close();\n      });\n    }\n  };\n\n  const watchRemoteConfig = (\n    watchProp: LoadConfigOptionsWatch,\n    remoteProp: LoadConfigOptionsRemote,\n  ) => {\n    const hasConfigChanged = async (\n      oldRemoteConfigs: AppConfig[],\n      newRemoteConfigs: AppConfig[],\n    ) => {\n      return (\n        JSON.stringify(oldRemoteConfigs) !== JSON.stringify(newRemoteConfigs)\n      );\n    };\n\n    let handle: NodeJS.Timeout | undefined;\n    try {\n      handle = setInterval(async () => {\n        console.info(`Checking for config update`);\n        const newRemoteConfigs = await loadRemoteConfigFiles();\n        if (await hasConfigChanged(remoteConfigs, newRemoteConfigs)) {\n          remoteConfigs = newRemoteConfigs;\n          console.info(`Remote config change, reloading config ...`);\n          watchProp.onChange([...remoteConfigs, ...fileConfigs, ...envConfigs]);\n          console.info(`Remote config reloaded`);\n        }\n      }, remoteProp.reloadIntervalSeconds * 1000);\n    } catch (error) {\n      console.error(`Failed to reload configuration files, ${error}`);\n    }\n\n    if (watchProp.stopSignal) {\n      watchProp.stopSignal.then(() => {\n        if (handle !== undefined) {\n          console.info(`Stopping remote config watch`);\n          clearInterval(handle);\n          handle = undefined;\n        }\n      });\n    }\n  };\n\n  // Set up config file watching if requested by the caller\n  if (watch) {\n    watchConfigFile(watch);\n  }\n\n  if (watch && remote) {\n    watchRemoteConfig(watch, remote);\n  }\n\n  return {\n    appConfigs: remote\n      ? [...remoteConfigs, ...fileConfigs, ...envConfigs]\n      : [...fileConfigs, ...envConfigs],\n  };\n}\n"],"names":["assertError","yaml","resolvePath","extname","path","dirname","Ajv","traverse","config","ConfigReader","mergeAllOf","fs","relativePath","sep","isAbsolute","basename","fetch","ForwardedError","chokidar"],"mappings":"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"}