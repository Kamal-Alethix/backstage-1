{"version":3,"file":"index.esm.js","sources":["../src/entity/constants.ts","../src/entity/policies/DefaultNamespaceEntityPolicy.ts","../src/validation/CommonValidatorFunctions.ts","../src/validation/ajv.ts","../src/validation/entityEnvelopeSchemaValidator.ts","../src/validation/entityKindSchemaValidator.ts","../src/validation/entitySchemaValidator.ts","../src/validation/KubernetesValidatorFunctions.ts","../src/validation/makeValidator.ts","../src/entity/policies/FieldFormatEntityPolicy.ts","../src/entity/policies/NoForeignRootFieldsEntityPolicy.ts","../src/entity/policies/SchemaValidEntityPolicy.ts","../src/entity/ref.ts","../src/EntityPolicies.ts","../src/kinds/util.ts","../src/kinds/ApiEntityV1alpha1.ts","../src/kinds/ComponentEntityV1alpha1.ts","../src/kinds/DomainEntityV1alpha1.ts","../src/kinds/GroupEntityV1alpha1.ts","../src/kinds/LocationEntityV1alpha1.ts","../src/kinds/relations.ts","../src/kinds/ResourceEntityV1alpha1.ts","../src/kinds/SystemEntityV1alpha1.ts","../src/kinds/UserEntityV1alpha1.ts","../src/location/annotation.ts","../src/location/helpers.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The namespace that entities without an explicit namespace fall into.\n *\n * @public\n */\nexport const DEFAULT_NAMESPACE = 'default';\n\n/**\n * Annotation for linking to entity page from catalog pages.\n *\n * @public\n */\nexport const ANNOTATION_VIEW_URL = 'backstage.io/view-url';\n\n/**\n * Annotation for linking to entity edit page from catalog pages.\n *\n * @public\n */\nexport const ANNOTATION_EDIT_URL = 'backstage.io/edit-url';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport lodash from 'lodash';\nimport { EntityPolicy } from './types';\nimport { DEFAULT_NAMESPACE } from '../constants';\nimport { Entity } from '../Entity';\n\n/**\n * Sets a default namespace if none was set.\n *\n * @public\n */\nexport class DefaultNamespaceEntityPolicy implements EntityPolicy {\n  private readonly namespace: string;\n\n  constructor(namespace: string = DEFAULT_NAMESPACE) {\n    this.namespace = namespace;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    if (entity.metadata.namespace) {\n      return entity;\n    }\n\n    return lodash.merge({ metadata: { namespace: this.namespace } }, entity);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport lodash from 'lodash';\n\n/**\n * Contains various helper validation and normalization functions that can be\n * composed to form a Validator.\n *\n * @public\n */\nexport class CommonValidatorFunctions {\n  /**\n   * Checks that the value is on the form <suffix> or <prefix><separator><suffix>, and validates\n   * those parts separately.\n   *\n   * @param value - The value to check\n   * @param separator - The separator between parts\n   * @param isValidPrefix - Checks that the part before the separator is valid, if present\n   * @param isValidSuffix - Checks that the part after the separator (or the entire value if there is no separator) is valid\n   */\n  static isValidPrefixAndOrSuffix(\n    value: unknown,\n    separator: string,\n    isValidPrefix: (value: string) => boolean,\n    isValidSuffix: (value: string) => boolean,\n  ): boolean {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = value.split(separator);\n    if (parts.length === 1) {\n      return isValidSuffix(parts[0]);\n    } else if (parts.length === 2) {\n      return isValidPrefix(parts[0]) && isValidSuffix(parts[1]);\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks that the value can be safely transferred as JSON.\n   *\n   * @param value - The value to check\n   */\n  static isJsonSafe(value: unknown): boolean {\n    try {\n      return lodash.isEqual(value, JSON.parse(JSON.stringify(value)));\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Checks that the value is a valid DNS subdomain name.\n   *\n   * @param value - The value to check\n   * @see https://tools.ietf.org/html/rfc1123\n   */\n  static isValidDnsSubdomain(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 253 &&\n      value.split('.').every(CommonValidatorFunctions.isValidDnsLabel)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid DNS label.\n   *\n   * @param value - The value to check\n   * @see https://tools.ietf.org/html/rfc1123\n   */\n  static isValidDnsLabel(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9]+(\\-[a-z0-9]+)*$/.test(value)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid tag.\n   *\n   * @deprecated This will be removed in a future release\n   * @param value - The value to check\n   */\n  static isValidTag(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9+#]+(\\-[a-z0-9+#]+)*$/.test(value)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid string URL.\n   *\n   * @param value - The value to check\n   */\n  static isValidUrl(value: unknown): boolean {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    try {\n      // eslint-disable-next-line no-new\n      new URL(value);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Checks that the value is a non empty string value.\n   *\n   * @deprecated use isNonEmptyString instead\n   * @param value - The value to check\n   */\n  static isValidString(value: unknown): boolean {\n    return typeof value === 'string' && value?.trim()?.length >= 1;\n  }\n\n  /**\n   * Checks that the value is a string value that's not empty.\n   *\n   * @param value - The value to check\n   */\n  static isNonEmptyString(value: unknown): value is string {\n    return typeof value === 'string' && value?.trim()?.length >= 1;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv, { Schema, ValidateFunction } from 'ajv';\nimport entitySchema from '../schema/Entity.schema.json';\nimport entityEnvelopeSchema from '../schema/EntityEnvelope.schema.json';\nimport entityMetaSchema from '../schema/EntityMeta.schema.json';\nimport commonSchema from '../schema/shared/common.schema.json';\n\n// A local cache of compiled schemas, to avoid duplicate work.\n// The keys are JSON stringified versions of the schema\nconst compiledSchemaCache = new Map<string, ValidateFunction<unknown>>();\n\n// The core schemas that others can depend on\nconst refDependencyCandidates = [\n  entityEnvelopeSchema,\n  entitySchema,\n  entityMetaSchema,\n  commonSchema,\n];\n\nexport function throwAjvError(\n  errors: ValidateFunction<unknown>['errors'],\n): never {\n  if (!errors?.length) {\n    throw new TypeError('Unknown error');\n  }\n\n  const error = errors[0];\n  throw new TypeError(\n    `${error.instancePath || '<root>'} ${error.message}${\n      error.params\n        ? ` - ${Object.entries(error.params)\n            .map(([key, val]) => `${key}: ${val}`)\n            .join(', ')}`\n        : ''\n    }`,\n  );\n}\n\n// Compiles the given schema, and makes sure to also grab any core dependencies\n// that it depends on\nexport function compileAjvSchema(\n  schema: Schema,\n  options: { disableCache?: boolean } = {},\n): ValidateFunction<unknown> {\n  const disableCache = options?.disableCache ?? false;\n  const cacheKey = disableCache ? '' : JSON.stringify(schema);\n\n  if (!disableCache) {\n    const cached = compiledSchemaCache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n  }\n\n  const extraSchemas = getExtraSchemas(schema);\n  const ajv = new Ajv({\n    allowUnionTypes: true,\n    allErrors: true,\n    validateSchema: true,\n  });\n  if (extraSchemas.length) {\n    ajv.addSchema(extraSchemas, undefined, undefined, true);\n  }\n  const compiled = ajv.compile(schema);\n\n  if (!disableCache) {\n    compiledSchemaCache.set(cacheKey, compiled);\n  }\n\n  return compiled;\n}\n\n// Find refs in the given schema and recursively in all known schemas it\n// targets, collecting that list of schemas as we go\nfunction getExtraSchemas(schema: Schema): Schema[] {\n  if (typeof schema !== 'object') {\n    return [];\n  }\n\n  const seen = new Set<string>();\n  if (schema.$id) {\n    seen.add(schema.$id);\n  }\n\n  const selected = new Array<Schema>();\n\n  const todo: Schema[] = [schema];\n  while (todo.length) {\n    const current = todo.pop()!;\n\n    for (const ref of getAllRefs(current)) {\n      if (!seen.has(ref)) {\n        seen.add(ref);\n\n        const match = refDependencyCandidates.find(c => c.$id === ref);\n        if (match) {\n          selected.push(match);\n          todo.push(match);\n        }\n      }\n    }\n  }\n\n  return selected;\n}\n\n// Naively step through the entire schema looking for \"$ref\": \"x\" pairs. The\n// resulting iterator may contain duplicates. Ignores fragments, i.e. for a ref\n// of \"a#b\", it will just yield \"a\".\nfunction* getAllRefs(schema: Schema): Iterable<string> {\n  const todo: any[] = [schema];\n  while (todo.length) {\n    const current = todo.pop()!;\n    if (typeof current === 'object' && current) {\n      for (const [key, value] of Object.entries(current)) {\n        if (key === '$ref' && typeof value === 'string') {\n          yield value.split('#')[0];\n        } else {\n          todo.push(value);\n        }\n      }\n    }\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { EntityEnvelope } from '../entity/EntityEnvelope';\nimport entityEnvelopeSchema from '../schema/EntityEnvelope.schema.json';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to an {@link EntityEnvelope} (or the given subtype)\n * if it matches that schema, or throws a {@link globals#TypeError} describing the\n * errors.\n *\n * @remarks\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * By default, the plain `EntityEnvelope` schema is used. If you pass in your\n * own, it may contain `$ref` references to the following, which are resolved\n * automatically for you:\n *\n * - {@link EntityEnvelope}\n * - {@link Entity}\n * - {@link EntityMeta}\n * - `common#<id>`\n *\n * See also {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n *\n * @public\n *\n */\nexport function entityEnvelopeSchemaValidator<\n  T extends EntityEnvelope = EntityEnvelope,\n>(schema?: unknown): (data: unknown) => T {\n  const validate = compileAjvSchema(\n    schema ? (schema as Schema) : entityEnvelopeSchema,\n  );\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { Entity } from '../entity';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to a `T` if it matches that schema, or `false` if the\n * schema apiVersion/kind didn't apply to that data, or throws a\n * {@link globals#TypeError} describing actual errors.\n *\n * @remarks\n *\n * This validator is highly specialized, in that it has special treatment of\n * the `kind` and `apiVersion` root keys. This only works if your schema has\n * their rule set to `\"enum\"`:\n *\n * ```\n * \"apiVersion\": {\n *    \"enum\": [\"backstage.io/v1alpha1\", \"backstage.io/v1beta1\"]\n * },\n * \"kind\": {\n *   \"enum\": [\"Group\"]\n * },\n * ```\n *\n * In the above example, the created validator will return `false` if and only\n * if the kind and/or apiVersion mismatch.\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * The given schema may contain `$ref` references to the following, which are\n * resolved automatically for you:\n *\n * - {@link Entity}\n *\n * - {@link EntityEnvelope}\n *\n * - {@link EntityMeta}\n *\n * - `common#<id>`\n * @see {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n *\n * @public\n */\nexport function entityKindSchemaValidator<T extends Entity>(\n  schema: unknown,\n): (data: unknown) => T | false {\n  const validate = compileAjvSchema(schema as Schema);\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    // Only in the case where kind and/or apiVersion have enum mismatches AND\n    // have NO other errors, we call it a soft error.\n    const softCandidates = validate.errors?.filter(e =>\n      ['/kind', '/apiVersion'].includes(e.instancePath),\n    );\n    if (\n      softCandidates?.length &&\n      softCandidates.every(e => e.keyword === 'enum')\n    ) {\n      return false;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { Entity } from '../entity/Entity';\nimport entitySchema from '../schema/Entity.schema.json';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to an {@link Entity} (or the given subtype) if it\n * matches that schema, or throws a {@link globals#TypeError} describing the errors.\n *\n * @remarks\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * By default, the plain {@link Entity} schema is used. If you pass in your own, it\n * may contain `$ref` references to the following, which are resolved\n * automatically for you:\n *\n * - {@link Entity}\n * - {@link EntityEnvelope}\n * - {@link EntityMeta}\n * - `common#<id>`\n *\n * @public\n * @see {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n */\nexport function entitySchemaValidator<T extends Entity = Entity>(\n  schema?: unknown,\n): (data: unknown) => T {\n  const validate = compileAjvSchema(schema ? (schema as Schema) : entitySchema);\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonValidatorFunctions } from './CommonValidatorFunctions';\n\n/**\n * Contains validation functions that match the Kubernetes spec, usable to\n * build a catalog that is compatible with those rule sets.\n *\n * @public\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/names/\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set\n */\nexport class KubernetesValidatorFunctions {\n  static isValidApiVersion(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      n => n.length >= 1 && n.length <= 63 && /^[a-z0-9A-Z]+$/.test(n),\n    );\n  }\n\n  static isValidKind(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-zA-Z][a-z0-9A-Z]*$/.test(value)\n    );\n  }\n\n  static isValidObjectName(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$/.test(value)\n    );\n  }\n\n  static isValidNamespace(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidDnsLabel(value);\n  }\n\n  static isValidLabelKey(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      KubernetesValidatorFunctions.isValidObjectName,\n    );\n  }\n\n  static isValidLabelValue(value: unknown): boolean {\n    return (\n      value === '' || KubernetesValidatorFunctions.isValidObjectName(value)\n    );\n  }\n\n  static isValidAnnotationKey(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      KubernetesValidatorFunctions.isValidObjectName,\n    );\n  }\n\n  static isValidAnnotationValue(value: unknown): boolean {\n    return typeof value === 'string';\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { KubernetesValidatorFunctions } from './KubernetesValidatorFunctions';\nimport { Validators } from './types';\n\nconst defaultValidators: Validators = {\n  isValidApiVersion: KubernetesValidatorFunctions.isValidApiVersion,\n  isValidKind: KubernetesValidatorFunctions.isValidKind,\n  isValidEntityName: KubernetesValidatorFunctions.isValidObjectName,\n  isValidNamespace: KubernetesValidatorFunctions.isValidNamespace,\n  isValidLabelKey: KubernetesValidatorFunctions.isValidLabelKey,\n  isValidLabelValue: KubernetesValidatorFunctions.isValidLabelValue,\n  isValidAnnotationKey: KubernetesValidatorFunctions.isValidAnnotationKey,\n  isValidAnnotationValue: KubernetesValidatorFunctions.isValidAnnotationValue,\n  isValidTag: (value: unknown): boolean => {\n    // NOTE(freben): This one is a bit of an oddball and doesn't fit well anywhere to delegate to, so it's just inlined for now.\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9:+#]+(\\-[a-z0-9:+#]+)*$/.test(value)\n    );\n  },\n};\n\n/**\n * Creates a {@link Validators} object from `overrides`, with default values taken from {@link KubernetesValidatorFunctions}\n *\n * @public\n */\nexport function makeValidator(overrides: Partial<Validators> = {}): Validators {\n  return {\n    ...defaultValidators,\n    ...overrides,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport {\n  CommonValidatorFunctions,\n  KubernetesValidatorFunctions,\n  makeValidator,\n  Validators,\n} from '../../validation';\nimport { Entity } from '../Entity';\n\n/**\n * Ensures that the format of individual fields of the entity envelope\n * is valid.\n *\n * @remarks\n *\n * This does not take into account machine generated fields such as uid and etag.\n *\n * @public\n */\nexport class FieldFormatEntityPolicy implements EntityPolicy {\n  private readonly validators: Validators;\n\n  constructor(validators: Validators = makeValidator()) {\n    this.validators = validators;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    function require(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      if (value === undefined || value === null) {\n        throw new Error(`${field} must have a value`);\n      }\n\n      let isValid: boolean;\n      try {\n        isValid = validator(value);\n      } catch (e) {\n        throw new Error(`${field} could not be validated, ${e}`);\n      }\n\n      if (!isValid) {\n        let expectation;\n        switch (\n          validator.name as\n            | keyof typeof KubernetesValidatorFunctions\n            | keyof typeof CommonValidatorFunctions\n        ) {\n          case 'isValidLabelValue':\n          case 'isValidObjectName':\n            expectation =\n              'a string that is sequences of [a-zA-Z0-9] separated by any of [-_.], at most 63 characters in total';\n            break;\n          case 'isValidLabelKey':\n          case 'isValidApiVersion':\n          case 'isValidAnnotationKey':\n            expectation = 'a valid prefix and/or suffix';\n            break;\n          case 'isValidNamespace':\n          case 'isValidDnsLabel':\n            expectation =\n              'a string that is sequences of [a-z0-9] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidTag':\n            expectation =\n              'a string that is sequences of [a-z0-9+#] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidAnnotationValue':\n            expectation = 'a string';\n            break;\n          case 'isValidKind':\n            expectation =\n              'a string that is a sequence of [a-zA-Z][a-z0-9A-Z], at most 63 characters in total';\n            break;\n          case 'isValidUrl':\n            expectation = 'a string that is a valid url';\n            break;\n          case 'isValidString':\n          case 'isNonEmptyString':\n            expectation = 'a non empty string';\n            break;\n          default:\n            expectation = undefined;\n            break;\n        }\n\n        // ensure that if there are other/future validators, the error message defaults to a general \"is not valid, visit link\"\n        const message = expectation\n          ? ` expected ${expectation} but found \"${value}\".`\n          : '';\n\n        throw new Error(\n          `\"${field}\" is not valid;${message} To learn more about catalog file format, visit: https://github.com/backstage/backstage/blob/master/docs/architecture-decisions/adr002-default-catalog-file-format.md`,\n        );\n      }\n    }\n\n    function optional(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      return value === undefined || require(field, value, validator);\n    }\n\n    require('apiVersion', entity.apiVersion, this.validators.isValidApiVersion);\n    require('kind', entity.kind, this.validators.isValidKind);\n\n    require('metadata.name', entity.metadata.name, this.validators\n      .isValidEntityName);\n    optional(\n      'metadata.namespace',\n      entity.metadata.namespace,\n      this.validators.isValidNamespace,\n    );\n\n    for (const [k, v] of Object.entries(entity.metadata.labels ?? [])) {\n      require(`labels.${k}`, k, this.validators.isValidLabelKey);\n      require(`labels.${k}`, v, this.validators.isValidLabelValue);\n    }\n\n    for (const [k, v] of Object.entries(entity.metadata.annotations ?? [])) {\n      require(`annotations.${k}`, k, this.validators.isValidAnnotationKey);\n      require(`annotations.${k}`, v, this.validators.isValidAnnotationValue);\n    }\n\n    const tags = entity.metadata.tags ?? [];\n\n    for (let i = 0; i < tags.length; ++i) {\n      require(`tags.${i}`, tags[i], this.validators.isValidTag);\n    }\n\n    const links = entity.metadata.links ?? [];\n\n    for (let i = 0; i < links.length; ++i) {\n      require(`links.${i}.url`, links[i]\n        ?.url, CommonValidatorFunctions.isValidUrl);\n      optional(\n        `links.${i}.title`,\n        links[i]?.title,\n        CommonValidatorFunctions.isNonEmptyString,\n      );\n      optional(\n        `links.${i}.icon`,\n        links[i]?.icon,\n        KubernetesValidatorFunctions.isValidObjectName,\n      );\n    }\n\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport { Entity } from '../Entity';\n\nconst defaultKnownFields = ['apiVersion', 'kind', 'metadata', 'spec'];\n\n/**\n * Ensures that there are no foreign root fields in the entity.\n *\n * @public\n */\nexport class NoForeignRootFieldsEntityPolicy implements EntityPolicy {\n  private readonly knownFields: string[];\n\n  constructor(knownFields: string[] = defaultKnownFields) {\n    this.knownFields = knownFields;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    for (const field of Object.keys(entity)) {\n      if (!this.knownFields.includes(field)) {\n        throw new Error(`Unknown field ${field}`);\n      }\n    }\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv, { ValidateFunction } from 'ajv';\nimport entitySchema from '../../schema/Entity.schema.json';\nimport entityMetaSchema from '../../schema/EntityMeta.schema.json';\nimport commonSchema from '../../schema/shared/common.schema.json';\nimport { Entity } from '../Entity';\nimport { EntityPolicy } from './types';\n\n/**\n * Ensures that the entity spec is valid according to a schema.\n *\n * @remarks\n *\n * This should be the first policy in the list, to ensure that other downstream\n * policies can work with a structure that is at least valid in therms of the\n * typescript type.\n *\n * @public\n */\nexport class SchemaValidEntityPolicy implements EntityPolicy {\n  private validate: ValidateFunction<Entity> | undefined;\n\n  async enforce(entity: Entity): Promise<Entity> {\n    if (!this.validate) {\n      const ajv = new Ajv({ allowUnionTypes: true });\n      this.validate = ajv\n        .addSchema([commonSchema, entityMetaSchema], undefined, undefined, true)\n        .compile<Entity>(entitySchema);\n    }\n\n    const result = this.validate(entity);\n    if (result === true) {\n      return entity;\n    }\n\n    const [error] = this.validate.errors || [];\n    if (!error) {\n      throw new Error(`Malformed envelope, Unknown error`);\n    }\n\n    throw new Error(\n      `Malformed envelope, ${error.instancePath || '<root>'} ${error.message}`,\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_NAMESPACE } from './constants';\nimport { CompoundEntityRef } from '../types';\nimport { Entity } from './Entity';\n\nfunction parseRefString(ref: string): {\n  kind?: string;\n  namespace?: string;\n  name: string;\n} {\n  let colonI = ref.indexOf(':');\n  const slashI = ref.indexOf('/');\n\n  // If the / is ahead of the :, treat the rest as the name\n  if (slashI !== -1 && slashI < colonI) {\n    colonI = -1;\n  }\n\n  const kind = colonI === -1 ? undefined : ref.slice(0, colonI);\n  const namespace = slashI === -1 ? undefined : ref.slice(colonI + 1, slashI);\n  const name = ref.slice(Math.max(colonI + 1, slashI + 1));\n\n  if (kind === '' || namespace === '' || name === '') {\n    throw new TypeError(\n      `Entity reference \"${ref}\" was not on the form [<kind>:][<namespace>/]<name>`,\n    );\n  }\n\n  return { kind, namespace, name };\n}\n\n/**\n * Extracts the kind, namespace and name that form the compound entity ref\n * triplet of the given entity.\n *\n * @public\n * @param entity - An entity\n * @returns The compound entity ref\n */\nexport function getCompoundEntityRef(entity: Entity): CompoundEntityRef {\n  return {\n    kind: entity.kind,\n    namespace: entity.metadata.namespace || DEFAULT_NAMESPACE,\n    name: entity.metadata.name,\n  };\n}\n\n/**\n * Parses an entity reference, either on string or compound form, and returns\n * a structure with a name, and optional kind and namespace.\n *\n * @remarks\n *\n * The context object can contain default values for the kind and namespace,\n * that will be used if the input reference did not specify any.\n *\n * @public\n * @param ref - The reference to parse\n * @param context - The context of defaults that the parsing happens within\n * @returns The compound form of the reference\n */\nexport function parseEntityRef(\n  ref: string | { kind?: string; namespace?: string; name: string },\n  context?: {\n    /** The default kind, if none is given in the reference */\n    defaultKind?: string;\n    /** The default namespace, if none is given in the reference */\n    defaultNamespace?: string;\n  },\n): CompoundEntityRef {\n  if (!ref) {\n    throw new Error(`Entity reference must not be empty`);\n  }\n\n  const defaultKind = context?.defaultKind;\n  const defaultNamespace = context?.defaultNamespace || DEFAULT_NAMESPACE;\n\n  let kind: string | undefined;\n  let namespace: string | undefined;\n  let name: string | undefined;\n\n  if (typeof ref === 'string') {\n    const parsed = parseRefString(ref);\n    kind = parsed.kind ?? defaultKind;\n    namespace = parsed.namespace ?? defaultNamespace;\n    name = parsed.name;\n  } else {\n    kind = ref.kind ?? defaultKind;\n    namespace = ref.namespace ?? defaultNamespace;\n    name = ref.name;\n  }\n\n  if (!kind) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty kind (e.g. did not start with \"component:\" or similar)`,\n    );\n  } else if (!namespace) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty namespace`,\n    );\n  } else if (!name) {\n    const textual = JSON.stringify(ref);\n    throw new Error(`Entity reference ${textual} had missing or empty name`);\n  }\n\n  return { kind, namespace, name };\n}\n\n/**\n * Takes an entity or entity name/reference, and returns the string form of an\n * entity ref.\n *\n * @remarks\n *\n * This function creates a canonical and unique reference to the entity, converting\n * all parts of the name to lowercase and inserts the default namespace if needed.\n * It is typically not the best way to represent the entity reference to the user.\n *\n * @public\n * @param ref - The reference to serialize\n * @returns The same reference on either string or compound form\n */\nexport function stringifyEntityRef(\n  ref: Entity | { kind: string; namespace?: string; name: string },\n): string {\n  let kind;\n  let namespace;\n  let name;\n\n  if ('metadata' in ref) {\n    kind = ref.kind;\n    namespace = ref.metadata.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.metadata.name;\n  } else {\n    kind = ref.kind;\n    namespace = ref.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.name;\n  }\n\n  return `${kind.toLocaleLowerCase('en-US')}:${namespace.toLocaleLowerCase(\n    'en-US',\n  )}/${name.toLocaleLowerCase('en-US')}`;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, EntityPolicy } from './entity';\n\n// Helper that requires that all of a set of policies can be successfully\n// applied\nclass AllEntityPolicies implements EntityPolicy {\n  constructor(private readonly policies: EntityPolicy[]) {}\n\n  async enforce(entity: Entity): Promise<Entity> {\n    let result = entity;\n    for (const policy of this.policies) {\n      const output = await policy.enforce(result);\n      if (!output) {\n        throw new Error(\n          `Policy ${policy.constructor.name} did not return a result`,\n        );\n      }\n      result = output;\n    }\n    return result;\n  }\n}\n\n// Helper that requires that at least one of a set of policies can be\n// successfully applied\nclass AnyEntityPolicy implements EntityPolicy {\n  constructor(private readonly policies: EntityPolicy[]) {}\n\n  async enforce(entity: Entity): Promise<Entity> {\n    for (const policy of this.policies) {\n      const output = await policy.enforce(entity);\n      if (output) {\n        return output;\n      }\n    }\n    throw new Error(`The entity did not match any known policy`);\n  }\n}\n\n/**\n * Provides helpers for enforcing a set of {@link EntityPolicy} in an `and`/`or` expression.\n *\n * @public\n */\nexport const EntityPolicies = {\n  allOf(policies: EntityPolicy[]): EntityPolicy {\n    return new AllEntityPolicies(policies);\n  },\n  oneOf(policies: EntityPolicy[]): EntityPolicy {\n    return new AnyEntityPolicy(policies);\n  },\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { entityKindSchemaValidator } from '../validation';\nimport { KindValidator } from './types';\n\n// TODO(freben): Left here as a compatibility helper. It would be nicer to\n// just export the inner validator directly. However, all of the already\n// exported kind validators have the `KindValidator` signature which is\n// different. So let's postpone that change until a later time.\nexport function ajvCompiledJsonSchemaValidator(schema: unknown): KindValidator {\n  const validator = entityKindSchemaValidator(schema);\n  return {\n    async check(data) {\n      return validator(data) === data;\n    },\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/API.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage API kind Entity. APIs describe the interfaces for Components to communicate.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ApiEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'API';\n  spec: {\n    type: string;\n    lifecycle: string;\n    owner: string;\n    definition: string;\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ApiEntityV1alpha1}.\n *\n * @public\n */\nexport const apiEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Component.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Component kind Entity. Represents a single, individual piece of software.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ComponentEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Component';\n  spec: {\n    type: string;\n    lifecycle: string;\n    owner: string;\n    subcomponentOf?: string;\n    providesApis?: string[];\n    consumesApis?: string[];\n    dependsOn?: string[];\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ComponentEntityV1alpha1}.\n *\n * @public\n */\nexport const componentEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Domain.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage Domain kind Entity. Domains group Systems together.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface DomainEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Domain';\n  spec: {\n    owner: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link DomainEntityV1alpha1}.\n *\n * @public\n */\nexport const domainEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Group.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Group kind Entity.\n *\n * @public\n */\nexport interface GroupEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Group';\n  spec: {\n    type: string;\n    profile?: {\n      displayName?: string;\n      email?: string;\n      picture?: string;\n    };\n    parent?: string;\n    children: string[];\n    members?: string[];\n  };\n}\n\n/**\n * {@link KindValidator} for {@link GroupEntityV1alpha1}.\n * @public\n */\nexport const groupEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Location.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Location kind Entity.\n *\n * @public\n */\nexport interface LocationEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Location';\n  spec: {\n    type?: string;\n    target?: string;\n    targets?: string[];\n    presence?: 'required' | 'optional';\n  };\n}\n\n/**\n * {@link KindValidator} for {@link LocationEntityV1alpha1}.\n *\n * @public\n */\nexport const locationEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\nNaming rules for relations in priority order:\n\n1. Use at most two words. One main verb and a specifier, e.g. \"ownerOf\"\n2. Reading out \"<source-kind> <type> <target-kind>\" should make sense in English.\n3. Maintain symmetry between pairs, e.g. \"ownedBy\" and \"ownerOf\" rather than \"owns\".\n*/\n\n/**\n * An ownership relation where the owner is usually an organizational\n * entity (user or group), and the other entity can be anything. Reversed\n * direction of {@link RELATION_OWNER_OF}.\n *\n * @public\n */\nexport const RELATION_OWNED_BY = 'ownedBy';\n\n/**\n * A relationship from an owner to the owned entity. Reversed direction of\n * {@link RELATION_OWNED_BY}.\n *\n * @public\n */\nexport const RELATION_OWNER_OF = 'ownerOf';\n\n/**\n * A relation with an API entity, typically from a component. Reversed direction of\n * {@link RELATION_API_CONSUMED_BY}.\n *\n * @public\n */\nexport const RELATION_CONSUMES_API = 'consumesApi';\n\n/**\n * A relation of an API being consumed, typically by a component. Reversed direction of\n * {@link RELATION_CONSUMES_API}.\n *\n * @public\n */\nexport const RELATION_API_CONSUMED_BY = 'apiConsumedBy';\n\n/**\n * A relation from an API provider entity (typically a component) to the API. Reversed direction of\n * {@link RELATION_API_PROVIDED_BY}.\n *\n * @public\n */\nexport const RELATION_PROVIDES_API = 'providesApi';\n\n/**\n * A relation from an API to its provider entity (typically a component). Reversed direction of\n * {@link RELATION_PROVIDES_API}.\n *\n * @public\n */\nexport const RELATION_API_PROVIDED_BY = 'apiProvidedBy';\n\n/**\n * A relation denoting a dependency on another entity. Reversed direction of\n * {@link RELATION_DEPENDENCY_OF}.\n *\n * @public\n */\nexport const RELATION_DEPENDS_ON = 'dependsOn';\n\n/**\n * A relation denoting a reverse dependency by another entity. Reversed direction of\n * {@link RELATION_DEPENDS_ON}.\n *\n * @public\n */\nexport const RELATION_DEPENDENCY_OF = 'dependencyOf';\n\n/**\n * A parent/child relation to build up a tree, used for example to describe\n * the organizational structure between groups. Reversed direction of\n * {@link RELATION_CHILD_OF}.\n *\n * @public\n */\nexport const RELATION_PARENT_OF = 'parentOf';\n\n/**\n * A relation from a child to a parent entity, used for example to describe\n * the organizational structure between groups. Reversed direction of\n * {@link RELATION_PARENT_OF}.\n *\n * @public\n */\nexport const RELATION_CHILD_OF = 'childOf';\n\n/**\n * A membership relation, typically for users in a group. Reversed direction of\n * {@link RELATION_HAS_MEMBER}.\n *\n * @public\n */\nexport const RELATION_MEMBER_OF = 'memberOf';\n\n/**\n * A relation from a group to its member, typcally a user in a group. Reversed direction of\n * {@link RELATION_MEMBER_OF}.\n *\n * @public\n */\nexport const RELATION_HAS_MEMBER = 'hasMember';\n\n/**\n * A part/whole relation, typically for components in a system and systems\n * in a domain. Reversed direction of {@link RELATION_HAS_PART}.\n *\n * @public\n */\nexport const RELATION_PART_OF = 'partOf';\n\n/**\n * A relation from a containing entity to a contained entity. Reversed direction of\n * {@link RELATION_PART_OF}.\n *\n * @public\n */\nexport const RELATION_HAS_PART = 'hasPart';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Resource.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Resource kind Entity. Represents infrastructure required to operate Components.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ResourceEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Resource';\n  spec: {\n    type: string;\n    owner: string;\n    dependsOn?: string[];\n    dependencyOf?: string[];\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ResourceEntityV1alpha1}.\n *\n * @public\n */\nexport const resourceEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/System.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog System kind Entity. Systems group Comopnents, Resources and APIs together.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface SystemEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'System';\n  spec: {\n    owner: string;\n    domain?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link SystemEntityV1alpha1}.\n *\n * @public\n */\nexport const systemEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/User.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog User kind Entity.\n *\n * @public\n */\nexport interface UserEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'User';\n  spec: {\n    profile?: {\n      displayName?: string;\n      email?: string;\n      picture?: string;\n    };\n    memberOf?: string[];\n  };\n}\n\n/**\n * {@link KindValidator} for {@link UserEntityV1alpha1}.\n *\n * @public\n */\nexport const userEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Entity annotation containing the location from which the entity is sourced.\n *\n * @public\n */\nexport const ANNOTATION_LOCATION = 'backstage.io/managed-by-location';\n\n/**\n * Entity annotation containing the originally sourced location which ultimately\n * led to this entity being ingested.\n *\n * @public\n */\nexport const ANNOTATION_ORIGIN_LOCATION =\n  'backstage.io/managed-by-origin-location';\n\n/**\n * Entity annotation pointing to the source (e.g. source code repository root or\n * similar) for this entity.\n *\n * @public\n */\nexport const ANNOTATION_SOURCE_LOCATION = 'backstage.io/source-location';\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ANNOTATION_SOURCE_LOCATION } from '.';\nimport { Entity, stringifyEntityRef } from '../entity';\nimport { ANNOTATION_LOCATION } from './annotation';\n\n/**\n * Parses a string form location reference.\n *\n * @public\n * @param ref - A string-form location ref, e.g. `'url:https://host'`\n * @returns A location ref, e.g. `{ type: 'url', target: 'https://host' }`\n */\nexport function parseLocationRef(ref: string): {\n  type: string;\n  target: string;\n} {\n  if (typeof ref !== 'string') {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', unexpected argument ${typeof ref}`,\n    );\n  }\n\n  const splitIndex = ref.indexOf(':');\n  if (splitIndex < 0) {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', expected '<type>:<target>', e.g. 'url:https://host/path'`,\n    );\n  }\n\n  const type = ref.substring(0, splitIndex).trim();\n  const target = ref.substring(splitIndex + 1).trim();\n\n  if (!type || !target) {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', expected '<type>:<target>', e.g. 'url:https://host/path'`,\n    );\n  }\n\n  if (type === 'http' || type === 'https') {\n    throw new TypeError(\n      `Invalid location ref '${ref}', please prefix it with 'url:', e.g. 'url:${ref}'`,\n    );\n  }\n\n  return { type, target };\n}\n\n/**\n * Turns a location ref into its string form.\n *\n * @public\n * @param ref - A location ref, e.g. `{ type: 'url', target: 'https://host' }`\n * @returns A string-form location ref, e.g. `'url:https://host'`\n */\nexport function stringifyLocationRef(ref: {\n  type: string;\n  target: string;\n}): string {\n  const { type, target } = ref;\n\n  if (!type) {\n    throw new TypeError(`Unable to stringify location ref, empty type`);\n  } else if (!target) {\n    throw new TypeError(`Unable to stringify location ref, empty target`);\n  }\n\n  return `${type}:${target}`;\n}\n\n/**\n * Returns the source code location of the Entity, to the extent that one exists.\n *\n * @remarks\n *\n * If the returned location type is of type 'url', the target should be readable at least\n * using the UrlReader from `@backstage/backend-common`. If it is not of type 'url', the caller\n * needs to have explicit handling of each location type or signal that it is not supported.\n *\n * @public\n */\nexport function getEntitySourceLocation(entity: Entity): {\n  type: string;\n  target: string;\n} {\n  const locationRef =\n    entity.metadata?.annotations?.[ANNOTATION_SOURCE_LOCATION] ??\n    entity.metadata?.annotations?.[ANNOTATION_LOCATION];\n\n  if (!locationRef) {\n    throw new Error(\n      `Entity '${stringifyEntityRef(entity)}' is missing location`,\n    );\n  }\n\n  return parseLocationRef(locationRef);\n}\n"],"names":["schema"],"mappings":"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"}